;/**
;  ******************************************************************************
;  * @file    stm32f407xx.h
;  * @author  MCD Application Team
;  * @brief   CMSIS STM32F407xx Device Peripheral Access Layer Header File.
;  *
;  ******************************************************************************
;  */

__CM4_REV                 EQU		0x0001   ;/*!< Core revision r0p1                            */
__MPU_PRESENT             EQU		1        ;/*!< STM32F4XX provides an MPU                     */
__NVIC_PRIO_BITS          EQU		4        ;/*!< STM32F4XX uses 4 Bits for the Priority Levels */
__Vendor_SysTickConfig    EQU		0        ;/*!< Set to 1 if different SysTick Config is used  */
__FPU_PRESENT             EQU		1        ;/*!< FPU present                                   */

;/******  Cortex-M4 Processor Exceptions Numbers ****************************************************************/
NonMaskableInt_IRQn         EQU		-14     ;/*!< 2 Non Maskable Interrupt                                          */
MemoryManagement_IRQn       EQU		-12     ;/*!< 4 Cortex-M4 Memory Management Interrupt                           */
BusFault_IRQn               EQU		-11     ;/*!< 5 Cortex-M4 Bus Fault Interrupt                                   */
UsageFault_IRQn             EQU		-10     ;/*!< 6 Cortex-M4 Usage Fault Interrupt                                 */
SVCall_IRQn                 EQU		-5      ;/*!< 11 Cortex-M4 SV Call Interrupt                                    */
DebugMonitor_IRQn           EQU		-4      ;/*!< 12 Cortex-M4 Debug Monitor Interrupt                              */
PendSV_IRQn                 EQU		-2      ;/*!< 14 Cortex-M4 Pend SV Interrupt                                    */
SysTick_IRQn                EQU		-1      ;/*!< 15 Cortex-M4 System Tick Interrupt                                */
;/******  STM32 specific Interrupt Numbers **********************************************************************/
WWDG_IRQn                   EQU		0       ;/*!< Window WatchDog Interrupt                                         */
PVD_IRQn                    EQU		1       ;/*!< PVD through EXTI Line detection Interrupt                         */
TAMP_STAMP_IRQn             EQU		2       ;/*!< Tamper and TimeStamp interrupts through the EXTI line             */
RTC_WKUP_IRQn               EQU		3       ;/*!< RTC Wakeup interrupt through the EXTI line                        */
FLASH_IRQn                  EQU		4       ;/*!< FLASH global Interrupt                                            */
RCC_IRQn                    EQU		5       ;/*!< RCC global Interrupt                                              */
EXTI0_IRQn                  EQU		6       ;/*!< EXTI Line0 Interrupt                                              */
EXTI1_IRQn                  EQU		7       ;/*!< EXTI Line1 Interrupt                                              */
EXTI2_IRQn                  EQU		8       ;/*!< EXTI Line2 Interrupt                                              */
EXTI3_IRQn                  EQU		9       ;/*!< EXTI Line3 Interrupt                                              */
EXTI4_IRQn                  EQU		10      ;/*!< EXTI Line4 Interrupt                                              */
DMA1_Stream0_IRQn           EQU		11      ;/*!< DMA1 Stream 0 global Interrupt                                    */
DMA1_Stream1_IRQn           EQU		12      ;/*!< DMA1 Stream 1 global Interrupt                                    */
DMA1_Stream2_IRQn           EQU		13      ;/*!< DMA1 Stream 2 global Interrupt                                    */
DMA1_Stream3_IRQn           EQU		14      ;/*!< DMA1 Stream 3 global Interrupt                                    */
DMA1_Stream4_IRQn           EQU		15      ;/*!< DMA1 Stream 4 global Interrupt                                    */
DMA1_Stream5_IRQn           EQU		16      ;/*!< DMA1 Stream 5 global Interrupt                                    */
DMA1_Stream6_IRQn           EQU		17      ;/*!< DMA1 Stream 6 global Interrupt                                    */
ADC_IRQn                    EQU		18      ;/*!< ADC1  ADC2 and ADC3 global Interrupts                             */
CAN1_TX_IRQn                EQU		19      ;/*!< CAN1 TX Interrupt                                                 */
CAN1_RX0_IRQn               EQU		20      ;/*!< CAN1 RX0 Interrupt                                                */
CAN1_RX1_IRQn               EQU		21      ;/*!< CAN1 RX1 Interrupt                                                */
CAN1_SCE_IRQn               EQU		22      ;/*!< CAN1 SCE Interrupt                                                */
EXTI9_5_IRQn                EQU		23      ;/*!< External Line[9:5] Interrupts                                     */
TIM1_BRK_TIM9_IRQn          EQU		24      ;/*!< TIM1 Break interrupt and TIM9 global interrupt                    */
TIM1_UP_TIM10_IRQn          EQU		25      ;/*!< TIM1 Update Interrupt and TIM10 global interrupt                  */
TIM1_TRG_COM_TIM11_IRQn     EQU		26      ;/*!< TIM1 Trigger and Commutation Interrupt and TIM11 global interrupt */
TIM1_CC_IRQn                EQU		27      ;/*!< TIM1 Capture Compare Interrupt                                    */
TIM2_IRQn                   EQU		28      ;/*!< TIM2 global Interrupt                                             */
TIM3_IRQn                   EQU		29      ;/*!< TIM3 global Interrupt                                             */
TIM4_IRQn                   EQU		30      ;/*!< TIM4 global Interrupt                                             */
I2C1_EV_IRQn                EQU		31      ;/*!< I2C1 Event Interrupt                                              */
I2C1_ER_IRQn                EQU		32      ;/*!< I2C1 Error Interrupt                                              */
I2C2_EV_IRQn                EQU		33      ;/*!< I2C2 Event Interrupt                                              */
I2C2_ER_IRQn                EQU		34      ;/*!< I2C2 Error Interrupt                                              */
SPI1_IRQn                   EQU		35      ;/*!< SPI1 global Interrupt                                             */
SPI2_IRQn                   EQU		36      ;/*!< SPI2 global Interrupt                                             */
USART1_IRQn                 EQU		37      ;/*!< USART1 global Interrupt                                           */
USART2_IRQn                 EQU		38      ;/*!< USART2 global Interrupt                                           */
USART3_IRQn                 EQU		39      ;/*!< USART3 global Interrupt                                           */
EXTI15_10_IRQn              EQU		40      ;/*!< External Line[15:10] Interrupts                                   */
RTC_Alarm_IRQn              EQU		41      ;/*!< RTC Alarm EQU		A and B    through EXTI Line Interrupt                   */
OTG_FS_WKUP_IRQn            EQU		42      ;/*!< USB OTG FS Wakeup through EXTI line interrupt                     */
TIM8_BRK_TIM12_IRQn         EQU		43      ;/*!< TIM8 Break Interrupt and TIM12 global interrupt                   */
TIM8_UP_TIM13_IRQn          EQU		44      ;/*!< TIM8 Update Interrupt and TIM13 global interrupt                  */
TIM8_TRG_COM_TIM14_IRQn     EQU		45      ;/*!< TIM8 Trigger and Commutation Interrupt and TIM14 global interrupt */
TIM8_CC_IRQn                EQU		46      ;/*!< TIM8 Capture Compare global interrupt                             */
DMA1_Stream7_IRQn           EQU		47      ;/*!< DMA1 Stream7 Interrupt                                            */
FSMC_IRQn                   EQU		48      ;/*!< FSMC global Interrupt                                             */
SDIO_IRQn                   EQU		49      ;/*!< SDIO global Interrupt                                             */
TIM5_IRQn                   EQU		50      ;/*!< TIM5 global Interrupt                                             */
SPI3_IRQn                   EQU		51      ;/*!< SPI3 global Interrupt                                             */
UART4_IRQn                  EQU		52      ;/*!< UART4 global Interrupt                                            */
UART5_IRQn                  EQU		53      ;/*!< UART5 global Interrupt                                            */
TIM6_DAC_IRQn               EQU		54      ;/*!< TIM6 global and DAC1&2 underrun error  interrupts                 */
TIM7_IRQn                   EQU		55      ;/*!< TIM7 global interrupt                                             */
DMA2_Stream0_IRQn           EQU		56      ;/*!< DMA2 Stream 0 global Interrupt                                    */
DMA2_Stream1_IRQn           EQU		57      ;/*!< DMA2 Stream 1 global Interrupt                                    */
DMA2_Stream2_IRQn           EQU		58      ;/*!< DMA2 Stream 2 global Interrupt                                    */
DMA2_Stream3_IRQn           EQU		59      ;/*!< DMA2 Stream 3 global Interrupt                                    */
DMA2_Stream4_IRQn           EQU		60      ;/*!< DMA2 Stream 4 global Interrupt                                    */
ETH_IRQn                    EQU		61      ;/*!< Ethernet global Interrupt                                         */
ETH_WKUP_IRQn               EQU		62      ;/*!< Ethernet Wakeup through EXTI line Interrupt                       */
CAN2_TX_IRQn                EQU		63      ;/*!< CAN2 TX Interrupt                                                 */
CAN2_RX0_IRQn               EQU		64      ;/*!< CAN2 RX0 Interrupt                                                */
CAN2_RX1_IRQn               EQU		65      ;/*!< CAN2 RX1 Interrupt                                                */
CAN2_SCE_IRQn               EQU		66      ;/*!< CAN2 SCE Interrupt                                                */
OTG_FS_IRQn                 EQU		67      ;/*!< USB OTG FS global Interrupt                                       */
DMA2_Stream5_IRQn           EQU		68      ;/*!< DMA2 Stream 5 global interrupt                                    */
DMA2_Stream6_IRQn           EQU		69      ;/*!< DMA2 Stream 6 global interrupt                                    */
DMA2_Stream7_IRQn           EQU		70      ;/*!< DMA2 Stream 7 global interrupt                                    */
USART6_IRQn                 EQU		71      ;/*!< USART6 global interrupt                                           */
I2C3_EV_IRQn                EQU		72      ;/*!< I2C3 event interrupt                                              */
I2C3_ER_IRQn                EQU		73      ;/*!< I2C3 error interrupt                                              */
OTG_HS_EP1_OUT_IRQn         EQU		74      ;/*!< USB OTG HS End Point 1 Out global interrupt                       */
OTG_HS_EP1_IN_IRQn          EQU		75      ;/*!< USB OTG HS End Point 1 In global interrupt                        */
OTG_HS_WKUP_IRQn            EQU		76      ;/*!< USB OTG HS Wakeup through EXTI interrupt                          */
OTG_HS_IRQn                 EQU		77      ;/*!< USB OTG HS global interrupt                                       */
DCMI_IRQn                   EQU		78      ;/*!< DCMI global interrupt                                             */
RNG_IRQn                    EQU		80      ;/*!< RNG global Interrupt                                              */
FPU_IRQn                    EQU		81      ;/*!< FPU global interrupt                                              */
  
;/* Legacy define */
HASH_RNG_IRQn      EQU		RNG_IRQn

;/** @addtogroup Peripheral_memory_map
;  * @{
;  */

FLASH_BASE            EQU		0x08000000		;/*!< FLASHEQU		up to 1 MB    base address in the alias region                         */
CCMDATARAM_BASE       EQU		0x10000000		;/*!< CCMEQU		core coupled memory    data RAMEQU		64 KB    base address in the alias region  */
SRAM1_BASE            EQU		0x20000000		;/*!< SRAM1EQU		112 KB    base address in the alias region                             */
SRAM2_BASE            EQU		0x2001C000		;/*!< SRAM2EQU		16 KB    base address in the alias region                              */
PERIPH_BASE           EQU		0x40000000		;/*!< Peripheral base address in the alias region                                */
BKPSRAM_BASE          EQU		0x40024000		;/*!< Backup SRAMEQU		4 KB    base address in the alias region                         */
FSMC_R_BASE           EQU		0xA0000000		;/*!< FSMC registers base address                                                */
SRAM1_BB_BASE         EQU		0x22000000		;/*!< SRAM1EQU		112 KB    base address in the bit-band region                          */
SRAM2_BB_BASE         EQU		0x22380000		;/*!< SRAM2EQU		16 KB    base address in the bit-band region                           */
PERIPH_BB_BASE        EQU		0x42000000		;/*!< Peripheral base address in the bit-band region                             */
BKPSRAM_BB_BASE       EQU		0x42480000		;/*!< Backup SRAMEQU		4 KB    base address in the bit-band region                      */
FLASH_END             EQU		0x080FFFFF		;/*!< FLASH end address                                                          */
FLASH_OTP_BASE        EQU		0x1FFF7800		;/*!< Base address of : EQU		up to 528 Bytes    embedded FLASH OTP Area                */
FLASH_OTP_END         EQU		0x1FFF7A0F		;/*!< End address of : EQU		up to 528 Bytes    embedded FLASH OTP Area                 */
CCMDATARAM_END        EQU		0x1000FFFF		;/*!< CCM data RAM end address                                                   */
SCS_BASE	      EQU	        0xE000E000              ;System Control Space Base Address

NVIC_BASE             EQU               SCS_BASE + 0x0100        ;NVIC Base Address
STK_BASE	          EQU               SCS_BASE + 0x0010        ;SysTick Base Address
;/* Legacy defines */
SRAM_BASE             EQU		SRAM1_BASE
SRAM_BB_BASE          EQU		SRAM1_BB_BASE

;/*!< Peripheral memory map */
APB1PERIPH_BASE       EQU		PERIPH_BASE
APB2PERIPH_BASE       EQU		PERIPH_BASE + 0x00010000
AHB1PERIPH_BASE       EQU		PERIPH_BASE + 0x00020000
AHB2PERIPH_BASE       EQU		PERIPH_BASE + 0x10000000

;/*!< APB1 peripherals */
TIM2_BASE             EQU		APB1PERIPH_BASE + 0x0000
TIM3_BASE             EQU		APB1PERIPH_BASE + 0x0400
TIM4_BASE             EQU		APB1PERIPH_BASE + 0x0800
TIM5_BASE             EQU		APB1PERIPH_BASE + 0x0C00
TIM6_BASE             EQU		APB1PERIPH_BASE + 0x1000
TIM7_BASE             EQU		APB1PERIPH_BASE + 0x1400
TIM12_BASE            EQU		APB1PERIPH_BASE + 0x1800
TIM13_BASE            EQU		APB1PERIPH_BASE + 0x1C00
TIM14_BASE            EQU		APB1PERIPH_BASE + 0x2000
RTC_BASE              EQU		APB1PERIPH_BASE + 0x2800
WWDG_BASE             EQU		APB1PERIPH_BASE + 0x2C00
IWDG_BASE             EQU		APB1PERIPH_BASE + 0x3000
I2S2ext_BASE          EQU		APB1PERIPH_BASE + 0x3400
SPI2_BASE             EQU		APB1PERIPH_BASE + 0x3800
SPI3_BASE             EQU		APB1PERIPH_BASE + 0x3C00
I2S3ext_BASE          EQU		APB1PERIPH_BASE + 0x4000
USART2_BASE           EQU		APB1PERIPH_BASE + 0x4400
USART3_BASE           EQU		APB1PERIPH_BASE + 0x4800
UART4_BASE            EQU		APB1PERIPH_BASE + 0x4C00
UART5_BASE            EQU		APB1PERIPH_BASE + 0x5000
I2C1_BASE             EQU		APB1PERIPH_BASE + 0x5400
I2C2_BASE             EQU		APB1PERIPH_BASE + 0x5800
I2C3_BASE             EQU		APB1PERIPH_BASE + 0x5C00
CAN1_BASE             EQU		APB1PERIPH_BASE + 0x6400
CAN2_BASE             EQU		APB1PERIPH_BASE + 0x6800
PWR_BASE              EQU		APB1PERIPH_BASE + 0x7000
DAC_BASE              EQU		APB1PERIPH_BASE + 0x7400

;/*!< APB2 peripherals */
TIM1_BASE             EQU		APB2PERIPH_BASE + 0x0000
TIM8_BASE             EQU		APB2PERIPH_BASE + 0x0400
USART1_BASE           EQU		APB2PERIPH_BASE + 0x1000
USART6_BASE           EQU		APB2PERIPH_BASE + 0x1400
ADC1_BASE             EQU		APB2PERIPH_BASE + 0x2000
ADC2_BASE             EQU		APB2PERIPH_BASE + 0x2100
ADC3_BASE             EQU		APB2PERIPH_BASE + 0x2200
ADC123_COMMON_BASE    EQU		APB2PERIPH_BASE + 0x2300
;/* Legacy define */
ADC_BASE              EQU		ADC123_COMMON_BASE
SDIO_BASE             EQU		APB2PERIPH_BASE + 0x2C00
SPI1_BASE             EQU		APB2PERIPH_BASE + 0x3000
SYSCFG_BASE           EQU		APB2PERIPH_BASE + 0x3800
EXTI_BASE             EQU		APB2PERIPH_BASE + 0x3C00
TIM9_BASE             EQU		APB2PERIPH_BASE + 0x4000
TIM10_BASE            EQU		APB2PERIPH_BASE + 0x4400
TIM11_BASE            EQU		APB2PERIPH_BASE + 0x4800

;/*!< AHB1 peripherals */
GPIOA_BASE            EQU		AHB1PERIPH_BASE + 0x0000
GPIOB_BASE            EQU		AHB1PERIPH_BASE + 0x0400
GPIOC_BASE            EQU		AHB1PERIPH_BASE + 0x0800
GPIOD_BASE            EQU		AHB1PERIPH_BASE + 0x0C00
GPIOE_BASE            EQU		AHB1PERIPH_BASE + 0x1000
GPIOF_BASE            EQU		AHB1PERIPH_BASE + 0x1400
GPIOG_BASE            EQU		AHB1PERIPH_BASE + 0x1800
GPIOH_BASE            EQU		AHB1PERIPH_BASE + 0x1C00
GPIOI_BASE            EQU		AHB1PERIPH_BASE + 0x2000
CRC_BASE              EQU		AHB1PERIPH_BASE + 0x3000
RCC_BASE              EQU		AHB1PERIPH_BASE + 0x3800
FLASH_R_BASE          EQU		AHB1PERIPH_BASE + 0x3C00
DMA1_BASE             EQU		AHB1PERIPH_BASE + 0x6000
DMA1_Stream0_BASE     EQU		DMA1_BASE + 0x010
DMA1_Stream1_BASE     EQU		DMA1_BASE + 0x028
DMA1_Stream2_BASE     EQU		DMA1_BASE + 0x040
DMA1_Stream3_BASE     EQU		DMA1_BASE + 0x058
DMA1_Stream4_BASE     EQU		DMA1_BASE + 0x070
DMA1_Stream5_BASE     EQU		DMA1_BASE + 0x088
DMA1_Stream6_BASE     EQU		DMA1_BASE + 0x0A0
DMA1_Stream7_BASE     EQU		DMA1_BASE + 0x0B8
DMA2_BASE             EQU		AHB1PERIPH_BASE + 0x6400
DMA2_Stream0_BASE     EQU		DMA2_BASE + 0x010
DMA2_Stream1_BASE     EQU		DMA2_BASE + 0x028
DMA2_Stream2_BASE     EQU		DMA2_BASE + 0x040
DMA2_Stream3_BASE     EQU		DMA2_BASE + 0x058
DMA2_Stream4_BASE     EQU		DMA2_BASE + 0x070
DMA2_Stream5_BASE     EQU		DMA2_BASE + 0x088
DMA2_Stream6_BASE     EQU		DMA2_BASE + 0x0A0
DMA2_Stream7_BASE     EQU		DMA2_BASE + 0x0B8
ETH_BASE              EQU		AHB1PERIPH_BASE + 0x8000
ETH_MAC_BASE          EQU		ETH_BASE   
ETH_MMC_BASE          EQU		ETH_BASE + 0x0100
ETH_PTP_BASE          EQU		ETH_BASE + 0x0700
ETH_DMA_BASE          EQU		ETH_BASE + 0x1000

;/*!< AHB2 peripherals */
DCMI_BASE             EQU		AHB2PERIPH_BASE + 0x50000
RNG_BASE              EQU		AHB2PERIPH_BASE + 0x60800

;/*!< FSMC Bankx registers base address */
FSMC_Bank1_R_BASE     EQU		FSMC_R_BASE + 0x0000
FSMC_Bank1E_R_BASE    EQU		FSMC_R_BASE + 0x0104
FSMC_Bank2_3_R_BASE   EQU		FSMC_R_BASE + 0x0060
FSMC_Bank4_R_BASE     EQU		FSMC_R_BASE + 0x00A0

;/*!< Debug MCU registers base address */
DBGMCU_BASE           EQU		0xE0042000
;/*!< USB registers base address */
USB_OTG_HS_PERIPH_BASE               EQU		0x40040000
USB_OTG_FS_PERIPH_BASE               EQU		0x50000000

USB_OTG_GLOBAL_BASE                  EQU		0x000
USB_OTG_DEVICE_BASE                  EQU		0x800
USB_OTG_IN_ENDPOINT_BASE             EQU		0x900
USB_OTG_OUT_ENDPOINT_BASE            EQU		0xB00
USB_OTG_EP_REG_SIZE                  EQU		0x20
USB_OTG_HOST_BASE                    EQU		0x400
USB_OTG_HOST_PORT_BASE               EQU		0x440
USB_OTG_HOST_CHANNEL_BASE            EQU		0x500
USB_OTG_HOST_CHANNEL_SIZE            EQU		0x20
USB_OTG_PCGCCTL_BASE                 EQU		0xE00
USB_OTG_FIFO_BASE                    EQU		0x1000
USB_OTG_FIFO_SIZE                    EQU		0x1000

UID_BASE                     EQU		0x1FFF7A10            ;/*!< Unique device ID register base address */
FLASHSIZE_BASE               EQU		0x1FFF7A22            ;/*!< FLASH Size register base address       */
PACKAGE_BASE                 EQU		0x1FFF7BF0            ;/*!< Package size register base address     */

    
;/******************************************************************************/
;/*                         Peripheral Registers_Bits_Definition               */
;/******************************************************************************/
;/******************************************************************************/
;/*                                                                            */
;/*                     Nested Vectored Interrupt Controller                   */
;/*                                                                            */
;/******************************************************************************/
NVIC_ISER0				EQU		0x00
NVIC_ISER1				EQU		0x04
NVIC_ISER2				EQU		0x08
NVIC_ICER0				EQU		0x80
NVIC_ICER1				EQU		0x84
NVIC_ICER2				EQU		0x88

;/******************************************************************************/
;/*                                                                            */
;/*                               System Clock                                 */
;/*                                                                            */
;/******************************************************************************/
STK_CTRL				EQU		0x00
;/*******************  Bit definition for STK_CTRL register  *******************/
STK_CTRL_ENABLE_Pos     EQU		0                                         
STK_CTRL_ENABLE_Msk     EQU		0x1 << STK_CTRL_ENABLE_Pos 
STK_CTRL_ENABLE         EQU		STK_CTRL_ENABLE_Msk        
STK_CTRL_TICKINT_Pos    EQU		1                                         
STK_CTRL_TICKINT_Msk    EQU		0x1 << STK_CTRL_TICKINT_Pos
STK_CTRL_TICKINT        EQU		STK_CTRL_TICKINT_Msk       
STK_CTRL_CLKSOURCE_Pos  EQU		2                                         
STK_CTRL_CLKSOURCE_Msk  EQU		0x1 << STK_CTRL_CLKSOURCE_Pos
STK_CTRL_CLKSOURCE      EQU		STK_CTRL_CLKSOURCE_Msk       
STK_CTRL_COUNTFLAG_Pos  EQU		16                                         
STK_CTRL_COUNTFLAG_Msk  EQU		0x1 << STK_CTRL_COUNTFLAG_Pos
STK_CTRL_COUNTFLAG      EQU		STK_CTRL_COUNTFLAG_Msk       

STK_LOAD				EQU		0x04
STK_VAL					EQU		0x08
STK_CALIB				EQU		0x0C

;/******************************************************************************/
;/*                                                                            */
;/*                        Analog to Digital Converter                         */
;/*                                                                            */
;/******************************************************************************/
ADC_SR					  EQU		0x00 
;/********************  Bit definition for ADC_SR register  ********************/
ADC_SR_AWD_Pos            EQU		0                                         
ADC_SR_AWD_Msk            EQU		0x1 << ADC_SR_AWD_Pos                      ;/*!< 0x00000001 */
ADC_SR_AWD                EQU		ADC_SR_AWD_Msk                             ;/*!<Analog watchdog flag */
ADC_SR_EOC_Pos            EQU		1                                          
ADC_SR_EOC_Msk            EQU		0x1 << ADC_SR_EOC_Pos                      ;/*!< 0x00000002 */
ADC_SR_EOC                EQU		ADC_SR_EOC_Msk                             ;/*!<End of conversion */
ADC_SR_JEOC_Pos           EQU		2                                          
ADC_SR_JEOC_Msk           EQU		0x1 << ADC_SR_JEOC_Pos                     ;/*!< 0x00000004 */
ADC_SR_JEOC               EQU		ADC_SR_JEOC_Msk                            ;/*!<Injected channel end of conversion */
ADC_SR_JSTRT_Pos          EQU		3                                          
ADC_SR_JSTRT_Msk          EQU		0x1 << ADC_SR_JSTRT_Pos                    ;/*!< 0x00000008 */
ADC_SR_JSTRT              EQU		ADC_SR_JSTRT_Msk                           ;/*!<Injected channel Start flag */
ADC_SR_STRT_Pos           EQU		4                                          
ADC_SR_STRT_Msk           EQU		0x1 << ADC_SR_STRT_Pos                     ;/*!< 0x00000010 */
ADC_SR_STRT               EQU		ADC_SR_STRT_Msk                            ;/*!<Regular channel Start flag */
ADC_SR_OVR_Pos            EQU		5                                          
ADC_SR_OVR_Msk            EQU		0x1 << ADC_SR_OVR_Pos                      ;/*!< 0x00000020 */
ADC_SR_OVR                EQU		ADC_SR_OVR_Msk                             ;/*!<Overrun flag */

ADC_CR1					  EQU		0x04 
;/*******************  Bit definition for ADC_CR1 register  ********************/
ADC_CR1_AWDCH_Pos         EQU		0                                          
ADC_CR1_AWDCH_Msk         EQU		0x1F << ADC_CR1_AWDCH_Pos                  ;/*!< 0x0000001F */
ADC_CR1_AWDCH             EQU		ADC_CR1_AWDCH_Msk                          ;/*!<AWDCH[4:0] bits EQU		Analog watchdog channel select bits    */
ADC_CR1_AWDCH_0           EQU		0x01 << ADC_CR1_AWDCH_Pos                  ;/*!< 0x00000001 */
ADC_CR1_AWDCH_1           EQU		0x02 << ADC_CR1_AWDCH_Pos                  ;/*!< 0x00000002 */
ADC_CR1_AWDCH_2           EQU		0x04 << ADC_CR1_AWDCH_Pos                  ;/*!< 0x00000004 */
ADC_CR1_AWDCH_3           EQU		0x08 << ADC_CR1_AWDCH_Pos                  ;/*!< 0x00000008 */
ADC_CR1_AWDCH_4           EQU		0x10 << ADC_CR1_AWDCH_Pos                  ;/*!< 0x00000010 */
ADC_CR1_EOCIE_Pos         EQU		5                                         
ADC_CR1_EOCIE_Msk         EQU		0x1 << ADC_CR1_EOCIE_Pos                   ;/*!< 0x00000020 */
ADC_CR1_EOCIE             EQU		ADC_CR1_EOCIE_Msk                          ;/*!<Interrupt enable for EOC */
ADC_CR1_AWDIE_Pos         EQU		6                                         
ADC_CR1_AWDIE_Msk         EQU		0x1 << ADC_CR1_AWDIE_Pos                   ;/*!< 0x00000040 */
ADC_CR1_AWDIE             EQU		ADC_CR1_AWDIE_Msk                          ;/*!<AAnalog Watchdog interrupt enable */
ADC_CR1_JEOCIE_Pos        EQU		7                                         
ADC_CR1_JEOCIE_Msk        EQU		0x1 << ADC_CR1_JEOCIE_Pos                  ;/*!< 0x00000080 */
ADC_CR1_JEOCIE            EQU		ADC_CR1_JEOCIE_Msk                         ;/*!<Interrupt enable for injected channels */
ADC_CR1_SCAN_Pos          EQU		8                                         
ADC_CR1_SCAN_Msk          EQU		0x1 << ADC_CR1_SCAN_Pos                    ;/*!< 0x00000100 */
ADC_CR1_SCAN              EQU		ADC_CR1_SCAN_Msk                           ;/*!<Scan mode */
ADC_CR1_AWDSGL_Pos        EQU		9                                         
ADC_CR1_AWDSGL_Msk        EQU		0x1 << ADC_CR1_AWDSGL_Pos                  ;/*!< 0x00000200 */
ADC_CR1_AWDSGL            EQU		ADC_CR1_AWDSGL_Msk                         ;/*!<Enable the watchdog on a single channel in scan mode */
ADC_CR1_JAUTO_Pos         EQU		10                                        
ADC_CR1_JAUTO_Msk         EQU		0x1 << ADC_CR1_JAUTO_Pos                   ;/*!< 0x00000400 */
ADC_CR1_JAUTO             EQU		ADC_CR1_JAUTO_Msk                          ;/*!<Automatic injected group conversion */
ADC_CR1_DISCEN_Pos        EQU		11                                        
ADC_CR1_DISCEN_Msk        EQU		0x1 << ADC_CR1_DISCEN_Pos                  ;/*!< 0x00000800 */
ADC_CR1_DISCEN            EQU		ADC_CR1_DISCEN_Msk                         ;/*!<Discontinuous mode on regular channels */
ADC_CR1_JDISCEN_Pos       EQU		12                                        
ADC_CR1_JDISCEN_Msk       EQU		0x1 << ADC_CR1_JDISCEN_Pos                 ;/*!< 0x00001000 */
ADC_CR1_JDISCEN           EQU		ADC_CR1_JDISCEN_Msk                        ;/*!<Discontinuous mode on injected channels */
ADC_CR1_DISCNUM_Pos       EQU		13                                        
ADC_CR1_DISCNUM_Msk       EQU		0x7 << ADC_CR1_DISCNUM_Pos                 ;/*!< 0x0000E000 */
ADC_CR1_DISCNUM           EQU		ADC_CR1_DISCNUM_Msk                        ;/*!<DISCNUM[2:0] bits EQU		Discontinuous mode channel count  */
ADC_CR1_DISCNUM_0         EQU		0x1 << ADC_CR1_DISCNUM_Pos                 ;/*!< 0x00002000 */
ADC_CR1_DISCNUM_1         EQU		0x2 << ADC_CR1_DISCNUM_Pos                 ;/*!< 0x00004000 */
ADC_CR1_DISCNUM_2         EQU		0x4 << ADC_CR1_DISCNUM_Pos                 ;/*!< 0x00008000 */
ADC_CR1_JAWDEN_Pos        EQU		22                                        
ADC_CR1_JAWDEN_Msk        EQU		0x1 << ADC_CR1_JAWDEN_Pos                  ;/*!< 0x00400000 */
ADC_CR1_JAWDEN            EQU		ADC_CR1_JAWDEN_Msk                         ;/*!<Analog watchdog enable on injected channels */
ADC_CR1_AWDEN_Pos         EQU		23                                        
ADC_CR1_AWDEN_Msk         EQU		0x1 << ADC_CR1_AWDEN_Pos                   ;/*!< 0x00800000 */
ADC_CR1_AWDEN             EQU		ADC_CR1_AWDEN_Msk                          ;/*!<Analog watchdog enable on regular channels */
ADC_CR1_RES_Pos           EQU		24                                        
ADC_CR1_RES_Msk           EQU		0x3 << ADC_CR1_RES_Pos                     ;/*!< 0x03000000 */
ADC_CR1_RES               EQU		ADC_CR1_RES_Msk                            ;/*!<RES[2:0] bits EQU		Resolution  */
ADC_CR1_RES_0             EQU		0x1 << ADC_CR1_RES_Pos                     ;/*!< 0x01000000 */
ADC_CR1_RES_1             EQU		0x2 << ADC_CR1_RES_Pos                     ;/*!< 0x02000000 */
ADC_CR1_OVRIE_Pos         EQU		26                                        
ADC_CR1_OVRIE_Msk         EQU		0x1 << ADC_CR1_OVRIE_Pos                   ;/*!< 0x04000000 */
ADC_CR1_OVRIE             EQU		ADC_CR1_OVRIE_Msk                          ;/*!<overrun interrupt enable */
  
ADC_CR2			          EQU		0x08
;/*******************  Bit definition for ADC_CR2 register  ********************/
ADC_CR2_ADON_Pos          EQU		0                                         
ADC_CR2_ADON_Msk          EQU		0x1 << ADC_CR2_ADON_Pos                     ;/*!< 0x00000001 */
ADC_CR2_ADON              EQU		ADC_CR2_ADON_Msk                            ;/*!<A/D Converter ON / OFF */
ADC_CR2_CONT_Pos          EQU		1                                         
ADC_CR2_CONT_Msk          EQU		0x1 << ADC_CR2_CONT_Pos                     ;/*!< 0x00000002 */
ADC_CR2_CONT              EQU		ADC_CR2_CONT_Msk                            ;/*!<Continuous Conversion */
ADC_CR2_DMA_Pos           EQU		8                                         
ADC_CR2_DMA_Msk           EQU		0x1 << ADC_CR2_DMA_Pos                      ;/*!< 0x00000100 */
ADC_CR2_DMA               EQU		ADC_CR2_DMA_Msk                             ;/*!<Direct Memory access mode */
ADC_CR2_DDS_Pos           EQU		9                                         
ADC_CR2_DDS_Msk           EQU		0x1 << ADC_CR2_DDS_Pos                      ;/*!< 0x00000200 */
ADC_CR2_DDS               EQU		ADC_CR2_DDS_Msk                             ;/*!<DMA disable selection EQU		Single ADC   */
ADC_CR2_EOCS_Pos          EQU		10                                        
ADC_CR2_EOCS_Msk          EQU		0x1 << ADC_CR2_EOCS_Pos                     ;/*!< 0x00000400 */
ADC_CR2_EOCS              EQU		ADC_CR2_EOCS_Msk                            ;/*!<End of conversion selection */
ADC_CR2_ALIGN_Pos         EQU		11                                        
ADC_CR2_ALIGN_Msk         EQU		0x1 << ADC_CR2_ALIGN_Pos                    ;/*!< 0x00000800 */
ADC_CR2_ALIGN             EQU		ADC_CR2_ALIGN_Msk                           ;/*!<Data Alignment */
ADC_CR2_JEXTSEL_Pos       EQU		16                                        
ADC_CR2_JEXTSEL_Msk       EQU		0xF << ADC_CR2_JEXTSEL_Pos                  ;/*!< 0x000F0000 */
ADC_CR2_JEXTSEL           EQU		ADC_CR2_JEXTSEL_Msk                         ;/*!<JEXTSEL[3:0] bits EQU		External event select for injected group   */
ADC_CR2_JEXTSEL_0         EQU		0x1 << ADC_CR2_JEXTSEL_Pos                  ;/*!< 0x00010000 */
ADC_CR2_JEXTSEL_1         EQU		0x2 << ADC_CR2_JEXTSEL_Pos                  ;/*!< 0x00020000 */
ADC_CR2_JEXTSEL_2         EQU		0x4 << ADC_CR2_JEXTSEL_Pos                  ;/*!< 0x00040000 */
ADC_CR2_JEXTSEL_3         EQU		0x8 << ADC_CR2_JEXTSEL_Pos                  ;/*!< 0x00080000 */
ADC_CR2_JEXTEN_Pos        EQU		20                                        
ADC_CR2_JEXTEN_Msk        EQU		0x3 << ADC_CR2_JEXTEN_Pos                   ;/*!< 0x00300000 */
ADC_CR2_JEXTEN            EQU		ADC_CR2_JEXTEN_Msk                          ;/*!<JEXTEN[1:0] bits EQU		External Trigger Conversion mode for injected channelsp   */
ADC_CR2_JEXTEN_0          EQU		0x1 << ADC_CR2_JEXTEN_Pos                   ;/*!< 0x00100000 */
ADC_CR2_JEXTEN_1          EQU		0x2 << ADC_CR2_JEXTEN_Pos                   ;/*!< 0x00200000 */
ADC_CR2_JSWSTART_Pos      EQU		22                                        
ADC_CR2_JSWSTART_Msk      EQU		0x1 << ADC_CR2_JSWSTART_Pos                 ;/*!< 0x00400000 */
ADC_CR2_JSWSTART          EQU		ADC_CR2_JSWSTART_Msk                        ;/*!<Start Conversion of injected channels */
ADC_CR2_EXTSEL_Pos        EQU		24                                        
ADC_CR2_EXTSEL_Msk        EQU		0xF << ADC_CR2_EXTSEL_Pos                   ;/*!< 0x0F000000 */
ADC_CR2_EXTSEL            EQU		ADC_CR2_EXTSEL_Msk                          ;/*!<EXTSEL[3:0] bits EQU		External Event Select for regular group   */
ADC_CR2_EXTSEL_0          EQU		0x1 << ADC_CR2_EXTSEL_Pos                   ;/*!< 0x01000000 */
ADC_CR2_EXTSEL_1          EQU		0x2 << ADC_CR2_EXTSEL_Pos                   ;/*!< 0x02000000 */
ADC_CR2_EXTSEL_2          EQU		0x4 << ADC_CR2_EXTSEL_Pos                   ;/*!< 0x04000000 */
ADC_CR2_EXTSEL_3          EQU		0x8 << ADC_CR2_EXTSEL_Pos                   ;/*!< 0x08000000 */
ADC_CR2_EXTEN_Pos         EQU		28                                        
ADC_CR2_EXTEN_Msk         EQU		0x3 << ADC_CR2_EXTEN_Pos                    ;/*!< 0x30000000 */
ADC_CR2_EXTEN             EQU		ADC_CR2_EXTEN_Msk                           ;/*!<EXTEN[1:0] bits EQU		External Trigger Conversion mode for regular channelsp   */
ADC_CR2_EXTEN_0           EQU		0x1 << ADC_CR2_EXTEN_Pos                    ;/*!< 0x10000000 */
ADC_CR2_EXTEN_1           EQU		0x2 << ADC_CR2_EXTEN_Pos                    ;/*!< 0x20000000 */
ADC_CR2_SWSTART_Pos       EQU		30                                        
ADC_CR2_SWSTART_Msk       EQU		0x1 << ADC_CR2_SWSTART_Pos                  ;/*!< 0x40000000 */
ADC_CR2_SWSTART           EQU		ADC_CR2_SWSTART_Msk                         ;/*!<Start Conversion of regular channels */

ADC_SMPR1				  EQU		0x0C 
;/******************  Bit definition for ADC_SMPR1 register  *******************/
ADC_SMPR1_SMP10_Pos       EQU		0                                         
ADC_SMPR1_SMP10_Msk       EQU		0x7 << ADC_SMPR1_SMP10_Pos                   ;/*!< 0x00000007 */
ADC_SMPR1_SMP10           EQU		ADC_SMPR1_SMP10_Msk                          ;/*!<SMP10[2:0] bits EQU		Channel 10 Sample time selection    */
ADC_SMPR1_SMP10_0         EQU		0x1 << ADC_SMPR1_SMP10_Pos                   ;/*!< 0x00000001 */
ADC_SMPR1_SMP10_1         EQU		0x2 << ADC_SMPR1_SMP10_Pos                   ;/*!< 0x00000002 */
ADC_SMPR1_SMP10_2         EQU		0x4 << ADC_SMPR1_SMP10_Pos                   ;/*!< 0x00000004 */
ADC_SMPR1_SMP11_Pos       EQU		3                                         
ADC_SMPR1_SMP11_Msk       EQU		0x7 << ADC_SMPR1_SMP11_Pos                   ;/*!< 0x00000038 */
ADC_SMPR1_SMP11           EQU		ADC_SMPR1_SMP11_Msk                          ;/*!<SMP11[2:0] bits EQU		Channel 11 Sample time selection    */
ADC_SMPR1_SMP11_0         EQU		0x1 << ADC_SMPR1_SMP11_Pos                   ;/*!< 0x00000008 */
ADC_SMPR1_SMP11_1         EQU		0x2 << ADC_SMPR1_SMP11_Pos                   ;/*!< 0x00000010 */
ADC_SMPR1_SMP11_2         EQU		0x4 << ADC_SMPR1_SMP11_Pos                   ;/*!< 0x00000020 */
ADC_SMPR1_SMP12_Pos       EQU		6                                         
ADC_SMPR1_SMP12_Msk       EQU		0x7 << ADC_SMPR1_SMP12_Pos                   ;/*!< 0x000001C0 */
ADC_SMPR1_SMP12           EQU		ADC_SMPR1_SMP12_Msk                          ;/*!<SMP12[2:0] bits EQU		Channel 12 Sample time selection    */
ADC_SMPR1_SMP12_0         EQU		0x1 << ADC_SMPR1_SMP12_Pos                   ;/*!< 0x00000040 */
ADC_SMPR1_SMP12_1         EQU		0x2 << ADC_SMPR1_SMP12_Pos                   ;/*!< 0x00000080 */
ADC_SMPR1_SMP12_2         EQU		0x4 << ADC_SMPR1_SMP12_Pos                   ;/*!< 0x00000100 */
ADC_SMPR1_SMP13_Pos       EQU		9                                         
ADC_SMPR1_SMP13_Msk       EQU		0x7 << ADC_SMPR1_SMP13_Pos                   ;/*!< 0x00000E00 */
ADC_SMPR1_SMP13           EQU		ADC_SMPR1_SMP13_Msk                          ;/*!<SMP13[2:0] bits EQU		Channel 13 Sample time selection    */
ADC_SMPR1_SMP13_0         EQU		0x1 << ADC_SMPR1_SMP13_Pos                   ;/*!< 0x00000200 */
ADC_SMPR1_SMP13_1         EQU		0x2 << ADC_SMPR1_SMP13_Pos                   ;/*!< 0x00000400 */
ADC_SMPR1_SMP13_2         EQU		0x4 << ADC_SMPR1_SMP13_Pos                   ;/*!< 0x00000800 */
ADC_SMPR1_SMP14_Pos       EQU		12                                        
ADC_SMPR1_SMP14_Msk       EQU		0x7 << ADC_SMPR1_SMP14_Pos                   ;/*!< 0x00007000 */
ADC_SMPR1_SMP14           EQU		ADC_SMPR1_SMP14_Msk                          ;/*!<SMP14[2:0] bits EQU		Channel 14 Sample time selection    */
ADC_SMPR1_SMP14_0         EQU		0x1 << ADC_SMPR1_SMP14_Pos                   ;/*!< 0x00001000 */
ADC_SMPR1_SMP14_1         EQU		0x2 << ADC_SMPR1_SMP14_Pos                   ;/*!< 0x00002000 */
ADC_SMPR1_SMP14_2         EQU		0x4 << ADC_SMPR1_SMP14_Pos                   ;/*!< 0x00004000 */
ADC_SMPR1_SMP15_Pos       EQU		15                                        
ADC_SMPR1_SMP15_Msk       EQU		0x7 << ADC_SMPR1_SMP15_Pos                   ;/*!< 0x00038000 */
ADC_SMPR1_SMP15           EQU		ADC_SMPR1_SMP15_Msk                          ;/*!<SMP15[2:0] bits EQU		Channel 15 Sample time selection    */
ADC_SMPR1_SMP15_0         EQU		0x1 << ADC_SMPR1_SMP15_Pos                   ;/*!< 0x00008000 */
ADC_SMPR1_SMP15_1         EQU		0x2 << ADC_SMPR1_SMP15_Pos                   ;/*!< 0x00010000 */
ADC_SMPR1_SMP15_2         EQU		0x4 << ADC_SMPR1_SMP15_Pos                   ;/*!< 0x00020000 */
ADC_SMPR1_SMP16_Pos       EQU		18                                        
ADC_SMPR1_SMP16_Msk       EQU		0x7 << ADC_SMPR1_SMP16_Pos                   ;/*!< 0x001C0000 */
ADC_SMPR1_SMP16           EQU		ADC_SMPR1_SMP16_Msk                          ;/*!<SMP16[2:0] bits EQU		Channel 16 Sample time selection    */
ADC_SMPR1_SMP16_0         EQU		0x1 << ADC_SMPR1_SMP16_Pos                   ;/*!< 0x00040000 */
ADC_SMPR1_SMP16_1         EQU		0x2 << ADC_SMPR1_SMP16_Pos                   ;/*!< 0x00080000 */
ADC_SMPR1_SMP16_2         EQU		0x4 << ADC_SMPR1_SMP16_Pos                   ;/*!< 0x00100000 */
ADC_SMPR1_SMP17_Pos       EQU		21                                        
ADC_SMPR1_SMP17_Msk       EQU		0x7 << ADC_SMPR1_SMP17_Pos                   ;/*!< 0x00E00000 */
ADC_SMPR1_SMP17           EQU		ADC_SMPR1_SMP17_Msk                          ;/*!<SMP17[2:0] bits EQU		Channel 17 Sample time selection    */
ADC_SMPR1_SMP17_0         EQU		0x1 << ADC_SMPR1_SMP17_Pos                   ;/*!< 0x00200000 */
ADC_SMPR1_SMP17_1         EQU		0x2 << ADC_SMPR1_SMP17_Pos                   ;/*!< 0x00400000 */
ADC_SMPR1_SMP17_2         EQU		0x4 << ADC_SMPR1_SMP17_Pos                   ;/*!< 0x00800000 */
ADC_SMPR1_SMP18_Pos       EQU		24                                        
ADC_SMPR1_SMP18_Msk       EQU		0x7 << ADC_SMPR1_SMP18_Pos                   ;/*!< 0x07000000 */
ADC_SMPR1_SMP18           EQU		ADC_SMPR1_SMP18_Msk                          ;/*!<SMP18[2:0] bits EQU		Channel 18 Sample time selection    */
ADC_SMPR1_SMP18_0         EQU		0x1 << ADC_SMPR1_SMP18_Pos                   ;/*!< 0x01000000 */
ADC_SMPR1_SMP18_1         EQU		0x2 << ADC_SMPR1_SMP18_Pos                   ;/*!< 0x02000000 */
ADC_SMPR1_SMP18_2         EQU		0x4 << ADC_SMPR1_SMP18_Pos                   ;/*!< 0x04000000 */

ADC_SMPR2			      EQU		0x10
;/******************  Bit definition for ADC_SMPR2 register  *******************/
ADC_SMPR2_SMP0_Pos        EQU		0                                         
ADC_SMPR2_SMP0_Msk        EQU		0x7 << ADC_SMPR2_SMP0_Pos                    ;/*!< 0x00000007 */
ADC_SMPR2_SMP0            EQU		ADC_SMPR2_SMP0_Msk                           ;/*!<SMP0[2:0] bits EQU		Channel 0 Sample time selection    */
ADC_SMPR2_SMP0_0          EQU		0x1 << ADC_SMPR2_SMP0_Pos                    ;/*!< 0x00000001 */
ADC_SMPR2_SMP0_1          EQU		0x2 << ADC_SMPR2_SMP0_Pos                    ;/*!< 0x00000002 */
ADC_SMPR2_SMP0_2          EQU		0x4 << ADC_SMPR2_SMP0_Pos                    ;/*!< 0x00000004 */
ADC_SMPR2_SMP1_Pos        EQU		3                                         
ADC_SMPR2_SMP1_Msk        EQU		0x7 << ADC_SMPR2_SMP1_Pos                    ;/*!< 0x00000038 */
ADC_SMPR2_SMP1            EQU		ADC_SMPR2_SMP1_Msk                           ;/*!<SMP1[2:0] bits EQU		Channel 1 Sample time selection    */
ADC_SMPR2_SMP1_0          EQU		0x1 << ADC_SMPR2_SMP1_Pos                    ;/*!< 0x00000008 */
ADC_SMPR2_SMP1_1          EQU		0x2 << ADC_SMPR2_SMP1_Pos                    ;/*!< 0x00000010 */
ADC_SMPR2_SMP1_2          EQU		0x4 << ADC_SMPR2_SMP1_Pos                    ;/*!< 0x00000020 */
ADC_SMPR2_SMP2_Pos        EQU		6                                         
ADC_SMPR2_SMP2_Msk        EQU		0x7 << ADC_SMPR2_SMP2_Pos                    ;/*!< 0x000001C0 */
ADC_SMPR2_SMP2            EQU		ADC_SMPR2_SMP2_Msk                           ;/*!<SMP2[2:0] bits EQU		Channel 2 Sample time selection    */
ADC_SMPR2_SMP2_0          EQU		0x1 << ADC_SMPR2_SMP2_Pos                    ;/*!< 0x00000040 */
ADC_SMPR2_SMP2_1          EQU		0x2 << ADC_SMPR2_SMP2_Pos                    ;/*!< 0x00000080 */
ADC_SMPR2_SMP2_2          EQU		0x4 << ADC_SMPR2_SMP2_Pos                    ;/*!< 0x00000100 */
ADC_SMPR2_SMP3_Pos        EQU		9                                         
ADC_SMPR2_SMP3_Msk        EQU		0x7 << ADC_SMPR2_SMP3_Pos                    ;/*!< 0x00000E00 */
ADC_SMPR2_SMP3            EQU		ADC_SMPR2_SMP3_Msk                           ;/*!<SMP3[2:0] bits EQU		Channel 3 Sample time selection    */
ADC_SMPR2_SMP3_0          EQU		0x1 << ADC_SMPR2_SMP3_Pos                    ;/*!< 0x00000200 */
ADC_SMPR2_SMP3_1          EQU		0x2 << ADC_SMPR2_SMP3_Pos                    ;/*!< 0x00000400 */
ADC_SMPR2_SMP3_2          EQU		0x4 << ADC_SMPR2_SMP3_Pos                    ;/*!< 0x00000800 */
ADC_SMPR2_SMP4_Pos        EQU		12                                        
ADC_SMPR2_SMP4_Msk        EQU		0x7 << ADC_SMPR2_SMP4_Pos                    ;/*!< 0x00007000 */
ADC_SMPR2_SMP4            EQU		ADC_SMPR2_SMP4_Msk                           ;/*!<SMP4[2:0] bits EQU		Channel 4 Sample time selection    */
ADC_SMPR2_SMP4_0          EQU		0x1 << ADC_SMPR2_SMP4_Pos                    ;/*!< 0x00001000 */
ADC_SMPR2_SMP4_1          EQU		0x2 << ADC_SMPR2_SMP4_Pos                    ;/*!< 0x00002000 */
ADC_SMPR2_SMP4_2          EQU		0x4 << ADC_SMPR2_SMP4_Pos                    ;/*!< 0x00004000 */
ADC_SMPR2_SMP5_Pos        EQU		15                                        
ADC_SMPR2_SMP5_Msk        EQU		0x7 << ADC_SMPR2_SMP5_Pos                    ;/*!< 0x00038000 */
ADC_SMPR2_SMP5            EQU		ADC_SMPR2_SMP5_Msk                           ;/*!<SMP5[2:0] bits EQU		Channel 5 Sample time selection    */
ADC_SMPR2_SMP5_0          EQU		0x1 << ADC_SMPR2_SMP5_Pos                    ;/*!< 0x00008000 */
ADC_SMPR2_SMP5_1          EQU		0x2 << ADC_SMPR2_SMP5_Pos                    ;/*!< 0x00010000 */
ADC_SMPR2_SMP5_2          EQU		0x4 << ADC_SMPR2_SMP5_Pos                    ;/*!< 0x00020000 */
ADC_SMPR2_SMP6_Pos        EQU		18                                        
ADC_SMPR2_SMP6_Msk        EQU		0x7 << ADC_SMPR2_SMP6_Pos                    ;/*!< 0x001C0000 */
ADC_SMPR2_SMP6            EQU		ADC_SMPR2_SMP6_Msk                           ;/*!<SMP6[2:0] bits EQU		Channel 6 Sample time selection    */
ADC_SMPR2_SMP6_0          EQU		0x1 << ADC_SMPR2_SMP6_Pos                    ;/*!< 0x00040000 */
ADC_SMPR2_SMP6_1          EQU		0x2 << ADC_SMPR2_SMP6_Pos                    ;/*!< 0x00080000 */
ADC_SMPR2_SMP6_2          EQU		0x4 << ADC_SMPR2_SMP6_Pos                    ;/*!< 0x00100000 */
ADC_SMPR2_SMP7_Pos        EQU		21                                        
ADC_SMPR2_SMP7_Msk        EQU		0x7 << ADC_SMPR2_SMP7_Pos                    ;/*!< 0x00E00000 */
ADC_SMPR2_SMP7            EQU		ADC_SMPR2_SMP7_Msk                           ;/*!<SMP7[2:0] bits EQU		Channel 7 Sample time selection    */
ADC_SMPR2_SMP7_0          EQU		0x1 << ADC_SMPR2_SMP7_Pos                    ;/*!< 0x00200000 */
ADC_SMPR2_SMP7_1          EQU		0x2 << ADC_SMPR2_SMP7_Pos                    ;/*!< 0x00400000 */
ADC_SMPR2_SMP7_2          EQU		0x4 << ADC_SMPR2_SMP7_Pos                    ;/*!< 0x00800000 */
ADC_SMPR2_SMP8_Pos        EQU		24                                        
ADC_SMPR2_SMP8_Msk        EQU		0x7 << ADC_SMPR2_SMP8_Pos                    ;/*!< 0x07000000 */
ADC_SMPR2_SMP8            EQU		ADC_SMPR2_SMP8_Msk                           ;/*!<SMP8[2:0] bits EQU		Channel 8 Sample time selection    */
ADC_SMPR2_SMP8_0          EQU		0x1 << ADC_SMPR2_SMP8_Pos                    ;/*!< 0x01000000 */
ADC_SMPR2_SMP8_1          EQU		0x2 << ADC_SMPR2_SMP8_Pos                    ;/*!< 0x02000000 */
ADC_SMPR2_SMP8_2          EQU		0x4 << ADC_SMPR2_SMP8_Pos                    ;/*!< 0x04000000 */
ADC_SMPR2_SMP9_Pos        EQU		27                                        
ADC_SMPR2_SMP9_Msk        EQU		0x7 << ADC_SMPR2_SMP9_Pos                    ;/*!< 0x38000000 */
ADC_SMPR2_SMP9            EQU		ADC_SMPR2_SMP9_Msk                           ;/*!<SMP9[2:0] bits EQU		Channel 9 Sample time selection    */
ADC_SMPR2_SMP9_0          EQU		0x1 << ADC_SMPR2_SMP9_Pos                    ;/*!< 0x08000000 */
ADC_SMPR2_SMP9_1          EQU		0x2 << ADC_SMPR2_SMP9_Pos                    ;/*!< 0x10000000 */
ADC_SMPR2_SMP9_2          EQU		0x4 << ADC_SMPR2_SMP9_Pos                    ;/*!< 0x20000000 */

ADC_JOFR1			      EQU		0x14
;/******************  Bit definition for ADC_JOFR1 register  *******************/
ADC_JOFR1_JOFFSET1_Pos    EQU		0                                         
ADC_JOFR1_JOFFSET1_Msk    EQU		0xFFF << ADC_JOFR1_JOFFSET1_Pos              ;/*!< 0x00000FFF */
ADC_JOFR1_JOFFSET1        EQU		ADC_JOFR1_JOFFSET1_Msk                       ;/*!<Data offset for injected channel 1 */

ADC_JOFR2			      EQU		0x18
;/******************  Bit definition for ADC_JOFR2 register  *******************/
ADC_JOFR2_JOFFSET2_Pos    EQU		0                                         
ADC_JOFR2_JOFFSET2_Msk    EQU		0xFFF << ADC_JOFR2_JOFFSET2_Pos              ;/*!< 0x00000FFF */
ADC_JOFR2_JOFFSET2        EQU		ADC_JOFR2_JOFFSET2_Msk                       ;/*!<Data offset for injected channel 2 */

ADC_JOFR3			      EQU		0x1C
;/******************  Bit definition for ADC_JOFR3 register  *******************/
ADC_JOFR3_JOFFSET3_Pos    EQU		0                                         
ADC_JOFR3_JOFFSET3_Msk    EQU		0xFFF << ADC_JOFR3_JOFFSET3_Pos              ;/*!< 0x00000FFF */
ADC_JOFR3_JOFFSET3        EQU		ADC_JOFR3_JOFFSET3_Msk                       ;/*!<Data offset for injected channel 3 */

ADC_JOFR4			      EQU		0x20
;/******************  Bit definition for ADC_JOFR4 register  *******************/
ADC_JOFR4_JOFFSET4_Pos    EQU		0                                         
ADC_JOFR4_JOFFSET4_Msk    EQU		0xFFF << ADC_JOFR4_JOFFSET4_Pos              ;/*!< 0x00000FFF */
ADC_JOFR4_JOFFSET4        EQU		ADC_JOFR4_JOFFSET4_Msk                       ;/*!<Data offset for injected channel 4 */

ADC_HTR		              EQU		0x24
;/*******************  Bit definition for ADC_HTR register  ********************/
ADC_HTR_HT_Pos            EQU		0                                         
ADC_HTR_HT_Msk            EQU		0xFFF << ADC_HTR_HT_Pos                      ;/*!< 0x00000FFF */
ADC_HTR_HT                EQU		ADC_HTR_HT_Msk                               ;/*!<Analog watchdog high threshold */

ADC_LTR		              EQU		0x28
;/*******************  Bit definition for ADC_LTR register  ********************/
ADC_LTR_LT_Pos            EQU		0                                         
ADC_LTR_LT_Msk            EQU		0xFFF << ADC_LTR_LT_Pos                      ;/*!< 0x00000FFF */
ADC_LTR_LT                EQU		ADC_LTR_LT_Msk                               ;/*!<Analog watchdog low threshold */

ADC_SQR1		          EQU		0x2C
;/*******************  Bit definition for ADC_SQR1 register  *******************/
ADC_SQR1_SQ13_Pos         EQU		0                                         
ADC_SQR1_SQ13_Msk         EQU		0x1F << ADC_SQR1_SQ13_Pos                    ;/*!< 0x0000001F */
ADC_SQR1_SQ13             EQU		ADC_SQR1_SQ13_Msk                            ;/*!<SQ13[4:0] bits EQU		13th conversion in regular sequence    */
ADC_SQR1_SQ13_0           EQU		0x01 << ADC_SQR1_SQ13_Pos                    ;/*!< 0x00000001 */
ADC_SQR1_SQ13_1           EQU		0x02 << ADC_SQR1_SQ13_Pos                    ;/*!< 0x00000002 */
ADC_SQR1_SQ13_2           EQU		0x04 << ADC_SQR1_SQ13_Pos                    ;/*!< 0x00000004 */
ADC_SQR1_SQ13_3           EQU		0x08 << ADC_SQR1_SQ13_Pos                    ;/*!< 0x00000008 */
ADC_SQR1_SQ13_4           EQU		0x10 << ADC_SQR1_SQ13_Pos                    ;/*!< 0x00000010 */
ADC_SQR1_SQ14_Pos         EQU		5                                         
ADC_SQR1_SQ14_Msk         EQU		0x1F << ADC_SQR1_SQ14_Pos                    ;/*!< 0x000003E0 */
ADC_SQR1_SQ14             EQU		ADC_SQR1_SQ14_Msk                            ;/*!<SQ14[4:0] bits EQU		14th conversion in regular sequence    */
ADC_SQR1_SQ14_0           EQU		0x01 << ADC_SQR1_SQ14_Pos                    ;/*!< 0x00000020 */
ADC_SQR1_SQ14_1           EQU		0x02 << ADC_SQR1_SQ14_Pos                    ;/*!< 0x00000040 */
ADC_SQR1_SQ14_2           EQU		0x04 << ADC_SQR1_SQ14_Pos                    ;/*!< 0x00000080 */
ADC_SQR1_SQ14_3           EQU		0x08 << ADC_SQR1_SQ14_Pos                    ;/*!< 0x00000100 */
ADC_SQR1_SQ14_4           EQU		0x10 << ADC_SQR1_SQ14_Pos                    ;/*!< 0x00000200 */
ADC_SQR1_SQ15_Pos         EQU		10                                        
ADC_SQR1_SQ15_Msk         EQU		0x1F << ADC_SQR1_SQ15_Pos                    ;/*!< 0x00007C00 */
ADC_SQR1_SQ15             EQU		ADC_SQR1_SQ15_Msk                            ;/*!<SQ15[4:0] bits EQU		15th conversion in regular sequence    */
ADC_SQR1_SQ15_0           EQU		0x01 << ADC_SQR1_SQ15_Pos                    ;/*!< 0x00000400 */
ADC_SQR1_SQ15_1           EQU		0x02 << ADC_SQR1_SQ15_Pos                    ;/*!< 0x00000800 */
ADC_SQR1_SQ15_2           EQU		0x04 << ADC_SQR1_SQ15_Pos                    ;/*!< 0x00001000 */
ADC_SQR1_SQ15_3           EQU		0x08 << ADC_SQR1_SQ15_Pos                    ;/*!< 0x00002000 */
ADC_SQR1_SQ15_4           EQU		0x10 << ADC_SQR1_SQ15_Pos                    ;/*!< 0x00004000 */
ADC_SQR1_SQ16_Pos         EQU		15                                        
ADC_SQR1_SQ16_Msk         EQU		0x1F << ADC_SQR1_SQ16_Pos                    ;/*!< 0x000F8000 */
ADC_SQR1_SQ16             EQU		ADC_SQR1_SQ16_Msk                            ;/*!<SQ16[4:0] bits EQU		16th conversion in regular sequence    */
ADC_SQR1_SQ16_0           EQU		0x01 << ADC_SQR1_SQ16_Pos                    ;/*!< 0x00008000 */
ADC_SQR1_SQ16_1           EQU		0x02 << ADC_SQR1_SQ16_Pos                    ;/*!< 0x00010000 */
ADC_SQR1_SQ16_2           EQU		0x04 << ADC_SQR1_SQ16_Pos                    ;/*!< 0x00020000 */
ADC_SQR1_SQ16_3           EQU		0x08 << ADC_SQR1_SQ16_Pos                    ;/*!< 0x00040000 */
ADC_SQR1_SQ16_4           EQU		0x10 << ADC_SQR1_SQ16_Pos                    ;/*!< 0x00080000 */
ADC_SQR1_L_Pos            EQU		20                                        
ADC_SQR1_L_Msk            EQU		0xF << ADC_SQR1_L_Pos                        ;/*!< 0x00F00000 */
ADC_SQR1_L                EQU		ADC_SQR1_L_Msk                               ;/*!<L[3:0] bits EQU		Regular channel sequence length    */
ADC_SQR1_L_0              EQU		0x1 << ADC_SQR1_L_Pos                        ;/*!< 0x00100000 */
ADC_SQR1_L_1              EQU		0x2 << ADC_SQR1_L_Pos                        ;/*!< 0x00200000 */
ADC_SQR1_L_2              EQU		0x4 << ADC_SQR1_L_Pos                        ;/*!< 0x00400000 */
ADC_SQR1_L_3              EQU		0x8 << ADC_SQR1_L_Pos                        ;/*!< 0x00800000 */

ADC_SQR2		          EQU		0x30
;/*******************  Bit definition for ADC_SQR2 register  *******************/
ADC_SQR2_SQ7_Pos          EQU		0                                         
ADC_SQR2_SQ7_Msk          EQU		0x1F << ADC_SQR2_SQ7_Pos                     ;/*!< 0x0000001F */
ADC_SQR2_SQ7              EQU		ADC_SQR2_SQ7_Msk                             ;/*!<SQ7[4:0] bits EQU		7th conversion in regular sequence    */
ADC_SQR2_SQ7_0            EQU		0x01 << ADC_SQR2_SQ7_Pos                     ;/*!< 0x00000001 */
ADC_SQR2_SQ7_1            EQU		0x02 << ADC_SQR2_SQ7_Pos                     ;/*!< 0x00000002 */
ADC_SQR2_SQ7_2            EQU		0x04 << ADC_SQR2_SQ7_Pos                     ;/*!< 0x00000004 */
ADC_SQR2_SQ7_3            EQU		0x08 << ADC_SQR2_SQ7_Pos                     ;/*!< 0x00000008 */
ADC_SQR2_SQ7_4            EQU		0x10 << ADC_SQR2_SQ7_Pos                     ;/*!< 0x00000010 */
ADC_SQR2_SQ8_Pos          EQU		5                                         
ADC_SQR2_SQ8_Msk          EQU		0x1F << ADC_SQR2_SQ8_Pos                     ;/*!< 0x000003E0 */
ADC_SQR2_SQ8              EQU		ADC_SQR2_SQ8_Msk                             ;/*!<SQ8[4:0] bits EQU		8th conversion in regular sequence    */
ADC_SQR2_SQ8_0            EQU		0x01 << ADC_SQR2_SQ8_Pos                     ;/*!< 0x00000020 */
ADC_SQR2_SQ8_1            EQU		0x02 << ADC_SQR2_SQ8_Pos                     ;/*!< 0x00000040 */
ADC_SQR2_SQ8_2            EQU		0x04 << ADC_SQR2_SQ8_Pos                     ;/*!< 0x00000080 */
ADC_SQR2_SQ8_3            EQU		0x08 << ADC_SQR2_SQ8_Pos                     ;/*!< 0x00000100 */
ADC_SQR2_SQ8_4            EQU		0x10 << ADC_SQR2_SQ8_Pos                     ;/*!< 0x00000200 */
ADC_SQR2_SQ9_Pos          EQU		10                                        
ADC_SQR2_SQ9_Msk          EQU		0x1F << ADC_SQR2_SQ9_Pos                     ;/*!< 0x00007C00 */
ADC_SQR2_SQ9              EQU		ADC_SQR2_SQ9_Msk                             ;/*!<SQ9[4:0] bits EQU		9th conversion in regular sequence    */
ADC_SQR2_SQ9_0            EQU		0x01 << ADC_SQR2_SQ9_Pos                     ;/*!< 0x00000400 */
ADC_SQR2_SQ9_1            EQU		0x02 << ADC_SQR2_SQ9_Pos                     ;/*!< 0x00000800 */
ADC_SQR2_SQ9_2            EQU		0x04 << ADC_SQR2_SQ9_Pos                     ;/*!< 0x00001000 */
ADC_SQR2_SQ9_3            EQU		0x08 << ADC_SQR2_SQ9_Pos                     ;/*!< 0x00002000 */
ADC_SQR2_SQ9_4            EQU		0x10 << ADC_SQR2_SQ9_Pos                     ;/*!< 0x00004000 */
ADC_SQR2_SQ10_Pos         EQU		15                                        
ADC_SQR2_SQ10_Msk         EQU		0x1F << ADC_SQR2_SQ10_Pos                    ;/*!< 0x000F8000 */
ADC_SQR2_SQ10             EQU		ADC_SQR2_SQ10_Msk                            ;/*!<SQ10[4:0] bits EQU		10th conversion in regular sequence    */
ADC_SQR2_SQ10_0           EQU		0x01 << ADC_SQR2_SQ10_Pos                    ;/*!< 0x00008000 */
ADC_SQR2_SQ10_1           EQU		0x02 << ADC_SQR2_SQ10_Pos                    ;/*!< 0x00010000 */
ADC_SQR2_SQ10_2           EQU		0x04 << ADC_SQR2_SQ10_Pos                    ;/*!< 0x00020000 */
ADC_SQR2_SQ10_3           EQU		0x08 << ADC_SQR2_SQ10_Pos                    ;/*!< 0x00040000 */
ADC_SQR2_SQ10_4           EQU		0x10 << ADC_SQR2_SQ10_Pos                    ;/*!< 0x00080000 */
ADC_SQR2_SQ11_Pos         EQU		20                                        
ADC_SQR2_SQ11_Msk         EQU		0x1F << ADC_SQR2_SQ11_Pos                    ;/*!< 0x01F00000 */
ADC_SQR2_SQ11             EQU		ADC_SQR2_SQ11_Msk                            ;/*!<SQ11[4:0] bits EQU		11th conversion in regular sequence    */
ADC_SQR2_SQ11_0           EQU		0x01 << ADC_SQR2_SQ11_Pos                    ;/*!< 0x00100000 */
ADC_SQR2_SQ11_1           EQU		0x02 << ADC_SQR2_SQ11_Pos                    ;/*!< 0x00200000 */
ADC_SQR2_SQ11_2           EQU		0x04 << ADC_SQR2_SQ11_Pos                    ;/*!< 0x00400000 */
ADC_SQR2_SQ11_3           EQU		0x08 << ADC_SQR2_SQ11_Pos                    ;/*!< 0x00800000 */
ADC_SQR2_SQ11_4           EQU		0x10 << ADC_SQR2_SQ11_Pos                    ;/*!< 0x01000000 */
ADC_SQR2_SQ12_Pos         EQU		25                                        
ADC_SQR2_SQ12_Msk         EQU		0x1F << ADC_SQR2_SQ12_Pos                    ;/*!< 0x3E000000 */
ADC_SQR2_SQ12             EQU		ADC_SQR2_SQ12_Msk                            ;/*!<SQ12[4:0] bits EQU		12th conversion in regular sequence    */
ADC_SQR2_SQ12_0           EQU		0x01 << ADC_SQR2_SQ12_Pos                    ;/*!< 0x02000000 */
ADC_SQR2_SQ12_1           EQU		0x02 << ADC_SQR2_SQ12_Pos                    ;/*!< 0x04000000 */
ADC_SQR2_SQ12_2           EQU		0x04 << ADC_SQR2_SQ12_Pos                    ;/*!< 0x08000000 */
ADC_SQR2_SQ12_3           EQU		0x08 << ADC_SQR2_SQ12_Pos                    ;/*!< 0x10000000 */
ADC_SQR2_SQ12_4           EQU		0x10 << ADC_SQR2_SQ12_Pos                    ;/*!< 0x20000000 */

ADC_SQR3		          EQU		0x34
;/*******************  Bit definition for ADC_SQR3 register  *******************/
ADC_SQR3_SQ1_Pos          EQU		0                                         
ADC_SQR3_SQ1_Msk          EQU		0x1F << ADC_SQR3_SQ1_Pos                     ;/*!< 0x0000001F */
ADC_SQR3_SQ1              EQU		ADC_SQR3_SQ1_Msk                             ;/*!<SQ1[4:0] bits EQU		1st conversion in regular sequence    */
ADC_SQR3_SQ1_0            EQU		0x01 << ADC_SQR3_SQ1_Pos                     ;/*!< 0x00000001 */
ADC_SQR3_SQ1_1            EQU		0x02 << ADC_SQR3_SQ1_Pos                     ;/*!< 0x00000002 */
ADC_SQR3_SQ1_2            EQU		0x04 << ADC_SQR3_SQ1_Pos                     ;/*!< 0x00000004 */
ADC_SQR3_SQ1_3            EQU		0x08 << ADC_SQR3_SQ1_Pos                     ;/*!< 0x00000008 */
ADC_SQR3_SQ1_4            EQU		0x10 << ADC_SQR3_SQ1_Pos                     ;/*!< 0x00000010 */
ADC_SQR3_SQ2_Pos          EQU		5                                         
ADC_SQR3_SQ2_Msk          EQU		0x1F << ADC_SQR3_SQ2_Pos                     ;/*!< 0x000003E0 */
ADC_SQR3_SQ2              EQU		ADC_SQR3_SQ2_Msk                             ;/*!<SQ2[4:0] bits EQU		2nd conversion in regular sequence    */
ADC_SQR3_SQ2_0            EQU		0x01 << ADC_SQR3_SQ2_Pos                     ;/*!< 0x00000020 */
ADC_SQR3_SQ2_1            EQU		0x02 << ADC_SQR3_SQ2_Pos                     ;/*!< 0x00000040 */
ADC_SQR3_SQ2_2            EQU		0x04 << ADC_SQR3_SQ2_Pos                     ;/*!< 0x00000080 */
ADC_SQR3_SQ2_3            EQU		0x08 << ADC_SQR3_SQ2_Pos                     ;/*!< 0x00000100 */
ADC_SQR3_SQ2_4            EQU		0x10 << ADC_SQR3_SQ2_Pos                     ;/*!< 0x00000200 */
ADC_SQR3_SQ3_Pos          EQU		10                                        
ADC_SQR3_SQ3_Msk          EQU		0x1F << ADC_SQR3_SQ3_Pos                     ;/*!< 0x00007C00 */
ADC_SQR3_SQ3              EQU		ADC_SQR3_SQ3_Msk                             ;/*!<SQ3[4:0] bits EQU		3rd conversion in regular sequence    */
ADC_SQR3_SQ3_0            EQU		0x01 << ADC_SQR3_SQ3_Pos                     ;/*!< 0x00000400 */
ADC_SQR3_SQ3_1            EQU		0x02 << ADC_SQR3_SQ3_Pos                     ;/*!< 0x00000800 */
ADC_SQR3_SQ3_2            EQU		0x04 << ADC_SQR3_SQ3_Pos                     ;/*!< 0x00001000 */
ADC_SQR3_SQ3_3            EQU		0x08 << ADC_SQR3_SQ3_Pos                     ;/*!< 0x00002000 */
ADC_SQR3_SQ3_4            EQU		0x10 << ADC_SQR3_SQ3_Pos                     ;/*!< 0x00004000 */
ADC_SQR3_SQ4_Pos          EQU		15                                        
ADC_SQR3_SQ4_Msk          EQU		0x1F << ADC_SQR3_SQ4_Pos                     ;/*!< 0x000F8000 */
ADC_SQR3_SQ4              EQU		ADC_SQR3_SQ4_Msk                             ;/*!<SQ4[4:0] bits EQU		4th conversion in regular sequence    */
ADC_SQR3_SQ4_0            EQU		0x01 << ADC_SQR3_SQ4_Pos                     ;/*!< 0x00008000 */
ADC_SQR3_SQ4_1            EQU		0x02 << ADC_SQR3_SQ4_Pos                     ;/*!< 0x00010000 */
ADC_SQR3_SQ4_2            EQU		0x04 << ADC_SQR3_SQ4_Pos                     ;/*!< 0x00020000 */
ADC_SQR3_SQ4_3            EQU		0x08 << ADC_SQR3_SQ4_Pos                     ;/*!< 0x00040000 */
ADC_SQR3_SQ4_4            EQU		0x10 << ADC_SQR3_SQ4_Pos                     ;/*!< 0x00080000 */
ADC_SQR3_SQ5_Pos          EQU		20                                        
ADC_SQR3_SQ5_Msk          EQU		0x1F << ADC_SQR3_SQ5_Pos                     ;/*!< 0x01F00000 */
ADC_SQR3_SQ5              EQU		ADC_SQR3_SQ5_Msk                             ;/*!<SQ5[4:0] bits EQU		5th conversion in regular sequence    */
ADC_SQR3_SQ5_0            EQU		0x01 << ADC_SQR3_SQ5_Pos                     ;/*!< 0x00100000 */
ADC_SQR3_SQ5_1            EQU		0x02 << ADC_SQR3_SQ5_Pos                     ;/*!< 0x00200000 */
ADC_SQR3_SQ5_2            EQU		0x04 << ADC_SQR3_SQ5_Pos                     ;/*!< 0x00400000 */
ADC_SQR3_SQ5_3            EQU		0x08 << ADC_SQR3_SQ5_Pos                     ;/*!< 0x00800000 */
ADC_SQR3_SQ5_4            EQU		0x10 << ADC_SQR3_SQ5_Pos                     ;/*!< 0x01000000 */
ADC_SQR3_SQ6_Pos          EQU		25                                        
ADC_SQR3_SQ6_Msk          EQU		0x1F << ADC_SQR3_SQ6_Pos                     ;/*!< 0x3E000000 */
ADC_SQR3_SQ6              EQU		ADC_SQR3_SQ6_Msk                             ;/*!<SQ6[4:0] bits EQU		6th conversion in regular sequence    */
ADC_SQR3_SQ6_0            EQU		0x01 << ADC_SQR3_SQ6_Pos                     ;/*!< 0x02000000 */
ADC_SQR3_SQ6_1            EQU		0x02 << ADC_SQR3_SQ6_Pos                     ;/*!< 0x04000000 */
ADC_SQR3_SQ6_2            EQU		0x04 << ADC_SQR3_SQ6_Pos                     ;/*!< 0x08000000 */
ADC_SQR3_SQ6_3            EQU		0x08 << ADC_SQR3_SQ6_Pos                     ;/*!< 0x10000000 */
ADC_SQR3_SQ6_4            EQU		0x10 << ADC_SQR3_SQ6_Pos                     ;/*!< 0x20000000 */

ADC_JSQR		          EQU		0x38
;/*******************  Bit definition for ADC_JSQR register  *******************/
ADC_JSQR_JSQ1_Pos         EQU		0                                         
ADC_JSQR_JSQ1_Msk         EQU		0x1F << ADC_JSQR_JSQ1_Pos                    ;/*!< 0x0000001F */
ADC_JSQR_JSQ1             EQU		ADC_JSQR_JSQ1_Msk                            ;/*!<JSQ1[4:0] bits EQU		1st conversion in injected sequence    */  
ADC_JSQR_JSQ1_0           EQU		0x01 << ADC_JSQR_JSQ1_Pos                    ;/*!< 0x00000001 */
ADC_JSQR_JSQ1_1           EQU		0x02 << ADC_JSQR_JSQ1_Pos                    ;/*!< 0x00000002 */
ADC_JSQR_JSQ1_2           EQU		0x04 << ADC_JSQR_JSQ1_Pos                    ;/*!< 0x00000004 */
ADC_JSQR_JSQ1_3           EQU		0x08 << ADC_JSQR_JSQ1_Pos                    ;/*!< 0x00000008 */
ADC_JSQR_JSQ1_4           EQU		0x10 << ADC_JSQR_JSQ1_Pos                    ;/*!< 0x00000010 */
ADC_JSQR_JSQ2_Pos         EQU		5                                         
ADC_JSQR_JSQ2_Msk         EQU		0x1F << ADC_JSQR_JSQ2_Pos                    ;/*!< 0x000003E0 */
ADC_JSQR_JSQ2             EQU		ADC_JSQR_JSQ2_Msk                            ;/*!<JSQ2[4:0] bits EQU		2nd conversion in injected sequence    */
ADC_JSQR_JSQ2_0           EQU		0x01 << ADC_JSQR_JSQ2_Pos                    ;/*!< 0x00000020 */
ADC_JSQR_JSQ2_1           EQU		0x02 << ADC_JSQR_JSQ2_Pos                    ;/*!< 0x00000040 */
ADC_JSQR_JSQ2_2           EQU		0x04 << ADC_JSQR_JSQ2_Pos                    ;/*!< 0x00000080 */
ADC_JSQR_JSQ2_3           EQU		0x08 << ADC_JSQR_JSQ2_Pos                    ;/*!< 0x00000100 */
ADC_JSQR_JSQ2_4           EQU		0x10 << ADC_JSQR_JSQ2_Pos                    ;/*!< 0x00000200 */
ADC_JSQR_JSQ3_Pos         EQU		10                                        
ADC_JSQR_JSQ3_Msk         EQU		0x1F << ADC_JSQR_JSQ3_Pos                    ;/*!< 0x00007C00 */
ADC_JSQR_JSQ3             EQU		ADC_JSQR_JSQ3_Msk                            ;/*!<JSQ3[4:0] bits EQU		3rd conversion in injected sequence    */
ADC_JSQR_JSQ3_0           EQU		0x01 << ADC_JSQR_JSQ3_Pos                    ;/*!< 0x00000400 */
ADC_JSQR_JSQ3_1           EQU		0x02 << ADC_JSQR_JSQ3_Pos                    ;/*!< 0x00000800 */
ADC_JSQR_JSQ3_2           EQU		0x04 << ADC_JSQR_JSQ3_Pos                    ;/*!< 0x00001000 */
ADC_JSQR_JSQ3_3           EQU		0x08 << ADC_JSQR_JSQ3_Pos                    ;/*!< 0x00002000 */
ADC_JSQR_JSQ3_4           EQU		0x10 << ADC_JSQR_JSQ3_Pos                    ;/*!< 0x00004000 */
ADC_JSQR_JSQ4_Pos         EQU		15                                        
ADC_JSQR_JSQ4_Msk         EQU		0x1F << ADC_JSQR_JSQ4_Pos                    ;/*!< 0x000F8000 */
ADC_JSQR_JSQ4             EQU		ADC_JSQR_JSQ4_Msk                            ;/*!<JSQ4[4:0] bits EQU		4th conversion in injected sequence    */
ADC_JSQR_JSQ4_0           EQU		0x01 << ADC_JSQR_JSQ4_Pos                    ;/*!< 0x00008000 */
ADC_JSQR_JSQ4_1           EQU		0x02 << ADC_JSQR_JSQ4_Pos                    ;/*!< 0x00010000 */
ADC_JSQR_JSQ4_2           EQU		0x04 << ADC_JSQR_JSQ4_Pos                    ;/*!< 0x00020000 */
ADC_JSQR_JSQ4_3           EQU		0x08 << ADC_JSQR_JSQ4_Pos                    ;/*!< 0x00040000 */
ADC_JSQR_JSQ4_4           EQU		0x10 << ADC_JSQR_JSQ4_Pos                    ;/*!< 0x00080000 */
ADC_JSQR_JL_Pos           EQU		20                                        
ADC_JSQR_JL_Msk           EQU		0x3 << ADC_JSQR_JL_Pos                       ;/*!< 0x00300000 */
ADC_JSQR_JL               EQU		ADC_JSQR_JL_Msk                              ;/*!<JL[1:0] bits EQU		Injected Sequence length    */
ADC_JSQR_JL_0             EQU		0x1 << ADC_JSQR_JL_Pos                       ;/*!< 0x00100000 */
ADC_JSQR_JL_1             EQU		0x2 << ADC_JSQR_JL_Pos                       ;/*!< 0x00200000 */

ADC_JDR1		          EQU		0x3C
;/*******************  Bit definition for ADC_JDR1 register  *******************/
ADC_JDR1_JDATA_Pos        EQU		0                                         
ADC_JDR1_JDATA_Msk        EQU		0xFFFF << ADC_JDR1_JDATA_Pos                 ;/*!< 0x0000FFFF */
ADC_JDR1_JDATA            EQU		ADC_JDR1_JDATA_Msk                           ;/*!<Injected data */

ADC_JDR2		          EQU		0x40
;/*******************  Bit definition for ADC_JDR2 register  *******************/
ADC_JDR2_JDATA_Pos        EQU		0                                         
ADC_JDR2_JDATA_Msk        EQU		0xFFFF << ADC_JDR2_JDATA_Pos                 ;/*!< 0x0000FFFF */
ADC_JDR2_JDATA            EQU		ADC_JDR2_JDATA_Msk                           ;/*!<Injected data */

ADC_JDR3		          EQU		0x44
;/*******************  Bit definition for ADC_JDR3 register  *******************/
ADC_JDR3_JDATA_Pos        EQU		0                                         
ADC_JDR3_JDATA_Msk        EQU		0xFFFF << ADC_JDR3_JDATA_Pos                 ;/*!< 0x0000FFFF */
ADC_JDR3_JDATA            EQU		ADC_JDR3_JDATA_Msk                           ;/*!<Injected data */

ADC_JDR4		          EQU		0x48
;/*******************  Bit definition for ADC_JDR4 register  *******************/
ADC_JDR4_JDATA_Pos        EQU		0                                         
ADC_JDR4_JDATA_Msk        EQU		0xFFFF << ADC_JDR4_JDATA_Pos                 ;/*!< 0x0000FFFF */
ADC_JDR4_JDATA            EQU		ADC_JDR4_JDATA_Msk                           ;/*!<Injected data */

ADC_DR		              EQU		0x4C
;/********************  Bit definition for ADC_DR register  ********************/
ADC_DR_DATA_Pos           EQU		0                                         
ADC_DR_DATA_Msk           EQU		0xFFFF << ADC_DR_DATA_Pos                    ;/*!< 0x0000FFFF */
ADC_DR_DATA               EQU		ADC_DR_DATA_Msk                              ;/*!<Regular data */
ADC_DR_ADC2DATA_Pos       EQU		16                                        
ADC_DR_ADC2DATA_Msk       EQU		0xFFFF << ADC_DR_ADC2DATA_Pos                ;/*!< 0xFFFF0000 */
ADC_DR_ADC2DATA           EQU		ADC_DR_ADC2DATA_Msk                          ;/*!<ADC2 data */

ADC_CSR			          EQU		0x00
;/*******************  Bit definition for ADC_CSR register  ********************/
ADC_CSR_AWD1_Pos          EQU		0                                         
ADC_CSR_AWD1_Msk          EQU		0x1 << ADC_CSR_AWD1_Pos                      ;/*!< 0x00000001 */
ADC_CSR_AWD1              EQU		ADC_CSR_AWD1_Msk                             ;/*!<ADC1 Analog watchdog flag */
ADC_CSR_EOC1_Pos          EQU		1                                         
ADC_CSR_EOC1_Msk          EQU		0x1 << ADC_CSR_EOC1_Pos                      ;/*!< 0x00000002 */
ADC_CSR_EOC1              EQU		ADC_CSR_EOC1_Msk                             ;/*!<ADC1 End of conversion */
ADC_CSR_JEOC1_Pos         EQU		2                                         
ADC_CSR_JEOC1_Msk         EQU		0x1 << ADC_CSR_JEOC1_Pos                     ;/*!< 0x00000004 */
ADC_CSR_JEOC1             EQU		ADC_CSR_JEOC1_Msk                            ;/*!<ADC1 Injected channel end of conversion */
ADC_CSR_JSTRT1_Pos        EQU		3                                         
ADC_CSR_JSTRT1_Msk        EQU		0x1 << ADC_CSR_JSTRT1_Pos                    ;/*!< 0x00000008 */
ADC_CSR_JSTRT1            EQU		ADC_CSR_JSTRT1_Msk                           ;/*!<ADC1 Injected channel Start flag */
ADC_CSR_STRT1_Pos         EQU		4                                         
ADC_CSR_STRT1_Msk         EQU		0x1 << ADC_CSR_STRT1_Pos                     ;/*!< 0x00000010 */
ADC_CSR_STRT1             EQU		ADC_CSR_STRT1_Msk                            ;/*!<ADC1 Regular channel Start flag */
ADC_CSR_OVR1_Pos          EQU		5                                         
ADC_CSR_OVR1_Msk          EQU		0x1 << ADC_CSR_OVR1_Pos                      ;/*!< 0x00000020 */
ADC_CSR_OVR1              EQU		ADC_CSR_OVR1_Msk                             ;/*!<ADC1 DMA overrun  flag */
ADC_CSR_AWD2_Pos          EQU		8                                         
ADC_CSR_AWD2_Msk          EQU		0x1 << ADC_CSR_AWD2_Pos                      ;/*!< 0x00000100 */
ADC_CSR_AWD2              EQU		ADC_CSR_AWD2_Msk                             ;/*!<ADC2 Analog watchdog flag */
ADC_CSR_EOC2_Pos          EQU		9                                         
ADC_CSR_EOC2_Msk          EQU		0x1 << ADC_CSR_EOC2_Pos                      ;/*!< 0x00000200 */
ADC_CSR_EOC2              EQU		ADC_CSR_EOC2_Msk                             ;/*!<ADC2 End of conversion */
ADC_CSR_JEOC2_Pos         EQU		10                                        
ADC_CSR_JEOC2_Msk         EQU		0x1 << ADC_CSR_JEOC2_Pos                     ;/*!< 0x00000400 */
ADC_CSR_JEOC2             EQU		ADC_CSR_JEOC2_Msk                            ;/*!<ADC2 Injected channel end of conversion */
ADC_CSR_JSTRT2_Pos        EQU		11                                        
ADC_CSR_JSTRT2_Msk        EQU		0x1 << ADC_CSR_JSTRT2_Pos                    ;/*!< 0x00000800 */
ADC_CSR_JSTRT2            EQU		ADC_CSR_JSTRT2_Msk                           ;/*!<ADC2 Injected channel Start flag */
ADC_CSR_STRT2_Pos         EQU		12                                        
ADC_CSR_STRT2_Msk         EQU		0x1 << ADC_CSR_STRT2_Pos                     ;/*!< 0x00001000 */
ADC_CSR_STRT2             EQU		ADC_CSR_STRT2_Msk                            ;/*!<ADC2 Regular channel Start flag */
ADC_CSR_OVR2_Pos          EQU		13                                        
ADC_CSR_OVR2_Msk          EQU		0x1 << ADC_CSR_OVR2_Pos                      ;/*!< 0x00002000 */
ADC_CSR_OVR2              EQU		ADC_CSR_OVR2_Msk                             ;/*!<ADC2 DMA overrun  flag */
ADC_CSR_AWD3_Pos          EQU		16                                        
ADC_CSR_AWD3_Msk          EQU		0x1 << ADC_CSR_AWD3_Pos                      ;/*!< 0x00010000 */
ADC_CSR_AWD3              EQU		ADC_CSR_AWD3_Msk                             ;/*!<ADC3 Analog watchdog flag */
ADC_CSR_EOC3_Pos          EQU		17                                        
ADC_CSR_EOC3_Msk          EQU		0x1 << ADC_CSR_EOC3_Pos                      ;/*!< 0x00020000 */
ADC_CSR_EOC3              EQU		ADC_CSR_EOC3_Msk                             ;/*!<ADC3 End of conversion */
ADC_CSR_JEOC3_Pos         EQU		18                                        
ADC_CSR_JEOC3_Msk         EQU		0x1 << ADC_CSR_JEOC3_Pos                     ;/*!< 0x00040000 */
ADC_CSR_JEOC3             EQU		ADC_CSR_JEOC3_Msk                            ;/*!<ADC3 Injected channel end of conversion */
ADC_CSR_JSTRT3_Pos        EQU		19                                        
ADC_CSR_JSTRT3_Msk        EQU		0x1 << ADC_CSR_JSTRT3_Pos                    ;/*!< 0x00080000 */
ADC_CSR_JSTRT3            EQU		ADC_CSR_JSTRT3_Msk                           ;/*!<ADC3 Injected channel Start flag */
ADC_CSR_STRT3_Pos         EQU		20                                        
ADC_CSR_STRT3_Msk         EQU		0x1 << ADC_CSR_STRT3_Pos                     ;/*!< 0x00100000 */
ADC_CSR_STRT3             EQU		ADC_CSR_STRT3_Msk                            ;/*!<ADC3 Regular channel Start flag */
ADC_CSR_OVR3_Pos          EQU		21                                        
ADC_CSR_OVR3_Msk          EQU		0x1 << ADC_CSR_OVR3_Pos                      ;/*!< 0x00200000 */
ADC_CSR_OVR3              EQU		ADC_CSR_OVR3_Msk                             ;/*!<ADC3 DMA overrun  flag */

;/* Legacy defines */
ADC_CSR_DOVR1             EQU		ADC_CSR_OVR1
ADC_CSR_DOVR2             EQU		ADC_CSR_OVR2
ADC_CSR_DOVR3             EQU		ADC_CSR_OVR3

ADC_CCR			          EQU		0x04
;/*******************  Bit definition for ADC_CCR register  ********************/
ADC_CCR_MULTI_Pos         EQU		0                                         
ADC_CCR_MULTI_Msk         EQU		0x1F << ADC_CCR_MULTI_Pos                    ;/*!< 0x0000001F */
ADC_CCR_MULTI             EQU		ADC_CCR_MULTI_Msk                            ;/*!<MULTI[4:0] bits EQU		Multi-ADC mode selection    */  
ADC_CCR_MULTI_0           EQU		0x01 << ADC_CCR_MULTI_Pos                    ;/*!< 0x00000001 */
ADC_CCR_MULTI_1           EQU		0x02 << ADC_CCR_MULTI_Pos                    ;/*!< 0x00000002 */
ADC_CCR_MULTI_2           EQU		0x04 << ADC_CCR_MULTI_Pos                    ;/*!< 0x00000004 */
ADC_CCR_MULTI_3           EQU		0x08 << ADC_CCR_MULTI_Pos                    ;/*!< 0x00000008 */
ADC_CCR_MULTI_4           EQU		0x10 << ADC_CCR_MULTI_Pos                    ;/*!< 0x00000010 */
ADC_CCR_DELAY_Pos         EQU		8                                         
ADC_CCR_DELAY_Msk         EQU		0xF << ADC_CCR_DELAY_Pos                     ;/*!< 0x00000F00 */
ADC_CCR_DELAY             EQU		ADC_CCR_DELAY_Msk                            ;/*!<DELAY[3:0] bits EQU		Delay between 2 sampling phases    */  
ADC_CCR_DELAY_0           EQU		0x1 << ADC_CCR_DELAY_Pos                     ;/*!< 0x00000100 */
ADC_CCR_DELAY_1           EQU		0x2 << ADC_CCR_DELAY_Pos                     ;/*!< 0x00000200 */
ADC_CCR_DELAY_2           EQU		0x4 << ADC_CCR_DELAY_Pos                     ;/*!< 0x00000400 */
ADC_CCR_DELAY_3           EQU		0x8 << ADC_CCR_DELAY_Pos                     ;/*!< 0x00000800 */
ADC_CCR_DDS_Pos           EQU		13                                        
ADC_CCR_DDS_Msk           EQU		0x1 << ADC_CCR_DDS_Pos                       ;/*!< 0x00002000 */
ADC_CCR_DDS               EQU		ADC_CCR_DDS_Msk                              ;/*!<DMA disable selection EQU		Multi-ADC mode    */
ADC_CCR_DMA_Pos           EQU		14                                        
ADC_CCR_DMA_Msk           EQU		0x3 << ADC_CCR_DMA_Pos                       ;/*!< 0x0000C000 */
ADC_CCR_DMA               EQU		ADC_CCR_DMA_Msk                              ;/*!<DMA[1:0] bits EQU		Direct Memory Access mode for multimode    */  
ADC_CCR_DMA_0             EQU		0x1 << ADC_CCR_DMA_Pos                       ;/*!< 0x00004000 */
ADC_CCR_DMA_1             EQU		0x2 << ADC_CCR_DMA_Pos                       ;/*!< 0x00008000 */
ADC_CCR_ADCPRE_Pos        EQU		16                                        
ADC_CCR_ADCPRE_Msk        EQU		0x3 << ADC_CCR_ADCPRE_Pos                    ;/*!< 0x00030000 */
ADC_CCR_ADCPRE            EQU		ADC_CCR_ADCPRE_Msk                           ;/*!<ADCPRE[1:0] bits EQU		ADC prescaler    */  
ADC_CCR_ADCPRE_0          EQU		0x1 << ADC_CCR_ADCPRE_Pos                    ;/*!< 0x00010000 */
ADC_CCR_ADCPRE_1          EQU		0x2 << ADC_CCR_ADCPRE_Pos                    ;/*!< 0x00020000 */
ADC_CCR_VBATE_Pos         EQU		22                                        
ADC_CCR_VBATE_Msk         EQU		0x1 << ADC_CCR_VBATE_Pos                     ;/*!< 0x00400000 */
ADC_CCR_VBATE             EQU		ADC_CCR_VBATE_Msk                            ;/*!<VBAT Enable */
ADC_CCR_TSVREFE_Pos       EQU		23                                        
ADC_CCR_TSVREFE_Msk       EQU		0x1 << ADC_CCR_TSVREFE_Pos                   ;/*!< 0x00800000 */
ADC_CCR_TSVREFE           EQU		ADC_CCR_TSVREFE_Msk                          ;/*!<Temperature Sensor and VREFINT Enable */

ADC_CDR			          EQU		0x08
;/*******************  Bit definition for ADC_CDR register  ********************/
ADC_CDR_DATA1_Pos         EQU		0                                         
ADC_CDR_DATA1_Msk         EQU		0xFFFF << ADC_CDR_DATA1_Pos                  ;/*!< 0x0000FFFF */
ADC_CDR_DATA1             EQU		ADC_CDR_DATA1_Msk                            ;/*!<1st data of a pair of regular conversions */
ADC_CDR_DATA2_Pos         EQU		16                                        
ADC_CDR_DATA2_Msk         EQU		0xFFFF << ADC_CDR_DATA2_Pos                  ;/*!< 0xFFFF0000 */
ADC_CDR_DATA2             EQU		ADC_CDR_DATA2_Msk                            ;/*!<2nd data of a pair of regular conversions */

;/* Legacy defines */
ADC_CDR_RDATA_MST         EQU		ADC_CDR_DATA1
ADC_CDR_RDATA_SLV         EQU		ADC_CDR_DATA2

;/******************************************************************************/
;/*                                                                            */
;/*                         Controller Area Network                            */
;/*                                                                            */
;/******************************************************************************/

CAN_MCR			       EQU		0x00
;/*******************  Bit definition for CAN_MCR register  ********************/
CAN_MCR_INRQ_Pos       EQU		0                                            
CAN_MCR_INRQ_Msk       EQU		0x1 << CAN_MCR_INRQ_Pos                         ;/*!< 0x00000001 */
CAN_MCR_INRQ           EQU		CAN_MCR_INRQ_Msk                                ;/*!<Initialization Request */
CAN_MCR_SLEEP_Pos      EQU		1                                            
CAN_MCR_SLEEP_Msk      EQU		0x1 << CAN_MCR_SLEEP_Pos                        ;/*!< 0x00000002 */
CAN_MCR_SLEEP          EQU		CAN_MCR_SLEEP_Msk                               ;/*!<Sleep Mode Request */
CAN_MCR_TXFP_Pos       EQU		2                                            
CAN_MCR_TXFP_Msk       EQU		0x1 << CAN_MCR_TXFP_Pos                         ;/*!< 0x00000004 */
CAN_MCR_TXFP           EQU		CAN_MCR_TXFP_Msk                                ;/*!<Transmit FIFO Priority */
CAN_MCR_RFLM_Pos       EQU		3                                            
CAN_MCR_RFLM_Msk       EQU		0x1 << CAN_MCR_RFLM_Pos                         ;/*!< 0x00000008 */
CAN_MCR_RFLM           EQU		CAN_MCR_RFLM_Msk                                ;/*!<Receive FIFO Locked Mode */
CAN_MCR_NART_Pos       EQU		4                                            
CAN_MCR_NART_Msk       EQU		0x1 << CAN_MCR_NART_Pos                         ;/*!< 0x00000010 */
CAN_MCR_NART           EQU		CAN_MCR_NART_Msk                                ;/*!<No Automatic Retransmission */
CAN_MCR_AWUM_Pos       EQU		5                                            
CAN_MCR_AWUM_Msk       EQU		0x1 << CAN_MCR_AWUM_Pos                         ;/*!< 0x00000020 */
CAN_MCR_AWUM           EQU		CAN_MCR_AWUM_Msk                                ;/*!<Automatic Wakeup Mode */
CAN_MCR_ABOM_Pos       EQU		6                                            
CAN_MCR_ABOM_Msk       EQU		0x1 << CAN_MCR_ABOM_Pos                         ;/*!< 0x00000040 */
CAN_MCR_ABOM           EQU		CAN_MCR_ABOM_Msk                                ;/*!<Automatic Bus-Off Management */
CAN_MCR_TTCM_Pos       EQU		7                                            
CAN_MCR_TTCM_Msk       EQU		0x1 << CAN_MCR_TTCM_Pos                         ;/*!< 0x00000080 */
CAN_MCR_TTCM           EQU		CAN_MCR_TTCM_Msk                                ;/*!<Time Triggered Communication Mode */
CAN_MCR_RESET_Pos      EQU		15                                           
CAN_MCR_RESET_Msk      EQU		0x1 << CAN_MCR_RESET_Pos                        ;/*!< 0x00008000 */
CAN_MCR_RESET          EQU		CAN_MCR_RESET_Msk                               ;/*!<bxCAN software master reset */
CAN_MCR_DBF_Pos        EQU		16                                           
CAN_MCR_DBF_Msk        EQU		0x1 << CAN_MCR_DBF_Pos                          ;/*!< 0x00010000 */
CAN_MCR_DBF            EQU		CAN_MCR_DBF_Msk                                 ;/*!<bxCAN Debug freeze */

CAN_MSR			       EQU		0x04
;/*******************  Bit definition for CAN_MSR register  ********************/
CAN_MSR_INAK_Pos       EQU		0                                            
CAN_MSR_INAK_Msk       EQU		0x1 << CAN_MSR_INAK_Pos                         ;/*!< 0x00000001 */
CAN_MSR_INAK           EQU		CAN_MSR_INAK_Msk                                ;/*!<Initialization Acknowledge */
CAN_MSR_SLAK_Pos       EQU		1                                            
CAN_MSR_SLAK_Msk       EQU		0x1 << CAN_MSR_SLAK_Pos                         ;/*!< 0x00000002 */
CAN_MSR_SLAK           EQU		CAN_MSR_SLAK_Msk                                ;/*!<Sleep Acknowledge */
CAN_MSR_ERRI_Pos       EQU		2                                            
CAN_MSR_ERRI_Msk       EQU		0x1 << CAN_MSR_ERRI_Pos                         ;/*!< 0x00000004 */
CAN_MSR_ERRI           EQU		CAN_MSR_ERRI_Msk                                ;/*!<Error Interrupt */
CAN_MSR_WKUI_Pos       EQU		3                                            
CAN_MSR_WKUI_Msk       EQU		0x1 << CAN_MSR_WKUI_Pos                         ;/*!< 0x00000008 */
CAN_MSR_WKUI           EQU		CAN_MSR_WKUI_Msk                                ;/*!<Wakeup Interrupt */
CAN_MSR_SLAKI_Pos      EQU		4                                            
CAN_MSR_SLAKI_Msk      EQU		0x1 << CAN_MSR_SLAKI_Pos                        ;/*!< 0x00000010 */
CAN_MSR_SLAKI          EQU		CAN_MSR_SLAKI_Msk                               ;/*!<Sleep Acknowledge Interrupt */
CAN_MSR_TXM_Pos        EQU		8                                            
CAN_MSR_TXM_Msk        EQU		0x1 << CAN_MSR_TXM_Pos                          ;/*!< 0x00000100 */
CAN_MSR_TXM            EQU		CAN_MSR_TXM_Msk                                 ;/*!<Transmit Mode */
CAN_MSR_RXM_Pos        EQU		9                                            
CAN_MSR_RXM_Msk        EQU		0x1 << CAN_MSR_RXM_Pos                          ;/*!< 0x00000200 */
CAN_MSR_RXM            EQU		CAN_MSR_RXM_Msk                                 ;/*!<Receive Mode */
CAN_MSR_SAMP_Pos       EQU		10                                           
CAN_MSR_SAMP_Msk       EQU		0x1 << CAN_MSR_SAMP_Pos                         ;/*!< 0x00000400 */
CAN_MSR_SAMP           EQU		CAN_MSR_SAMP_Msk                                ;/*!<Last Sample Point */
CAN_MSR_RX_Pos         EQU		11                                           
CAN_MSR_RX_Msk         EQU		0x1 << CAN_MSR_RX_Pos                           ;/*!< 0x00000800 */
CAN_MSR_RX             EQU		CAN_MSR_RX_Msk                                  ;/*!<CAN Rx Signal */

CAN_TSR			       EQU		0x08
;/*******************  Bit definition for CAN_TSR register  ********************/
CAN_TSR_RQCP0_Pos      EQU		0                                            
CAN_TSR_RQCP0_Msk      EQU		0x1 << CAN_TSR_RQCP0_Pos                        ;/*!< 0x00000001 */
CAN_TSR_RQCP0          EQU		CAN_TSR_RQCP0_Msk                               ;/*!<Request Completed Mailbox0 */
CAN_TSR_TXOK0_Pos      EQU		1                                            
CAN_TSR_TXOK0_Msk      EQU		0x1 << CAN_TSR_TXOK0_Pos                        ;/*!< 0x00000002 */
CAN_TSR_TXOK0          EQU		CAN_TSR_TXOK0_Msk                               ;/*!<Transmission OK of Mailbox0 */
CAN_TSR_ALST0_Pos      EQU		2                                            
CAN_TSR_ALST0_Msk      EQU		0x1 << CAN_TSR_ALST0_Pos                        ;/*!< 0x00000004 */
CAN_TSR_ALST0          EQU		CAN_TSR_ALST0_Msk                               ;/*!<Arbitration Lost for Mailbox0 */
CAN_TSR_TERR0_Pos      EQU		3                                            
CAN_TSR_TERR0_Msk      EQU		0x1 << CAN_TSR_TERR0_Pos                        ;/*!< 0x00000008 */
CAN_TSR_TERR0          EQU		CAN_TSR_TERR0_Msk                               ;/*!<Transmission Error of Mailbox0 */
CAN_TSR_ABRQ0_Pos      EQU		7                                            
CAN_TSR_ABRQ0_Msk      EQU		0x1 << CAN_TSR_ABRQ0_Pos                        ;/*!< 0x00000080 */
CAN_TSR_ABRQ0          EQU		CAN_TSR_ABRQ0_Msk                               ;/*!<Abort Request for Mailbox0 */
CAN_TSR_RQCP1_Pos      EQU		8                                            
CAN_TSR_RQCP1_Msk      EQU		0x1 << CAN_TSR_RQCP1_Pos                        ;/*!< 0x00000100 */
CAN_TSR_RQCP1          EQU		CAN_TSR_RQCP1_Msk                               ;/*!<Request Completed Mailbox1 */
CAN_TSR_TXOK1_Pos      EQU		9                                            
CAN_TSR_TXOK1_Msk      EQU		0x1 << CAN_TSR_TXOK1_Pos                        ;/*!< 0x00000200 */
CAN_TSR_TXOK1          EQU		CAN_TSR_TXOK1_Msk                               ;/*!<Transmission OK of Mailbox1 */
CAN_TSR_ALST1_Pos      EQU		10                                           
CAN_TSR_ALST1_Msk      EQU		0x1 << CAN_TSR_ALST1_Pos                        ;/*!< 0x00000400 */
CAN_TSR_ALST1          EQU		CAN_TSR_ALST1_Msk                               ;/*!<Arbitration Lost for Mailbox1 */
CAN_TSR_TERR1_Pos      EQU		11                                           
CAN_TSR_TERR1_Msk      EQU		0x1 << CAN_TSR_TERR1_Pos                        ;/*!< 0x00000800 */
CAN_TSR_TERR1          EQU		CAN_TSR_TERR1_Msk                               ;/*!<Transmission Error of Mailbox1 */
CAN_TSR_ABRQ1_Pos      EQU		15                                           
CAN_TSR_ABRQ1_Msk      EQU		0x1 << CAN_TSR_ABRQ1_Pos                        ;/*!< 0x00008000 */
CAN_TSR_ABRQ1          EQU		CAN_TSR_ABRQ1_Msk                               ;/*!<Abort Request for Mailbox 1 */
CAN_TSR_RQCP2_Pos      EQU		16                                           
CAN_TSR_RQCP2_Msk      EQU		0x1 << CAN_TSR_RQCP2_Pos                        ;/*!< 0x00010000 */
CAN_TSR_RQCP2          EQU		CAN_TSR_RQCP2_Msk                               ;/*!<Request Completed Mailbox2 */
CAN_TSR_TXOK2_Pos      EQU		17                                           
CAN_TSR_TXOK2_Msk      EQU		0x1 << CAN_TSR_TXOK2_Pos                        ;/*!< 0x00020000 */
CAN_TSR_TXOK2          EQU		CAN_TSR_TXOK2_Msk                               ;/*!<Transmission OK of Mailbox 2 */
CAN_TSR_ALST2_Pos      EQU		18                                           
CAN_TSR_ALST2_Msk      EQU		0x1 << CAN_TSR_ALST2_Pos                        ;/*!< 0x00040000 */
CAN_TSR_ALST2          EQU		CAN_TSR_ALST2_Msk                               ;/*!<Arbitration Lost for mailbox 2 */
CAN_TSR_TERR2_Pos      EQU		19                                           
CAN_TSR_TERR2_Msk      EQU		0x1 << CAN_TSR_TERR2_Pos                        ;/*!< 0x00080000 */
CAN_TSR_TERR2          EQU		CAN_TSR_TERR2_Msk                               ;/*!<Transmission Error of Mailbox 2 */
CAN_TSR_ABRQ2_Pos      EQU		23                                           
CAN_TSR_ABRQ2_Msk      EQU		0x1 << CAN_TSR_ABRQ2_Pos                        ;/*!< 0x00800000 */
CAN_TSR_ABRQ2          EQU		CAN_TSR_ABRQ2_Msk                               ;/*!<Abort Request for Mailbox 2 */
CAN_TSR_CODE_Pos       EQU		24                                           
CAN_TSR_CODE_Msk       EQU		0x3 << CAN_TSR_CODE_Pos                         ;/*!< 0x03000000 */
CAN_TSR_CODE           EQU		CAN_TSR_CODE_Msk                                ;/*!<Mailbox Code */

CAN_TSR_TME_Pos        EQU		26                                           
CAN_TSR_TME_Msk        EQU		0x7 << CAN_TSR_TME_Pos                          ;/*!< 0x1C000000 */
CAN_TSR_TME            EQU		CAN_TSR_TME_Msk                                 ;/*!<TME[2:0] bits */
CAN_TSR_TME0_Pos       EQU		26                                           
CAN_TSR_TME0_Msk       EQU		0x1 << CAN_TSR_TME0_Pos                         ;/*!< 0x04000000 */
CAN_TSR_TME0           EQU		CAN_TSR_TME0_Msk                                ;/*!<Transmit Mailbox 0 Empty */
CAN_TSR_TME1_Pos       EQU		27                                           
CAN_TSR_TME1_Msk       EQU		0x1 << CAN_TSR_TME1_Pos                         ;/*!< 0x08000000 */
CAN_TSR_TME1           EQU		CAN_TSR_TME1_Msk                                ;/*!<Transmit Mailbox 1 Empty */
CAN_TSR_TME2_Pos       EQU		28                                           
CAN_TSR_TME2_Msk       EQU		0x1 << CAN_TSR_TME2_Pos                         ;/*!< 0x10000000 */
CAN_TSR_TME2           EQU		CAN_TSR_TME2_Msk                                ;/*!<Transmit Mailbox 2 Empty */

CAN_TSR_LOW_Pos        EQU		29                                           
CAN_TSR_LOW_Msk        EQU		0x7 << CAN_TSR_LOW_Pos                          ;/*!< 0xE0000000 */
CAN_TSR_LOW            EQU		CAN_TSR_LOW_Msk                                 ;/*!<LOW[2:0] bits */
CAN_TSR_LOW0_Pos       EQU		29                                           
CAN_TSR_LOW0_Msk       EQU		0x1 << CAN_TSR_LOW0_Pos                         ;/*!< 0x20000000 */
CAN_TSR_LOW0           EQU		CAN_TSR_LOW0_Msk                                ;/*!<Lowest Priority Flag for Mailbox 0 */
CAN_TSR_LOW1_Pos       EQU		30                                           
CAN_TSR_LOW1_Msk       EQU		0x1 << CAN_TSR_LOW1_Pos                         ;/*!< 0x40000000 */
CAN_TSR_LOW1           EQU		CAN_TSR_LOW1_Msk                                ;/*!<Lowest Priority Flag for Mailbox 1 */
CAN_TSR_LOW2_Pos       EQU		31                                           
CAN_TSR_LOW2_Msk       EQU		0x1 << CAN_TSR_LOW2_Pos                         ;/*!< 0x80000000 */
CAN_TSR_LOW2           EQU		CAN_TSR_LOW2_Msk                                ;/*!<Lowest Priority Flag for Mailbox 2 */

CAN_RF0R		       EQU		0x0C
;/*******************  Bit definition for CAN_RF0R register  *******************/
CAN_RF0R_FMP0_Pos      EQU		0                                            
CAN_RF0R_FMP0_Msk      EQU		0x3 << CAN_RF0R_FMP0_Pos                        ;/*!< 0x00000003 */
CAN_RF0R_FMP0          EQU		CAN_RF0R_FMP0_Msk                               ;/*!<FIFO 0 Message Pending */
CAN_RF0R_FULL0_Pos     EQU		3                                            
CAN_RF0R_FULL0_Msk     EQU		0x1 << CAN_RF0R_FULL0_Pos                       ;/*!< 0x00000008 */
CAN_RF0R_FULL0         EQU		CAN_RF0R_FULL0_Msk                              ;/*!<FIFO 0 Full */
CAN_RF0R_FOVR0_Pos     EQU		4                                            
CAN_RF0R_FOVR0_Msk     EQU		0x1 << CAN_RF0R_FOVR0_Pos                       ;/*!< 0x00000010 */
CAN_RF0R_FOVR0         EQU		CAN_RF0R_FOVR0_Msk                              ;/*!<FIFO 0 Overrun */
CAN_RF0R_RFOM0_Pos     EQU		5                                            
CAN_RF0R_RFOM0_Msk     EQU		0x1 << CAN_RF0R_RFOM0_Pos                       ;/*!< 0x00000020 */
CAN_RF0R_RFOM0         EQU		CAN_RF0R_RFOM0_Msk                              ;/*!<Release FIFO 0 Output Mailbox */

CAN_RF1R		       EQU		0x10
;/*******************  Bit definition for CAN_RF1R register  *******************/
CAN_RF1R_FMP1_Pos      EQU		0                                            
CAN_RF1R_FMP1_Msk      EQU		0x3 << CAN_RF1R_FMP1_Pos                        ;/*!< 0x00000003 */
CAN_RF1R_FMP1          EQU		CAN_RF1R_FMP1_Msk                               ;/*!<FIFO 1 Message Pending */
CAN_RF1R_FULL1_Pos     EQU		3                                            
CAN_RF1R_FULL1_Msk     EQU		0x1 << CAN_RF1R_FULL1_Pos                       ;/*!< 0x00000008 */
CAN_RF1R_FULL1         EQU		CAN_RF1R_FULL1_Msk                              ;/*!<FIFO 1 Full */
CAN_RF1R_FOVR1_Pos     EQU		4                                            
CAN_RF1R_FOVR1_Msk     EQU		0x1 << CAN_RF1R_FOVR1_Pos                       ;/*!< 0x00000010 */
CAN_RF1R_FOVR1         EQU		CAN_RF1R_FOVR1_Msk                              ;/*!<FIFO 1 Overrun */
CAN_RF1R_RFOM1_Pos     EQU		5                                            
CAN_RF1R_RFOM1_Msk     EQU		0x1 << CAN_RF1R_RFOM1_Pos                       ;/*!< 0x00000020 */
CAN_RF1R_RFOM1         EQU		CAN_RF1R_RFOM1_Msk                              ;/*!<Release FIFO 1 Output Mailbox */

CAN_IER			       EQU		0x14
;/********************  Bit definition for CAN_IER register  *******************/
CAN_IER_TMEIE_Pos      EQU		0                                            
CAN_IER_TMEIE_Msk      EQU		0x1 << CAN_IER_TMEIE_Pos                        ;/*!< 0x00000001 */
CAN_IER_TMEIE          EQU		CAN_IER_TMEIE_Msk                               ;/*!<Transmit Mailbox Empty Interrupt Enable */
CAN_IER_FMPIE0_Pos     EQU		1                                            
CAN_IER_FMPIE0_Msk     EQU		0x1 << CAN_IER_FMPIE0_Pos                       ;/*!< 0x00000002 */
CAN_IER_FMPIE0         EQU		CAN_IER_FMPIE0_Msk                              ;/*!<FIFO Message Pending Interrupt Enable */
CAN_IER_FFIE0_Pos      EQU		2                                            
CAN_IER_FFIE0_Msk      EQU		0x1 << CAN_IER_FFIE0_Pos                        ;/*!< 0x00000004 */
CAN_IER_FFIE0          EQU		CAN_IER_FFIE0_Msk                               ;/*!<FIFO Full Interrupt Enable */
CAN_IER_FOVIE0_Pos     EQU		3                                            
CAN_IER_FOVIE0_Msk     EQU		0x1 << CAN_IER_FOVIE0_Pos                       ;/*!< 0x00000008 */
CAN_IER_FOVIE0         EQU		CAN_IER_FOVIE0_Msk                              ;/*!<FIFO Overrun Interrupt Enable */
CAN_IER_FMPIE1_Pos     EQU		4                                            
CAN_IER_FMPIE1_Msk     EQU		0x1 << CAN_IER_FMPIE1_Pos                       ;/*!< 0x00000010 */
CAN_IER_FMPIE1         EQU		CAN_IER_FMPIE1_Msk                              ;/*!<FIFO Message Pending Interrupt Enable */
CAN_IER_FFIE1_Pos      EQU		5                                            
CAN_IER_FFIE1_Msk      EQU		0x1 << CAN_IER_FFIE1_Pos                        ;/*!< 0x00000020 */
CAN_IER_FFIE1          EQU		CAN_IER_FFIE1_Msk                               ;/*!<FIFO Full Interrupt Enable */
CAN_IER_FOVIE1_Pos     EQU		6                                            
CAN_IER_FOVIE1_Msk     EQU		0x1 << CAN_IER_FOVIE1_Pos                       ;/*!< 0x00000040 */
CAN_IER_FOVIE1         EQU		CAN_IER_FOVIE1_Msk                              ;/*!<FIFO Overrun Interrupt Enable */
CAN_IER_EWGIE_Pos      EQU		8                                            
CAN_IER_EWGIE_Msk      EQU		0x1 << CAN_IER_EWGIE_Pos                        ;/*!< 0x00000100 */
CAN_IER_EWGIE          EQU		CAN_IER_EWGIE_Msk                               ;/*!<Error Warning Interrupt Enable */
CAN_IER_EPVIE_Pos      EQU		9                                            
CAN_IER_EPVIE_Msk      EQU		0x1 << CAN_IER_EPVIE_Pos                        ;/*!< 0x00000200 */
CAN_IER_EPVIE          EQU		CAN_IER_EPVIE_Msk                               ;/*!<Error Passive Interrupt Enable */
CAN_IER_BOFIE_Pos      EQU		10                                           
CAN_IER_BOFIE_Msk      EQU		0x1 << CAN_IER_BOFIE_Pos                        ;/*!< 0x00000400 */
CAN_IER_BOFIE          EQU		CAN_IER_BOFIE_Msk                               ;/*!<Bus-Off Interrupt Enable */
CAN_IER_LECIE_Pos      EQU		11                                           
CAN_IER_LECIE_Msk      EQU		0x1 << CAN_IER_LECIE_Pos                        ;/*!< 0x00000800 */
CAN_IER_LECIE          EQU		CAN_IER_LECIE_Msk                               ;/*!<Last Error Code Interrupt Enable */
CAN_IER_ERRIE_Pos      EQU		15                                           
CAN_IER_ERRIE_Msk      EQU		0x1 << CAN_IER_ERRIE_Pos                        ;/*!< 0x00008000 */
CAN_IER_ERRIE          EQU		CAN_IER_ERRIE_Msk                               ;/*!<Error Interrupt Enable */
CAN_IER_WKUIE_Pos      EQU		16                                           
CAN_IER_WKUIE_Msk      EQU		0x1 << CAN_IER_WKUIE_Pos                        ;/*!< 0x00010000 */
CAN_IER_WKUIE          EQU		CAN_IER_WKUIE_Msk                               ;/*!<Wakeup Interrupt Enable */
CAN_IER_SLKIE_Pos      EQU		17                                           
CAN_IER_SLKIE_Msk      EQU		0x1 << CAN_IER_SLKIE_Pos                        ;/*!< 0x00020000 */
CAN_IER_SLKIE          EQU		CAN_IER_SLKIE_Msk                               ;/*!<Sleep Interrupt Enable */                                   

CAN_ESR			       EQU		0x18
;/********************  Bit definition for CAN_ESR register  *******************/
CAN_ESR_EWGF_Pos       EQU		0                                            
CAN_ESR_EWGF_Msk       EQU		0x1 << CAN_ESR_EWGF_Pos                         ;/*!< 0x00000001 */
CAN_ESR_EWGF           EQU		CAN_ESR_EWGF_Msk                                ;/*!<Error Warning Flag */
CAN_ESR_EPVF_Pos       EQU		1                                            
CAN_ESR_EPVF_Msk       EQU		0x1 << CAN_ESR_EPVF_Pos                         ;/*!< 0x00000002 */
CAN_ESR_EPVF           EQU		CAN_ESR_EPVF_Msk                                ;/*!<Error Passive Flag */
CAN_ESR_BOFF_Pos       EQU		2                                            
CAN_ESR_BOFF_Msk       EQU		0x1 << CAN_ESR_BOFF_Pos                         ;/*!< 0x00000004 */
CAN_ESR_BOFF           EQU		CAN_ESR_BOFF_Msk                                ;/*!<Bus-Off Flag */

CAN_ESR_LEC_Pos        EQU		4                                            
CAN_ESR_LEC_Msk        EQU		0x7 << CAN_ESR_LEC_Pos                          ;/*!< 0x00000070 */
CAN_ESR_LEC            EQU		CAN_ESR_LEC_Msk                                 ;/*!<LEC[2:0] bits EQU		Last Error Code    */
CAN_ESR_LEC_0          EQU		0x1 << CAN_ESR_LEC_Pos                          ;/*!< 0x00000010 */
CAN_ESR_LEC_1          EQU		0x2 << CAN_ESR_LEC_Pos                          ;/*!< 0x00000020 */
CAN_ESR_LEC_2          EQU		0x4 << CAN_ESR_LEC_Pos                          ;/*!< 0x00000040 */

CAN_ESR_TEC_Pos        EQU		16                                           
CAN_ESR_TEC_Msk        EQU		0xFF << CAN_ESR_TEC_Pos                         ;/*!< 0x00FF0000 */
CAN_ESR_TEC            EQU		CAN_ESR_TEC_Msk                                 ;/*!<Least significant byte of the 9-bit Transmit Error Counter */
CAN_ESR_REC_Pos        EQU		24                                           
CAN_ESR_REC_Msk        EQU		0xFF << CAN_ESR_REC_Pos                         ;/*!< 0xFF000000 */
CAN_ESR_REC            EQU		CAN_ESR_REC_Msk                                 ;/*!<Receive Error Counter */

CAN_BTR		           EQU		0x1C
;/*******************  Bit definition for CAN_BTR register  ********************/
CAN_BTR_BRP_Pos        EQU		0                                            
CAN_BTR_BRP_Msk        EQU		0x3FF << CAN_BTR_BRP_Pos                        ;/*!< 0x000003FF */
CAN_BTR_BRP            EQU		CAN_BTR_BRP_Msk                                 ;/*!<Baud Rate Prescaler */
CAN_BTR_TS1_Pos        EQU		16                                           
CAN_BTR_TS1_Msk        EQU		0xF << CAN_BTR_TS1_Pos                          ;/*!< 0x000F0000 */
CAN_BTR_TS1            EQU		CAN_BTR_TS1_Msk                                 ;/*!<Time Segment 1 */
CAN_BTR_TS1_0          EQU		0x1 << CAN_BTR_TS1_Pos                          ;/*!< 0x00010000 */
CAN_BTR_TS1_1          EQU		0x2 << CAN_BTR_TS1_Pos                          ;/*!< 0x00020000 */
CAN_BTR_TS1_2          EQU		0x4 << CAN_BTR_TS1_Pos                          ;/*!< 0x00040000 */
CAN_BTR_TS1_3          EQU		0x8 << CAN_BTR_TS1_Pos                          ;/*!< 0x00080000 */
CAN_BTR_TS2_Pos        EQU		20                                           
CAN_BTR_TS2_Msk        EQU		0x7 << CAN_BTR_TS2_Pos                          ;/*!< 0x00700000 */
CAN_BTR_TS2            EQU		CAN_BTR_TS2_Msk                                 ;/*!<Time Segment 2 */
CAN_BTR_TS2_0          EQU		0x1 << CAN_BTR_TS2_Pos                          ;/*!< 0x00100000 */
CAN_BTR_TS2_1          EQU		0x2 << CAN_BTR_TS2_Pos                          ;/*!< 0x00200000 */
CAN_BTR_TS2_2          EQU		0x4 << CAN_BTR_TS2_Pos                          ;/*!< 0x00400000 */
CAN_BTR_SJW_Pos        EQU		24                                           
CAN_BTR_SJW_Msk        EQU		0x3 << CAN_BTR_SJW_Pos                          ;/*!< 0x03000000 */
CAN_BTR_SJW            EQU		CAN_BTR_SJW_Msk                                 ;/*!<Resynchronization Jump Width */
CAN_BTR_SJW_0          EQU		0x1 << CAN_BTR_SJW_Pos                          ;/*!< 0x01000000 */
CAN_BTR_SJW_1          EQU		0x2 << CAN_BTR_SJW_Pos                          ;/*!< 0x02000000 */
CAN_BTR_LBKM_Pos       EQU		30                                           
CAN_BTR_LBKM_Msk       EQU		0x1 << CAN_BTR_LBKM_Pos                         ;/*!< 0x40000000 */
CAN_BTR_LBKM           EQU		CAN_BTR_LBKM_Msk                                ;/*!<Loop Back Mode EQU		Debug    */
CAN_BTR_SILM_Pos       EQU		31                                           
CAN_BTR_SILM_Msk       EQU		0x1 << CAN_BTR_SILM_Pos                         ;/*!< 0x80000000 */
CAN_BTR_SILM           EQU		CAN_BTR_SILM_Msk                                ;/*!<Silent Mode */

CAN_TI0R		       EQU		0x180
;/******************  Bit definition for CAN_TI0R register  ********************/
CAN_TI0R_TXRQ_Pos      EQU		0                                            
CAN_TI0R_TXRQ_Msk      EQU		0x1 << CAN_TI0R_TXRQ_Pos                        ;/*!< 0x00000001 */
CAN_TI0R_TXRQ          EQU		CAN_TI0R_TXRQ_Msk                               ;/*!<Transmit Mailbox Request */
CAN_TI0R_RTR_Pos       EQU		1                                            
CAN_TI0R_RTR_Msk       EQU		0x1 << CAN_TI0R_RTR_Pos                         ;/*!< 0x00000002 */
CAN_TI0R_RTR           EQU		CAN_TI0R_RTR_Msk                                ;/*!<Remote Transmission Request */
CAN_TI0R_IDE_Pos       EQU		2                                            
CAN_TI0R_IDE_Msk       EQU		0x1 << CAN_TI0R_IDE_Pos                         ;/*!< 0x00000004 */
CAN_TI0R_IDE           EQU		CAN_TI0R_IDE_Msk                                ;/*!<Identifier Extension */
CAN_TI0R_EXID_Pos      EQU		3                                            
CAN_TI0R_EXID_Msk      EQU		0x3FFFF << CAN_TI0R_EXID_Pos                    ;/*!< 0x001FFFF8 */
CAN_TI0R_EXID          EQU		CAN_TI0R_EXID_Msk                               ;/*!<Extended Identifier */
CAN_TI0R_STID_Pos      EQU		21                                           
CAN_TI0R_STID_Msk      EQU		0x7FF << CAN_TI0R_STID_Pos                      ;/*!< 0xFFE00000 */
CAN_TI0R_STID          EQU		CAN_TI0R_STID_Msk                               ;/*!<Standard Identifier or Extended Identifier */

CAN_TDT0R		       EQU		0x184
;/******************  Bit definition for CAN_TDT0R register  *******************/
CAN_TDT0R_DLC_Pos      EQU		0                                            
CAN_TDT0R_DLC_Msk      EQU		0xF << CAN_TDT0R_DLC_Pos                        ;/*!< 0x0000000F */
CAN_TDT0R_DLC          EQU		CAN_TDT0R_DLC_Msk                               ;/*!<Data Length Code */
CAN_TDT0R_TGT_Pos      EQU		8                                            
CAN_TDT0R_TGT_Msk      EQU		0x1 << CAN_TDT0R_TGT_Pos                        ;/*!< 0x00000100 */
CAN_TDT0R_TGT          EQU		CAN_TDT0R_TGT_Msk                               ;/*!<Transmit Global Time */
CAN_TDT0R_TIME_Pos     EQU		16                                           
CAN_TDT0R_TIME_Msk     EQU		0xFFFF << CAN_TDT0R_TIME_Pos                    ;/*!< 0xFFFF0000 */
CAN_TDT0R_TIME         EQU		CAN_TDT0R_TIME_Msk                              ;/*!<Message Time Stamp */

CAN_TDL0R		       EQU		0x188
;/******************  Bit definition for CAN_TDL0R register  *******************/
CAN_TDL0R_DATA0_Pos    EQU		0                                            
CAN_TDL0R_DATA0_Msk    EQU		0xFF << CAN_TDL0R_DATA0_Pos                     ;/*!< 0x000000FF */
CAN_TDL0R_DATA0        EQU		CAN_TDL0R_DATA0_Msk                             ;/*!<Data byte 0 */
CAN_TDL0R_DATA1_Pos    EQU		8                                            
CAN_TDL0R_DATA1_Msk    EQU		0xFF << CAN_TDL0R_DATA1_Pos                     ;/*!< 0x0000FF00 */
CAN_TDL0R_DATA1        EQU		CAN_TDL0R_DATA1_Msk                             ;/*!<Data byte 1 */
CAN_TDL0R_DATA2_Pos    EQU		16                                           
CAN_TDL0R_DATA2_Msk    EQU		0xFF << CAN_TDL0R_DATA2_Pos                     ;/*!< 0x00FF0000 */
CAN_TDL0R_DATA2        EQU		CAN_TDL0R_DATA2_Msk                             ;/*!<Data byte 2 */
CAN_TDL0R_DATA3_Pos    EQU		24                                           
CAN_TDL0R_DATA3_Msk    EQU		0xFF << CAN_TDL0R_DATA3_Pos                     ;/*!< 0xFF000000 */
CAN_TDL0R_DATA3        EQU		CAN_TDL0R_DATA3_Msk                             ;/*!<Data byte 3 */

CAN_TDH0R		       EQU		0x18C
;/******************  Bit definition for CAN_TDH0R register  *******************/
CAN_TDH0R_DATA4_Pos    EQU		0                                            
CAN_TDH0R_DATA4_Msk    EQU		0xFF << CAN_TDH0R_DATA4_Pos                     ;/*!< 0x000000FF */
CAN_TDH0R_DATA4        EQU		CAN_TDH0R_DATA4_Msk                             ;/*!<Data byte 4 */
CAN_TDH0R_DATA5_Pos    EQU		8                                            
CAN_TDH0R_DATA5_Msk    EQU		0xFF << CAN_TDH0R_DATA5_Pos                     ;/*!< 0x0000FF00 */
CAN_TDH0R_DATA5        EQU		CAN_TDH0R_DATA5_Msk                             ;/*!<Data byte 5 */
CAN_TDH0R_DATA6_Pos    EQU		16                                           
CAN_TDH0R_DATA6_Msk    EQU		0xFF << CAN_TDH0R_DATA6_Pos                     ;/*!< 0x00FF0000 */
CAN_TDH0R_DATA6        EQU		CAN_TDH0R_DATA6_Msk                             ;/*!<Data byte 6 */
CAN_TDH0R_DATA7_Pos    EQU		24                                           
CAN_TDH0R_DATA7_Msk    EQU		0xFF << CAN_TDH0R_DATA7_Pos                     ;/*!< 0xFF000000 */
CAN_TDH0R_DATA7        EQU		CAN_TDH0R_DATA7_Msk                             ;/*!<Data byte 7 */

CAN_TI1R		       EQU		0x190
;/*******************  Bit definition for CAN_TI1R register  *******************/
CAN_TI1R_TXRQ_Pos      EQU		0                                            
CAN_TI1R_TXRQ_Msk      EQU		0x1 << CAN_TI1R_TXRQ_Pos                        ;/*!< 0x00000001 */
CAN_TI1R_TXRQ          EQU		CAN_TI1R_TXRQ_Msk                               ;/*!<Transmit Mailbox Request */
CAN_TI1R_RTR_Pos       EQU		1                                            
CAN_TI1R_RTR_Msk       EQU		0x1 << CAN_TI1R_RTR_Pos                         ;/*!< 0x00000002 */
CAN_TI1R_RTR           EQU		CAN_TI1R_RTR_Msk                                ;/*!<Remote Transmission Request */
CAN_TI1R_IDE_Pos       EQU		2                                            
CAN_TI1R_IDE_Msk       EQU		0x1 << CAN_TI1R_IDE_Pos                         ;/*!< 0x00000004 */
CAN_TI1R_IDE           EQU		CAN_TI1R_IDE_Msk                                ;/*!<Identifier Extension */
CAN_TI1R_EXID_Pos      EQU		3                                            
CAN_TI1R_EXID_Msk      EQU		0x3FFFF << CAN_TI1R_EXID_Pos                    ;/*!< 0x001FFFF8 */
CAN_TI1R_EXID          EQU		CAN_TI1R_EXID_Msk                               ;/*!<Extended Identifier */
CAN_TI1R_STID_Pos      EQU		21                                           
CAN_TI1R_STID_Msk      EQU		0x7FF << CAN_TI1R_STID_Pos                      ;/*!< 0xFFE00000 */
CAN_TI1R_STID          EQU		CAN_TI1R_STID_Msk                               ;/*!<Standard Identifier or Extended Identifier */

CAN_TDT1R		       EQU		0x194
;/*******************  Bit definition for CAN_TDT1R register  ******************/
CAN_TDT1R_DLC_Pos      EQU		0                                            
CAN_TDT1R_DLC_Msk      EQU		0xF << CAN_TDT1R_DLC_Pos                        ;/*!< 0x0000000F */
CAN_TDT1R_DLC          EQU		CAN_TDT1R_DLC_Msk                               ;/*!<Data Length Code */
CAN_TDT1R_TGT_Pos      EQU		8                                            
CAN_TDT1R_TGT_Msk      EQU		0x1 << CAN_TDT1R_TGT_Pos                        ;/*!< 0x00000100 */
CAN_TDT1R_TGT          EQU		CAN_TDT1R_TGT_Msk                               ;/*!<Transmit Global Time */
CAN_TDT1R_TIME_Pos     EQU		16                                           
CAN_TDT1R_TIME_Msk     EQU		0xFFFF << CAN_TDT1R_TIME_Pos                    ;/*!< 0xFFFF0000 */
CAN_TDT1R_TIME         EQU		CAN_TDT1R_TIME_Msk                              ;/*!<Message Time Stamp */

CAN_TDL1R			   EQU		0x198
;/*******************  Bit definition for CAN_TDL1R register  ******************/
CAN_TDL1R_DATA0_Pos    EQU		0                                            
CAN_TDL1R_DATA0_Msk    EQU		0xFF << CAN_TDL1R_DATA0_Pos                     ;/*!< 0x000000FF */
CAN_TDL1R_DATA0        EQU		CAN_TDL1R_DATA0_Msk                             ;/*!<Data byte 0 */
CAN_TDL1R_DATA1_Pos    EQU		8                                            
CAN_TDL1R_DATA1_Msk    EQU		0xFF << CAN_TDL1R_DATA1_Pos                     ;/*!< 0x0000FF00 */
CAN_TDL1R_DATA1        EQU		CAN_TDL1R_DATA1_Msk                             ;/*!<Data byte 1 */
CAN_TDL1R_DATA2_Pos    EQU		16                                           
CAN_TDL1R_DATA2_Msk    EQU		0xFF << CAN_TDL1R_DATA2_Pos                     ;/*!< 0x00FF0000 */
CAN_TDL1R_DATA2        EQU		CAN_TDL1R_DATA2_Msk                             ;/*!<Data byte 2 */
CAN_TDL1R_DATA3_Pos    EQU		24                                           
CAN_TDL1R_DATA3_Msk    EQU		0xFF << CAN_TDL1R_DATA3_Pos                     ;/*!< 0xFF000000 */
CAN_TDL1R_DATA3        EQU		CAN_TDL1R_DATA3_Msk                             ;/*!<Data byte 3 */

CAN_TDH1R		       EQU		0x19C
;/*******************  Bit definition for CAN_TDH1R register  ******************/
CAN_TDH1R_DATA4_Pos    EQU		0                                            
CAN_TDH1R_DATA4_Msk    EQU		0xFF << CAN_TDH1R_DATA4_Pos                     ;/*!< 0x000000FF */
CAN_TDH1R_DATA4        EQU		CAN_TDH1R_DATA4_Msk                             ;/*!<Data byte 4 */
CAN_TDH1R_DATA5_Pos    EQU		8                                            
CAN_TDH1R_DATA5_Msk    EQU		0xFF << CAN_TDH1R_DATA5_Pos                     ;/*!< 0x0000FF00 */
CAN_TDH1R_DATA5        EQU		CAN_TDH1R_DATA5_Msk                             ;/*!<Data byte 5 */
CAN_TDH1R_DATA6_Pos    EQU		16                                           
CAN_TDH1R_DATA6_Msk    EQU		0xFF << CAN_TDH1R_DATA6_Pos                     ;/*!< 0x00FF0000 */
CAN_TDH1R_DATA6        EQU		CAN_TDH1R_DATA6_Msk                             ;/*!<Data byte 6 */
CAN_TDH1R_DATA7_Pos    EQU		24                                           
CAN_TDH1R_DATA7_Msk    EQU		0xFF << CAN_TDH1R_DATA7_Pos                     ;/*!< 0xFF000000 */
CAN_TDH1R_DATA7        EQU		CAN_TDH1R_DATA7_Msk                             ;/*!<Data byte 7 */

CAN_TI2R		       EQU		0x1A0
;/*******************  Bit definition for CAN_TI2R register  *******************/
CAN_TI2R_TXRQ_Pos      EQU		0                                            
CAN_TI2R_TXRQ_Msk      EQU		0x1 << CAN_TI2R_TXRQ_Pos                        ;/*!< 0x00000001 */
CAN_TI2R_TXRQ          EQU		CAN_TI2R_TXRQ_Msk                               ;/*!<Transmit Mailbox Request */
CAN_TI2R_RTR_Pos       EQU		1                                            
CAN_TI2R_RTR_Msk       EQU		0x1 << CAN_TI2R_RTR_Pos                         ;/*!< 0x00000002 */
CAN_TI2R_RTR           EQU		CAN_TI2R_RTR_Msk                                ;/*!<Remote Transmission Request */
CAN_TI2R_IDE_Pos       EQU		2                                            
CAN_TI2R_IDE_Msk       EQU		0x1 << CAN_TI2R_IDE_Pos                         ;/*!< 0x00000004 */
CAN_TI2R_IDE           EQU		CAN_TI2R_IDE_Msk                                ;/*!<Identifier Extension */
CAN_TI2R_EXID_Pos      EQU		3                                            
CAN_TI2R_EXID_Msk      EQU		0x3FFFF << CAN_TI2R_EXID_Pos                    ;/*!< 0x001FFFF8 */
CAN_TI2R_EXID          EQU		CAN_TI2R_EXID_Msk                               ;/*!<Extended identifier */
CAN_TI2R_STID_Pos      EQU		21                                           
CAN_TI2R_STID_Msk      EQU		0x7FF << CAN_TI2R_STID_Pos                      ;/*!< 0xFFE00000 */
CAN_TI2R_STID          EQU		CAN_TI2R_STID_Msk                               ;/*!<Standard Identifier or Extended Identifier */

CAN_TDT2R			   EQU		0x1A4
;/*******************  Bit definition for CAN_TDT2R register  ******************/  
CAN_TDT2R_DLC_Pos      EQU		0                                            
CAN_TDT2R_DLC_Msk      EQU		0xF << CAN_TDT2R_DLC_Pos                        ;/*!< 0x0000000F */
CAN_TDT2R_DLC          EQU		CAN_TDT2R_DLC_Msk                               ;/*!<Data Length Code */
CAN_TDT2R_TGT_Pos      EQU		8                                            
CAN_TDT2R_TGT_Msk      EQU		0x1 << CAN_TDT2R_TGT_Pos                        ;/*!< 0x00000100 */
CAN_TDT2R_TGT          EQU		CAN_TDT2R_TGT_Msk                               ;/*!<Transmit Global Time */
CAN_TDT2R_TIME_Pos     EQU		16                                           
CAN_TDT2R_TIME_Msk     EQU		0xFFFF << CAN_TDT2R_TIME_Pos                    ;/*!< 0xFFFF0000 */
CAN_TDT2R_TIME         EQU		CAN_TDT2R_TIME_Msk                              ;/*!<Message Time Stamp */

CAN_TDL2R			   EQU		0x1A8
;/*******************  Bit definition for CAN_TDL2R register  ******************/
CAN_TDL2R_DATA0_Pos    EQU		0                                            
CAN_TDL2R_DATA0_Msk    EQU		0xFF << CAN_TDL2R_DATA0_Pos                     ;/*!< 0x000000FF */
CAN_TDL2R_DATA0        EQU		CAN_TDL2R_DATA0_Msk                             ;/*!<Data byte 0 */
CAN_TDL2R_DATA1_Pos    EQU		8                                            
CAN_TDL2R_DATA1_Msk    EQU		0xFF << CAN_TDL2R_DATA1_Pos                     ;/*!< 0x0000FF00 */
CAN_TDL2R_DATA1        EQU		CAN_TDL2R_DATA1_Msk                             ;/*!<Data byte 1 */
CAN_TDL2R_DATA2_Pos    EQU		16                                           
CAN_TDL2R_DATA2_Msk    EQU		0xFF << CAN_TDL2R_DATA2_Pos                     ;/*!< 0x00FF0000 */
CAN_TDL2R_DATA2        EQU		CAN_TDL2R_DATA2_Msk                             ;/*!<Data byte 2 */
CAN_TDL2R_DATA3_Pos    EQU		24                                           
CAN_TDL2R_DATA3_Msk    EQU		0xFF << CAN_TDL2R_DATA3_Pos                     ;/*!< 0xFF000000 */
CAN_TDL2R_DATA3        EQU		CAN_TDL2R_DATA3_Msk                             ;/*!<Data byte 3 */

CAN_TDH2R			   EQU		0x1AC
;/*******************  Bit definition for CAN_TDH2R register  ******************/
CAN_TDH2R_DATA4_Pos    EQU		0                                            
CAN_TDH2R_DATA4_Msk    EQU		0xFF << CAN_TDH2R_DATA4_Pos                     ;/*!< 0x000000FF */
CAN_TDH2R_DATA4        EQU		CAN_TDH2R_DATA4_Msk                             ;/*!<Data byte 4 */
CAN_TDH2R_DATA5_Pos    EQU		8                                            
CAN_TDH2R_DATA5_Msk    EQU		0xFF << CAN_TDH2R_DATA5_Pos                     ;/*!< 0x0000FF00 */
CAN_TDH2R_DATA5        EQU		CAN_TDH2R_DATA5_Msk                             ;/*!<Data byte 5 */
CAN_TDH2R_DATA6_Pos    EQU		16                                           
CAN_TDH2R_DATA6_Msk    EQU		0xFF << CAN_TDH2R_DATA6_Pos                     ;/*!< 0x00FF0000 */
CAN_TDH2R_DATA6        EQU		CAN_TDH2R_DATA6_Msk                             ;/*!<Data byte 6 */
CAN_TDH2R_DATA7_Pos    EQU		24                                           
CAN_TDH2R_DATA7_Msk    EQU		0xFF << CAN_TDH2R_DATA7_Pos                     ;/*!< 0xFF000000 */
CAN_TDH2R_DATA7        EQU		CAN_TDH2R_DATA7_Msk                             ;/*!<Data byte 7 */

CAN_RI0R		       EQU		0x1B0
;/*******************  Bit definition for CAN_RI0R register  *******************/
CAN_RI0R_RTR_Pos       EQU		1                                            
CAN_RI0R_RTR_Msk       EQU		0x1 << CAN_RI0R_RTR_Pos                         ;/*!< 0x00000002 */
CAN_RI0R_RTR           EQU		CAN_RI0R_RTR_Msk                                ;/*!<Remote Transmission Request */
CAN_RI0R_IDE_Pos       EQU		2                                            
CAN_RI0R_IDE_Msk       EQU		0x1 << CAN_RI0R_IDE_Pos                         ;/*!< 0x00000004 */
CAN_RI0R_IDE           EQU		CAN_RI0R_IDE_Msk                                ;/*!<Identifier Extension */
CAN_RI0R_EXID_Pos      EQU		3                                            
CAN_RI0R_EXID_Msk      EQU		0x3FFFF << CAN_RI0R_EXID_Pos                    ;/*!< 0x001FFFF8 */
CAN_RI0R_EXID          EQU		CAN_RI0R_EXID_Msk                               ;/*!<Extended Identifier */
CAN_RI0R_STID_Pos      EQU		21                                           
CAN_RI0R_STID_Msk      EQU		0x7FF << CAN_RI0R_STID_Pos                      ;/*!< 0xFFE00000 */
CAN_RI0R_STID          EQU		CAN_RI0R_STID_Msk                               ;/*!<Standard Identifier or Extended Identifier */

CAN_RDT0R		       EQU		0x1B4
;/*******************  Bit definition for CAN_RDT0R register  ******************/
CAN_RDT0R_DLC_Pos      EQU		0                                            
CAN_RDT0R_DLC_Msk      EQU		0xF << CAN_RDT0R_DLC_Pos                        ;/*!< 0x0000000F */
CAN_RDT0R_DLC          EQU		CAN_RDT0R_DLC_Msk                               ;/*!<Data Length Code */
CAN_RDT0R_FMI_Pos      EQU		8                                            
CAN_RDT0R_FMI_Msk      EQU		0xFF << CAN_RDT0R_FMI_Pos                       ;/*!< 0x0000FF00 */
CAN_RDT0R_FMI          EQU		CAN_RDT0R_FMI_Msk                               ;/*!<Filter Match Index */
CAN_RDT0R_TIME_Pos     EQU		16                                           
CAN_RDT0R_TIME_Msk     EQU		0xFFFF << CAN_RDT0R_TIME_Pos                    ;/*!< 0xFFFF0000 */
CAN_RDT0R_TIME         EQU		CAN_RDT0R_TIME_Msk                              ;/*!<Message Time Stamp */

CAN_RDL0R			   EQU		0x1B8
;/*******************  Bit definition for CAN_RDL0R register  ******************/
CAN_RDL0R_DATA0_Pos    EQU		0                                            
CAN_RDL0R_DATA0_Msk    EQU		0xFF << CAN_RDL0R_DATA0_Pos                     ;/*!< 0x000000FF */
CAN_RDL0R_DATA0        EQU		CAN_RDL0R_DATA0_Msk                             ;/*!<Data byte 0 */
CAN_RDL0R_DATA1_Pos    EQU		8                                            
CAN_RDL0R_DATA1_Msk    EQU		0xFF << CAN_RDL0R_DATA1_Pos                     ;/*!< 0x0000FF00 */
CAN_RDL0R_DATA1        EQU		CAN_RDL0R_DATA1_Msk                             ;/*!<Data byte 1 */
CAN_RDL0R_DATA2_Pos    EQU		16                                           
CAN_RDL0R_DATA2_Msk    EQU		0xFF << CAN_RDL0R_DATA2_Pos                     ;/*!< 0x00FF0000 */
CAN_RDL0R_DATA2        EQU		CAN_RDL0R_DATA2_Msk                             ;/*!<Data byte 2 */
CAN_RDL0R_DATA3_Pos    EQU		24                                           
CAN_RDL0R_DATA3_Msk    EQU		0xFF << CAN_RDL0R_DATA3_Pos                     ;/*!< 0xFF000000 */
CAN_RDL0R_DATA3        EQU		CAN_RDL0R_DATA3_Msk                             ;/*!<Data byte 3 */

CAN_RDH0R			   EQU		0x1BC
;/*******************  Bit definition for CAN_RDH0R register  ******************/
CAN_RDH0R_DATA4_Pos    EQU		0                                            
CAN_RDH0R_DATA4_Msk    EQU		0xFF << CAN_RDH0R_DATA4_Pos                     ;/*!< 0x000000FF */
CAN_RDH0R_DATA4        EQU		CAN_RDH0R_DATA4_Msk                             ;/*!<Data byte 4 */
CAN_RDH0R_DATA5_Pos    EQU		8                                            
CAN_RDH0R_DATA5_Msk    EQU		0xFF << CAN_RDH0R_DATA5_Pos                     ;/*!< 0x0000FF00 */
CAN_RDH0R_DATA5        EQU		CAN_RDH0R_DATA5_Msk                             ;/*!<Data byte 5 */
CAN_RDH0R_DATA6_Pos    EQU		16                                           
CAN_RDH0R_DATA6_Msk    EQU		0xFF << CAN_RDH0R_DATA6_Pos                     ;/*!< 0x00FF0000 */
CAN_RDH0R_DATA6        EQU		CAN_RDH0R_DATA6_Msk                             ;/*!<Data byte 6 */
CAN_RDH0R_DATA7_Pos    EQU		24                                           
CAN_RDH0R_DATA7_Msk    EQU		0xFF << CAN_RDH0R_DATA7_Pos                     ;/*!< 0xFF000000 */
CAN_RDH0R_DATA7        EQU		CAN_RDH0R_DATA7_Msk                             ;/*!<Data byte 7 */

CAN_RI1R		       EQU		0x1C0
;/*******************  Bit definition for CAN_RI1R register  *******************/
CAN_RI1R_RTR_Pos       EQU		1                                            
CAN_RI1R_RTR_Msk       EQU		0x1 << CAN_RI1R_RTR_Pos                         ;/*!< 0x00000002 */
CAN_RI1R_RTR           EQU		CAN_RI1R_RTR_Msk                                ;/*!<Remote Transmission Request */
CAN_RI1R_IDE_Pos       EQU		2                                            
CAN_RI1R_IDE_Msk       EQU		0x1 << CAN_RI1R_IDE_Pos                         ;/*!< 0x00000004 */
CAN_RI1R_IDE           EQU		CAN_RI1R_IDE_Msk                                ;/*!<Identifier Extension */
CAN_RI1R_EXID_Pos      EQU		3                                            
CAN_RI1R_EXID_Msk      EQU		0x3FFFF << CAN_RI1R_EXID_Pos                    ;/*!< 0x001FFFF8 */
CAN_RI1R_EXID          EQU		CAN_RI1R_EXID_Msk                               ;/*!<Extended identifier */
CAN_RI1R_STID_Pos      EQU		21                                           
CAN_RI1R_STID_Msk      EQU		0x7FF << CAN_RI1R_STID_Pos                      ;/*!< 0xFFE00000 */
CAN_RI1R_STID          EQU		CAN_RI1R_STID_Msk                               ;/*!<Standard Identifier or Extended Identifier */

CAN_RDT1R		       EQU		0x1C4
;/*******************  Bit definition for CAN_RDT1R register  ******************/
CAN_RDT1R_DLC_Pos      EQU		0                                            
CAN_RDT1R_DLC_Msk      EQU		0xF << CAN_RDT1R_DLC_Pos                        ;/*!< 0x0000000F */
CAN_RDT1R_DLC          EQU		CAN_RDT1R_DLC_Msk                               ;/*!<Data Length Code */
CAN_RDT1R_FMI_Pos      EQU		8                                            
CAN_RDT1R_FMI_Msk      EQU		0xFF << CAN_RDT1R_FMI_Pos                       ;/*!< 0x0000FF00 */
CAN_RDT1R_FMI          EQU		CAN_RDT1R_FMI_Msk                               ;/*!<Filter Match Index */
CAN_RDT1R_TIME_Pos     EQU		16                                           
CAN_RDT1R_TIME_Msk     EQU		0xFFFF << CAN_RDT1R_TIME_Pos                    ;/*!< 0xFFFF0000 */
CAN_RDT1R_TIME         EQU		CAN_RDT1R_TIME_Msk                              ;/*!<Message Time Stamp */

CAN_RDL1R			   EQU		0x1C8
;/*******************  Bit definition for CAN_RDL1R register  ******************/
CAN_RDL1R_DATA0_Pos    EQU		0                                            
CAN_RDL1R_DATA0_Msk    EQU		0xFF << CAN_RDL1R_DATA0_Pos                     ;/*!< 0x000000FF */
CAN_RDL1R_DATA0        EQU		CAN_RDL1R_DATA0_Msk                             ;/*!<Data byte 0 */
CAN_RDL1R_DATA1_Pos    EQU		8                                            
CAN_RDL1R_DATA1_Msk    EQU		0xFF << CAN_RDL1R_DATA1_Pos                     ;/*!< 0x0000FF00 */
CAN_RDL1R_DATA1        EQU		CAN_RDL1R_DATA1_Msk                             ;/*!<Data byte 1 */
CAN_RDL1R_DATA2_Pos    EQU		16                                           
CAN_RDL1R_DATA2_Msk    EQU		0xFF << CAN_RDL1R_DATA2_Pos                     ;/*!< 0x00FF0000 */
CAN_RDL1R_DATA2        EQU		CAN_RDL1R_DATA2_Msk                             ;/*!<Data byte 2 */
CAN_RDL1R_DATA3_Pos    EQU		24                                           
CAN_RDL1R_DATA3_Msk    EQU		0xFF << CAN_RDL1R_DATA3_Pos                     ;/*!< 0xFF000000 */
CAN_RDL1R_DATA3        EQU		CAN_RDL1R_DATA3_Msk                             ;/*!<Data byte 3 */

CAN_RDH1R			   EQU		0x1CC
;/*******************  Bit definition for CAN_RDH1R register  ******************/
CAN_RDH1R_DATA4_Pos    EQU		0                                            
CAN_RDH1R_DATA4_Msk    EQU		0xFF << CAN_RDH1R_DATA4_Pos                     ;/*!< 0x000000FF */
CAN_RDH1R_DATA4        EQU		CAN_RDH1R_DATA4_Msk                             ;/*!<Data byte 4 */
CAN_RDH1R_DATA5_Pos    EQU		8                                            
CAN_RDH1R_DATA5_Msk    EQU		0xFF << CAN_RDH1R_DATA5_Pos                     ;/*!< 0x0000FF00 */
CAN_RDH1R_DATA5        EQU		CAN_RDH1R_DATA5_Msk                             ;/*!<Data byte 5 */
CAN_RDH1R_DATA6_Pos    EQU		16                                           
CAN_RDH1R_DATA6_Msk    EQU		0xFF << CAN_RDH1R_DATA6_Pos                     ;/*!< 0x00FF0000 */
CAN_RDH1R_DATA6        EQU		CAN_RDH1R_DATA6_Msk                             ;/*!<Data byte 6 */
CAN_RDH1R_DATA7_Pos    EQU		24                                           
CAN_RDH1R_DATA7_Msk    EQU		0xFF << CAN_RDH1R_DATA7_Pos                     ;/*!< 0xFF000000 */
CAN_RDH1R_DATA7        EQU		CAN_RDH1R_DATA7_Msk                             ;/*!<Data byte 7 */

CAN_FMR			       EQU		0x200
;/*******************  Bit definition for CAN_FMR register  ********************/
CAN_FMR_FINIT_Pos      EQU		0                                            
CAN_FMR_FINIT_Msk      EQU		0x1 << CAN_FMR_FINIT_Pos                        ;/*!< 0x00000001 */
CAN_FMR_FINIT          EQU		CAN_FMR_FINIT_Msk                               ;/*!<Filter Init Mode */
CAN_FMR_CAN2SB_Pos     EQU		8                                            
CAN_FMR_CAN2SB_Msk     EQU		0x3F << CAN_FMR_CAN2SB_Pos                      ;/*!< 0x00003F00 */
CAN_FMR_CAN2SB         EQU		CAN_FMR_CAN2SB_Msk                              ;/*!<CAN2 start bank */

CAN_FM1R		       EQU		0x204
;/*******************  Bit definition for CAN_FM1R register  *******************/
CAN_FM1R_FBM_Pos       EQU		0                                            
CAN_FM1R_FBM_Msk       EQU		0xFFFFFFF << CAN_FM1R_FBM_Pos                   ;/*!< 0x0FFFFFFF */
CAN_FM1R_FBM           EQU		CAN_FM1R_FBM_Msk                                ;/*!<Filter Mode */
CAN_FM1R_FBM0_Pos      EQU		0                                            
CAN_FM1R_FBM0_Msk      EQU		0x1 << CAN_FM1R_FBM0_Pos                        ;/*!< 0x00000001 */
CAN_FM1R_FBM0          EQU		CAN_FM1R_FBM0_Msk                               ;/*!<Filter Init Mode bit 0 */
CAN_FM1R_FBM1_Pos      EQU		1                                            
CAN_FM1R_FBM1_Msk      EQU		0x1 << CAN_FM1R_FBM1_Pos                        ;/*!< 0x00000002 */
CAN_FM1R_FBM1          EQU		CAN_FM1R_FBM1_Msk                               ;/*!<Filter Init Mode bit 1 */
CAN_FM1R_FBM2_Pos      EQU		2                                            
CAN_FM1R_FBM2_Msk      EQU		0x1 << CAN_FM1R_FBM2_Pos                        ;/*!< 0x00000004 */
CAN_FM1R_FBM2          EQU		CAN_FM1R_FBM2_Msk                               ;/*!<Filter Init Mode bit 2 */
CAN_FM1R_FBM3_Pos      EQU		3                                            
CAN_FM1R_FBM3_Msk      EQU		0x1 << CAN_FM1R_FBM3_Pos                        ;/*!< 0x00000008 */
CAN_FM1R_FBM3          EQU		CAN_FM1R_FBM3_Msk                               ;/*!<Filter Init Mode bit 3 */
CAN_FM1R_FBM4_Pos      EQU		4                                            
CAN_FM1R_FBM4_Msk      EQU		0x1 << CAN_FM1R_FBM4_Pos                        ;/*!< 0x00000010 */
CAN_FM1R_FBM4          EQU		CAN_FM1R_FBM4_Msk                               ;/*!<Filter Init Mode bit 4 */
CAN_FM1R_FBM5_Pos      EQU		5                                            
CAN_FM1R_FBM5_Msk      EQU		0x1 << CAN_FM1R_FBM5_Pos                        ;/*!< 0x00000020 */
CAN_FM1R_FBM5          EQU		CAN_FM1R_FBM5_Msk                               ;/*!<Filter Init Mode bit 5 */
CAN_FM1R_FBM6_Pos      EQU		6                                            
CAN_FM1R_FBM6_Msk      EQU		0x1 << CAN_FM1R_FBM6_Pos                        ;/*!< 0x00000040 */
CAN_FM1R_FBM6          EQU		CAN_FM1R_FBM6_Msk                               ;/*!<Filter Init Mode bit 6 */
CAN_FM1R_FBM7_Pos      EQU		7                                            
CAN_FM1R_FBM7_Msk      EQU		0x1 << CAN_FM1R_FBM7_Pos                        ;/*!< 0x00000080 */
CAN_FM1R_FBM7          EQU		CAN_FM1R_FBM7_Msk                               ;/*!<Filter Init Mode bit 7 */
CAN_FM1R_FBM8_Pos      EQU		8                                            
CAN_FM1R_FBM8_Msk      EQU		0x1 << CAN_FM1R_FBM8_Pos                        ;/*!< 0x00000100 */
CAN_FM1R_FBM8          EQU		CAN_FM1R_FBM8_Msk                               ;/*!<Filter Init Mode bit 8 */
CAN_FM1R_FBM9_Pos      EQU		9                                            
CAN_FM1R_FBM9_Msk      EQU		0x1 << CAN_FM1R_FBM9_Pos                        ;/*!< 0x00000200 */
CAN_FM1R_FBM9          EQU		CAN_FM1R_FBM9_Msk                               ;/*!<Filter Init Mode bit 9 */
CAN_FM1R_FBM10_Pos     EQU		10                                           
CAN_FM1R_FBM10_Msk     EQU		0x1 << CAN_FM1R_FBM10_Pos                       ;/*!< 0x00000400 */
CAN_FM1R_FBM10         EQU		CAN_FM1R_FBM10_Msk                              ;/*!<Filter Init Mode bit 10 */
CAN_FM1R_FBM11_Pos     EQU		11                                           
CAN_FM1R_FBM11_Msk     EQU		0x1 << CAN_FM1R_FBM11_Pos                       ;/*!< 0x00000800 */
CAN_FM1R_FBM11         EQU		CAN_FM1R_FBM11_Msk                              ;/*!<Filter Init Mode bit 11 */
CAN_FM1R_FBM12_Pos     EQU		12                                           
CAN_FM1R_FBM12_Msk     EQU		0x1 << CAN_FM1R_FBM12_Pos                       ;/*!< 0x00001000 */
CAN_FM1R_FBM12         EQU		CAN_FM1R_FBM12_Msk                              ;/*!<Filter Init Mode bit 12 */
CAN_FM1R_FBM13_Pos     EQU		13                                           
CAN_FM1R_FBM13_Msk     EQU		0x1 << CAN_FM1R_FBM13_Pos                       ;/*!< 0x00002000 */
CAN_FM1R_FBM13         EQU		CAN_FM1R_FBM13_Msk                              ;/*!<Filter Init Mode bit 13 */
CAN_FM1R_FBM14_Pos     EQU		14                                           
CAN_FM1R_FBM14_Msk     EQU		0x1 << CAN_FM1R_FBM14_Pos                       ;/*!< 0x00004000 */
CAN_FM1R_FBM14         EQU		CAN_FM1R_FBM14_Msk                              ;/*!<Filter Init Mode bit 14 */
CAN_FM1R_FBM15_Pos     EQU		15                                           
CAN_FM1R_FBM15_Msk     EQU		0x1 << CAN_FM1R_FBM15_Pos                       ;/*!< 0x00008000 */
CAN_FM1R_FBM15         EQU		CAN_FM1R_FBM15_Msk                              ;/*!<Filter Init Mode bit 15 */
CAN_FM1R_FBM16_Pos     EQU		16                                           
CAN_FM1R_FBM16_Msk     EQU		0x1 << CAN_FM1R_FBM16_Pos                       ;/*!< 0x00010000 */
CAN_FM1R_FBM16         EQU		CAN_FM1R_FBM16_Msk                              ;/*!<Filter Init Mode bit 16 */
CAN_FM1R_FBM17_Pos     EQU		17                                           
CAN_FM1R_FBM17_Msk     EQU		0x1 << CAN_FM1R_FBM17_Pos                       ;/*!< 0x00020000 */
CAN_FM1R_FBM17         EQU		CAN_FM1R_FBM17_Msk                              ;/*!<Filter Init Mode bit 17 */
CAN_FM1R_FBM18_Pos     EQU		18                                           
CAN_FM1R_FBM18_Msk     EQU		0x1 << CAN_FM1R_FBM18_Pos                       ;/*!< 0x00040000 */
CAN_FM1R_FBM18         EQU		CAN_FM1R_FBM18_Msk                              ;/*!<Filter Init Mode bit 18 */
CAN_FM1R_FBM19_Pos     EQU		19                                           
CAN_FM1R_FBM19_Msk     EQU		0x1 << CAN_FM1R_FBM19_Pos                       ;/*!< 0x00080000 */
CAN_FM1R_FBM19         EQU		CAN_FM1R_FBM19_Msk                              ;/*!<Filter Init Mode bit 19 */
CAN_FM1R_FBM20_Pos     EQU		20                                           
CAN_FM1R_FBM20_Msk     EQU		0x1 << CAN_FM1R_FBM20_Pos                       ;/*!< 0x00100000 */
CAN_FM1R_FBM20         EQU		CAN_FM1R_FBM20_Msk                              ;/*!<Filter Init Mode bit 20 */
CAN_FM1R_FBM21_Pos     EQU		21                                           
CAN_FM1R_FBM21_Msk     EQU		0x1 << CAN_FM1R_FBM21_Pos                       ;/*!< 0x00200000 */
CAN_FM1R_FBM21         EQU		CAN_FM1R_FBM21_Msk                              ;/*!<Filter Init Mode bit 21 */
CAN_FM1R_FBM22_Pos     EQU		22                                           
CAN_FM1R_FBM22_Msk     EQU		0x1 << CAN_FM1R_FBM22_Pos                       ;/*!< 0x00400000 */
CAN_FM1R_FBM22         EQU		CAN_FM1R_FBM22_Msk                              ;/*!<Filter Init Mode bit 22 */
CAN_FM1R_FBM23_Pos     EQU		23                                           
CAN_FM1R_FBM23_Msk     EQU		0x1 << CAN_FM1R_FBM23_Pos                       ;/*!< 0x00800000 */
CAN_FM1R_FBM23         EQU		CAN_FM1R_FBM23_Msk                              ;/*!<Filter Init Mode bit 23 */
CAN_FM1R_FBM24_Pos     EQU		24                                           
CAN_FM1R_FBM24_Msk     EQU		0x1 << CAN_FM1R_FBM24_Pos                       ;/*!< 0x01000000 */
CAN_FM1R_FBM24         EQU		CAN_FM1R_FBM24_Msk                              ;/*!<Filter Init Mode bit 24 */
CAN_FM1R_FBM25_Pos     EQU		25                                           
CAN_FM1R_FBM25_Msk     EQU		0x1 << CAN_FM1R_FBM25_Pos                       ;/*!< 0x02000000 */
CAN_FM1R_FBM25         EQU		CAN_FM1R_FBM25_Msk                              ;/*!<Filter Init Mode bit 25 */
CAN_FM1R_FBM26_Pos     EQU		26                                           
CAN_FM1R_FBM26_Msk     EQU		0x1 << CAN_FM1R_FBM26_Pos                       ;/*!< 0x04000000 */
CAN_FM1R_FBM26         EQU		CAN_FM1R_FBM26_Msk                              ;/*!<Filter Init Mode bit 26 */
CAN_FM1R_FBM27_Pos     EQU		27                                           
CAN_FM1R_FBM27_Msk     EQU		0x1 << CAN_FM1R_FBM27_Pos                       ;/*!< 0x08000000 */
CAN_FM1R_FBM27         EQU		CAN_FM1R_FBM27_Msk                              ;/*!<Filter Init Mode bit 27 */

CAN_FS1R		       EQU		0x20C
;/*******************  Bit definition for CAN_FS1R register  *******************/
CAN_FS1R_FSC_Pos       EQU		0                                            
CAN_FS1R_FSC_Msk       EQU		0xFFFFFFF << CAN_FS1R_FSC_Pos                   ;/*!< 0x0FFFFFFF */
CAN_FS1R_FSC           EQU		CAN_FS1R_FSC_Msk                                ;/*!<Filter Scale Configuration */
CAN_FS1R_FSC0_Pos      EQU		0                                            
CAN_FS1R_FSC0_Msk      EQU		0x1 << CAN_FS1R_FSC0_Pos                        ;/*!< 0x00000001 */
CAN_FS1R_FSC0          EQU		CAN_FS1R_FSC0_Msk                               ;/*!<Filter Scale Configuration bit 0 */
CAN_FS1R_FSC1_Pos      EQU		1                                            
CAN_FS1R_FSC1_Msk      EQU		0x1 << CAN_FS1R_FSC1_Pos                        ;/*!< 0x00000002 */
CAN_FS1R_FSC1          EQU		CAN_FS1R_FSC1_Msk                               ;/*!<Filter Scale Configuration bit 1 */
CAN_FS1R_FSC2_Pos      EQU		2                                            
CAN_FS1R_FSC2_Msk      EQU		0x1 << CAN_FS1R_FSC2_Pos                        ;/*!< 0x00000004 */
CAN_FS1R_FSC2          EQU		CAN_FS1R_FSC2_Msk                               ;/*!<Filter Scale Configuration bit 2 */
CAN_FS1R_FSC3_Pos      EQU		3                                            
CAN_FS1R_FSC3_Msk      EQU		0x1 << CAN_FS1R_FSC3_Pos                        ;/*!< 0x00000008 */
CAN_FS1R_FSC3          EQU		CAN_FS1R_FSC3_Msk                               ;/*!<Filter Scale Configuration bit 3 */
CAN_FS1R_FSC4_Pos      EQU		4                                            
CAN_FS1R_FSC4_Msk      EQU		0x1 << CAN_FS1R_FSC4_Pos                        ;/*!< 0x00000010 */
CAN_FS1R_FSC4          EQU		CAN_FS1R_FSC4_Msk                               ;/*!<Filter Scale Configuration bit 4 */
CAN_FS1R_FSC5_Pos      EQU		5                                            
CAN_FS1R_FSC5_Msk      EQU		0x1 << CAN_FS1R_FSC5_Pos                        ;/*!< 0x00000020 */
CAN_FS1R_FSC5          EQU		CAN_FS1R_FSC5_Msk                               ;/*!<Filter Scale Configuration bit 5 */
CAN_FS1R_FSC6_Pos      EQU		6                                            
CAN_FS1R_FSC6_Msk      EQU		0x1 << CAN_FS1R_FSC6_Pos                        ;/*!< 0x00000040 */
CAN_FS1R_FSC6          EQU		CAN_FS1R_FSC6_Msk                               ;/*!<Filter Scale Configuration bit 6 */
CAN_FS1R_FSC7_Pos      EQU		7                                            
CAN_FS1R_FSC7_Msk      EQU		0x1 << CAN_FS1R_FSC7_Pos                        ;/*!< 0x00000080 */
CAN_FS1R_FSC7          EQU		CAN_FS1R_FSC7_Msk                               ;/*!<Filter Scale Configuration bit 7 */
CAN_FS1R_FSC8_Pos      EQU		8                                            
CAN_FS1R_FSC8_Msk      EQU		0x1 << CAN_FS1R_FSC8_Pos                        ;/*!< 0x00000100 */
CAN_FS1R_FSC8          EQU		CAN_FS1R_FSC8_Msk                               ;/*!<Filter Scale Configuration bit 8 */
CAN_FS1R_FSC9_Pos      EQU		9                                            
CAN_FS1R_FSC9_Msk      EQU		0x1 << CAN_FS1R_FSC9_Pos                        ;/*!< 0x00000200 */
CAN_FS1R_FSC9          EQU		CAN_FS1R_FSC9_Msk                               ;/*!<Filter Scale Configuration bit 9 */
CAN_FS1R_FSC10_Pos     EQU		10                                           
CAN_FS1R_FSC10_Msk     EQU		0x1 << CAN_FS1R_FSC10_Pos                       ;/*!< 0x00000400 */
CAN_FS1R_FSC10         EQU		CAN_FS1R_FSC10_Msk                              ;/*!<Filter Scale Configuration bit 10 */
CAN_FS1R_FSC11_Pos     EQU		11                                           
CAN_FS1R_FSC11_Msk     EQU		0x1 << CAN_FS1R_FSC11_Pos                       ;/*!< 0x00000800 */
CAN_FS1R_FSC11         EQU		CAN_FS1R_FSC11_Msk                              ;/*!<Filter Scale Configuration bit 11 */
CAN_FS1R_FSC12_Pos     EQU		12                                           
CAN_FS1R_FSC12_Msk     EQU		0x1 << CAN_FS1R_FSC12_Pos                       ;/*!< 0x00001000 */
CAN_FS1R_FSC12         EQU		CAN_FS1R_FSC12_Msk                              ;/*!<Filter Scale Configuration bit 12 */
CAN_FS1R_FSC13_Pos     EQU		13                                           
CAN_FS1R_FSC13_Msk     EQU		0x1 << CAN_FS1R_FSC13_Pos                       ;/*!< 0x00002000 */
CAN_FS1R_FSC13         EQU		CAN_FS1R_FSC13_Msk                              ;/*!<Filter Scale Configuration bit 13 */
CAN_FS1R_FSC14_Pos     EQU		14                                           
CAN_FS1R_FSC14_Msk     EQU		0x1 << CAN_FS1R_FSC14_Pos                       ;/*!< 0x00004000 */
CAN_FS1R_FSC14         EQU		CAN_FS1R_FSC14_Msk                              ;/*!<Filter Scale Configuration bit 14 */
CAN_FS1R_FSC15_Pos     EQU		15                                           
CAN_FS1R_FSC15_Msk     EQU		0x1 << CAN_FS1R_FSC15_Pos                       ;/*!< 0x00008000 */
CAN_FS1R_FSC15         EQU		CAN_FS1R_FSC15_Msk                              ;/*!<Filter Scale Configuration bit 15 */
CAN_FS1R_FSC16_Pos     EQU		16                                           
CAN_FS1R_FSC16_Msk     EQU		0x1 << CAN_FS1R_FSC16_Pos                       ;/*!< 0x00010000 */
CAN_FS1R_FSC16         EQU		CAN_FS1R_FSC16_Msk                              ;/*!<Filter Scale Configuration bit 16 */
CAN_FS1R_FSC17_Pos     EQU		17                                           
CAN_FS1R_FSC17_Msk     EQU		0x1 << CAN_FS1R_FSC17_Pos                       ;/*!< 0x00020000 */
CAN_FS1R_FSC17         EQU		CAN_FS1R_FSC17_Msk                              ;/*!<Filter Scale Configuration bit 17 */
CAN_FS1R_FSC18_Pos     EQU		18                                           
CAN_FS1R_FSC18_Msk     EQU		0x1 << CAN_FS1R_FSC18_Pos                       ;/*!< 0x00040000 */
CAN_FS1R_FSC18         EQU		CAN_FS1R_FSC18_Msk                              ;/*!<Filter Scale Configuration bit 18 */
CAN_FS1R_FSC19_Pos     EQU		19                                           
CAN_FS1R_FSC19_Msk     EQU		0x1 << CAN_FS1R_FSC19_Pos                       ;/*!< 0x00080000 */
CAN_FS1R_FSC19         EQU		CAN_FS1R_FSC19_Msk                              ;/*!<Filter Scale Configuration bit 19 */
CAN_FS1R_FSC20_Pos     EQU		20                                           
CAN_FS1R_FSC20_Msk     EQU		0x1 << CAN_FS1R_FSC20_Pos                       ;/*!< 0x00100000 */
CAN_FS1R_FSC20         EQU		CAN_FS1R_FSC20_Msk                              ;/*!<Filter Scale Configuration bit 20 */
CAN_FS1R_FSC21_Pos     EQU		21                                           
CAN_FS1R_FSC21_Msk     EQU		0x1 << CAN_FS1R_FSC21_Pos                       ;/*!< 0x00200000 */
CAN_FS1R_FSC21         EQU		CAN_FS1R_FSC21_Msk                              ;/*!<Filter Scale Configuration bit 21 */
CAN_FS1R_FSC22_Pos     EQU		22                                           
CAN_FS1R_FSC22_Msk     EQU		0x1 << CAN_FS1R_FSC22_Pos                       ;/*!< 0x00400000 */
CAN_FS1R_FSC22         EQU		CAN_FS1R_FSC22_Msk                              ;/*!<Filter Scale Configuration bit 22 */
CAN_FS1R_FSC23_Pos     EQU		23                                           
CAN_FS1R_FSC23_Msk     EQU		0x1 << CAN_FS1R_FSC23_Pos                       ;/*!< 0x00800000 */
CAN_FS1R_FSC23         EQU		CAN_FS1R_FSC23_Msk                              ;/*!<Filter Scale Configuration bit 23 */
CAN_FS1R_FSC24_Pos     EQU		24                                           
CAN_FS1R_FSC24_Msk     EQU		0x1 << CAN_FS1R_FSC24_Pos                       ;/*!< 0x01000000 */
CAN_FS1R_FSC24         EQU		CAN_FS1R_FSC24_Msk                              ;/*!<Filter Scale Configuration bit 24 */
CAN_FS1R_FSC25_Pos     EQU		25                                           
CAN_FS1R_FSC25_Msk     EQU		0x1 << CAN_FS1R_FSC25_Pos                       ;/*!< 0x02000000 */
CAN_FS1R_FSC25         EQU		CAN_FS1R_FSC25_Msk                              ;/*!<Filter Scale Configuration bit 25 */
CAN_FS1R_FSC26_Pos     EQU		26                                           
CAN_FS1R_FSC26_Msk     EQU		0x1 << CAN_FS1R_FSC26_Pos                       ;/*!< 0x04000000 */
CAN_FS1R_FSC26         EQU		CAN_FS1R_FSC26_Msk                              ;/*!<Filter Scale Configuration bit 26 */
CAN_FS1R_FSC27_Pos     EQU		27                                           
CAN_FS1R_FSC27_Msk     EQU		0x1 << CAN_FS1R_FSC27_Pos                       ;/*!< 0x08000000 */
CAN_FS1R_FSC27         EQU		CAN_FS1R_FSC27_Msk                              ;/*!<Filter Scale Configuration bit 27 */

CAN_FFA1R		       EQU		0x214
;/******************  Bit definition for CAN_FFA1R register  *******************/
CAN_FFA1R_FFA_Pos      EQU		0                                            
CAN_FFA1R_FFA_Msk      EQU		0xFFFFFFF << CAN_FFA1R_FFA_Pos                  ;/*!< 0x0FFFFFFF */
CAN_FFA1R_FFA          EQU		CAN_FFA1R_FFA_Msk                               ;/*!<Filter FIFO Assignment */
CAN_FFA1R_FFA0_Pos     EQU		0                                            
CAN_FFA1R_FFA0_Msk     EQU		0x1 << CAN_FFA1R_FFA0_Pos                       ;/*!< 0x00000001 */
CAN_FFA1R_FFA0         EQU		CAN_FFA1R_FFA0_Msk                              ;/*!<Filter FIFO Assignment bit 0 */
CAN_FFA1R_FFA1_Pos     EQU		1                                            
CAN_FFA1R_FFA1_Msk     EQU		0x1 << CAN_FFA1R_FFA1_Pos                       ;/*!< 0x00000002 */
CAN_FFA1R_FFA1         EQU		CAN_FFA1R_FFA1_Msk                              ;/*!<Filter FIFO Assignment bit 1 */
CAN_FFA1R_FFA2_Pos     EQU		2                                            
CAN_FFA1R_FFA2_Msk     EQU		0x1 << CAN_FFA1R_FFA2_Pos                       ;/*!< 0x00000004 */
CAN_FFA1R_FFA2         EQU		CAN_FFA1R_FFA2_Msk                              ;/*!<Filter FIFO Assignment bit 2 */
CAN_FFA1R_FFA3_Pos     EQU		3                                            
CAN_FFA1R_FFA3_Msk     EQU		0x1 << CAN_FFA1R_FFA3_Pos                       ;/*!< 0x00000008 */
CAN_FFA1R_FFA3         EQU		CAN_FFA1R_FFA3_Msk                              ;/*!<Filter FIFO Assignment bit 3 */
CAN_FFA1R_FFA4_Pos     EQU		4                                            
CAN_FFA1R_FFA4_Msk     EQU		0x1 << CAN_FFA1R_FFA4_Pos                       ;/*!< 0x00000010 */
CAN_FFA1R_FFA4         EQU		CAN_FFA1R_FFA4_Msk                              ;/*!<Filter FIFO Assignment bit 4 */
CAN_FFA1R_FFA5_Pos     EQU		5                                            
CAN_FFA1R_FFA5_Msk     EQU		0x1 << CAN_FFA1R_FFA5_Pos                       ;/*!< 0x00000020 */
CAN_FFA1R_FFA5         EQU		CAN_FFA1R_FFA5_Msk                              ;/*!<Filter FIFO Assignment bit 5 */
CAN_FFA1R_FFA6_Pos     EQU		6                                            
CAN_FFA1R_FFA6_Msk     EQU		0x1 << CAN_FFA1R_FFA6_Pos                       ;/*!< 0x00000040 */
CAN_FFA1R_FFA6         EQU		CAN_FFA1R_FFA6_Msk                              ;/*!<Filter FIFO Assignment bit 6 */
CAN_FFA1R_FFA7_Pos     EQU		7                                            
CAN_FFA1R_FFA7_Msk     EQU		0x1 << CAN_FFA1R_FFA7_Pos                       ;/*!< 0x00000080 */
CAN_FFA1R_FFA7         EQU		CAN_FFA1R_FFA7_Msk                              ;/*!<Filter FIFO Assignment bit 7 */
CAN_FFA1R_FFA8_Pos     EQU		8                                            
CAN_FFA1R_FFA8_Msk     EQU		0x1 << CAN_FFA1R_FFA8_Pos                       ;/*!< 0x00000100 */
CAN_FFA1R_FFA8         EQU		CAN_FFA1R_FFA8_Msk                              ;/*!<Filter FIFO Assignment bit 8 */
CAN_FFA1R_FFA9_Pos     EQU		9                                            
CAN_FFA1R_FFA9_Msk     EQU		0x1 << CAN_FFA1R_FFA9_Pos                       ;/*!< 0x00000200 */
CAN_FFA1R_FFA9         EQU		CAN_FFA1R_FFA9_Msk                              ;/*!<Filter FIFO Assignment bit 9 */
CAN_FFA1R_FFA10_Pos    EQU		10                                           
CAN_FFA1R_FFA10_Msk    EQU		0x1 << CAN_FFA1R_FFA10_Pos                      ;/*!< 0x00000400 */
CAN_FFA1R_FFA10        EQU		CAN_FFA1R_FFA10_Msk                             ;/*!<Filter FIFO Assignment bit 10 */
CAN_FFA1R_FFA11_Pos    EQU		11                                           
CAN_FFA1R_FFA11_Msk    EQU		0x1 << CAN_FFA1R_FFA11_Pos                      ;/*!< 0x00000800 */
CAN_FFA1R_FFA11        EQU		CAN_FFA1R_FFA11_Msk                             ;/*!<Filter FIFO Assignment bit 11 */
CAN_FFA1R_FFA12_Pos    EQU		12                                           
CAN_FFA1R_FFA12_Msk    EQU		0x1 << CAN_FFA1R_FFA12_Pos                      ;/*!< 0x00001000 */
CAN_FFA1R_FFA12        EQU		CAN_FFA1R_FFA12_Msk                             ;/*!<Filter FIFO Assignment bit 12 */
CAN_FFA1R_FFA13_Pos    EQU		13                                           
CAN_FFA1R_FFA13_Msk    EQU		0x1 << CAN_FFA1R_FFA13_Pos                      ;/*!< 0x00002000 */
CAN_FFA1R_FFA13        EQU		CAN_FFA1R_FFA13_Msk                             ;/*!<Filter FIFO Assignment bit 13 */
CAN_FFA1R_FFA14_Pos    EQU		14                                           
CAN_FFA1R_FFA14_Msk    EQU		0x1 << CAN_FFA1R_FFA14_Pos                      ;/*!< 0x00004000 */
CAN_FFA1R_FFA14        EQU		CAN_FFA1R_FFA14_Msk                             ;/*!<Filter FIFO Assignment bit 14 */
CAN_FFA1R_FFA15_Pos    EQU		15                                           
CAN_FFA1R_FFA15_Msk    EQU		0x1 << CAN_FFA1R_FFA15_Pos                      ;/*!< 0x00008000 */
CAN_FFA1R_FFA15        EQU		CAN_FFA1R_FFA15_Msk                             ;/*!<Filter FIFO Assignment bit 15 */
CAN_FFA1R_FFA16_Pos    EQU		16                                           
CAN_FFA1R_FFA16_Msk    EQU		0x1 << CAN_FFA1R_FFA16_Pos                      ;/*!< 0x00010000 */
CAN_FFA1R_FFA16        EQU		CAN_FFA1R_FFA16_Msk                             ;/*!<Filter FIFO Assignment bit 16 */
CAN_FFA1R_FFA17_Pos    EQU		17                                           
CAN_FFA1R_FFA17_Msk    EQU		0x1 << CAN_FFA1R_FFA17_Pos                      ;/*!< 0x00020000 */
CAN_FFA1R_FFA17        EQU		CAN_FFA1R_FFA17_Msk                             ;/*!<Filter FIFO Assignment bit 17 */
CAN_FFA1R_FFA18_Pos    EQU		18                                           
CAN_FFA1R_FFA18_Msk    EQU		0x1 << CAN_FFA1R_FFA18_Pos                      ;/*!< 0x00040000 */
CAN_FFA1R_FFA18        EQU		CAN_FFA1R_FFA18_Msk                             ;/*!<Filter FIFO Assignment bit 18 */
CAN_FFA1R_FFA19_Pos    EQU		19                                           
CAN_FFA1R_FFA19_Msk    EQU		0x1 << CAN_FFA1R_FFA19_Pos                      ;/*!< 0x00080000 */
CAN_FFA1R_FFA19        EQU		CAN_FFA1R_FFA19_Msk                             ;/*!<Filter FIFO Assignment bit 19 */
CAN_FFA1R_FFA20_Pos    EQU		20                                           
CAN_FFA1R_FFA20_Msk    EQU		0x1 << CAN_FFA1R_FFA20_Pos                      ;/*!< 0x00100000 */
CAN_FFA1R_FFA20        EQU		CAN_FFA1R_FFA20_Msk                             ;/*!<Filter FIFO Assignment bit 20 */
CAN_FFA1R_FFA21_Pos    EQU		21                                           
CAN_FFA1R_FFA21_Msk    EQU		0x1 << CAN_FFA1R_FFA21_Pos                      ;/*!< 0x00200000 */
CAN_FFA1R_FFA21        EQU		CAN_FFA1R_FFA21_Msk                             ;/*!<Filter FIFO Assignment bit 21 */
CAN_FFA1R_FFA22_Pos    EQU		22                                           
CAN_FFA1R_FFA22_Msk    EQU		0x1 << CAN_FFA1R_FFA22_Pos                      ;/*!< 0x00400000 */
CAN_FFA1R_FFA22        EQU		CAN_FFA1R_FFA22_Msk                             ;/*!<Filter FIFO Assignment bit 22 */
CAN_FFA1R_FFA23_Pos    EQU		23                                           
CAN_FFA1R_FFA23_Msk    EQU		0x1 << CAN_FFA1R_FFA23_Pos                      ;/*!< 0x00800000 */
CAN_FFA1R_FFA23        EQU		CAN_FFA1R_FFA23_Msk                             ;/*!<Filter FIFO Assignment bit 23 */
CAN_FFA1R_FFA24_Pos    EQU		24                                           
CAN_FFA1R_FFA24_Msk    EQU		0x1 << CAN_FFA1R_FFA24_Pos                      ;/*!< 0x01000000 */
CAN_FFA1R_FFA24        EQU		CAN_FFA1R_FFA24_Msk                             ;/*!<Filter FIFO Assignment bit 24 */
CAN_FFA1R_FFA25_Pos    EQU		25                                           
CAN_FFA1R_FFA25_Msk    EQU		0x1 << CAN_FFA1R_FFA25_Pos                      ;/*!< 0x02000000 */
CAN_FFA1R_FFA25        EQU		CAN_FFA1R_FFA25_Msk                             ;/*!<Filter FIFO Assignment bit 25 */
CAN_FFA1R_FFA26_Pos    EQU		26                                           
CAN_FFA1R_FFA26_Msk    EQU		0x1 << CAN_FFA1R_FFA26_Pos                      ;/*!< 0x04000000 */
CAN_FFA1R_FFA26        EQU		CAN_FFA1R_FFA26_Msk                             ;/*!<Filter FIFO Assignment bit 26 */
CAN_FFA1R_FFA27_Pos    EQU		27                                           
CAN_FFA1R_FFA27_Msk    EQU		0x1 << CAN_FFA1R_FFA27_Pos                      ;/*!< 0x08000000 */
CAN_FFA1R_FFA27        EQU		CAN_FFA1R_FFA27_Msk                             ;/*!<Filter FIFO Assignment bit 27 */

CAN_FA1R		       EQU		0x21C
;/*******************  Bit definition for CAN_FA1R register  *******************/
CAN_FA1R_FACT_Pos      EQU		0                                            
CAN_FA1R_FACT_Msk      EQU		0xFFFFFFF << CAN_FA1R_FACT_Pos                  ;/*!< 0x0FFFFFFF */
CAN_FA1R_FACT          EQU		CAN_FA1R_FACT_Msk                               ;/*!<Filter Active */
CAN_FA1R_FACT0_Pos     EQU		0                                            
CAN_FA1R_FACT0_Msk     EQU		0x1 << CAN_FA1R_FACT0_Pos                       ;/*!< 0x00000001 */
CAN_FA1R_FACT0         EQU		CAN_FA1R_FACT0_Msk                              ;/*!<Filter Active bit 0 */
CAN_FA1R_FACT1_Pos     EQU		1                                            
CAN_FA1R_FACT1_Msk     EQU		0x1 << CAN_FA1R_FACT1_Pos                       ;/*!< 0x00000002 */
CAN_FA1R_FACT1         EQU		CAN_FA1R_FACT1_Msk                              ;/*!<Filter Active bit 1 */
CAN_FA1R_FACT2_Pos     EQU		2                                            
CAN_FA1R_FACT2_Msk     EQU		0x1 << CAN_FA1R_FACT2_Pos                       ;/*!< 0x00000004 */
CAN_FA1R_FACT2         EQU		CAN_FA1R_FACT2_Msk                              ;/*!<Filter Active bit 2 */
CAN_FA1R_FACT3_Pos     EQU		3                                            
CAN_FA1R_FACT3_Msk     EQU		0x1 << CAN_FA1R_FACT3_Pos                       ;/*!< 0x00000008 */
CAN_FA1R_FACT3         EQU		CAN_FA1R_FACT3_Msk                              ;/*!<Filter Active bit 3 */
CAN_FA1R_FACT4_Pos     EQU		4                                            
CAN_FA1R_FACT4_Msk     EQU		0x1 << CAN_FA1R_FACT4_Pos                       ;/*!< 0x00000010 */
CAN_FA1R_FACT4         EQU		CAN_FA1R_FACT4_Msk                              ;/*!<Filter Active bit 4 */
CAN_FA1R_FACT5_Pos     EQU		5                                            
CAN_FA1R_FACT5_Msk     EQU		0x1 << CAN_FA1R_FACT5_Pos                       ;/*!< 0x00000020 */
CAN_FA1R_FACT5         EQU		CAN_FA1R_FACT5_Msk                              ;/*!<Filter Active bit 5 */
CAN_FA1R_FACT6_Pos     EQU		6                                            
CAN_FA1R_FACT6_Msk     EQU		0x1 << CAN_FA1R_FACT6_Pos                       ;/*!< 0x00000040 */
CAN_FA1R_FACT6         EQU		CAN_FA1R_FACT6_Msk                              ;/*!<Filter Active bit 6 */
CAN_FA1R_FACT7_Pos     EQU		7                                            
CAN_FA1R_FACT7_Msk     EQU		0x1 << CAN_FA1R_FACT7_Pos                       ;/*!< 0x00000080 */
CAN_FA1R_FACT7         EQU		CAN_FA1R_FACT7_Msk                              ;/*!<Filter Active bit 7 */
CAN_FA1R_FACT8_Pos     EQU		8                                            
CAN_FA1R_FACT8_Msk     EQU		0x1 << CAN_FA1R_FACT8_Pos                       ;/*!< 0x00000100 */
CAN_FA1R_FACT8         EQU		CAN_FA1R_FACT8_Msk                              ;/*!<Filter Active bit 8 */
CAN_FA1R_FACT9_Pos     EQU		9                                            
CAN_FA1R_FACT9_Msk     EQU		0x1 << CAN_FA1R_FACT9_Pos                       ;/*!< 0x00000200 */
CAN_FA1R_FACT9         EQU		CAN_FA1R_FACT9_Msk                              ;/*!<Filter Active bit 9 */
CAN_FA1R_FACT10_Pos    EQU		10                                           
CAN_FA1R_FACT10_Msk    EQU		0x1 << CAN_FA1R_FACT10_Pos                      ;/*!< 0x00000400 */
CAN_FA1R_FACT10        EQU		CAN_FA1R_FACT10_Msk                             ;/*!<Filter Active bit 10 */
CAN_FA1R_FACT11_Pos    EQU		11                                           
CAN_FA1R_FACT11_Msk    EQU		0x1 << CAN_FA1R_FACT11_Pos                      ;/*!< 0x00000800 */
CAN_FA1R_FACT11        EQU		CAN_FA1R_FACT11_Msk                             ;/*!<Filter Active bit 11 */
CAN_FA1R_FACT12_Pos    EQU		12                                           
CAN_FA1R_FACT12_Msk    EQU		0x1 << CAN_FA1R_FACT12_Pos                      ;/*!< 0x00001000 */
CAN_FA1R_FACT12        EQU		CAN_FA1R_FACT12_Msk                             ;/*!<Filter Active bit 12 */
CAN_FA1R_FACT13_Pos    EQU		13                                           
CAN_FA1R_FACT13_Msk    EQU		0x1 << CAN_FA1R_FACT13_Pos                      ;/*!< 0x00002000 */
CAN_FA1R_FACT13        EQU		CAN_FA1R_FACT13_Msk                             ;/*!<Filter Active bit 13 */
CAN_FA1R_FACT14_Pos    EQU		14                                           
CAN_FA1R_FACT14_Msk    EQU		0x1 << CAN_FA1R_FACT14_Pos                      ;/*!< 0x00004000 */
CAN_FA1R_FACT14        EQU		CAN_FA1R_FACT14_Msk                             ;/*!<Filter Active bit 14 */
CAN_FA1R_FACT15_Pos    EQU		15                                           
CAN_FA1R_FACT15_Msk    EQU		0x1 << CAN_FA1R_FACT15_Pos                      ;/*!< 0x00008000 */
CAN_FA1R_FACT15        EQU		CAN_FA1R_FACT15_Msk                             ;/*!<Filter Active bit 15 */
CAN_FA1R_FACT16_Pos    EQU		16                                           
CAN_FA1R_FACT16_Msk    EQU		0x1 << CAN_FA1R_FACT16_Pos                      ;/*!< 0x00010000 */
CAN_FA1R_FACT16        EQU		CAN_FA1R_FACT16_Msk                             ;/*!<Filter Active bit 16 */
CAN_FA1R_FACT17_Pos    EQU		17                                           
CAN_FA1R_FACT17_Msk    EQU		0x1 << CAN_FA1R_FACT17_Pos                      ;/*!< 0x00020000 */
CAN_FA1R_FACT17        EQU		CAN_FA1R_FACT17_Msk                             ;/*!<Filter Active bit 17 */
CAN_FA1R_FACT18_Pos    EQU		18                                           
CAN_FA1R_FACT18_Msk    EQU		0x1 << CAN_FA1R_FACT18_Pos                      ;/*!< 0x00040000 */
CAN_FA1R_FACT18        EQU		CAN_FA1R_FACT18_Msk                             ;/*!<Filter Active bit 18 */
CAN_FA1R_FACT19_Pos    EQU		19                                           
CAN_FA1R_FACT19_Msk    EQU		0x1 << CAN_FA1R_FACT19_Pos                      ;/*!< 0x00080000 */
CAN_FA1R_FACT19        EQU		CAN_FA1R_FACT19_Msk                             ;/*!<Filter Active bit 19 */
CAN_FA1R_FACT20_Pos    EQU		20                                           
CAN_FA1R_FACT20_Msk    EQU		0x1 << CAN_FA1R_FACT20_Pos                      ;/*!< 0x00100000 */
CAN_FA1R_FACT20        EQU		CAN_FA1R_FACT20_Msk                             ;/*!<Filter Active bit 20 */
CAN_FA1R_FACT21_Pos    EQU		21                                           
CAN_FA1R_FACT21_Msk    EQU		0x1 << CAN_FA1R_FACT21_Pos                      ;/*!< 0x00200000 */
CAN_FA1R_FACT21        EQU		CAN_FA1R_FACT21_Msk                             ;/*!<Filter Active bit 21 */
CAN_FA1R_FACT22_Pos    EQU		22                                           
CAN_FA1R_FACT22_Msk    EQU		0x1 << CAN_FA1R_FACT22_Pos                      ;/*!< 0x00400000 */
CAN_FA1R_FACT22        EQU		CAN_FA1R_FACT22_Msk                             ;/*!<Filter Active bit 22 */
CAN_FA1R_FACT23_Pos    EQU		23                                           
CAN_FA1R_FACT23_Msk    EQU		0x1 << CAN_FA1R_FACT23_Pos                      ;/*!< 0x00800000 */
CAN_FA1R_FACT23        EQU		CAN_FA1R_FACT23_Msk                             ;/*!<Filter Active bit 23 */
CAN_FA1R_FACT24_Pos    EQU		24                                           
CAN_FA1R_FACT24_Msk    EQU		0x1 << CAN_FA1R_FACT24_Pos                      ;/*!< 0x01000000 */
CAN_FA1R_FACT24        EQU		CAN_FA1R_FACT24_Msk                             ;/*!<Filter Active bit 24 */
CAN_FA1R_FACT25_Pos    EQU		25                                           
CAN_FA1R_FACT25_Msk    EQU		0x1 << CAN_FA1R_FACT25_Pos                      ;/*!< 0x02000000 */
CAN_FA1R_FACT25        EQU		CAN_FA1R_FACT25_Msk                             ;/*!<Filter Active bit 25 */
CAN_FA1R_FACT26_Pos    EQU		26                                           
CAN_FA1R_FACT26_Msk    EQU		0x1 << CAN_FA1R_FACT26_Pos                      ;/*!< 0x04000000 */
CAN_FA1R_FACT26        EQU		CAN_FA1R_FACT26_Msk                             ;/*!<Filter Active bit 26 */
CAN_FA1R_FACT27_Pos    EQU		27                                           
CAN_FA1R_FACT27_Msk    EQU		0x1 << CAN_FA1R_FACT27_Pos                      ;/*!< 0x08000000 */
CAN_FA1R_FACT27        EQU		CAN_FA1R_FACT27_Msk                             ;/*!<Filter Active bit 27 */

CAN_F0R1		       EQU		0x240
;/*******************  Bit definition for CAN_F0R1 register  *******************/
CAN_F0R1_FB0_Pos       EQU		0                                            
CAN_F0R1_FB0_Msk       EQU		0x1 << CAN_F0R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F0R1_FB0           EQU		CAN_F0R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F0R1_FB1_Pos       EQU		1                                            
CAN_F0R1_FB1_Msk       EQU		0x1 << CAN_F0R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F0R1_FB1           EQU		CAN_F0R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F0R1_FB2_Pos       EQU		2                                            
CAN_F0R1_FB2_Msk       EQU		0x1 << CAN_F0R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F0R1_FB2           EQU		CAN_F0R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F0R1_FB3_Pos       EQU		3                                            
CAN_F0R1_FB3_Msk       EQU		0x1 << CAN_F0R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F0R1_FB3           EQU		CAN_F0R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F0R1_FB4_Pos       EQU		4                                            
CAN_F0R1_FB4_Msk       EQU		0x1 << CAN_F0R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F0R1_FB4           EQU		CAN_F0R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F0R1_FB5_Pos       EQU		5                                            
CAN_F0R1_FB5_Msk       EQU		0x1 << CAN_F0R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F0R1_FB5           EQU		CAN_F0R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F0R1_FB6_Pos       EQU		6                                            
CAN_F0R1_FB6_Msk       EQU		0x1 << CAN_F0R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F0R1_FB6           EQU		CAN_F0R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F0R1_FB7_Pos       EQU		7                                            
CAN_F0R1_FB7_Msk       EQU		0x1 << CAN_F0R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F0R1_FB7           EQU		CAN_F0R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F0R1_FB8_Pos       EQU		8                                            
CAN_F0R1_FB8_Msk       EQU		0x1 << CAN_F0R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F0R1_FB8           EQU		CAN_F0R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F0R1_FB9_Pos       EQU		9                                            
CAN_F0R1_FB9_Msk       EQU		0x1 << CAN_F0R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F0R1_FB9           EQU		CAN_F0R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F0R1_FB10_Pos      EQU		10                                           
CAN_F0R1_FB10_Msk      EQU		0x1 << CAN_F0R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F0R1_FB10          EQU		CAN_F0R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F0R1_FB11_Pos      EQU		11                                           
CAN_F0R1_FB11_Msk      EQU		0x1 << CAN_F0R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F0R1_FB11          EQU		CAN_F0R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F0R1_FB12_Pos      EQU		12                                           
CAN_F0R1_FB12_Msk      EQU		0x1 << CAN_F0R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F0R1_FB12          EQU		CAN_F0R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F0R1_FB13_Pos      EQU		13                                           
CAN_F0R1_FB13_Msk      EQU		0x1 << CAN_F0R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F0R1_FB13          EQU		CAN_F0R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F0R1_FB14_Pos      EQU		14                                           
CAN_F0R1_FB14_Msk      EQU		0x1 << CAN_F0R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F0R1_FB14          EQU		CAN_F0R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F0R1_FB15_Pos      EQU		15                                           
CAN_F0R1_FB15_Msk      EQU		0x1 << CAN_F0R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F0R1_FB15          EQU		CAN_F0R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F0R1_FB16_Pos      EQU		16                                           
CAN_F0R1_FB16_Msk      EQU		0x1 << CAN_F0R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F0R1_FB16          EQU		CAN_F0R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F0R1_FB17_Pos      EQU		17                                           
CAN_F0R1_FB17_Msk      EQU		0x1 << CAN_F0R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F0R1_FB17          EQU		CAN_F0R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F0R1_FB18_Pos      EQU		18                                           
CAN_F0R1_FB18_Msk      EQU		0x1 << CAN_F0R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F0R1_FB18          EQU		CAN_F0R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F0R1_FB19_Pos      EQU		19                                           
CAN_F0R1_FB19_Msk      EQU		0x1 << CAN_F0R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F0R1_FB19          EQU		CAN_F0R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F0R1_FB20_Pos      EQU		20                                           
CAN_F0R1_FB20_Msk      EQU		0x1 << CAN_F0R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F0R1_FB20          EQU		CAN_F0R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F0R1_FB21_Pos      EQU		21                                           
CAN_F0R1_FB21_Msk      EQU		0x1 << CAN_F0R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F0R1_FB21          EQU		CAN_F0R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F0R1_FB22_Pos      EQU		22                                           
CAN_F0R1_FB22_Msk      EQU		0x1 << CAN_F0R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F0R1_FB22          EQU		CAN_F0R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F0R1_FB23_Pos      EQU		23                                           
CAN_F0R1_FB23_Msk      EQU		0x1 << CAN_F0R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F0R1_FB23          EQU		CAN_F0R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F0R1_FB24_Pos      EQU		24                                           
CAN_F0R1_FB24_Msk      EQU		0x1 << CAN_F0R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F0R1_FB24          EQU		CAN_F0R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F0R1_FB25_Pos      EQU		25                                           
CAN_F0R1_FB25_Msk      EQU		0x1 << CAN_F0R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F0R1_FB25          EQU		CAN_F0R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F0R1_FB26_Pos      EQU		26                                           
CAN_F0R1_FB26_Msk      EQU		0x1 << CAN_F0R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F0R1_FB26          EQU		CAN_F0R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F0R1_FB27_Pos      EQU		27                                           
CAN_F0R1_FB27_Msk      EQU		0x1 << CAN_F0R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F0R1_FB27          EQU		CAN_F0R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F0R1_FB28_Pos      EQU		28                                           
CAN_F0R1_FB28_Msk      EQU		0x1 << CAN_F0R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F0R1_FB28          EQU		CAN_F0R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F0R1_FB29_Pos      EQU		29                                           
CAN_F0R1_FB29_Msk      EQU		0x1 << CAN_F0R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F0R1_FB29          EQU		CAN_F0R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F0R1_FB30_Pos      EQU		30                                           
CAN_F0R1_FB30_Msk      EQU		0x1 << CAN_F0R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F0R1_FB30          EQU		CAN_F0R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F0R1_FB31_Pos      EQU		31                                           
CAN_F0R1_FB31_Msk      EQU		0x1 << CAN_F0R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F0R1_FB31          EQU		CAN_F0R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F1R1		       EQU		0x248
;/*******************  Bit definition for CAN_F1R1 register  *******************/
CAN_F1R1_FB0_Pos       EQU		0                                            
CAN_F1R1_FB0_Msk       EQU		0x1 << CAN_F1R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F1R1_FB0           EQU		CAN_F1R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F1R1_FB1_Pos       EQU		1                                            
CAN_F1R1_FB1_Msk       EQU		0x1 << CAN_F1R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F1R1_FB1           EQU		CAN_F1R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F1R1_FB2_Pos       EQU		2                                            
CAN_F1R1_FB2_Msk       EQU		0x1 << CAN_F1R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F1R1_FB2           EQU		CAN_F1R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F1R1_FB3_Pos       EQU		3                                            
CAN_F1R1_FB3_Msk       EQU		0x1 << CAN_F1R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F1R1_FB3           EQU		CAN_F1R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F1R1_FB4_Pos       EQU		4                                            
CAN_F1R1_FB4_Msk       EQU		0x1 << CAN_F1R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F1R1_FB4           EQU		CAN_F1R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F1R1_FB5_Pos       EQU		5                                            
CAN_F1R1_FB5_Msk       EQU		0x1 << CAN_F1R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F1R1_FB5           EQU		CAN_F1R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F1R1_FB6_Pos       EQU		6                                            
CAN_F1R1_FB6_Msk       EQU		0x1 << CAN_F1R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F1R1_FB6           EQU		CAN_F1R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F1R1_FB7_Pos       EQU		7                                            
CAN_F1R1_FB7_Msk       EQU		0x1 << CAN_F1R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F1R1_FB7           EQU		CAN_F1R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F1R1_FB8_Pos       EQU		8                                            
CAN_F1R1_FB8_Msk       EQU		0x1 << CAN_F1R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F1R1_FB8           EQU		CAN_F1R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F1R1_FB9_Pos       EQU		9                                            
CAN_F1R1_FB9_Msk       EQU		0x1 << CAN_F1R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F1R1_FB9           EQU		CAN_F1R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F1R1_FB10_Pos      EQU		10                                           
CAN_F1R1_FB10_Msk      EQU		0x1 << CAN_F1R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F1R1_FB10          EQU		CAN_F1R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F1R1_FB11_Pos      EQU		11                                           
CAN_F1R1_FB11_Msk      EQU		0x1 << CAN_F1R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F1R1_FB11          EQU		CAN_F1R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F1R1_FB12_Pos      EQU		12                                           
CAN_F1R1_FB12_Msk      EQU		0x1 << CAN_F1R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F1R1_FB12          EQU		CAN_F1R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F1R1_FB13_Pos      EQU		13                                           
CAN_F1R1_FB13_Msk      EQU		0x1 << CAN_F1R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F1R1_FB13          EQU		CAN_F1R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F1R1_FB14_Pos      EQU		14                                           
CAN_F1R1_FB14_Msk      EQU		0x1 << CAN_F1R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F1R1_FB14          EQU		CAN_F1R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F1R1_FB15_Pos      EQU		15                                           
CAN_F1R1_FB15_Msk      EQU		0x1 << CAN_F1R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F1R1_FB15          EQU		CAN_F1R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F1R1_FB16_Pos      EQU		16                                           
CAN_F1R1_FB16_Msk      EQU		0x1 << CAN_F1R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F1R1_FB16          EQU		CAN_F1R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F1R1_FB17_Pos      EQU		17                                           
CAN_F1R1_FB17_Msk      EQU		0x1 << CAN_F1R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F1R1_FB17          EQU		CAN_F1R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F1R1_FB18_Pos      EQU		18                                           
CAN_F1R1_FB18_Msk      EQU		0x1 << CAN_F1R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F1R1_FB18          EQU		CAN_F1R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F1R1_FB19_Pos      EQU		19                                           
CAN_F1R1_FB19_Msk      EQU		0x1 << CAN_F1R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F1R1_FB19          EQU		CAN_F1R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F1R1_FB20_Pos      EQU		20                                           
CAN_F1R1_FB20_Msk      EQU		0x1 << CAN_F1R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F1R1_FB20          EQU		CAN_F1R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F1R1_FB21_Pos      EQU		21                                           
CAN_F1R1_FB21_Msk      EQU		0x1 << CAN_F1R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F1R1_FB21          EQU		CAN_F1R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F1R1_FB22_Pos      EQU		22                                           
CAN_F1R1_FB22_Msk      EQU		0x1 << CAN_F1R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F1R1_FB22          EQU		CAN_F1R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F1R1_FB23_Pos      EQU		23                                           
CAN_F1R1_FB23_Msk      EQU		0x1 << CAN_F1R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F1R1_FB23          EQU		CAN_F1R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F1R1_FB24_Pos      EQU		24                                           
CAN_F1R1_FB24_Msk      EQU		0x1 << CAN_F1R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F1R1_FB24          EQU		CAN_F1R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F1R1_FB25_Pos      EQU		25                                           
CAN_F1R1_FB25_Msk      EQU		0x1 << CAN_F1R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F1R1_FB25          EQU		CAN_F1R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F1R1_FB26_Pos      EQU		26                                           
CAN_F1R1_FB26_Msk      EQU		0x1 << CAN_F1R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F1R1_FB26          EQU		CAN_F1R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F1R1_FB27_Pos      EQU		27                                           
CAN_F1R1_FB27_Msk      EQU		0x1 << CAN_F1R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F1R1_FB27          EQU		CAN_F1R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F1R1_FB28_Pos      EQU		28                                           
CAN_F1R1_FB28_Msk      EQU		0x1 << CAN_F1R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F1R1_FB28          EQU		CAN_F1R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F1R1_FB29_Pos      EQU		29                                           
CAN_F1R1_FB29_Msk      EQU		0x1 << CAN_F1R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F1R1_FB29          EQU		CAN_F1R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F1R1_FB30_Pos      EQU		30                                           
CAN_F1R1_FB30_Msk      EQU		0x1 << CAN_F1R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F1R1_FB30          EQU		CAN_F1R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F1R1_FB31_Pos      EQU		31                                           
CAN_F1R1_FB31_Msk      EQU		0x1 << CAN_F1R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F1R1_FB31          EQU		CAN_F1R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F2R1		       EQU		0x250
;/*******************  Bit definition for CAN_F2R1 register  *******************/
CAN_F2R1_FB0_Pos       EQU		0                                            
CAN_F2R1_FB0_Msk       EQU		0x1 << CAN_F2R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F2R1_FB0           EQU		CAN_F2R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F2R1_FB1_Pos       EQU		1                                            
CAN_F2R1_FB1_Msk       EQU		0x1 << CAN_F2R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F2R1_FB1           EQU		CAN_F2R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F2R1_FB2_Pos       EQU		2                                            
CAN_F2R1_FB2_Msk       EQU		0x1 << CAN_F2R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F2R1_FB2           EQU		CAN_F2R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F2R1_FB3_Pos       EQU		3                                            
CAN_F2R1_FB3_Msk       EQU		0x1 << CAN_F2R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F2R1_FB3           EQU		CAN_F2R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F2R1_FB4_Pos       EQU		4                                            
CAN_F2R1_FB4_Msk       EQU		0x1 << CAN_F2R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F2R1_FB4           EQU		CAN_F2R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F2R1_FB5_Pos       EQU		5                                            
CAN_F2R1_FB5_Msk       EQU		0x1 << CAN_F2R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F2R1_FB5           EQU		CAN_F2R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F2R1_FB6_Pos       EQU		6                                            
CAN_F2R1_FB6_Msk       EQU		0x1 << CAN_F2R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F2R1_FB6           EQU		CAN_F2R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F2R1_FB7_Pos       EQU		7                                            
CAN_F2R1_FB7_Msk       EQU		0x1 << CAN_F2R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F2R1_FB7           EQU		CAN_F2R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F2R1_FB8_Pos       EQU		8                                            
CAN_F2R1_FB8_Msk       EQU		0x1 << CAN_F2R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F2R1_FB8           EQU		CAN_F2R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F2R1_FB9_Pos       EQU		9                                            
CAN_F2R1_FB9_Msk       EQU		0x1 << CAN_F2R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F2R1_FB9           EQU		CAN_F2R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F2R1_FB10_Pos      EQU		10                                           
CAN_F2R1_FB10_Msk      EQU		0x1 << CAN_F2R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F2R1_FB10          EQU		CAN_F2R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F2R1_FB11_Pos      EQU		11                                           
CAN_F2R1_FB11_Msk      EQU		0x1 << CAN_F2R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F2R1_FB11          EQU		CAN_F2R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F2R1_FB12_Pos      EQU		12                                           
CAN_F2R1_FB12_Msk      EQU		0x1 << CAN_F2R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F2R1_FB12          EQU		CAN_F2R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F2R1_FB13_Pos      EQU		13                                           
CAN_F2R1_FB13_Msk      EQU		0x1 << CAN_F2R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F2R1_FB13          EQU		CAN_F2R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F2R1_FB14_Pos      EQU		14                                           
CAN_F2R1_FB14_Msk      EQU		0x1 << CAN_F2R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F2R1_FB14          EQU		CAN_F2R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F2R1_FB15_Pos      EQU		15                                           
CAN_F2R1_FB15_Msk      EQU		0x1 << CAN_F2R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F2R1_FB15          EQU		CAN_F2R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F2R1_FB16_Pos      EQU		16                                           
CAN_F2R1_FB16_Msk      EQU		0x1 << CAN_F2R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F2R1_FB16          EQU		CAN_F2R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F2R1_FB17_Pos      EQU		17                                           
CAN_F2R1_FB17_Msk      EQU		0x1 << CAN_F2R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F2R1_FB17          EQU		CAN_F2R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F2R1_FB18_Pos      EQU		18                                           
CAN_F2R1_FB18_Msk      EQU		0x1 << CAN_F2R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F2R1_FB18          EQU		CAN_F2R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F2R1_FB19_Pos      EQU		19                                           
CAN_F2R1_FB19_Msk      EQU		0x1 << CAN_F2R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F2R1_FB19          EQU		CAN_F2R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F2R1_FB20_Pos      EQU		20                                           
CAN_F2R1_FB20_Msk      EQU		0x1 << CAN_F2R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F2R1_FB20          EQU		CAN_F2R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F2R1_FB21_Pos      EQU		21                                           
CAN_F2R1_FB21_Msk      EQU		0x1 << CAN_F2R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F2R1_FB21          EQU		CAN_F2R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F2R1_FB22_Pos      EQU		22                                           
CAN_F2R1_FB22_Msk      EQU		0x1 << CAN_F2R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F2R1_FB22          EQU		CAN_F2R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F2R1_FB23_Pos      EQU		23                                           
CAN_F2R1_FB23_Msk      EQU		0x1 << CAN_F2R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F2R1_FB23          EQU		CAN_F2R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F2R1_FB24_Pos      EQU		24                                           
CAN_F2R1_FB24_Msk      EQU		0x1 << CAN_F2R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F2R1_FB24          EQU		CAN_F2R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F2R1_FB25_Pos      EQU		25                                           
CAN_F2R1_FB25_Msk      EQU		0x1 << CAN_F2R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F2R1_FB25          EQU		CAN_F2R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F2R1_FB26_Pos      EQU		26                                           
CAN_F2R1_FB26_Msk      EQU		0x1 << CAN_F2R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F2R1_FB26          EQU		CAN_F2R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F2R1_FB27_Pos      EQU		27                                           
CAN_F2R1_FB27_Msk      EQU		0x1 << CAN_F2R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F2R1_FB27          EQU		CAN_F2R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F2R1_FB28_Pos      EQU		28                                           
CAN_F2R1_FB28_Msk      EQU		0x1 << CAN_F2R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F2R1_FB28          EQU		CAN_F2R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F2R1_FB29_Pos      EQU		29                                           
CAN_F2R1_FB29_Msk      EQU		0x1 << CAN_F2R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F2R1_FB29          EQU		CAN_F2R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F2R1_FB30_Pos      EQU		30                                           
CAN_F2R1_FB30_Msk      EQU		0x1 << CAN_F2R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F2R1_FB30          EQU		CAN_F2R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F2R1_FB31_Pos      EQU		31                                           
CAN_F2R1_FB31_Msk      EQU		0x1 << CAN_F2R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F2R1_FB31          EQU		CAN_F2R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F3R1		       EQU		0x258
;/*******************  Bit definition for CAN_F3R1 register  *******************/
CAN_F3R1_FB0_Pos       EQU		0                                            
CAN_F3R1_FB0_Msk       EQU		0x1 << CAN_F3R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F3R1_FB0           EQU		CAN_F3R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F3R1_FB1_Pos       EQU		1                                            
CAN_F3R1_FB1_Msk       EQU		0x1 << CAN_F3R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F3R1_FB1           EQU		CAN_F3R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F3R1_FB2_Pos       EQU		2                                            
CAN_F3R1_FB2_Msk       EQU		0x1 << CAN_F3R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F3R1_FB2           EQU		CAN_F3R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F3R1_FB3_Pos       EQU		3                                            
CAN_F3R1_FB3_Msk       EQU		0x1 << CAN_F3R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F3R1_FB3           EQU		CAN_F3R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F3R1_FB4_Pos       EQU		4                                            
CAN_F3R1_FB4_Msk       EQU		0x1 << CAN_F3R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F3R1_FB4           EQU		CAN_F3R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F3R1_FB5_Pos       EQU		5                                            
CAN_F3R1_FB5_Msk       EQU		0x1 << CAN_F3R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F3R1_FB5           EQU		CAN_F3R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F3R1_FB6_Pos       EQU		6                                            
CAN_F3R1_FB6_Msk       EQU		0x1 << CAN_F3R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F3R1_FB6           EQU		CAN_F3R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F3R1_FB7_Pos       EQU		7                                            
CAN_F3R1_FB7_Msk       EQU		0x1 << CAN_F3R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F3R1_FB7           EQU		CAN_F3R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F3R1_FB8_Pos       EQU		8                                            
CAN_F3R1_FB8_Msk       EQU		0x1 << CAN_F3R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F3R1_FB8           EQU		CAN_F3R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F3R1_FB9_Pos       EQU		9                                            
CAN_F3R1_FB9_Msk       EQU		0x1 << CAN_F3R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F3R1_FB9           EQU		CAN_F3R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F3R1_FB10_Pos      EQU		10                                           
CAN_F3R1_FB10_Msk      EQU		0x1 << CAN_F3R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F3R1_FB10          EQU		CAN_F3R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F3R1_FB11_Pos      EQU		11                                           
CAN_F3R1_FB11_Msk      EQU		0x1 << CAN_F3R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F3R1_FB11          EQU		CAN_F3R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F3R1_FB12_Pos      EQU		12                                           
CAN_F3R1_FB12_Msk      EQU		0x1 << CAN_F3R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F3R1_FB12          EQU		CAN_F3R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F3R1_FB13_Pos      EQU		13                                           
CAN_F3R1_FB13_Msk      EQU		0x1 << CAN_F3R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F3R1_FB13          EQU		CAN_F3R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F3R1_FB14_Pos      EQU		14                                           
CAN_F3R1_FB14_Msk      EQU		0x1 << CAN_F3R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F3R1_FB14          EQU		CAN_F3R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F3R1_FB15_Pos      EQU		15                                           
CAN_F3R1_FB15_Msk      EQU		0x1 << CAN_F3R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F3R1_FB15          EQU		CAN_F3R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F3R1_FB16_Pos      EQU		16                                           
CAN_F3R1_FB16_Msk      EQU		0x1 << CAN_F3R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F3R1_FB16          EQU		CAN_F3R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F3R1_FB17_Pos      EQU		17                                           
CAN_F3R1_FB17_Msk      EQU		0x1 << CAN_F3R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F3R1_FB17          EQU		CAN_F3R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F3R1_FB18_Pos      EQU		18                                           
CAN_F3R1_FB18_Msk      EQU		0x1 << CAN_F3R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F3R1_FB18          EQU		CAN_F3R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F3R1_FB19_Pos      EQU		19                                           
CAN_F3R1_FB19_Msk      EQU		0x1 << CAN_F3R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F3R1_FB19          EQU		CAN_F3R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F3R1_FB20_Pos      EQU		20                                           
CAN_F3R1_FB20_Msk      EQU		0x1 << CAN_F3R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F3R1_FB20          EQU		CAN_F3R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F3R1_FB21_Pos      EQU		21                                           
CAN_F3R1_FB21_Msk      EQU		0x1 << CAN_F3R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F3R1_FB21          EQU		CAN_F3R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F3R1_FB22_Pos      EQU		22                                           
CAN_F3R1_FB22_Msk      EQU		0x1 << CAN_F3R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F3R1_FB22          EQU		CAN_F3R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F3R1_FB23_Pos      EQU		23                                           
CAN_F3R1_FB23_Msk      EQU		0x1 << CAN_F3R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F3R1_FB23          EQU		CAN_F3R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F3R1_FB24_Pos      EQU		24                                           
CAN_F3R1_FB24_Msk      EQU		0x1 << CAN_F3R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F3R1_FB24          EQU		CAN_F3R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F3R1_FB25_Pos      EQU		25                                           
CAN_F3R1_FB25_Msk      EQU		0x1 << CAN_F3R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F3R1_FB25          EQU		CAN_F3R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F3R1_FB26_Pos      EQU		26                                           
CAN_F3R1_FB26_Msk      EQU		0x1 << CAN_F3R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F3R1_FB26          EQU		CAN_F3R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F3R1_FB27_Pos      EQU		27                                           
CAN_F3R1_FB27_Msk      EQU		0x1 << CAN_F3R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F3R1_FB27          EQU		CAN_F3R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F3R1_FB28_Pos      EQU		28                                           
CAN_F3R1_FB28_Msk      EQU		0x1 << CAN_F3R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F3R1_FB28          EQU		CAN_F3R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F3R1_FB29_Pos      EQU		29                                           
CAN_F3R1_FB29_Msk      EQU		0x1 << CAN_F3R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F3R1_FB29          EQU		CAN_F3R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F3R1_FB30_Pos      EQU		30                                           
CAN_F3R1_FB30_Msk      EQU		0x1 << CAN_F3R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F3R1_FB30          EQU		CAN_F3R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F3R1_FB31_Pos      EQU		31                                           
CAN_F3R1_FB31_Msk      EQU		0x1 << CAN_F3R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F3R1_FB31          EQU		CAN_F3R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F4R1			   EQU		0x260
;/*******************  Bit definition for CAN_F4R1 register  *******************/
CAN_F4R1_FB0_Pos       EQU		0                                            
CAN_F4R1_FB0_Msk       EQU		0x1 << CAN_F4R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F4R1_FB0           EQU		CAN_F4R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F4R1_FB1_Pos       EQU		1                                            
CAN_F4R1_FB1_Msk       EQU		0x1 << CAN_F4R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F4R1_FB1           EQU		CAN_F4R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F4R1_FB2_Pos       EQU		2                                            
CAN_F4R1_FB2_Msk       EQU		0x1 << CAN_F4R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F4R1_FB2           EQU		CAN_F4R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F4R1_FB3_Pos       EQU		3                                            
CAN_F4R1_FB3_Msk       EQU		0x1 << CAN_F4R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F4R1_FB3           EQU		CAN_F4R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F4R1_FB4_Pos       EQU		4                                            
CAN_F4R1_FB4_Msk       EQU		0x1 << CAN_F4R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F4R1_FB4           EQU		CAN_F4R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F4R1_FB5_Pos       EQU		5                                            
CAN_F4R1_FB5_Msk       EQU		0x1 << CAN_F4R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F4R1_FB5           EQU		CAN_F4R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F4R1_FB6_Pos       EQU		6                                            
CAN_F4R1_FB6_Msk       EQU		0x1 << CAN_F4R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F4R1_FB6           EQU		CAN_F4R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F4R1_FB7_Pos       EQU		7                                            
CAN_F4R1_FB7_Msk       EQU		0x1 << CAN_F4R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F4R1_FB7           EQU		CAN_F4R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F4R1_FB8_Pos       EQU		8                                            
CAN_F4R1_FB8_Msk       EQU		0x1 << CAN_F4R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F4R1_FB8           EQU		CAN_F4R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F4R1_FB9_Pos       EQU		9                                            
CAN_F4R1_FB9_Msk       EQU		0x1 << CAN_F4R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F4R1_FB9           EQU		CAN_F4R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F4R1_FB10_Pos      EQU		10                                           
CAN_F4R1_FB10_Msk      EQU		0x1 << CAN_F4R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F4R1_FB10          EQU		CAN_F4R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F4R1_FB11_Pos      EQU		11                                           
CAN_F4R1_FB11_Msk      EQU		0x1 << CAN_F4R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F4R1_FB11          EQU		CAN_F4R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F4R1_FB12_Pos      EQU		12                                           
CAN_F4R1_FB12_Msk      EQU		0x1 << CAN_F4R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F4R1_FB12          EQU		CAN_F4R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F4R1_FB13_Pos      EQU		13                                           
CAN_F4R1_FB13_Msk      EQU		0x1 << CAN_F4R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F4R1_FB13          EQU		CAN_F4R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F4R1_FB14_Pos      EQU		14                                           
CAN_F4R1_FB14_Msk      EQU		0x1 << CAN_F4R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F4R1_FB14          EQU		CAN_F4R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F4R1_FB15_Pos      EQU		15                                           
CAN_F4R1_FB15_Msk      EQU		0x1 << CAN_F4R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F4R1_FB15          EQU		CAN_F4R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F4R1_FB16_Pos      EQU		16                                           
CAN_F4R1_FB16_Msk      EQU		0x1 << CAN_F4R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F4R1_FB16          EQU		CAN_F4R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F4R1_FB17_Pos      EQU		17                                           
CAN_F4R1_FB17_Msk      EQU		0x1 << CAN_F4R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F4R1_FB17          EQU		CAN_F4R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F4R1_FB18_Pos      EQU		18                                           
CAN_F4R1_FB18_Msk      EQU		0x1 << CAN_F4R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F4R1_FB18          EQU		CAN_F4R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F4R1_FB19_Pos      EQU		19                                           
CAN_F4R1_FB19_Msk      EQU		0x1 << CAN_F4R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F4R1_FB19          EQU		CAN_F4R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F4R1_FB20_Pos      EQU		20                                           
CAN_F4R1_FB20_Msk      EQU		0x1 << CAN_F4R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F4R1_FB20          EQU		CAN_F4R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F4R1_FB21_Pos      EQU		21                                           
CAN_F4R1_FB21_Msk      EQU		0x1 << CAN_F4R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F4R1_FB21          EQU		CAN_F4R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F4R1_FB22_Pos      EQU		22                                           
CAN_F4R1_FB22_Msk      EQU		0x1 << CAN_F4R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F4R1_FB22          EQU		CAN_F4R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F4R1_FB23_Pos      EQU		23                                           
CAN_F4R1_FB23_Msk      EQU		0x1 << CAN_F4R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F4R1_FB23          EQU		CAN_F4R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F4R1_FB24_Pos      EQU		24                                           
CAN_F4R1_FB24_Msk      EQU		0x1 << CAN_F4R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F4R1_FB24          EQU		CAN_F4R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F4R1_FB25_Pos      EQU		25                                           
CAN_F4R1_FB25_Msk      EQU		0x1 << CAN_F4R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F4R1_FB25          EQU		CAN_F4R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F4R1_FB26_Pos      EQU		26                                           
CAN_F4R1_FB26_Msk      EQU		0x1 << CAN_F4R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F4R1_FB26          EQU		CAN_F4R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F4R1_FB27_Pos      EQU		27                                           
CAN_F4R1_FB27_Msk      EQU		0x1 << CAN_F4R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F4R1_FB27          EQU		CAN_F4R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F4R1_FB28_Pos      EQU		28                                           
CAN_F4R1_FB28_Msk      EQU		0x1 << CAN_F4R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F4R1_FB28          EQU		CAN_F4R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F4R1_FB29_Pos      EQU		29                                           
CAN_F4R1_FB29_Msk      EQU		0x1 << CAN_F4R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F4R1_FB29          EQU		CAN_F4R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F4R1_FB30_Pos      EQU		30                                           
CAN_F4R1_FB30_Msk      EQU		0x1 << CAN_F4R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F4R1_FB30          EQU		CAN_F4R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F4R1_FB31_Pos      EQU		31                                           
CAN_F4R1_FB31_Msk      EQU		0x1 << CAN_F4R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F4R1_FB31          EQU		CAN_F4R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F5R1		       EQU		0x268
;/*******************  Bit definition for CAN_F5R1 register  *******************/
CAN_F5R1_FB0_Pos       EQU		0                                            
CAN_F5R1_FB0_Msk       EQU		0x1 << CAN_F5R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F5R1_FB0           EQU		CAN_F5R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F5R1_FB1_Pos       EQU		1                                            
CAN_F5R1_FB1_Msk       EQU		0x1 << CAN_F5R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F5R1_FB1           EQU		CAN_F5R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F5R1_FB2_Pos       EQU		2                                            
CAN_F5R1_FB2_Msk       EQU		0x1 << CAN_F5R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F5R1_FB2           EQU		CAN_F5R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F5R1_FB3_Pos       EQU		3                                            
CAN_F5R1_FB3_Msk       EQU		0x1 << CAN_F5R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F5R1_FB3           EQU		CAN_F5R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F5R1_FB4_Pos       EQU		4                                            
CAN_F5R1_FB4_Msk       EQU		0x1 << CAN_F5R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F5R1_FB4           EQU		CAN_F5R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F5R1_FB5_Pos       EQU		5                                            
CAN_F5R1_FB5_Msk       EQU		0x1 << CAN_F5R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F5R1_FB5           EQU		CAN_F5R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F5R1_FB6_Pos       EQU		6                                            
CAN_F5R1_FB6_Msk       EQU		0x1 << CAN_F5R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F5R1_FB6           EQU		CAN_F5R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F5R1_FB7_Pos       EQU		7                                            
CAN_F5R1_FB7_Msk       EQU		0x1 << CAN_F5R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F5R1_FB7           EQU		CAN_F5R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F5R1_FB8_Pos       EQU		8                                            
CAN_F5R1_FB8_Msk       EQU		0x1 << CAN_F5R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F5R1_FB8           EQU		CAN_F5R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F5R1_FB9_Pos       EQU		9                                            
CAN_F5R1_FB9_Msk       EQU		0x1 << CAN_F5R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F5R1_FB9           EQU		CAN_F5R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F5R1_FB10_Pos      EQU		10                                           
CAN_F5R1_FB10_Msk      EQU		0x1 << CAN_F5R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F5R1_FB10          EQU		CAN_F5R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F5R1_FB11_Pos      EQU		11                                           
CAN_F5R1_FB11_Msk      EQU		0x1 << CAN_F5R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F5R1_FB11          EQU		CAN_F5R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F5R1_FB12_Pos      EQU		12                                           
CAN_F5R1_FB12_Msk      EQU		0x1 << CAN_F5R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F5R1_FB12          EQU		CAN_F5R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F5R1_FB13_Pos      EQU		13                                           
CAN_F5R1_FB13_Msk      EQU		0x1 << CAN_F5R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F5R1_FB13          EQU		CAN_F5R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F5R1_FB14_Pos      EQU		14                                           
CAN_F5R1_FB14_Msk      EQU		0x1 << CAN_F5R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F5R1_FB14          EQU		CAN_F5R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F5R1_FB15_Pos      EQU		15                                           
CAN_F5R1_FB15_Msk      EQU		0x1 << CAN_F5R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F5R1_FB15          EQU		CAN_F5R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F5R1_FB16_Pos      EQU		16                                           
CAN_F5R1_FB16_Msk      EQU		0x1 << CAN_F5R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F5R1_FB16          EQU		CAN_F5R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F5R1_FB17_Pos      EQU		17                                           
CAN_F5R1_FB17_Msk      EQU		0x1 << CAN_F5R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F5R1_FB17          EQU		CAN_F5R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F5R1_FB18_Pos      EQU		18                                           
CAN_F5R1_FB18_Msk      EQU		0x1 << CAN_F5R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F5R1_FB18          EQU		CAN_F5R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F5R1_FB19_Pos      EQU		19                                           
CAN_F5R1_FB19_Msk      EQU		0x1 << CAN_F5R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F5R1_FB19          EQU		CAN_F5R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F5R1_FB20_Pos      EQU		20                                           
CAN_F5R1_FB20_Msk      EQU		0x1 << CAN_F5R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F5R1_FB20          EQU		CAN_F5R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F5R1_FB21_Pos      EQU		21                                           
CAN_F5R1_FB21_Msk      EQU		0x1 << CAN_F5R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F5R1_FB21          EQU		CAN_F5R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F5R1_FB22_Pos      EQU		22                                           
CAN_F5R1_FB22_Msk      EQU		0x1 << CAN_F5R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F5R1_FB22          EQU		CAN_F5R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F5R1_FB23_Pos      EQU		23                                           
CAN_F5R1_FB23_Msk      EQU		0x1 << CAN_F5R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F5R1_FB23          EQU		CAN_F5R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F5R1_FB24_Pos      EQU		24                                           
CAN_F5R1_FB24_Msk      EQU		0x1 << CAN_F5R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F5R1_FB24          EQU		CAN_F5R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F5R1_FB25_Pos      EQU		25                                           
CAN_F5R1_FB25_Msk      EQU		0x1 << CAN_F5R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F5R1_FB25          EQU		CAN_F5R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F5R1_FB26_Pos      EQU		26                                           
CAN_F5R1_FB26_Msk      EQU		0x1 << CAN_F5R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F5R1_FB26          EQU		CAN_F5R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F5R1_FB27_Pos      EQU		27                                           
CAN_F5R1_FB27_Msk      EQU		0x1 << CAN_F5R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F5R1_FB27          EQU		CAN_F5R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F5R1_FB28_Pos      EQU		28                                           
CAN_F5R1_FB28_Msk      EQU		0x1 << CAN_F5R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F5R1_FB28          EQU		CAN_F5R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F5R1_FB29_Pos      EQU		29                                           
CAN_F5R1_FB29_Msk      EQU		0x1 << CAN_F5R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F5R1_FB29          EQU		CAN_F5R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F5R1_FB30_Pos      EQU		30                                           
CAN_F5R1_FB30_Msk      EQU		0x1 << CAN_F5R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F5R1_FB30          EQU		CAN_F5R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F5R1_FB31_Pos      EQU		31                                           
CAN_F5R1_FB31_Msk      EQU		0x1 << CAN_F5R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F5R1_FB31          EQU		CAN_F5R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F6R1		       EQU		0x270
;/*******************  Bit definition for CAN_F6R1 register  *******************/
CAN_F6R1_FB0_Pos       EQU		0                                            
CAN_F6R1_FB0_Msk       EQU		0x1 << CAN_F6R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F6R1_FB0           EQU		CAN_F6R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F6R1_FB1_Pos       EQU		1                                            
CAN_F6R1_FB1_Msk       EQU		0x1 << CAN_F6R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F6R1_FB1           EQU		CAN_F6R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F6R1_FB2_Pos       EQU		2                                            
CAN_F6R1_FB2_Msk       EQU		0x1 << CAN_F6R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F6R1_FB2           EQU		CAN_F6R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F6R1_FB3_Pos       EQU		3                                            
CAN_F6R1_FB3_Msk       EQU		0x1 << CAN_F6R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F6R1_FB3           EQU		CAN_F6R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F6R1_FB4_Pos       EQU		4                                            
CAN_F6R1_FB4_Msk       EQU		0x1 << CAN_F6R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F6R1_FB4           EQU		CAN_F6R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F6R1_FB5_Pos       EQU		5                                            
CAN_F6R1_FB5_Msk       EQU		0x1 << CAN_F6R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F6R1_FB5           EQU		CAN_F6R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F6R1_FB6_Pos       EQU		6                                            
CAN_F6R1_FB6_Msk       EQU		0x1 << CAN_F6R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F6R1_FB6           EQU		CAN_F6R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F6R1_FB7_Pos       EQU		7                                            
CAN_F6R1_FB7_Msk       EQU		0x1 << CAN_F6R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F6R1_FB7           EQU		CAN_F6R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F6R1_FB8_Pos       EQU		8                                            
CAN_F6R1_FB8_Msk       EQU		0x1 << CAN_F6R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F6R1_FB8           EQU		CAN_F6R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F6R1_FB9_Pos       EQU		9                                            
CAN_F6R1_FB9_Msk       EQU		0x1 << CAN_F6R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F6R1_FB9           EQU		CAN_F6R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F6R1_FB10_Pos      EQU		10                                           
CAN_F6R1_FB10_Msk      EQU		0x1 << CAN_F6R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F6R1_FB10          EQU		CAN_F6R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F6R1_FB11_Pos      EQU		11                                           
CAN_F6R1_FB11_Msk      EQU		0x1 << CAN_F6R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F6R1_FB11          EQU		CAN_F6R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F6R1_FB12_Pos      EQU		12                                           
CAN_F6R1_FB12_Msk      EQU		0x1 << CAN_F6R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F6R1_FB12          EQU		CAN_F6R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F6R1_FB13_Pos      EQU		13                                           
CAN_F6R1_FB13_Msk      EQU		0x1 << CAN_F6R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F6R1_FB13          EQU		CAN_F6R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F6R1_FB14_Pos      EQU		14                                           
CAN_F6R1_FB14_Msk      EQU		0x1 << CAN_F6R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F6R1_FB14          EQU		CAN_F6R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F6R1_FB15_Pos      EQU		15                                           
CAN_F6R1_FB15_Msk      EQU		0x1 << CAN_F6R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F6R1_FB15          EQU		CAN_F6R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F6R1_FB16_Pos      EQU		16                                           
CAN_F6R1_FB16_Msk      EQU		0x1 << CAN_F6R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F6R1_FB16          EQU		CAN_F6R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F6R1_FB17_Pos      EQU		17                                           
CAN_F6R1_FB17_Msk      EQU		0x1 << CAN_F6R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F6R1_FB17          EQU		CAN_F6R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F6R1_FB18_Pos      EQU		18                                           
CAN_F6R1_FB18_Msk      EQU		0x1 << CAN_F6R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F6R1_FB18          EQU		CAN_F6R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F6R1_FB19_Pos      EQU		19                                           
CAN_F6R1_FB19_Msk      EQU		0x1 << CAN_F6R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F6R1_FB19          EQU		CAN_F6R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F6R1_FB20_Pos      EQU		20                                           
CAN_F6R1_FB20_Msk      EQU		0x1 << CAN_F6R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F6R1_FB20          EQU		CAN_F6R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F6R1_FB21_Pos      EQU		21                                           
CAN_F6R1_FB21_Msk      EQU		0x1 << CAN_F6R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F6R1_FB21          EQU		CAN_F6R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F6R1_FB22_Pos      EQU		22                                           
CAN_F6R1_FB22_Msk      EQU		0x1 << CAN_F6R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F6R1_FB22          EQU		CAN_F6R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F6R1_FB23_Pos      EQU		23                                           
CAN_F6R1_FB23_Msk      EQU		0x1 << CAN_F6R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F6R1_FB23          EQU		CAN_F6R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F6R1_FB24_Pos      EQU		24                                           
CAN_F6R1_FB24_Msk      EQU		0x1 << CAN_F6R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F6R1_FB24          EQU		CAN_F6R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F6R1_FB25_Pos      EQU		25                                           
CAN_F6R1_FB25_Msk      EQU		0x1 << CAN_F6R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F6R1_FB25          EQU		CAN_F6R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F6R1_FB26_Pos      EQU		26                                           
CAN_F6R1_FB26_Msk      EQU		0x1 << CAN_F6R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F6R1_FB26          EQU		CAN_F6R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F6R1_FB27_Pos      EQU		27                                           
CAN_F6R1_FB27_Msk      EQU		0x1 << CAN_F6R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F6R1_FB27          EQU		CAN_F6R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F6R1_FB28_Pos      EQU		28                                           
CAN_F6R1_FB28_Msk      EQU		0x1 << CAN_F6R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F6R1_FB28          EQU		CAN_F6R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F6R1_FB29_Pos      EQU		29                                           
CAN_F6R1_FB29_Msk      EQU		0x1 << CAN_F6R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F6R1_FB29          EQU		CAN_F6R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F6R1_FB30_Pos      EQU		30                                           
CAN_F6R1_FB30_Msk      EQU		0x1 << CAN_F6R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F6R1_FB30          EQU		CAN_F6R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F6R1_FB31_Pos      EQU		31                                           
CAN_F6R1_FB31_Msk      EQU		0x1 << CAN_F6R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F6R1_FB31          EQU		CAN_F6R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F7R1		       EQU		0x278
;/*******************  Bit definition for CAN_F7R1 register  *******************/
CAN_F7R1_FB0_Pos       EQU		0                                            
CAN_F7R1_FB0_Msk       EQU		0x1 << CAN_F7R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F7R1_FB0           EQU		CAN_F7R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F7R1_FB1_Pos       EQU		1                                            
CAN_F7R1_FB1_Msk       EQU		0x1 << CAN_F7R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F7R1_FB1           EQU		CAN_F7R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F7R1_FB2_Pos       EQU		2                                            
CAN_F7R1_FB2_Msk       EQU		0x1 << CAN_F7R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F7R1_FB2           EQU		CAN_F7R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F7R1_FB3_Pos       EQU		3                                            
CAN_F7R1_FB3_Msk       EQU		0x1 << CAN_F7R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F7R1_FB3           EQU		CAN_F7R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F7R1_FB4_Pos       EQU		4                                            
CAN_F7R1_FB4_Msk       EQU		0x1 << CAN_F7R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F7R1_FB4           EQU		CAN_F7R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F7R1_FB5_Pos       EQU		5                                            
CAN_F7R1_FB5_Msk       EQU		0x1 << CAN_F7R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F7R1_FB5           EQU		CAN_F7R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F7R1_FB6_Pos       EQU		6                                            
CAN_F7R1_FB6_Msk       EQU		0x1 << CAN_F7R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F7R1_FB6           EQU		CAN_F7R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F7R1_FB7_Pos       EQU		7                                            
CAN_F7R1_FB7_Msk       EQU		0x1 << CAN_F7R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F7R1_FB7           EQU		CAN_F7R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F7R1_FB8_Pos       EQU		8                                            
CAN_F7R1_FB8_Msk       EQU		0x1 << CAN_F7R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F7R1_FB8           EQU		CAN_F7R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F7R1_FB9_Pos       EQU		9                                            
CAN_F7R1_FB9_Msk       EQU		0x1 << CAN_F7R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F7R1_FB9           EQU		CAN_F7R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F7R1_FB10_Pos      EQU		10                                           
CAN_F7R1_FB10_Msk      EQU		0x1 << CAN_F7R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F7R1_FB10          EQU		CAN_F7R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F7R1_FB11_Pos      EQU		11                                           
CAN_F7R1_FB11_Msk      EQU		0x1 << CAN_F7R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F7R1_FB11          EQU		CAN_F7R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F7R1_FB12_Pos      EQU		12                                           
CAN_F7R1_FB12_Msk      EQU		0x1 << CAN_F7R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F7R1_FB12          EQU		CAN_F7R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F7R1_FB13_Pos      EQU		13                                           
CAN_F7R1_FB13_Msk      EQU		0x1 << CAN_F7R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F7R1_FB13          EQU		CAN_F7R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F7R1_FB14_Pos      EQU		14                                           
CAN_F7R1_FB14_Msk      EQU		0x1 << CAN_F7R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F7R1_FB14          EQU		CAN_F7R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F7R1_FB15_Pos      EQU		15                                           
CAN_F7R1_FB15_Msk      EQU		0x1 << CAN_F7R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F7R1_FB15          EQU		CAN_F7R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F7R1_FB16_Pos      EQU		16                                           
CAN_F7R1_FB16_Msk      EQU		0x1 << CAN_F7R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F7R1_FB16          EQU		CAN_F7R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F7R1_FB17_Pos      EQU		17                                           
CAN_F7R1_FB17_Msk      EQU		0x1 << CAN_F7R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F7R1_FB17          EQU		CAN_F7R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F7R1_FB18_Pos      EQU		18                                           
CAN_F7R1_FB18_Msk      EQU		0x1 << CAN_F7R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F7R1_FB18          EQU		CAN_F7R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F7R1_FB19_Pos      EQU		19                                           
CAN_F7R1_FB19_Msk      EQU		0x1 << CAN_F7R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F7R1_FB19          EQU		CAN_F7R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F7R1_FB20_Pos      EQU		20                                           
CAN_F7R1_FB20_Msk      EQU		0x1 << CAN_F7R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F7R1_FB20          EQU		CAN_F7R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F7R1_FB21_Pos      EQU		21                                           
CAN_F7R1_FB21_Msk      EQU		0x1 << CAN_F7R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F7R1_FB21          EQU		CAN_F7R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F7R1_FB22_Pos      EQU		22                                           
CAN_F7R1_FB22_Msk      EQU		0x1 << CAN_F7R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F7R1_FB22          EQU		CAN_F7R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F7R1_FB23_Pos      EQU		23                                           
CAN_F7R1_FB23_Msk      EQU		0x1 << CAN_F7R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F7R1_FB23          EQU		CAN_F7R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F7R1_FB24_Pos      EQU		24                                           
CAN_F7R1_FB24_Msk      EQU		0x1 << CAN_F7R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F7R1_FB24          EQU		CAN_F7R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F7R1_FB25_Pos      EQU		25                                           
CAN_F7R1_FB25_Msk      EQU		0x1 << CAN_F7R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F7R1_FB25          EQU		CAN_F7R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F7R1_FB26_Pos      EQU		26                                           
CAN_F7R1_FB26_Msk      EQU		0x1 << CAN_F7R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F7R1_FB26          EQU		CAN_F7R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F7R1_FB27_Pos      EQU		27                                           
CAN_F7R1_FB27_Msk      EQU		0x1 << CAN_F7R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F7R1_FB27          EQU		CAN_F7R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F7R1_FB28_Pos      EQU		28                                           
CAN_F7R1_FB28_Msk      EQU		0x1 << CAN_F7R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F7R1_FB28          EQU		CAN_F7R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F7R1_FB29_Pos      EQU		29                                           
CAN_F7R1_FB29_Msk      EQU		0x1 << CAN_F7R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F7R1_FB29          EQU		CAN_F7R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F7R1_FB30_Pos      EQU		30                                           
CAN_F7R1_FB30_Msk      EQU		0x1 << CAN_F7R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F7R1_FB30          EQU		CAN_F7R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F7R1_FB31_Pos      EQU		31                                           
CAN_F7R1_FB31_Msk      EQU		0x1 << CAN_F7R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F7R1_FB31          EQU		CAN_F7R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F8R1		       EQU		0x280
;/*******************  Bit definition for CAN_F8R1 register  *******************/
CAN_F8R1_FB0_Pos       EQU		0                                            
CAN_F8R1_FB0_Msk       EQU		0x1 << CAN_F8R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F8R1_FB0           EQU		CAN_F8R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F8R1_FB1_Pos       EQU		1                                            
CAN_F8R1_FB1_Msk       EQU		0x1 << CAN_F8R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F8R1_FB1           EQU		CAN_F8R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F8R1_FB2_Pos       EQU		2                                            
CAN_F8R1_FB2_Msk       EQU		0x1 << CAN_F8R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F8R1_FB2           EQU		CAN_F8R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F8R1_FB3_Pos       EQU		3                                            
CAN_F8R1_FB3_Msk       EQU		0x1 << CAN_F8R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F8R1_FB3           EQU		CAN_F8R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F8R1_FB4_Pos       EQU		4                                            
CAN_F8R1_FB4_Msk       EQU		0x1 << CAN_F8R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F8R1_FB4           EQU		CAN_F8R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F8R1_FB5_Pos       EQU		5                                            
CAN_F8R1_FB5_Msk       EQU		0x1 << CAN_F8R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F8R1_FB5           EQU		CAN_F8R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F8R1_FB6_Pos       EQU		6                                            
CAN_F8R1_FB6_Msk       EQU		0x1 << CAN_F8R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F8R1_FB6           EQU		CAN_F8R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F8R1_FB7_Pos       EQU		7                                            
CAN_F8R1_FB7_Msk       EQU		0x1 << CAN_F8R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F8R1_FB7           EQU		CAN_F8R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F8R1_FB8_Pos       EQU		8                                            
CAN_F8R1_FB8_Msk       EQU		0x1 << CAN_F8R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F8R1_FB8           EQU		CAN_F8R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F8R1_FB9_Pos       EQU		9                                            
CAN_F8R1_FB9_Msk       EQU		0x1 << CAN_F8R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F8R1_FB9           EQU		CAN_F8R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F8R1_FB10_Pos      EQU		10                                           
CAN_F8R1_FB10_Msk      EQU		0x1 << CAN_F8R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F8R1_FB10          EQU		CAN_F8R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F8R1_FB11_Pos      EQU		11                                           
CAN_F8R1_FB11_Msk      EQU		0x1 << CAN_F8R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F8R1_FB11          EQU		CAN_F8R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F8R1_FB12_Pos      EQU		12                                           
CAN_F8R1_FB12_Msk      EQU		0x1 << CAN_F8R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F8R1_FB12          EQU		CAN_F8R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F8R1_FB13_Pos      EQU		13                                           
CAN_F8R1_FB13_Msk      EQU		0x1 << CAN_F8R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F8R1_FB13          EQU		CAN_F8R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F8R1_FB14_Pos      EQU		14                                           
CAN_F8R1_FB14_Msk      EQU		0x1 << CAN_F8R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F8R1_FB14          EQU		CAN_F8R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F8R1_FB15_Pos      EQU		15                                           
CAN_F8R1_FB15_Msk      EQU		0x1 << CAN_F8R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F8R1_FB15          EQU		CAN_F8R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F8R1_FB16_Pos      EQU		16                                           
CAN_F8R1_FB16_Msk      EQU		0x1 << CAN_F8R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F8R1_FB16          EQU		CAN_F8R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F8R1_FB17_Pos      EQU		17                                           
CAN_F8R1_FB17_Msk      EQU		0x1 << CAN_F8R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F8R1_FB17          EQU		CAN_F8R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F8R1_FB18_Pos      EQU		18                                           
CAN_F8R1_FB18_Msk      EQU		0x1 << CAN_F8R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F8R1_FB18          EQU		CAN_F8R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F8R1_FB19_Pos      EQU		19                                           
CAN_F8R1_FB19_Msk      EQU		0x1 << CAN_F8R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F8R1_FB19          EQU		CAN_F8R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F8R1_FB20_Pos      EQU		20                                           
CAN_F8R1_FB20_Msk      EQU		0x1 << CAN_F8R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F8R1_FB20          EQU		CAN_F8R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F8R1_FB21_Pos      EQU		21                                           
CAN_F8R1_FB21_Msk      EQU		0x1 << CAN_F8R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F8R1_FB21          EQU		CAN_F8R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F8R1_FB22_Pos      EQU		22                                           
CAN_F8R1_FB22_Msk      EQU		0x1 << CAN_F8R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F8R1_FB22          EQU		CAN_F8R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F8R1_FB23_Pos      EQU		23                                           
CAN_F8R1_FB23_Msk      EQU		0x1 << CAN_F8R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F8R1_FB23          EQU		CAN_F8R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F8R1_FB24_Pos      EQU		24                                           
CAN_F8R1_FB24_Msk      EQU		0x1 << CAN_F8R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F8R1_FB24          EQU		CAN_F8R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F8R1_FB25_Pos      EQU		25                                           
CAN_F8R1_FB25_Msk      EQU		0x1 << CAN_F8R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F8R1_FB25          EQU		CAN_F8R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F8R1_FB26_Pos      EQU		26                                           
CAN_F8R1_FB26_Msk      EQU		0x1 << CAN_F8R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F8R1_FB26          EQU		CAN_F8R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F8R1_FB27_Pos      EQU		27                                           
CAN_F8R1_FB27_Msk      EQU		0x1 << CAN_F8R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F8R1_FB27          EQU		CAN_F8R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F8R1_FB28_Pos      EQU		28                                           
CAN_F8R1_FB28_Msk      EQU		0x1 << CAN_F8R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F8R1_FB28          EQU		CAN_F8R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F8R1_FB29_Pos      EQU		29                                           
CAN_F8R1_FB29_Msk      EQU		0x1 << CAN_F8R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F8R1_FB29          EQU		CAN_F8R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F8R1_FB30_Pos      EQU		30                                           
CAN_F8R1_FB30_Msk      EQU		0x1 << CAN_F8R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F8R1_FB30          EQU		CAN_F8R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F8R1_FB31_Pos      EQU		31                                           
CAN_F8R1_FB31_Msk      EQU		0x1 << CAN_F8R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F8R1_FB31          EQU		CAN_F8R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F9R1		       EQU		0x288
;/*******************  Bit definition for CAN_F9R1 register  *******************/
CAN_F9R1_FB0_Pos       EQU		0                                            
CAN_F9R1_FB0_Msk       EQU		0x1 << CAN_F9R1_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F9R1_FB0           EQU		CAN_F9R1_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F9R1_FB1_Pos       EQU		1                                            
CAN_F9R1_FB1_Msk       EQU		0x1 << CAN_F9R1_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F9R1_FB1           EQU		CAN_F9R1_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F9R1_FB2_Pos       EQU		2                                            
CAN_F9R1_FB2_Msk       EQU		0x1 << CAN_F9R1_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F9R1_FB2           EQU		CAN_F9R1_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F9R1_FB3_Pos       EQU		3                                            
CAN_F9R1_FB3_Msk       EQU		0x1 << CAN_F9R1_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F9R1_FB3           EQU		CAN_F9R1_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F9R1_FB4_Pos       EQU		4                                            
CAN_F9R1_FB4_Msk       EQU		0x1 << CAN_F9R1_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F9R1_FB4           EQU		CAN_F9R1_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F9R1_FB5_Pos       EQU		5                                            
CAN_F9R1_FB5_Msk       EQU		0x1 << CAN_F9R1_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F9R1_FB5           EQU		CAN_F9R1_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F9R1_FB6_Pos       EQU		6                                            
CAN_F9R1_FB6_Msk       EQU		0x1 << CAN_F9R1_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F9R1_FB6           EQU		CAN_F9R1_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F9R1_FB7_Pos       EQU		7                                            
CAN_F9R1_FB7_Msk       EQU		0x1 << CAN_F9R1_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F9R1_FB7           EQU		CAN_F9R1_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F9R1_FB8_Pos       EQU		8                                            
CAN_F9R1_FB8_Msk       EQU		0x1 << CAN_F9R1_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F9R1_FB8           EQU		CAN_F9R1_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F9R1_FB9_Pos       EQU		9                                            
CAN_F9R1_FB9_Msk       EQU		0x1 << CAN_F9R1_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F9R1_FB9           EQU		CAN_F9R1_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F9R1_FB10_Pos      EQU		10                                           
CAN_F9R1_FB10_Msk      EQU		0x1 << CAN_F9R1_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F9R1_FB10          EQU		CAN_F9R1_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F9R1_FB11_Pos      EQU		11                                           
CAN_F9R1_FB11_Msk      EQU		0x1 << CAN_F9R1_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F9R1_FB11          EQU		CAN_F9R1_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F9R1_FB12_Pos      EQU		12                                           
CAN_F9R1_FB12_Msk      EQU		0x1 << CAN_F9R1_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F9R1_FB12          EQU		CAN_F9R1_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F9R1_FB13_Pos      EQU		13                                           
CAN_F9R1_FB13_Msk      EQU		0x1 << CAN_F9R1_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F9R1_FB13          EQU		CAN_F9R1_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F9R1_FB14_Pos      EQU		14                                           
CAN_F9R1_FB14_Msk      EQU		0x1 << CAN_F9R1_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F9R1_FB14          EQU		CAN_F9R1_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F9R1_FB15_Pos      EQU		15                                           
CAN_F9R1_FB15_Msk      EQU		0x1 << CAN_F9R1_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F9R1_FB15          EQU		CAN_F9R1_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F9R1_FB16_Pos      EQU		16                                           
CAN_F9R1_FB16_Msk      EQU		0x1 << CAN_F9R1_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F9R1_FB16          EQU		CAN_F9R1_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F9R1_FB17_Pos      EQU		17                                           
CAN_F9R1_FB17_Msk      EQU		0x1 << CAN_F9R1_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F9R1_FB17          EQU		CAN_F9R1_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F9R1_FB18_Pos      EQU		18                                           
CAN_F9R1_FB18_Msk      EQU		0x1 << CAN_F9R1_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F9R1_FB18          EQU		CAN_F9R1_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F9R1_FB19_Pos      EQU		19                                           
CAN_F9R1_FB19_Msk      EQU		0x1 << CAN_F9R1_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F9R1_FB19          EQU		CAN_F9R1_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F9R1_FB20_Pos      EQU		20                                           
CAN_F9R1_FB20_Msk      EQU		0x1 << CAN_F9R1_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F9R1_FB20          EQU		CAN_F9R1_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F9R1_FB21_Pos      EQU		21                                           
CAN_F9R1_FB21_Msk      EQU		0x1 << CAN_F9R1_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F9R1_FB21          EQU		CAN_F9R1_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F9R1_FB22_Pos      EQU		22                                           
CAN_F9R1_FB22_Msk      EQU		0x1 << CAN_F9R1_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F9R1_FB22          EQU		CAN_F9R1_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F9R1_FB23_Pos      EQU		23                                           
CAN_F9R1_FB23_Msk      EQU		0x1 << CAN_F9R1_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F9R1_FB23          EQU		CAN_F9R1_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F9R1_FB24_Pos      EQU		24                                           
CAN_F9R1_FB24_Msk      EQU		0x1 << CAN_F9R1_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F9R1_FB24          EQU		CAN_F9R1_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F9R1_FB25_Pos      EQU		25                                           
CAN_F9R1_FB25_Msk      EQU		0x1 << CAN_F9R1_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F9R1_FB25          EQU		CAN_F9R1_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F9R1_FB26_Pos      EQU		26                                           
CAN_F9R1_FB26_Msk      EQU		0x1 << CAN_F9R1_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F9R1_FB26          EQU		CAN_F9R1_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F9R1_FB27_Pos      EQU		27                                           
CAN_F9R1_FB27_Msk      EQU		0x1 << CAN_F9R1_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F9R1_FB27          EQU		CAN_F9R1_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F9R1_FB28_Pos      EQU		28                                           
CAN_F9R1_FB28_Msk      EQU		0x1 << CAN_F9R1_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F9R1_FB28          EQU		CAN_F9R1_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F9R1_FB29_Pos      EQU		29                                           
CAN_F9R1_FB29_Msk      EQU		0x1 << CAN_F9R1_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F9R1_FB29          EQU		CAN_F9R1_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F9R1_FB30_Pos      EQU		30                                           
CAN_F9R1_FB30_Msk      EQU		0x1 << CAN_F9R1_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F9R1_FB30          EQU		CAN_F9R1_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F9R1_FB31_Pos      EQU		31                                           
CAN_F9R1_FB31_Msk      EQU		0x1 << CAN_F9R1_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F9R1_FB31          EQU		CAN_F9R1_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F10R1		       EQU		0x290
;/*******************  Bit definition for CAN_F10R1 register  ******************/
CAN_F10R1_FB0_Pos      EQU		0                                            
CAN_F10R1_FB0_Msk      EQU		0x1 << CAN_F10R1_FB0_Pos                        ;/*!< 0x00000001 */
CAN_F10R1_FB0          EQU		CAN_F10R1_FB0_Msk                               ;/*!<Filter bit 0 */
CAN_F10R1_FB1_Pos      EQU		1                                            
CAN_F10R1_FB1_Msk      EQU		0x1 << CAN_F10R1_FB1_Pos                        ;/*!< 0x00000002 */
CAN_F10R1_FB1          EQU		CAN_F10R1_FB1_Msk                               ;/*!<Filter bit 1 */
CAN_F10R1_FB2_Pos      EQU		2                                            
CAN_F10R1_FB2_Msk      EQU		0x1 << CAN_F10R1_FB2_Pos                        ;/*!< 0x00000004 */
CAN_F10R1_FB2          EQU		CAN_F10R1_FB2_Msk                               ;/*!<Filter bit 2 */
CAN_F10R1_FB3_Pos      EQU		3                                            
CAN_F10R1_FB3_Msk      EQU		0x1 << CAN_F10R1_FB3_Pos                        ;/*!< 0x00000008 */
CAN_F10R1_FB3          EQU		CAN_F10R1_FB3_Msk                               ;/*!<Filter bit 3 */
CAN_F10R1_FB4_Pos      EQU		4                                            
CAN_F10R1_FB4_Msk      EQU		0x1 << CAN_F10R1_FB4_Pos                        ;/*!< 0x00000010 */
CAN_F10R1_FB4          EQU		CAN_F10R1_FB4_Msk                               ;/*!<Filter bit 4 */
CAN_F10R1_FB5_Pos      EQU		5                                            
CAN_F10R1_FB5_Msk      EQU		0x1 << CAN_F10R1_FB5_Pos                        ;/*!< 0x00000020 */
CAN_F10R1_FB5          EQU		CAN_F10R1_FB5_Msk                               ;/*!<Filter bit 5 */
CAN_F10R1_FB6_Pos      EQU		6                                            
CAN_F10R1_FB6_Msk      EQU		0x1 << CAN_F10R1_FB6_Pos                        ;/*!< 0x00000040 */
CAN_F10R1_FB6          EQU		CAN_F10R1_FB6_Msk                               ;/*!<Filter bit 6 */
CAN_F10R1_FB7_Pos      EQU		7                                            
CAN_F10R1_FB7_Msk      EQU		0x1 << CAN_F10R1_FB7_Pos                        ;/*!< 0x00000080 */
CAN_F10R1_FB7          EQU		CAN_F10R1_FB7_Msk                               ;/*!<Filter bit 7 */
CAN_F10R1_FB8_Pos      EQU		8                                            
CAN_F10R1_FB8_Msk      EQU		0x1 << CAN_F10R1_FB8_Pos                        ;/*!< 0x00000100 */
CAN_F10R1_FB8          EQU		CAN_F10R1_FB8_Msk                               ;/*!<Filter bit 8 */
CAN_F10R1_FB9_Pos      EQU		9                                            
CAN_F10R1_FB9_Msk      EQU		0x1 << CAN_F10R1_FB9_Pos                        ;/*!< 0x00000200 */
CAN_F10R1_FB9          EQU		CAN_F10R1_FB9_Msk                               ;/*!<Filter bit 9 */
CAN_F10R1_FB10_Pos     EQU		10                                           
CAN_F10R1_FB10_Msk     EQU		0x1 << CAN_F10R1_FB10_Pos                       ;/*!< 0x00000400 */
CAN_F10R1_FB10         EQU		CAN_F10R1_FB10_Msk                              ;/*!<Filter bit 10 */
CAN_F10R1_FB11_Pos     EQU		11                                           
CAN_F10R1_FB11_Msk     EQU		0x1 << CAN_F10R1_FB11_Pos                       ;/*!< 0x00000800 */
CAN_F10R1_FB11         EQU		CAN_F10R1_FB11_Msk                              ;/*!<Filter bit 11 */
CAN_F10R1_FB12_Pos     EQU		12                                           
CAN_F10R1_FB12_Msk     EQU		0x1 << CAN_F10R1_FB12_Pos                       ;/*!< 0x00001000 */
CAN_F10R1_FB12         EQU		CAN_F10R1_FB12_Msk                              ;/*!<Filter bit 12 */
CAN_F10R1_FB13_Pos     EQU		13                                           
CAN_F10R1_FB13_Msk     EQU		0x1 << CAN_F10R1_FB13_Pos                       ;/*!< 0x00002000 */
CAN_F10R1_FB13         EQU		CAN_F10R1_FB13_Msk                              ;/*!<Filter bit 13 */
CAN_F10R1_FB14_Pos     EQU		14                                           
CAN_F10R1_FB14_Msk     EQU		0x1 << CAN_F10R1_FB14_Pos                       ;/*!< 0x00004000 */
CAN_F10R1_FB14         EQU		CAN_F10R1_FB14_Msk                              ;/*!<Filter bit 14 */
CAN_F10R1_FB15_Pos     EQU		15                                           
CAN_F10R1_FB15_Msk     EQU		0x1 << CAN_F10R1_FB15_Pos                       ;/*!< 0x00008000 */
CAN_F10R1_FB15         EQU		CAN_F10R1_FB15_Msk                              ;/*!<Filter bit 15 */
CAN_F10R1_FB16_Pos     EQU		16                                           
CAN_F10R1_FB16_Msk     EQU		0x1 << CAN_F10R1_FB16_Pos                       ;/*!< 0x00010000 */
CAN_F10R1_FB16         EQU		CAN_F10R1_FB16_Msk                              ;/*!<Filter bit 16 */
CAN_F10R1_FB17_Pos     EQU		17                                           
CAN_F10R1_FB17_Msk     EQU		0x1 << CAN_F10R1_FB17_Pos                       ;/*!< 0x00020000 */
CAN_F10R1_FB17         EQU		CAN_F10R1_FB17_Msk                              ;/*!<Filter bit 17 */
CAN_F10R1_FB18_Pos     EQU		18                                           
CAN_F10R1_FB18_Msk     EQU		0x1 << CAN_F10R1_FB18_Pos                       ;/*!< 0x00040000 */
CAN_F10R1_FB18         EQU		CAN_F10R1_FB18_Msk                              ;/*!<Filter bit 18 */
CAN_F10R1_FB19_Pos     EQU		19                                           
CAN_F10R1_FB19_Msk     EQU		0x1 << CAN_F10R1_FB19_Pos                       ;/*!< 0x00080000 */
CAN_F10R1_FB19         EQU		CAN_F10R1_FB19_Msk                              ;/*!<Filter bit 19 */
CAN_F10R1_FB20_Pos     EQU		20                                           
CAN_F10R1_FB20_Msk     EQU		0x1 << CAN_F10R1_FB20_Pos                       ;/*!< 0x00100000 */
CAN_F10R1_FB20         EQU		CAN_F10R1_FB20_Msk                              ;/*!<Filter bit 20 */
CAN_F10R1_FB21_Pos     EQU		21                                           
CAN_F10R1_FB21_Msk     EQU		0x1 << CAN_F10R1_FB21_Pos                       ;/*!< 0x00200000 */
CAN_F10R1_FB21         EQU		CAN_F10R1_FB21_Msk                              ;/*!<Filter bit 21 */
CAN_F10R1_FB22_Pos     EQU		22                                           
CAN_F10R1_FB22_Msk     EQU		0x1 << CAN_F10R1_FB22_Pos                       ;/*!< 0x00400000 */
CAN_F10R1_FB22         EQU		CAN_F10R1_FB22_Msk                              ;/*!<Filter bit 22 */
CAN_F10R1_FB23_Pos     EQU		23                                           
CAN_F10R1_FB23_Msk     EQU		0x1 << CAN_F10R1_FB23_Pos                       ;/*!< 0x00800000 */
CAN_F10R1_FB23         EQU		CAN_F10R1_FB23_Msk                              ;/*!<Filter bit 23 */
CAN_F10R1_FB24_Pos     EQU		24                                           
CAN_F10R1_FB24_Msk     EQU		0x1 << CAN_F10R1_FB24_Pos                       ;/*!< 0x01000000 */
CAN_F10R1_FB24         EQU		CAN_F10R1_FB24_Msk                              ;/*!<Filter bit 24 */
CAN_F10R1_FB25_Pos     EQU		25                                           
CAN_F10R1_FB25_Msk     EQU		0x1 << CAN_F10R1_FB25_Pos                       ;/*!< 0x02000000 */
CAN_F10R1_FB25         EQU		CAN_F10R1_FB25_Msk                              ;/*!<Filter bit 25 */
CAN_F10R1_FB26_Pos     EQU		26                                           
CAN_F10R1_FB26_Msk     EQU		0x1 << CAN_F10R1_FB26_Pos                       ;/*!< 0x04000000 */
CAN_F10R1_FB26         EQU		CAN_F10R1_FB26_Msk                              ;/*!<Filter bit 26 */
CAN_F10R1_FB27_Pos     EQU		27                                           
CAN_F10R1_FB27_Msk     EQU		0x1 << CAN_F10R1_FB27_Pos                       ;/*!< 0x08000000 */
CAN_F10R1_FB27         EQU		CAN_F10R1_FB27_Msk                              ;/*!<Filter bit 27 */
CAN_F10R1_FB28_Pos     EQU		28                                           
CAN_F10R1_FB28_Msk     EQU		0x1 << CAN_F10R1_FB28_Pos                       ;/*!< 0x10000000 */
CAN_F10R1_FB28         EQU		CAN_F10R1_FB28_Msk                              ;/*!<Filter bit 28 */
CAN_F10R1_FB29_Pos     EQU		29                                           
CAN_F10R1_FB29_Msk     EQU		0x1 << CAN_F10R1_FB29_Pos                       ;/*!< 0x20000000 */
CAN_F10R1_FB29         EQU		CAN_F10R1_FB29_Msk                              ;/*!<Filter bit 29 */
CAN_F10R1_FB30_Pos     EQU		30                                           
CAN_F10R1_FB30_Msk     EQU		0x1 << CAN_F10R1_FB30_Pos                       ;/*!< 0x40000000 */
CAN_F10R1_FB30         EQU		CAN_F10R1_FB30_Msk                              ;/*!<Filter bit 30 */
CAN_F10R1_FB31_Pos     EQU		31                                           
CAN_F10R1_FB31_Msk     EQU		0x1 << CAN_F10R1_FB31_Pos                       ;/*!< 0x80000000 */
CAN_F10R1_FB31         EQU		CAN_F10R1_FB31_Msk                              ;/*!<Filter bit 31 */

CAN_F11R1		       EQU		0x298
;/*******************  Bit definition for CAN_F11R1 register  ******************/
CAN_F11R1_FB0_Pos      EQU		0                                            
CAN_F11R1_FB0_Msk      EQU		0x1 << CAN_F11R1_FB0_Pos                        ;/*!< 0x00000001 */
CAN_F11R1_FB0          EQU		CAN_F11R1_FB0_Msk                               ;/*!<Filter bit 0 */
CAN_F11R1_FB1_Pos      EQU		1                                            
CAN_F11R1_FB1_Msk      EQU		0x1 << CAN_F11R1_FB1_Pos                        ;/*!< 0x00000002 */
CAN_F11R1_FB1          EQU		CAN_F11R1_FB1_Msk                               ;/*!<Filter bit 1 */
CAN_F11R1_FB2_Pos      EQU		2                                            
CAN_F11R1_FB2_Msk      EQU		0x1 << CAN_F11R1_FB2_Pos                        ;/*!< 0x00000004 */
CAN_F11R1_FB2          EQU		CAN_F11R1_FB2_Msk                               ;/*!<Filter bit 2 */
CAN_F11R1_FB3_Pos      EQU		3                                            
CAN_F11R1_FB3_Msk      EQU		0x1 << CAN_F11R1_FB3_Pos                        ;/*!< 0x00000008 */
CAN_F11R1_FB3          EQU		CAN_F11R1_FB3_Msk                               ;/*!<Filter bit 3 */
CAN_F11R1_FB4_Pos      EQU		4                                            
CAN_F11R1_FB4_Msk      EQU		0x1 << CAN_F11R1_FB4_Pos                        ;/*!< 0x00000010 */
CAN_F11R1_FB4          EQU		CAN_F11R1_FB4_Msk                               ;/*!<Filter bit 4 */
CAN_F11R1_FB5_Pos      EQU		5                                            
CAN_F11R1_FB5_Msk      EQU		0x1 << CAN_F11R1_FB5_Pos                        ;/*!< 0x00000020 */
CAN_F11R1_FB5          EQU		CAN_F11R1_FB5_Msk                               ;/*!<Filter bit 5 */
CAN_F11R1_FB6_Pos      EQU		6                                            
CAN_F11R1_FB6_Msk      EQU		0x1 << CAN_F11R1_FB6_Pos                        ;/*!< 0x00000040 */
CAN_F11R1_FB6          EQU		CAN_F11R1_FB6_Msk                               ;/*!<Filter bit 6 */
CAN_F11R1_FB7_Pos      EQU		7                                            
CAN_F11R1_FB7_Msk      EQU		0x1 << CAN_F11R1_FB7_Pos                        ;/*!< 0x00000080 */
CAN_F11R1_FB7          EQU		CAN_F11R1_FB7_Msk                               ;/*!<Filter bit 7 */
CAN_F11R1_FB8_Pos      EQU		8                                            
CAN_F11R1_FB8_Msk      EQU		0x1 << CAN_F11R1_FB8_Pos                        ;/*!< 0x00000100 */
CAN_F11R1_FB8          EQU		CAN_F11R1_FB8_Msk                               ;/*!<Filter bit 8 */
CAN_F11R1_FB9_Pos      EQU		9                                            
CAN_F11R1_FB9_Msk      EQU		0x1 << CAN_F11R1_FB9_Pos                        ;/*!< 0x00000200 */
CAN_F11R1_FB9          EQU		CAN_F11R1_FB9_Msk                               ;/*!<Filter bit 9 */
CAN_F11R1_FB10_Pos     EQU		10                                           
CAN_F11R1_FB10_Msk     EQU		0x1 << CAN_F11R1_FB10_Pos                       ;/*!< 0x00000400 */
CAN_F11R1_FB10         EQU		CAN_F11R1_FB10_Msk                              ;/*!<Filter bit 10 */
CAN_F11R1_FB11_Pos     EQU		11                                           
CAN_F11R1_FB11_Msk     EQU		0x1 << CAN_F11R1_FB11_Pos                       ;/*!< 0x00000800 */
CAN_F11R1_FB11         EQU		CAN_F11R1_FB11_Msk                              ;/*!<Filter bit 11 */
CAN_F11R1_FB12_Pos     EQU		12                                           
CAN_F11R1_FB12_Msk     EQU		0x1 << CAN_F11R1_FB12_Pos                       ;/*!< 0x00001000 */
CAN_F11R1_FB12         EQU		CAN_F11R1_FB12_Msk                              ;/*!<Filter bit 12 */
CAN_F11R1_FB13_Pos     EQU		13                                           
CAN_F11R1_FB13_Msk     EQU		0x1 << CAN_F11R1_FB13_Pos                       ;/*!< 0x00002000 */
CAN_F11R1_FB13         EQU		CAN_F11R1_FB13_Msk                              ;/*!<Filter bit 13 */
CAN_F11R1_FB14_Pos     EQU		14                                           
CAN_F11R1_FB14_Msk     EQU		0x1 << CAN_F11R1_FB14_Pos                       ;/*!< 0x00004000 */
CAN_F11R1_FB14         EQU		CAN_F11R1_FB14_Msk                              ;/*!<Filter bit 14 */
CAN_F11R1_FB15_Pos     EQU		15                                           
CAN_F11R1_FB15_Msk     EQU		0x1 << CAN_F11R1_FB15_Pos                       ;/*!< 0x00008000 */
CAN_F11R1_FB15         EQU		CAN_F11R1_FB15_Msk                              ;/*!<Filter bit 15 */
CAN_F11R1_FB16_Pos     EQU		16                                           
CAN_F11R1_FB16_Msk     EQU		0x1 << CAN_F11R1_FB16_Pos                       ;/*!< 0x00010000 */
CAN_F11R1_FB16         EQU		CAN_F11R1_FB16_Msk                              ;/*!<Filter bit 16 */
CAN_F11R1_FB17_Pos     EQU		17                                           
CAN_F11R1_FB17_Msk     EQU		0x1 << CAN_F11R1_FB17_Pos                       ;/*!< 0x00020000 */
CAN_F11R1_FB17         EQU		CAN_F11R1_FB17_Msk                              ;/*!<Filter bit 17 */
CAN_F11R1_FB18_Pos     EQU		18                                           
CAN_F11R1_FB18_Msk     EQU		0x1 << CAN_F11R1_FB18_Pos                       ;/*!< 0x00040000 */
CAN_F11R1_FB18         EQU		CAN_F11R1_FB18_Msk                              ;/*!<Filter bit 18 */
CAN_F11R1_FB19_Pos     EQU		19                                           
CAN_F11R1_FB19_Msk     EQU		0x1 << CAN_F11R1_FB19_Pos                       ;/*!< 0x00080000 */
CAN_F11R1_FB19         EQU		CAN_F11R1_FB19_Msk                              ;/*!<Filter bit 19 */
CAN_F11R1_FB20_Pos     EQU		20                                           
CAN_F11R1_FB20_Msk     EQU		0x1 << CAN_F11R1_FB20_Pos                       ;/*!< 0x00100000 */
CAN_F11R1_FB20         EQU		CAN_F11R1_FB20_Msk                              ;/*!<Filter bit 20 */
CAN_F11R1_FB21_Pos     EQU		21                                           
CAN_F11R1_FB21_Msk     EQU		0x1 << CAN_F11R1_FB21_Pos                       ;/*!< 0x00200000 */
CAN_F11R1_FB21         EQU		CAN_F11R1_FB21_Msk                              ;/*!<Filter bit 21 */
CAN_F11R1_FB22_Pos     EQU		22                                           
CAN_F11R1_FB22_Msk     EQU		0x1 << CAN_F11R1_FB22_Pos                       ;/*!< 0x00400000 */
CAN_F11R1_FB22         EQU		CAN_F11R1_FB22_Msk                              ;/*!<Filter bit 22 */
CAN_F11R1_FB23_Pos     EQU		23                                           
CAN_F11R1_FB23_Msk     EQU		0x1 << CAN_F11R1_FB23_Pos                       ;/*!< 0x00800000 */
CAN_F11R1_FB23         EQU		CAN_F11R1_FB23_Msk                              ;/*!<Filter bit 23 */
CAN_F11R1_FB24_Pos     EQU		24                                           
CAN_F11R1_FB24_Msk     EQU		0x1 << CAN_F11R1_FB24_Pos                       ;/*!< 0x01000000 */
CAN_F11R1_FB24         EQU		CAN_F11R1_FB24_Msk                              ;/*!<Filter bit 24 */
CAN_F11R1_FB25_Pos     EQU		25                                           
CAN_F11R1_FB25_Msk     EQU		0x1 << CAN_F11R1_FB25_Pos                       ;/*!< 0x02000000 */
CAN_F11R1_FB25         EQU		CAN_F11R1_FB25_Msk                              ;/*!<Filter bit 25 */
CAN_F11R1_FB26_Pos     EQU		26                                           
CAN_F11R1_FB26_Msk     EQU		0x1 << CAN_F11R1_FB26_Pos                       ;/*!< 0x04000000 */
CAN_F11R1_FB26         EQU		CAN_F11R1_FB26_Msk                              ;/*!<Filter bit 26 */
CAN_F11R1_FB27_Pos     EQU		27                                           
CAN_F11R1_FB27_Msk     EQU		0x1 << CAN_F11R1_FB27_Pos                       ;/*!< 0x08000000 */
CAN_F11R1_FB27         EQU		CAN_F11R1_FB27_Msk                              ;/*!<Filter bit 27 */
CAN_F11R1_FB28_Pos     EQU		28                                           
CAN_F11R1_FB28_Msk     EQU		0x1 << CAN_F11R1_FB28_Pos                       ;/*!< 0x10000000 */
CAN_F11R1_FB28         EQU		CAN_F11R1_FB28_Msk                              ;/*!<Filter bit 28 */
CAN_F11R1_FB29_Pos     EQU		29                                           
CAN_F11R1_FB29_Msk     EQU		0x1 << CAN_F11R1_FB29_Pos                       ;/*!< 0x20000000 */
CAN_F11R1_FB29         EQU		CAN_F11R1_FB29_Msk                              ;/*!<Filter bit 29 */
CAN_F11R1_FB30_Pos     EQU		30                                           
CAN_F11R1_FB30_Msk     EQU		0x1 << CAN_F11R1_FB30_Pos                       ;/*!< 0x40000000 */
CAN_F11R1_FB30         EQU		CAN_F11R1_FB30_Msk                              ;/*!<Filter bit 30 */
CAN_F11R1_FB31_Pos     EQU		31                                           
CAN_F11R1_FB31_Msk     EQU		0x1 << CAN_F11R1_FB31_Pos                       ;/*!< 0x80000000 */
CAN_F11R1_FB31         EQU		CAN_F11R1_FB31_Msk                              ;/*!<Filter bit 31 */

CAN_F12R1		       EQU		0x2A0
;/*******************  Bit definition for CAN_F12R1 register  ******************/
CAN_F12R1_FB0_Pos      EQU		0                                            
CAN_F12R1_FB0_Msk      EQU		0x1 << CAN_F12R1_FB0_Pos                        ;/*!< 0x00000001 */
CAN_F12R1_FB0          EQU		CAN_F12R1_FB0_Msk                               ;/*!<Filter bit 0 */
CAN_F12R1_FB1_Pos      EQU		1                                            
CAN_F12R1_FB1_Msk      EQU		0x1 << CAN_F12R1_FB1_Pos                        ;/*!< 0x00000002 */
CAN_F12R1_FB1          EQU		CAN_F12R1_FB1_Msk                               ;/*!<Filter bit 1 */
CAN_F12R1_FB2_Pos      EQU		2                                            
CAN_F12R1_FB2_Msk      EQU		0x1 << CAN_F12R1_FB2_Pos                        ;/*!< 0x00000004 */
CAN_F12R1_FB2          EQU		CAN_F12R1_FB2_Msk                               ;/*!<Filter bit 2 */
CAN_F12R1_FB3_Pos      EQU		3                                            
CAN_F12R1_FB3_Msk      EQU		0x1 << CAN_F12R1_FB3_Pos                        ;/*!< 0x00000008 */
CAN_F12R1_FB3          EQU		CAN_F12R1_FB3_Msk                               ;/*!<Filter bit 3 */
CAN_F12R1_FB4_Pos      EQU		4                                            
CAN_F12R1_FB4_Msk      EQU		0x1 << CAN_F12R1_FB4_Pos                        ;/*!< 0x00000010 */
CAN_F12R1_FB4          EQU		CAN_F12R1_FB4_Msk                               ;/*!<Filter bit 4 */
CAN_F12R1_FB5_Pos      EQU		5                                            
CAN_F12R1_FB5_Msk      EQU		0x1 << CAN_F12R1_FB5_Pos                        ;/*!< 0x00000020 */
CAN_F12R1_FB5          EQU		CAN_F12R1_FB5_Msk                               ;/*!<Filter bit 5 */
CAN_F12R1_FB6_Pos      EQU		6                                            
CAN_F12R1_FB6_Msk      EQU		0x1 << CAN_F12R1_FB6_Pos                        ;/*!< 0x00000040 */
CAN_F12R1_FB6          EQU		CAN_F12R1_FB6_Msk                               ;/*!<Filter bit 6 */
CAN_F12R1_FB7_Pos      EQU		7                                            
CAN_F12R1_FB7_Msk      EQU		0x1 << CAN_F12R1_FB7_Pos                        ;/*!< 0x00000080 */
CAN_F12R1_FB7          EQU		CAN_F12R1_FB7_Msk                               ;/*!<Filter bit 7 */
CAN_F12R1_FB8_Pos      EQU		8                                            
CAN_F12R1_FB8_Msk      EQU		0x1 << CAN_F12R1_FB8_Pos                        ;/*!< 0x00000100 */
CAN_F12R1_FB8          EQU		CAN_F12R1_FB8_Msk                               ;/*!<Filter bit 8 */
CAN_F12R1_FB9_Pos      EQU		9                                            
CAN_F12R1_FB9_Msk      EQU		0x1 << CAN_F12R1_FB9_Pos                        ;/*!< 0x00000200 */
CAN_F12R1_FB9          EQU		CAN_F12R1_FB9_Msk                               ;/*!<Filter bit 9 */
CAN_F12R1_FB10_Pos     EQU		10                                           
CAN_F12R1_FB10_Msk     EQU		0x1 << CAN_F12R1_FB10_Pos                       ;/*!< 0x00000400 */
CAN_F12R1_FB10         EQU		CAN_F12R1_FB10_Msk                              ;/*!<Filter bit 10 */
CAN_F12R1_FB11_Pos     EQU		11                                           
CAN_F12R1_FB11_Msk     EQU		0x1 << CAN_F12R1_FB11_Pos                       ;/*!< 0x00000800 */
CAN_F12R1_FB11         EQU		CAN_F12R1_FB11_Msk                              ;/*!<Filter bit 11 */
CAN_F12R1_FB12_Pos     EQU		12                                           
CAN_F12R1_FB12_Msk     EQU		0x1 << CAN_F12R1_FB12_Pos                       ;/*!< 0x00001000 */
CAN_F12R1_FB12         EQU		CAN_F12R1_FB12_Msk                              ;/*!<Filter bit 12 */
CAN_F12R1_FB13_Pos     EQU		13                                           
CAN_F12R1_FB13_Msk     EQU		0x1 << CAN_F12R1_FB13_Pos                       ;/*!< 0x00002000 */
CAN_F12R1_FB13         EQU		CAN_F12R1_FB13_Msk                              ;/*!<Filter bit 13 */
CAN_F12R1_FB14_Pos     EQU		14                                           
CAN_F12R1_FB14_Msk     EQU		0x1 << CAN_F12R1_FB14_Pos                       ;/*!< 0x00004000 */
CAN_F12R1_FB14         EQU		CAN_F12R1_FB14_Msk                              ;/*!<Filter bit 14 */
CAN_F12R1_FB15_Pos     EQU		15                                           
CAN_F12R1_FB15_Msk     EQU		0x1 << CAN_F12R1_FB15_Pos                       ;/*!< 0x00008000 */
CAN_F12R1_FB15         EQU		CAN_F12R1_FB15_Msk                              ;/*!<Filter bit 15 */
CAN_F12R1_FB16_Pos     EQU		16                                           
CAN_F12R1_FB16_Msk     EQU		0x1 << CAN_F12R1_FB16_Pos                       ;/*!< 0x00010000 */
CAN_F12R1_FB16         EQU		CAN_F12R1_FB16_Msk                              ;/*!<Filter bit 16 */
CAN_F12R1_FB17_Pos     EQU		17                                           
CAN_F12R1_FB17_Msk     EQU		0x1 << CAN_F12R1_FB17_Pos                       ;/*!< 0x00020000 */
CAN_F12R1_FB17         EQU		CAN_F12R1_FB17_Msk                              ;/*!<Filter bit 17 */
CAN_F12R1_FB18_Pos     EQU		18                                           
CAN_F12R1_FB18_Msk     EQU		0x1 << CAN_F12R1_FB18_Pos                       ;/*!< 0x00040000 */
CAN_F12R1_FB18         EQU		CAN_F12R1_FB18_Msk                              ;/*!<Filter bit 18 */
CAN_F12R1_FB19_Pos     EQU		19                                           
CAN_F12R1_FB19_Msk     EQU		0x1 << CAN_F12R1_FB19_Pos                       ;/*!< 0x00080000 */
CAN_F12R1_FB19         EQU		CAN_F12R1_FB19_Msk                              ;/*!<Filter bit 19 */
CAN_F12R1_FB20_Pos     EQU		20                                           
CAN_F12R1_FB20_Msk     EQU		0x1 << CAN_F12R1_FB20_Pos                       ;/*!< 0x00100000 */
CAN_F12R1_FB20         EQU		CAN_F12R1_FB20_Msk                              ;/*!<Filter bit 20 */
CAN_F12R1_FB21_Pos     EQU		21                                           
CAN_F12R1_FB21_Msk     EQU		0x1 << CAN_F12R1_FB21_Pos                       ;/*!< 0x00200000 */
CAN_F12R1_FB21         EQU		CAN_F12R1_FB21_Msk                              ;/*!<Filter bit 21 */
CAN_F12R1_FB22_Pos     EQU		22                                           
CAN_F12R1_FB22_Msk     EQU		0x1 << CAN_F12R1_FB22_Pos                       ;/*!< 0x00400000 */
CAN_F12R1_FB22         EQU		CAN_F12R1_FB22_Msk                              ;/*!<Filter bit 22 */
CAN_F12R1_FB23_Pos     EQU		23                                           
CAN_F12R1_FB23_Msk     EQU		0x1 << CAN_F12R1_FB23_Pos                       ;/*!< 0x00800000 */
CAN_F12R1_FB23         EQU		CAN_F12R1_FB23_Msk                              ;/*!<Filter bit 23 */
CAN_F12R1_FB24_Pos     EQU		24                                           
CAN_F12R1_FB24_Msk     EQU		0x1 << CAN_F12R1_FB24_Pos                       ;/*!< 0x01000000 */
CAN_F12R1_FB24         EQU		CAN_F12R1_FB24_Msk                              ;/*!<Filter bit 24 */
CAN_F12R1_FB25_Pos     EQU		25                                           
CAN_F12R1_FB25_Msk     EQU		0x1 << CAN_F12R1_FB25_Pos                       ;/*!< 0x02000000 */
CAN_F12R1_FB25         EQU		CAN_F12R1_FB25_Msk                              ;/*!<Filter bit 25 */
CAN_F12R1_FB26_Pos     EQU		26                                           
CAN_F12R1_FB26_Msk     EQU		0x1 << CAN_F12R1_FB26_Pos                       ;/*!< 0x04000000 */
CAN_F12R1_FB26         EQU		CAN_F12R1_FB26_Msk                              ;/*!<Filter bit 26 */
CAN_F12R1_FB27_Pos     EQU		27                                           
CAN_F12R1_FB27_Msk     EQU		0x1 << CAN_F12R1_FB27_Pos                       ;/*!< 0x08000000 */
CAN_F12R1_FB27         EQU		CAN_F12R1_FB27_Msk                              ;/*!<Filter bit 27 */
CAN_F12R1_FB28_Pos     EQU		28                                           
CAN_F12R1_FB28_Msk     EQU		0x1 << CAN_F12R1_FB28_Pos                       ;/*!< 0x10000000 */
CAN_F12R1_FB28         EQU		CAN_F12R1_FB28_Msk                              ;/*!<Filter bit 28 */
CAN_F12R1_FB29_Pos     EQU		29                                           
CAN_F12R1_FB29_Msk     EQU		0x1 << CAN_F12R1_FB29_Pos                       ;/*!< 0x20000000 */
CAN_F12R1_FB29         EQU		CAN_F12R1_FB29_Msk                              ;/*!<Filter bit 29 */
CAN_F12R1_FB30_Pos     EQU		30                                           
CAN_F12R1_FB30_Msk     EQU		0x1 << CAN_F12R1_FB30_Pos                       ;/*!< 0x40000000 */
CAN_F12R1_FB30         EQU		CAN_F12R1_FB30_Msk                              ;/*!<Filter bit 30 */
CAN_F12R1_FB31_Pos     EQU		31                                           
CAN_F12R1_FB31_Msk     EQU		0x1 << CAN_F12R1_FB31_Pos                       ;/*!< 0x80000000 */
CAN_F12R1_FB31         EQU		CAN_F12R1_FB31_Msk                              ;/*!<Filter bit 31 */

CAN_F13R1		       EQU		0x2A8
;/*******************  Bit definition for CAN_F13R1 register  ******************/
CAN_F13R1_FB0_Pos      EQU		0                                            
CAN_F13R1_FB0_Msk      EQU		0x1 << CAN_F13R1_FB0_Pos                        ;/*!< 0x00000001 */
CAN_F13R1_FB0          EQU		CAN_F13R1_FB0_Msk                               ;/*!<Filter bit 0 */
CAN_F13R1_FB1_Pos      EQU		1                                            
CAN_F13R1_FB1_Msk      EQU		0x1 << CAN_F13R1_FB1_Pos                        ;/*!< 0x00000002 */
CAN_F13R1_FB1          EQU		CAN_F13R1_FB1_Msk                               ;/*!<Filter bit 1 */
CAN_F13R1_FB2_Pos      EQU		2                                            
CAN_F13R1_FB2_Msk      EQU		0x1 << CAN_F13R1_FB2_Pos                        ;/*!< 0x00000004 */
CAN_F13R1_FB2          EQU		CAN_F13R1_FB2_Msk                               ;/*!<Filter bit 2 */
CAN_F13R1_FB3_Pos      EQU		3                                            
CAN_F13R1_FB3_Msk      EQU		0x1 << CAN_F13R1_FB3_Pos                        ;/*!< 0x00000008 */
CAN_F13R1_FB3          EQU		CAN_F13R1_FB3_Msk                               ;/*!<Filter bit 3 */
CAN_F13R1_FB4_Pos      EQU		4                                            
CAN_F13R1_FB4_Msk      EQU		0x1 << CAN_F13R1_FB4_Pos                        ;/*!< 0x00000010 */
CAN_F13R1_FB4          EQU		CAN_F13R1_FB4_Msk                               ;/*!<Filter bit 4 */
CAN_F13R1_FB5_Pos      EQU		5                                            
CAN_F13R1_FB5_Msk      EQU		0x1 << CAN_F13R1_FB5_Pos                        ;/*!< 0x00000020 */
CAN_F13R1_FB5          EQU		CAN_F13R1_FB5_Msk                               ;/*!<Filter bit 5 */
CAN_F13R1_FB6_Pos      EQU		6                                            
CAN_F13R1_FB6_Msk      EQU		0x1 << CAN_F13R1_FB6_Pos                        ;/*!< 0x00000040 */
CAN_F13R1_FB6          EQU		CAN_F13R1_FB6_Msk                               ;/*!<Filter bit 6 */
CAN_F13R1_FB7_Pos      EQU		7                                            
CAN_F13R1_FB7_Msk      EQU		0x1 << CAN_F13R1_FB7_Pos                        ;/*!< 0x00000080 */
CAN_F13R1_FB7          EQU		CAN_F13R1_FB7_Msk                               ;/*!<Filter bit 7 */
CAN_F13R1_FB8_Pos      EQU		8                                            
CAN_F13R1_FB8_Msk      EQU		0x1 << CAN_F13R1_FB8_Pos                        ;/*!< 0x00000100 */
CAN_F13R1_FB8          EQU		CAN_F13R1_FB8_Msk                               ;/*!<Filter bit 8 */
CAN_F13R1_FB9_Pos      EQU		9                                            
CAN_F13R1_FB9_Msk      EQU		0x1 << CAN_F13R1_FB9_Pos                        ;/*!< 0x00000200 */
CAN_F13R1_FB9          EQU		CAN_F13R1_FB9_Msk                               ;/*!<Filter bit 9 */
CAN_F13R1_FB10_Pos     EQU		10                                           
CAN_F13R1_FB10_Msk     EQU		0x1 << CAN_F13R1_FB10_Pos                       ;/*!< 0x00000400 */
CAN_F13R1_FB10         EQU		CAN_F13R1_FB10_Msk                              ;/*!<Filter bit 10 */
CAN_F13R1_FB11_Pos     EQU		11                                           
CAN_F13R1_FB11_Msk     EQU		0x1 << CAN_F13R1_FB11_Pos                       ;/*!< 0x00000800 */
CAN_F13R1_FB11         EQU		CAN_F13R1_FB11_Msk                              ;/*!<Filter bit 11 */
CAN_F13R1_FB12_Pos     EQU		12                                           
CAN_F13R1_FB12_Msk     EQU		0x1 << CAN_F13R1_FB12_Pos                       ;/*!< 0x00001000 */
CAN_F13R1_FB12         EQU		CAN_F13R1_FB12_Msk                              ;/*!<Filter bit 12 */
CAN_F13R1_FB13_Pos     EQU		13                                           
CAN_F13R1_FB13_Msk     EQU		0x1 << CAN_F13R1_FB13_Pos                       ;/*!< 0x00002000 */
CAN_F13R1_FB13         EQU		CAN_F13R1_FB13_Msk                              ;/*!<Filter bit 13 */
CAN_F13R1_FB14_Pos     EQU		14                                           
CAN_F13R1_FB14_Msk     EQU		0x1 << CAN_F13R1_FB14_Pos                       ;/*!< 0x00004000 */
CAN_F13R1_FB14         EQU		CAN_F13R1_FB14_Msk                              ;/*!<Filter bit 14 */
CAN_F13R1_FB15_Pos     EQU		15                                           
CAN_F13R1_FB15_Msk     EQU		0x1 << CAN_F13R1_FB15_Pos                       ;/*!< 0x00008000 */
CAN_F13R1_FB15         EQU		CAN_F13R1_FB15_Msk                              ;/*!<Filter bit 15 */
CAN_F13R1_FB16_Pos     EQU		16                                           
CAN_F13R1_FB16_Msk     EQU		0x1 << CAN_F13R1_FB16_Pos                       ;/*!< 0x00010000 */
CAN_F13R1_FB16         EQU		CAN_F13R1_FB16_Msk                              ;/*!<Filter bit 16 */
CAN_F13R1_FB17_Pos     EQU		17                                           
CAN_F13R1_FB17_Msk     EQU		0x1 << CAN_F13R1_FB17_Pos                       ;/*!< 0x00020000 */
CAN_F13R1_FB17         EQU		CAN_F13R1_FB17_Msk                              ;/*!<Filter bit 17 */
CAN_F13R1_FB18_Pos     EQU		18                                           
CAN_F13R1_FB18_Msk     EQU		0x1 << CAN_F13R1_FB18_Pos                       ;/*!< 0x00040000 */
CAN_F13R1_FB18         EQU		CAN_F13R1_FB18_Msk                              ;/*!<Filter bit 18 */
CAN_F13R1_FB19_Pos     EQU		19                                           
CAN_F13R1_FB19_Msk     EQU		0x1 << CAN_F13R1_FB19_Pos                       ;/*!< 0x00080000 */
CAN_F13R1_FB19         EQU		CAN_F13R1_FB19_Msk                              ;/*!<Filter bit 19 */
CAN_F13R1_FB20_Pos     EQU		20                                           
CAN_F13R1_FB20_Msk     EQU		0x1 << CAN_F13R1_FB20_Pos                       ;/*!< 0x00100000 */
CAN_F13R1_FB20         EQU		CAN_F13R1_FB20_Msk                              ;/*!<Filter bit 20 */
CAN_F13R1_FB21_Pos     EQU		21                                           
CAN_F13R1_FB21_Msk     EQU		0x1 << CAN_F13R1_FB21_Pos                       ;/*!< 0x00200000 */
CAN_F13R1_FB21         EQU		CAN_F13R1_FB21_Msk                              ;/*!<Filter bit 21 */
CAN_F13R1_FB22_Pos     EQU		22                                           
CAN_F13R1_FB22_Msk     EQU		0x1 << CAN_F13R1_FB22_Pos                       ;/*!< 0x00400000 */
CAN_F13R1_FB22         EQU		CAN_F13R1_FB22_Msk                              ;/*!<Filter bit 22 */
CAN_F13R1_FB23_Pos     EQU		23                                           
CAN_F13R1_FB23_Msk     EQU		0x1 << CAN_F13R1_FB23_Pos                       ;/*!< 0x00800000 */
CAN_F13R1_FB23         EQU		CAN_F13R1_FB23_Msk                              ;/*!<Filter bit 23 */
CAN_F13R1_FB24_Pos     EQU		24                                           
CAN_F13R1_FB24_Msk     EQU		0x1 << CAN_F13R1_FB24_Pos                       ;/*!< 0x01000000 */
CAN_F13R1_FB24         EQU		CAN_F13R1_FB24_Msk                              ;/*!<Filter bit 24 */
CAN_F13R1_FB25_Pos     EQU		25                                           
CAN_F13R1_FB25_Msk     EQU		0x1 << CAN_F13R1_FB25_Pos                       ;/*!< 0x02000000 */
CAN_F13R1_FB25         EQU		CAN_F13R1_FB25_Msk                              ;/*!<Filter bit 25 */
CAN_F13R1_FB26_Pos     EQU		26                                           
CAN_F13R1_FB26_Msk     EQU		0x1 << CAN_F13R1_FB26_Pos                       ;/*!< 0x04000000 */
CAN_F13R1_FB26         EQU		CAN_F13R1_FB26_Msk                              ;/*!<Filter bit 26 */
CAN_F13R1_FB27_Pos     EQU		27                                           
CAN_F13R1_FB27_Msk     EQU		0x1 << CAN_F13R1_FB27_Pos                       ;/*!< 0x08000000 */
CAN_F13R1_FB27         EQU		CAN_F13R1_FB27_Msk                              ;/*!<Filter bit 27 */
CAN_F13R1_FB28_Pos     EQU		28                                           
CAN_F13R1_FB28_Msk     EQU		0x1 << CAN_F13R1_FB28_Pos                       ;/*!< 0x10000000 */
CAN_F13R1_FB28         EQU		CAN_F13R1_FB28_Msk                              ;/*!<Filter bit 28 */
CAN_F13R1_FB29_Pos     EQU		29                                           
CAN_F13R1_FB29_Msk     EQU		0x1 << CAN_F13R1_FB29_Pos                       ;/*!< 0x20000000 */
CAN_F13R1_FB29         EQU		CAN_F13R1_FB29_Msk                              ;/*!<Filter bit 29 */
CAN_F13R1_FB30_Pos     EQU		30                                           
CAN_F13R1_FB30_Msk     EQU		0x1 << CAN_F13R1_FB30_Pos                       ;/*!< 0x40000000 */
CAN_F13R1_FB30         EQU		CAN_F13R1_FB30_Msk                              ;/*!<Filter bit 30 */
CAN_F13R1_FB31_Pos     EQU		31                                           
CAN_F13R1_FB31_Msk     EQU		0x1 << CAN_F13R1_FB31_Pos                       ;/*!< 0x80000000 */
CAN_F13R1_FB31         EQU		CAN_F13R1_FB31_Msk                              ;/*!<Filter bit 31 */

CAN_F0R2		       EQU		0x244
;/*******************  Bit definition for CAN_F0R2 register  *******************/
CAN_F0R2_FB0_Pos       EQU		0                                            
CAN_F0R2_FB0_Msk       EQU		0x1 << CAN_F0R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F0R2_FB0           EQU		CAN_F0R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F0R2_FB1_Pos       EQU		1                                            
CAN_F0R2_FB1_Msk       EQU		0x1 << CAN_F0R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F0R2_FB1           EQU		CAN_F0R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F0R2_FB2_Pos       EQU		2                                            
CAN_F0R2_FB2_Msk       EQU		0x1 << CAN_F0R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F0R2_FB2           EQU		CAN_F0R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F0R2_FB3_Pos       EQU		3                                            
CAN_F0R2_FB3_Msk       EQU		0x1 << CAN_F0R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F0R2_FB3           EQU		CAN_F0R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F0R2_FB4_Pos       EQU		4                                            
CAN_F0R2_FB4_Msk       EQU		0x1 << CAN_F0R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F0R2_FB4           EQU		CAN_F0R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F0R2_FB5_Pos       EQU		5                                            
CAN_F0R2_FB5_Msk       EQU		0x1 << CAN_F0R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F0R2_FB5           EQU		CAN_F0R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F0R2_FB6_Pos       EQU		6                                            
CAN_F0R2_FB6_Msk       EQU		0x1 << CAN_F0R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F0R2_FB6           EQU		CAN_F0R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F0R2_FB7_Pos       EQU		7                                            
CAN_F0R2_FB7_Msk       EQU		0x1 << CAN_F0R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F0R2_FB7           EQU		CAN_F0R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F0R2_FB8_Pos       EQU		8                                            
CAN_F0R2_FB8_Msk       EQU		0x1 << CAN_F0R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F0R2_FB8           EQU		CAN_F0R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F0R2_FB9_Pos       EQU		9                                            
CAN_F0R2_FB9_Msk       EQU		0x1 << CAN_F0R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F0R2_FB9           EQU		CAN_F0R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F0R2_FB10_Pos      EQU		10                                           
CAN_F0R2_FB10_Msk      EQU		0x1 << CAN_F0R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F0R2_FB10          EQU		CAN_F0R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F0R2_FB11_Pos      EQU		11                                           
CAN_F0R2_FB11_Msk      EQU		0x1 << CAN_F0R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F0R2_FB11          EQU		CAN_F0R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F0R2_FB12_Pos      EQU		12                                           
CAN_F0R2_FB12_Msk      EQU		0x1 << CAN_F0R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F0R2_FB12          EQU		CAN_F0R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F0R2_FB13_Pos      EQU		13                                           
CAN_F0R2_FB13_Msk      EQU		0x1 << CAN_F0R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F0R2_FB13          EQU		CAN_F0R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F0R2_FB14_Pos      EQU		14                                           
CAN_F0R2_FB14_Msk      EQU		0x1 << CAN_F0R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F0R2_FB14          EQU		CAN_F0R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F0R2_FB15_Pos      EQU		15                                           
CAN_F0R2_FB15_Msk      EQU		0x1 << CAN_F0R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F0R2_FB15          EQU		CAN_F0R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F0R2_FB16_Pos      EQU		16                                           
CAN_F0R2_FB16_Msk      EQU		0x1 << CAN_F0R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F0R2_FB16          EQU		CAN_F0R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F0R2_FB17_Pos      EQU		17                                           
CAN_F0R2_FB17_Msk      EQU		0x1 << CAN_F0R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F0R2_FB17          EQU		CAN_F0R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F0R2_FB18_Pos      EQU		18                                           
CAN_F0R2_FB18_Msk      EQU		0x1 << CAN_F0R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F0R2_FB18          EQU		CAN_F0R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F0R2_FB19_Pos      EQU		19                                           
CAN_F0R2_FB19_Msk      EQU		0x1 << CAN_F0R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F0R2_FB19          EQU		CAN_F0R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F0R2_FB20_Pos      EQU		20                                           
CAN_F0R2_FB20_Msk      EQU		0x1 << CAN_F0R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F0R2_FB20          EQU		CAN_F0R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F0R2_FB21_Pos      EQU		21                                           
CAN_F0R2_FB21_Msk      EQU		0x1 << CAN_F0R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F0R2_FB21          EQU		CAN_F0R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F0R2_FB22_Pos      EQU		22                                           
CAN_F0R2_FB22_Msk      EQU		0x1 << CAN_F0R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F0R2_FB22          EQU		CAN_F0R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F0R2_FB23_Pos      EQU		23                                           
CAN_F0R2_FB23_Msk      EQU		0x1 << CAN_F0R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F0R2_FB23          EQU		CAN_F0R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F0R2_FB24_Pos      EQU		24                                           
CAN_F0R2_FB24_Msk      EQU		0x1 << CAN_F0R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F0R2_FB24          EQU		CAN_F0R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F0R2_FB25_Pos      EQU		25                                           
CAN_F0R2_FB25_Msk      EQU		0x1 << CAN_F0R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F0R2_FB25          EQU		CAN_F0R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F0R2_FB26_Pos      EQU		26                                           
CAN_F0R2_FB26_Msk      EQU		0x1 << CAN_F0R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F0R2_FB26          EQU		CAN_F0R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F0R2_FB27_Pos      EQU		27                                           
CAN_F0R2_FB27_Msk      EQU		0x1 << CAN_F0R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F0R2_FB27          EQU		CAN_F0R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F0R2_FB28_Pos      EQU		28                                           
CAN_F0R2_FB28_Msk      EQU		0x1 << CAN_F0R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F0R2_FB28          EQU		CAN_F0R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F0R2_FB29_Pos      EQU		29                                           
CAN_F0R2_FB29_Msk      EQU		0x1 << CAN_F0R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F0R2_FB29          EQU		CAN_F0R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F0R2_FB30_Pos      EQU		30                                           
CAN_F0R2_FB30_Msk      EQU		0x1 << CAN_F0R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F0R2_FB30          EQU		CAN_F0R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F0R2_FB31_Pos      EQU		31                                           
CAN_F0R2_FB31_Msk      EQU		0x1 << CAN_F0R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F0R2_FB31          EQU		CAN_F0R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F1R2		       EQU		0x24C
;/*******************  Bit definition for CAN_F1R2 register  *******************/
CAN_F1R2_FB0_Pos       EQU		0                                            
CAN_F1R2_FB0_Msk       EQU		0x1 << CAN_F1R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F1R2_FB0           EQU		CAN_F1R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F1R2_FB1_Pos       EQU		1                                            
CAN_F1R2_FB1_Msk       EQU		0x1 << CAN_F1R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F1R2_FB1           EQU		CAN_F1R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F1R2_FB2_Pos       EQU		2                                            
CAN_F1R2_FB2_Msk       EQU		0x1 << CAN_F1R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F1R2_FB2           EQU		CAN_F1R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F1R2_FB3_Pos       EQU		3                                            
CAN_F1R2_FB3_Msk       EQU		0x1 << CAN_F1R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F1R2_FB3           EQU		CAN_F1R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F1R2_FB4_Pos       EQU		4                                            
CAN_F1R2_FB4_Msk       EQU		0x1 << CAN_F1R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F1R2_FB4           EQU		CAN_F1R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F1R2_FB5_Pos       EQU		5                                            
CAN_F1R2_FB5_Msk       EQU		0x1 << CAN_F1R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F1R2_FB5           EQU		CAN_F1R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F1R2_FB6_Pos       EQU		6                                            
CAN_F1R2_FB6_Msk       EQU		0x1 << CAN_F1R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F1R2_FB6           EQU		CAN_F1R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F1R2_FB7_Pos       EQU		7                                            
CAN_F1R2_FB7_Msk       EQU		0x1 << CAN_F1R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F1R2_FB7           EQU		CAN_F1R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F1R2_FB8_Pos       EQU		8                                            
CAN_F1R2_FB8_Msk       EQU		0x1 << CAN_F1R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F1R2_FB8           EQU		CAN_F1R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F1R2_FB9_Pos       EQU		9                                            
CAN_F1R2_FB9_Msk       EQU		0x1 << CAN_F1R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F1R2_FB9           EQU		CAN_F1R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F1R2_FB10_Pos      EQU		10                                           
CAN_F1R2_FB10_Msk      EQU		0x1 << CAN_F1R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F1R2_FB10          EQU		CAN_F1R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F1R2_FB11_Pos      EQU		11                                           
CAN_F1R2_FB11_Msk      EQU		0x1 << CAN_F1R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F1R2_FB11          EQU		CAN_F1R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F1R2_FB12_Pos      EQU		12                                           
CAN_F1R2_FB12_Msk      EQU		0x1 << CAN_F1R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F1R2_FB12          EQU		CAN_F1R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F1R2_FB13_Pos      EQU		13                                           
CAN_F1R2_FB13_Msk      EQU		0x1 << CAN_F1R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F1R2_FB13          EQU		CAN_F1R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F1R2_FB14_Pos      EQU		14                                           
CAN_F1R2_FB14_Msk      EQU		0x1 << CAN_F1R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F1R2_FB14          EQU		CAN_F1R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F1R2_FB15_Pos      EQU		15                                           
CAN_F1R2_FB15_Msk      EQU		0x1 << CAN_F1R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F1R2_FB15          EQU		CAN_F1R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F1R2_FB16_Pos      EQU		16                                           
CAN_F1R2_FB16_Msk      EQU		0x1 << CAN_F1R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F1R2_FB16          EQU		CAN_F1R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F1R2_FB17_Pos      EQU		17                                           
CAN_F1R2_FB17_Msk      EQU		0x1 << CAN_F1R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F1R2_FB17          EQU		CAN_F1R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F1R2_FB18_Pos      EQU		18                                           
CAN_F1R2_FB18_Msk      EQU		0x1 << CAN_F1R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F1R2_FB18          EQU		CAN_F1R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F1R2_FB19_Pos      EQU		19                                           
CAN_F1R2_FB19_Msk      EQU		0x1 << CAN_F1R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F1R2_FB19          EQU		CAN_F1R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F1R2_FB20_Pos      EQU		20                                           
CAN_F1R2_FB20_Msk      EQU		0x1 << CAN_F1R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F1R2_FB20          EQU		CAN_F1R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F1R2_FB21_Pos      EQU		21                                           
CAN_F1R2_FB21_Msk      EQU		0x1 << CAN_F1R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F1R2_FB21          EQU		CAN_F1R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F1R2_FB22_Pos      EQU		22                                           
CAN_F1R2_FB22_Msk      EQU		0x1 << CAN_F1R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F1R2_FB22          EQU		CAN_F1R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F1R2_FB23_Pos      EQU		23                                           
CAN_F1R2_FB23_Msk      EQU		0x1 << CAN_F1R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F1R2_FB23          EQU		CAN_F1R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F1R2_FB24_Pos      EQU		24                                           
CAN_F1R2_FB24_Msk      EQU		0x1 << CAN_F1R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F1R2_FB24          EQU		CAN_F1R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F1R2_FB25_Pos      EQU		25                                           
CAN_F1R2_FB25_Msk      EQU		0x1 << CAN_F1R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F1R2_FB25          EQU		CAN_F1R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F1R2_FB26_Pos      EQU		26                                           
CAN_F1R2_FB26_Msk      EQU		0x1 << CAN_F1R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F1R2_FB26          EQU		CAN_F1R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F1R2_FB27_Pos      EQU		27                                           
CAN_F1R2_FB27_Msk      EQU		0x1 << CAN_F1R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F1R2_FB27          EQU		CAN_F1R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F1R2_FB28_Pos      EQU		28                                           
CAN_F1R2_FB28_Msk      EQU		0x1 << CAN_F1R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F1R2_FB28          EQU		CAN_F1R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F1R2_FB29_Pos      EQU		29                                           
CAN_F1R2_FB29_Msk      EQU		0x1 << CAN_F1R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F1R2_FB29          EQU		CAN_F1R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F1R2_FB30_Pos      EQU		30                                           
CAN_F1R2_FB30_Msk      EQU		0x1 << CAN_F1R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F1R2_FB30          EQU		CAN_F1R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F1R2_FB31_Pos      EQU		31                                           
CAN_F1R2_FB31_Msk      EQU		0x1 << CAN_F1R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F1R2_FB31          EQU		CAN_F1R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F2R2		       EQU		0x254
;/*******************  Bit definition for CAN_F2R2 register  *******************/
CAN_F2R2_FB0_Pos       EQU		0                                            
CAN_F2R2_FB0_Msk       EQU		0x1 << CAN_F2R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F2R2_FB0           EQU		CAN_F2R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F2R2_FB1_Pos       EQU		1                                            
CAN_F2R2_FB1_Msk       EQU		0x1 << CAN_F2R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F2R2_FB1           EQU		CAN_F2R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F2R2_FB2_Pos       EQU		2                                            
CAN_F2R2_FB2_Msk       EQU		0x1 << CAN_F2R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F2R2_FB2           EQU		CAN_F2R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F2R2_FB3_Pos       EQU		3                                            
CAN_F2R2_FB3_Msk       EQU		0x1 << CAN_F2R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F2R2_FB3           EQU		CAN_F2R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F2R2_FB4_Pos       EQU		4                                            
CAN_F2R2_FB4_Msk       EQU		0x1 << CAN_F2R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F2R2_FB4           EQU		CAN_F2R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F2R2_FB5_Pos       EQU		5                                            
CAN_F2R2_FB5_Msk       EQU		0x1 << CAN_F2R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F2R2_FB5           EQU		CAN_F2R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F2R2_FB6_Pos       EQU		6                                            
CAN_F2R2_FB6_Msk       EQU		0x1 << CAN_F2R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F2R2_FB6           EQU		CAN_F2R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F2R2_FB7_Pos       EQU		7                                            
CAN_F2R2_FB7_Msk       EQU		0x1 << CAN_F2R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F2R2_FB7           EQU		CAN_F2R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F2R2_FB8_Pos       EQU		8                                            
CAN_F2R2_FB8_Msk       EQU		0x1 << CAN_F2R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F2R2_FB8           EQU		CAN_F2R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F2R2_FB9_Pos       EQU		9                                            
CAN_F2R2_FB9_Msk       EQU		0x1 << CAN_F2R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F2R2_FB9           EQU		CAN_F2R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F2R2_FB10_Pos      EQU		10                                           
CAN_F2R2_FB10_Msk      EQU		0x1 << CAN_F2R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F2R2_FB10          EQU		CAN_F2R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F2R2_FB11_Pos      EQU		11                                           
CAN_F2R2_FB11_Msk      EQU		0x1 << CAN_F2R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F2R2_FB11          EQU		CAN_F2R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F2R2_FB12_Pos      EQU		12                                           
CAN_F2R2_FB12_Msk      EQU		0x1 << CAN_F2R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F2R2_FB12          EQU		CAN_F2R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F2R2_FB13_Pos      EQU		13                                           
CAN_F2R2_FB13_Msk      EQU		0x1 << CAN_F2R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F2R2_FB13          EQU		CAN_F2R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F2R2_FB14_Pos      EQU		14                                           
CAN_F2R2_FB14_Msk      EQU		0x1 << CAN_F2R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F2R2_FB14          EQU		CAN_F2R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F2R2_FB15_Pos      EQU		15                                           
CAN_F2R2_FB15_Msk      EQU		0x1 << CAN_F2R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F2R2_FB15          EQU		CAN_F2R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F2R2_FB16_Pos      EQU		16                                           
CAN_F2R2_FB16_Msk      EQU		0x1 << CAN_F2R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F2R2_FB16          EQU		CAN_F2R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F2R2_FB17_Pos      EQU		17                                           
CAN_F2R2_FB17_Msk      EQU		0x1 << CAN_F2R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F2R2_FB17          EQU		CAN_F2R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F2R2_FB18_Pos      EQU		18                                           
CAN_F2R2_FB18_Msk      EQU		0x1 << CAN_F2R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F2R2_FB18          EQU		CAN_F2R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F2R2_FB19_Pos      EQU		19                                           
CAN_F2R2_FB19_Msk      EQU		0x1 << CAN_F2R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F2R2_FB19          EQU		CAN_F2R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F2R2_FB20_Pos      EQU		20                                           
CAN_F2R2_FB20_Msk      EQU		0x1 << CAN_F2R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F2R2_FB20          EQU		CAN_F2R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F2R2_FB21_Pos      EQU		21                                           
CAN_F2R2_FB21_Msk      EQU		0x1 << CAN_F2R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F2R2_FB21          EQU		CAN_F2R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F2R2_FB22_Pos      EQU		22                                           
CAN_F2R2_FB22_Msk      EQU		0x1 << CAN_F2R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F2R2_FB22          EQU		CAN_F2R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F2R2_FB23_Pos      EQU		23                                           
CAN_F2R2_FB23_Msk      EQU		0x1 << CAN_F2R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F2R2_FB23          EQU		CAN_F2R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F2R2_FB24_Pos      EQU		24                                           
CAN_F2R2_FB24_Msk      EQU		0x1 << CAN_F2R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F2R2_FB24          EQU		CAN_F2R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F2R2_FB25_Pos      EQU		25                                           
CAN_F2R2_FB25_Msk      EQU		0x1 << CAN_F2R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F2R2_FB25          EQU		CAN_F2R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F2R2_FB26_Pos      EQU		26                                           
CAN_F2R2_FB26_Msk      EQU		0x1 << CAN_F2R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F2R2_FB26          EQU		CAN_F2R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F2R2_FB27_Pos      EQU		27                                           
CAN_F2R2_FB27_Msk      EQU		0x1 << CAN_F2R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F2R2_FB27          EQU		CAN_F2R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F2R2_FB28_Pos      EQU		28                                           
CAN_F2R2_FB28_Msk      EQU		0x1 << CAN_F2R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F2R2_FB28          EQU		CAN_F2R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F2R2_FB29_Pos      EQU		29                                           
CAN_F2R2_FB29_Msk      EQU		0x1 << CAN_F2R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F2R2_FB29          EQU		CAN_F2R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F2R2_FB30_Pos      EQU		30                                           
CAN_F2R2_FB30_Msk      EQU		0x1 << CAN_F2R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F2R2_FB30          EQU		CAN_F2R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F2R2_FB31_Pos      EQU		31                                           
CAN_F2R2_FB31_Msk      EQU		0x1 << CAN_F2R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F2R2_FB31          EQU		CAN_F2R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F3R2		       EQU		0x25C
;/*******************  Bit definition for CAN_F3R2 register  *******************/
CAN_F3R2_FB0_Pos       EQU		0                                            
CAN_F3R2_FB0_Msk       EQU		0x1 << CAN_F3R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F3R2_FB0           EQU		CAN_F3R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F3R2_FB1_Pos       EQU		1                                            
CAN_F3R2_FB1_Msk       EQU		0x1 << CAN_F3R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F3R2_FB1           EQU		CAN_F3R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F3R2_FB2_Pos       EQU		2                                            
CAN_F3R2_FB2_Msk       EQU		0x1 << CAN_F3R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F3R2_FB2           EQU		CAN_F3R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F3R2_FB3_Pos       EQU		3                                            
CAN_F3R2_FB3_Msk       EQU		0x1 << CAN_F3R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F3R2_FB3           EQU		CAN_F3R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F3R2_FB4_Pos       EQU		4                                            
CAN_F3R2_FB4_Msk       EQU		0x1 << CAN_F3R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F3R2_FB4           EQU		CAN_F3R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F3R2_FB5_Pos       EQU		5                                            
CAN_F3R2_FB5_Msk       EQU		0x1 << CAN_F3R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F3R2_FB5           EQU		CAN_F3R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F3R2_FB6_Pos       EQU		6                                            
CAN_F3R2_FB6_Msk       EQU		0x1 << CAN_F3R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F3R2_FB6           EQU		CAN_F3R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F3R2_FB7_Pos       EQU		7                                            
CAN_F3R2_FB7_Msk       EQU		0x1 << CAN_F3R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F3R2_FB7           EQU		CAN_F3R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F3R2_FB8_Pos       EQU		8                                            
CAN_F3R2_FB8_Msk       EQU		0x1 << CAN_F3R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F3R2_FB8           EQU		CAN_F3R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F3R2_FB9_Pos       EQU		9                                            
CAN_F3R2_FB9_Msk       EQU		0x1 << CAN_F3R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F3R2_FB9           EQU		CAN_F3R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F3R2_FB10_Pos      EQU		10                                           
CAN_F3R2_FB10_Msk      EQU		0x1 << CAN_F3R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F3R2_FB10          EQU		CAN_F3R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F3R2_FB11_Pos      EQU		11                                           
CAN_F3R2_FB11_Msk      EQU		0x1 << CAN_F3R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F3R2_FB11          EQU		CAN_F3R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F3R2_FB12_Pos      EQU		12                                           
CAN_F3R2_FB12_Msk      EQU		0x1 << CAN_F3R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F3R2_FB12          EQU		CAN_F3R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F3R2_FB13_Pos      EQU		13                                           
CAN_F3R2_FB13_Msk      EQU		0x1 << CAN_F3R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F3R2_FB13          EQU		CAN_F3R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F3R2_FB14_Pos      EQU		14                                           
CAN_F3R2_FB14_Msk      EQU		0x1 << CAN_F3R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F3R2_FB14          EQU		CAN_F3R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F3R2_FB15_Pos      EQU		15                                           
CAN_F3R2_FB15_Msk      EQU		0x1 << CAN_F3R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F3R2_FB15          EQU		CAN_F3R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F3R2_FB16_Pos      EQU		16                                           
CAN_F3R2_FB16_Msk      EQU		0x1 << CAN_F3R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F3R2_FB16          EQU		CAN_F3R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F3R2_FB17_Pos      EQU		17                                           
CAN_F3R2_FB17_Msk      EQU		0x1 << CAN_F3R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F3R2_FB17          EQU		CAN_F3R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F3R2_FB18_Pos      EQU		18                                           
CAN_F3R2_FB18_Msk      EQU		0x1 << CAN_F3R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F3R2_FB18          EQU		CAN_F3R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F3R2_FB19_Pos      EQU		19                                           
CAN_F3R2_FB19_Msk      EQU		0x1 << CAN_F3R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F3R2_FB19          EQU		CAN_F3R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F3R2_FB20_Pos      EQU		20                                           
CAN_F3R2_FB20_Msk      EQU		0x1 << CAN_F3R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F3R2_FB20          EQU		CAN_F3R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F3R2_FB21_Pos      EQU		21                                           
CAN_F3R2_FB21_Msk      EQU		0x1 << CAN_F3R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F3R2_FB21          EQU		CAN_F3R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F3R2_FB22_Pos      EQU		22                                           
CAN_F3R2_FB22_Msk      EQU		0x1 << CAN_F3R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F3R2_FB22          EQU		CAN_F3R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F3R2_FB23_Pos      EQU		23                                           
CAN_F3R2_FB23_Msk      EQU		0x1 << CAN_F3R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F3R2_FB23          EQU		CAN_F3R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F3R2_FB24_Pos      EQU		24                                           
CAN_F3R2_FB24_Msk      EQU		0x1 << CAN_F3R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F3R2_FB24          EQU		CAN_F3R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F3R2_FB25_Pos      EQU		25                                           
CAN_F3R2_FB25_Msk      EQU		0x1 << CAN_F3R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F3R2_FB25          EQU		CAN_F3R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F3R2_FB26_Pos      EQU		26                                           
CAN_F3R2_FB26_Msk      EQU		0x1 << CAN_F3R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F3R2_FB26          EQU		CAN_F3R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F3R2_FB27_Pos      EQU		27                                           
CAN_F3R2_FB27_Msk      EQU		0x1 << CAN_F3R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F3R2_FB27          EQU		CAN_F3R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F3R2_FB28_Pos      EQU		28                                           
CAN_F3R2_FB28_Msk      EQU		0x1 << CAN_F3R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F3R2_FB28          EQU		CAN_F3R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F3R2_FB29_Pos      EQU		29                                           
CAN_F3R2_FB29_Msk      EQU		0x1 << CAN_F3R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F3R2_FB29          EQU		CAN_F3R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F3R2_FB30_Pos      EQU		30                                           
CAN_F3R2_FB30_Msk      EQU		0x1 << CAN_F3R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F3R2_FB30          EQU		CAN_F3R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F3R2_FB31_Pos      EQU		31                                           
CAN_F3R2_FB31_Msk      EQU		0x1 << CAN_F3R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F3R2_FB31          EQU		CAN_F3R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F4R2		       EQU		0x264
;/*******************  Bit definition for CAN_F4R2 register  *******************/
CAN_F4R2_FB0_Pos       EQU		0                                            
CAN_F4R2_FB0_Msk       EQU		0x1 << CAN_F4R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F4R2_FB0           EQU		CAN_F4R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F4R2_FB1_Pos       EQU		1                                            
CAN_F4R2_FB1_Msk       EQU		0x1 << CAN_F4R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F4R2_FB1           EQU		CAN_F4R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F4R2_FB2_Pos       EQU		2                                            
CAN_F4R2_FB2_Msk       EQU		0x1 << CAN_F4R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F4R2_FB2           EQU		CAN_F4R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F4R2_FB3_Pos       EQU		3                                            
CAN_F4R2_FB3_Msk       EQU		0x1 << CAN_F4R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F4R2_FB3           EQU		CAN_F4R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F4R2_FB4_Pos       EQU		4                                            
CAN_F4R2_FB4_Msk       EQU		0x1 << CAN_F4R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F4R2_FB4           EQU		CAN_F4R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F4R2_FB5_Pos       EQU		5                                            
CAN_F4R2_FB5_Msk       EQU		0x1 << CAN_F4R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F4R2_FB5           EQU		CAN_F4R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F4R2_FB6_Pos       EQU		6                                            
CAN_F4R2_FB6_Msk       EQU		0x1 << CAN_F4R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F4R2_FB6           EQU		CAN_F4R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F4R2_FB7_Pos       EQU		7                                            
CAN_F4R2_FB7_Msk       EQU		0x1 << CAN_F4R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F4R2_FB7           EQU		CAN_F4R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F4R2_FB8_Pos       EQU		8                                            
CAN_F4R2_FB8_Msk       EQU		0x1 << CAN_F4R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F4R2_FB8           EQU		CAN_F4R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F4R2_FB9_Pos       EQU		9                                            
CAN_F4R2_FB9_Msk       EQU		0x1 << CAN_F4R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F4R2_FB9           EQU		CAN_F4R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F4R2_FB10_Pos      EQU		10                                           
CAN_F4R2_FB10_Msk      EQU		0x1 << CAN_F4R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F4R2_FB10          EQU		CAN_F4R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F4R2_FB11_Pos      EQU		11                                           
CAN_F4R2_FB11_Msk      EQU		0x1 << CAN_F4R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F4R2_FB11          EQU		CAN_F4R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F4R2_FB12_Pos      EQU		12                                           
CAN_F4R2_FB12_Msk      EQU		0x1 << CAN_F4R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F4R2_FB12          EQU		CAN_F4R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F4R2_FB13_Pos      EQU		13                                           
CAN_F4R2_FB13_Msk      EQU		0x1 << CAN_F4R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F4R2_FB13          EQU		CAN_F4R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F4R2_FB14_Pos      EQU		14                                           
CAN_F4R2_FB14_Msk      EQU		0x1 << CAN_F4R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F4R2_FB14          EQU		CAN_F4R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F4R2_FB15_Pos      EQU		15                                           
CAN_F4R2_FB15_Msk      EQU		0x1 << CAN_F4R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F4R2_FB15          EQU		CAN_F4R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F4R2_FB16_Pos      EQU		16                                           
CAN_F4R2_FB16_Msk      EQU		0x1 << CAN_F4R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F4R2_FB16          EQU		CAN_F4R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F4R2_FB17_Pos      EQU		17                                           
CAN_F4R2_FB17_Msk      EQU		0x1 << CAN_F4R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F4R2_FB17          EQU		CAN_F4R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F4R2_FB18_Pos      EQU		18                                           
CAN_F4R2_FB18_Msk      EQU		0x1 << CAN_F4R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F4R2_FB18          EQU		CAN_F4R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F4R2_FB19_Pos      EQU		19                                           
CAN_F4R2_FB19_Msk      EQU		0x1 << CAN_F4R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F4R2_FB19          EQU		CAN_F4R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F4R2_FB20_Pos      EQU		20                                           
CAN_F4R2_FB20_Msk      EQU		0x1 << CAN_F4R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F4R2_FB20          EQU		CAN_F4R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F4R2_FB21_Pos      EQU		21                                           
CAN_F4R2_FB21_Msk      EQU		0x1 << CAN_F4R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F4R2_FB21          EQU		CAN_F4R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F4R2_FB22_Pos      EQU		22                                           
CAN_F4R2_FB22_Msk      EQU		0x1 << CAN_F4R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F4R2_FB22          EQU		CAN_F4R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F4R2_FB23_Pos      EQU		23                                           
CAN_F4R2_FB23_Msk      EQU		0x1 << CAN_F4R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F4R2_FB23          EQU		CAN_F4R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F4R2_FB24_Pos      EQU		24                                           
CAN_F4R2_FB24_Msk      EQU		0x1 << CAN_F4R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F4R2_FB24          EQU		CAN_F4R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F4R2_FB25_Pos      EQU		25                                           
CAN_F4R2_FB25_Msk      EQU		0x1 << CAN_F4R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F4R2_FB25          EQU		CAN_F4R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F4R2_FB26_Pos      EQU		26                                           
CAN_F4R2_FB26_Msk      EQU		0x1 << CAN_F4R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F4R2_FB26          EQU		CAN_F4R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F4R2_FB27_Pos      EQU		27                                           
CAN_F4R2_FB27_Msk      EQU		0x1 << CAN_F4R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F4R2_FB27          EQU		CAN_F4R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F4R2_FB28_Pos      EQU		28                                           
CAN_F4R2_FB28_Msk      EQU		0x1 << CAN_F4R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F4R2_FB28          EQU		CAN_F4R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F4R2_FB29_Pos      EQU		29                                           
CAN_F4R2_FB29_Msk      EQU		0x1 << CAN_F4R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F4R2_FB29          EQU		CAN_F4R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F4R2_FB30_Pos      EQU		30                                           
CAN_F4R2_FB30_Msk      EQU		0x1 << CAN_F4R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F4R2_FB30          EQU		CAN_F4R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F4R2_FB31_Pos      EQU		31                                           
CAN_F4R2_FB31_Msk      EQU		0x1 << CAN_F4R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F4R2_FB31          EQU		CAN_F4R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F5R2		       EQU		0x26C
;/*******************  Bit definition for CAN_F5R2 register  *******************/
CAN_F5R2_FB0_Pos       EQU		0                                            
CAN_F5R2_FB0_Msk       EQU		0x1 << CAN_F5R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F5R2_FB0           EQU		CAN_F5R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F5R2_FB1_Pos       EQU		1                                            
CAN_F5R2_FB1_Msk       EQU		0x1 << CAN_F5R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F5R2_FB1           EQU		CAN_F5R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F5R2_FB2_Pos       EQU		2                                            
CAN_F5R2_FB2_Msk       EQU		0x1 << CAN_F5R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F5R2_FB2           EQU		CAN_F5R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F5R2_FB3_Pos       EQU		3                                            
CAN_F5R2_FB3_Msk       EQU		0x1 << CAN_F5R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F5R2_FB3           EQU		CAN_F5R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F5R2_FB4_Pos       EQU		4                                            
CAN_F5R2_FB4_Msk       EQU		0x1 << CAN_F5R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F5R2_FB4           EQU		CAN_F5R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F5R2_FB5_Pos       EQU		5                                            
CAN_F5R2_FB5_Msk       EQU		0x1 << CAN_F5R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F5R2_FB5           EQU		CAN_F5R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F5R2_FB6_Pos       EQU		6                                            
CAN_F5R2_FB6_Msk       EQU		0x1 << CAN_F5R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F5R2_FB6           EQU		CAN_F5R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F5R2_FB7_Pos       EQU		7                                            
CAN_F5R2_FB7_Msk       EQU		0x1 << CAN_F5R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F5R2_FB7           EQU		CAN_F5R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F5R2_FB8_Pos       EQU		8                                            
CAN_F5R2_FB8_Msk       EQU		0x1 << CAN_F5R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F5R2_FB8           EQU		CAN_F5R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F5R2_FB9_Pos       EQU		9                                            
CAN_F5R2_FB9_Msk       EQU		0x1 << CAN_F5R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F5R2_FB9           EQU		CAN_F5R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F5R2_FB10_Pos      EQU		10                                           
CAN_F5R2_FB10_Msk      EQU		0x1 << CAN_F5R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F5R2_FB10          EQU		CAN_F5R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F5R2_FB11_Pos      EQU		11                                           
CAN_F5R2_FB11_Msk      EQU		0x1 << CAN_F5R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F5R2_FB11          EQU		CAN_F5R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F5R2_FB12_Pos      EQU		12                                           
CAN_F5R2_FB12_Msk      EQU		0x1 << CAN_F5R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F5R2_FB12          EQU		CAN_F5R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F5R2_FB13_Pos      EQU		13                                           
CAN_F5R2_FB13_Msk      EQU		0x1 << CAN_F5R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F5R2_FB13          EQU		CAN_F5R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F5R2_FB14_Pos      EQU		14                                           
CAN_F5R2_FB14_Msk      EQU		0x1 << CAN_F5R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F5R2_FB14          EQU		CAN_F5R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F5R2_FB15_Pos      EQU		15                                           
CAN_F5R2_FB15_Msk      EQU		0x1 << CAN_F5R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F5R2_FB15          EQU		CAN_F5R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F5R2_FB16_Pos      EQU		16                                           
CAN_F5R2_FB16_Msk      EQU		0x1 << CAN_F5R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F5R2_FB16          EQU		CAN_F5R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F5R2_FB17_Pos      EQU		17                                           
CAN_F5R2_FB17_Msk      EQU		0x1 << CAN_F5R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F5R2_FB17          EQU		CAN_F5R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F5R2_FB18_Pos      EQU		18                                           
CAN_F5R2_FB18_Msk      EQU		0x1 << CAN_F5R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F5R2_FB18          EQU		CAN_F5R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F5R2_FB19_Pos      EQU		19                                           
CAN_F5R2_FB19_Msk      EQU		0x1 << CAN_F5R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F5R2_FB19          EQU		CAN_F5R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F5R2_FB20_Pos      EQU		20                                           
CAN_F5R2_FB20_Msk      EQU		0x1 << CAN_F5R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F5R2_FB20          EQU		CAN_F5R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F5R2_FB21_Pos      EQU		21                                           
CAN_F5R2_FB21_Msk      EQU		0x1 << CAN_F5R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F5R2_FB21          EQU		CAN_F5R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F5R2_FB22_Pos      EQU		22                                           
CAN_F5R2_FB22_Msk      EQU		0x1 << CAN_F5R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F5R2_FB22          EQU		CAN_F5R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F5R2_FB23_Pos      EQU		23                                           
CAN_F5R2_FB23_Msk      EQU		0x1 << CAN_F5R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F5R2_FB23          EQU		CAN_F5R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F5R2_FB24_Pos      EQU		24                                           
CAN_F5R2_FB24_Msk      EQU		0x1 << CAN_F5R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F5R2_FB24          EQU		CAN_F5R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F5R2_FB25_Pos      EQU		25                                           
CAN_F5R2_FB25_Msk      EQU		0x1 << CAN_F5R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F5R2_FB25          EQU		CAN_F5R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F5R2_FB26_Pos      EQU		26                                           
CAN_F5R2_FB26_Msk      EQU		0x1 << CAN_F5R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F5R2_FB26          EQU		CAN_F5R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F5R2_FB27_Pos      EQU		27                                           
CAN_F5R2_FB27_Msk      EQU		0x1 << CAN_F5R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F5R2_FB27          EQU		CAN_F5R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F5R2_FB28_Pos      EQU		28                                           
CAN_F5R2_FB28_Msk      EQU		0x1 << CAN_F5R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F5R2_FB28          EQU		CAN_F5R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F5R2_FB29_Pos      EQU		29                                           
CAN_F5R2_FB29_Msk      EQU		0x1 << CAN_F5R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F5R2_FB29          EQU		CAN_F5R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F5R2_FB30_Pos      EQU		30                                           
CAN_F5R2_FB30_Msk      EQU		0x1 << CAN_F5R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F5R2_FB30          EQU		CAN_F5R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F5R2_FB31_Pos      EQU		31                                           
CAN_F5R2_FB31_Msk      EQU		0x1 << CAN_F5R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F5R2_FB31          EQU		CAN_F5R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F6R2		       EQU		0x274
;/*******************  Bit definition for CAN_F6R2 register  *******************/
CAN_F6R2_FB0_Pos       EQU		0                                            
CAN_F6R2_FB0_Msk       EQU		0x1 << CAN_F6R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F6R2_FB0           EQU		CAN_F6R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F6R2_FB1_Pos       EQU		1                                            
CAN_F6R2_FB1_Msk       EQU		0x1 << CAN_F6R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F6R2_FB1           EQU		CAN_F6R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F6R2_FB2_Pos       EQU		2                                            
CAN_F6R2_FB2_Msk       EQU		0x1 << CAN_F6R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F6R2_FB2           EQU		CAN_F6R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F6R2_FB3_Pos       EQU		3                                            
CAN_F6R2_FB3_Msk       EQU		0x1 << CAN_F6R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F6R2_FB3           EQU		CAN_F6R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F6R2_FB4_Pos       EQU		4                                            
CAN_F6R2_FB4_Msk       EQU		0x1 << CAN_F6R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F6R2_FB4           EQU		CAN_F6R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F6R2_FB5_Pos       EQU		5                                            
CAN_F6R2_FB5_Msk       EQU		0x1 << CAN_F6R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F6R2_FB5           EQU		CAN_F6R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F6R2_FB6_Pos       EQU		6                                            
CAN_F6R2_FB6_Msk       EQU		0x1 << CAN_F6R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F6R2_FB6           EQU		CAN_F6R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F6R2_FB7_Pos       EQU		7                                            
CAN_F6R2_FB7_Msk       EQU		0x1 << CAN_F6R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F6R2_FB7           EQU		CAN_F6R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F6R2_FB8_Pos       EQU		8                                            
CAN_F6R2_FB8_Msk       EQU		0x1 << CAN_F6R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F6R2_FB8           EQU		CAN_F6R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F6R2_FB9_Pos       EQU		9                                            
CAN_F6R2_FB9_Msk       EQU		0x1 << CAN_F6R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F6R2_FB9           EQU		CAN_F6R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F6R2_FB10_Pos      EQU		10                                           
CAN_F6R2_FB10_Msk      EQU		0x1 << CAN_F6R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F6R2_FB10          EQU		CAN_F6R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F6R2_FB11_Pos      EQU		11                                           
CAN_F6R2_FB11_Msk      EQU		0x1 << CAN_F6R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F6R2_FB11          EQU		CAN_F6R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F6R2_FB12_Pos      EQU		12                                           
CAN_F6R2_FB12_Msk      EQU		0x1 << CAN_F6R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F6R2_FB12          EQU		CAN_F6R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F6R2_FB13_Pos      EQU		13                                           
CAN_F6R2_FB13_Msk      EQU		0x1 << CAN_F6R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F6R2_FB13          EQU		CAN_F6R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F6R2_FB14_Pos      EQU		14                                           
CAN_F6R2_FB14_Msk      EQU		0x1 << CAN_F6R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F6R2_FB14          EQU		CAN_F6R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F6R2_FB15_Pos      EQU		15                                           
CAN_F6R2_FB15_Msk      EQU		0x1 << CAN_F6R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F6R2_FB15          EQU		CAN_F6R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F6R2_FB16_Pos      EQU		16                                           
CAN_F6R2_FB16_Msk      EQU		0x1 << CAN_F6R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F6R2_FB16          EQU		CAN_F6R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F6R2_FB17_Pos      EQU		17                                           
CAN_F6R2_FB17_Msk      EQU		0x1 << CAN_F6R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F6R2_FB17          EQU		CAN_F6R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F6R2_FB18_Pos      EQU		18                                           
CAN_F6R2_FB18_Msk      EQU		0x1 << CAN_F6R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F6R2_FB18          EQU		CAN_F6R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F6R2_FB19_Pos      EQU		19                                           
CAN_F6R2_FB19_Msk      EQU		0x1 << CAN_F6R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F6R2_FB19          EQU		CAN_F6R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F6R2_FB20_Pos      EQU		20                                           
CAN_F6R2_FB20_Msk      EQU		0x1 << CAN_F6R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F6R2_FB20          EQU		CAN_F6R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F6R2_FB21_Pos      EQU		21                                           
CAN_F6R2_FB21_Msk      EQU		0x1 << CAN_F6R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F6R2_FB21          EQU		CAN_F6R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F6R2_FB22_Pos      EQU		22                                           
CAN_F6R2_FB22_Msk      EQU		0x1 << CAN_F6R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F6R2_FB22          EQU		CAN_F6R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F6R2_FB23_Pos      EQU		23                                           
CAN_F6R2_FB23_Msk      EQU		0x1 << CAN_F6R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F6R2_FB23          EQU		CAN_F6R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F6R2_FB24_Pos      EQU		24                                           
CAN_F6R2_FB24_Msk      EQU		0x1 << CAN_F6R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F6R2_FB24          EQU		CAN_F6R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F6R2_FB25_Pos      EQU		25                                           
CAN_F6R2_FB25_Msk      EQU		0x1 << CAN_F6R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F6R2_FB25          EQU		CAN_F6R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F6R2_FB26_Pos      EQU		26                                           
CAN_F6R2_FB26_Msk      EQU		0x1 << CAN_F6R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F6R2_FB26          EQU		CAN_F6R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F6R2_FB27_Pos      EQU		27                                           
CAN_F6R2_FB27_Msk      EQU		0x1 << CAN_F6R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F6R2_FB27          EQU		CAN_F6R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F6R2_FB28_Pos      EQU		28                                           
CAN_F6R2_FB28_Msk      EQU		0x1 << CAN_F6R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F6R2_FB28          EQU		CAN_F6R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F6R2_FB29_Pos      EQU		29                                           
CAN_F6R2_FB29_Msk      EQU		0x1 << CAN_F6R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F6R2_FB29          EQU		CAN_F6R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F6R2_FB30_Pos      EQU		30                                           
CAN_F6R2_FB30_Msk      EQU		0x1 << CAN_F6R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F6R2_FB30          EQU		CAN_F6R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F6R2_FB31_Pos      EQU		31                                           
CAN_F6R2_FB31_Msk      EQU		0x1 << CAN_F6R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F6R2_FB31          EQU		CAN_F6R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F7R2		       EQU		0x27C
;/*******************  Bit definition for CAN_F7R2 register  *******************/
CAN_F7R2_FB0_Pos       EQU		0                                            
CAN_F7R2_FB0_Msk       EQU		0x1 << CAN_F7R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F7R2_FB0           EQU		CAN_F7R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F7R2_FB1_Pos       EQU		1                                            
CAN_F7R2_FB1_Msk       EQU		0x1 << CAN_F7R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F7R2_FB1           EQU		CAN_F7R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F7R2_FB2_Pos       EQU		2                                            
CAN_F7R2_FB2_Msk       EQU		0x1 << CAN_F7R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F7R2_FB2           EQU		CAN_F7R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F7R2_FB3_Pos       EQU		3                                            
CAN_F7R2_FB3_Msk       EQU		0x1 << CAN_F7R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F7R2_FB3           EQU		CAN_F7R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F7R2_FB4_Pos       EQU		4                                            
CAN_F7R2_FB4_Msk       EQU		0x1 << CAN_F7R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F7R2_FB4           EQU		CAN_F7R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F7R2_FB5_Pos       EQU		5                                            
CAN_F7R2_FB5_Msk       EQU		0x1 << CAN_F7R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F7R2_FB5           EQU		CAN_F7R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F7R2_FB6_Pos       EQU		6                                            
CAN_F7R2_FB6_Msk       EQU		0x1 << CAN_F7R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F7R2_FB6           EQU		CAN_F7R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F7R2_FB7_Pos       EQU		7                                            
CAN_F7R2_FB7_Msk       EQU		0x1 << CAN_F7R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F7R2_FB7           EQU		CAN_F7R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F7R2_FB8_Pos       EQU		8                                            
CAN_F7R2_FB8_Msk       EQU		0x1 << CAN_F7R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F7R2_FB8           EQU		CAN_F7R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F7R2_FB9_Pos       EQU		9                                            
CAN_F7R2_FB9_Msk       EQU		0x1 << CAN_F7R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F7R2_FB9           EQU		CAN_F7R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F7R2_FB10_Pos      EQU		10                                           
CAN_F7R2_FB10_Msk      EQU		0x1 << CAN_F7R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F7R2_FB10          EQU		CAN_F7R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F7R2_FB11_Pos      EQU		11                                           
CAN_F7R2_FB11_Msk      EQU		0x1 << CAN_F7R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F7R2_FB11          EQU		CAN_F7R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F7R2_FB12_Pos      EQU		12                                           
CAN_F7R2_FB12_Msk      EQU		0x1 << CAN_F7R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F7R2_FB12          EQU		CAN_F7R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F7R2_FB13_Pos      EQU		13                                           
CAN_F7R2_FB13_Msk      EQU		0x1 << CAN_F7R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F7R2_FB13          EQU		CAN_F7R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F7R2_FB14_Pos      EQU		14                                           
CAN_F7R2_FB14_Msk      EQU		0x1 << CAN_F7R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F7R2_FB14          EQU		CAN_F7R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F7R2_FB15_Pos      EQU		15                                           
CAN_F7R2_FB15_Msk      EQU		0x1 << CAN_F7R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F7R2_FB15          EQU		CAN_F7R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F7R2_FB16_Pos      EQU		16                                           
CAN_F7R2_FB16_Msk      EQU		0x1 << CAN_F7R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F7R2_FB16          EQU		CAN_F7R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F7R2_FB17_Pos      EQU		17                                           
CAN_F7R2_FB17_Msk      EQU		0x1 << CAN_F7R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F7R2_FB17          EQU		CAN_F7R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F7R2_FB18_Pos      EQU		18                                           
CAN_F7R2_FB18_Msk      EQU		0x1 << CAN_F7R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F7R2_FB18          EQU		CAN_F7R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F7R2_FB19_Pos      EQU		19                                           
CAN_F7R2_FB19_Msk      EQU		0x1 << CAN_F7R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F7R2_FB19          EQU		CAN_F7R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F7R2_FB20_Pos      EQU		20                                           
CAN_F7R2_FB20_Msk      EQU		0x1 << CAN_F7R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F7R2_FB20          EQU		CAN_F7R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F7R2_FB21_Pos      EQU		21                                           
CAN_F7R2_FB21_Msk      EQU		0x1 << CAN_F7R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F7R2_FB21          EQU		CAN_F7R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F7R2_FB22_Pos      EQU		22                                           
CAN_F7R2_FB22_Msk      EQU		0x1 << CAN_F7R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F7R2_FB22          EQU		CAN_F7R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F7R2_FB23_Pos      EQU		23                                           
CAN_F7R2_FB23_Msk      EQU		0x1 << CAN_F7R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F7R2_FB23          EQU		CAN_F7R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F7R2_FB24_Pos      EQU		24                                           
CAN_F7R2_FB24_Msk      EQU		0x1 << CAN_F7R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F7R2_FB24          EQU		CAN_F7R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F7R2_FB25_Pos      EQU		25                                           
CAN_F7R2_FB25_Msk      EQU		0x1 << CAN_F7R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F7R2_FB25          EQU		CAN_F7R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F7R2_FB26_Pos      EQU		26                                           
CAN_F7R2_FB26_Msk      EQU		0x1 << CAN_F7R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F7R2_FB26          EQU		CAN_F7R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F7R2_FB27_Pos      EQU		27                                           
CAN_F7R2_FB27_Msk      EQU		0x1 << CAN_F7R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F7R2_FB27          EQU		CAN_F7R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F7R2_FB28_Pos      EQU		28                                           
CAN_F7R2_FB28_Msk      EQU		0x1 << CAN_F7R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F7R2_FB28          EQU		CAN_F7R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F7R2_FB29_Pos      EQU		29                                           
CAN_F7R2_FB29_Msk      EQU		0x1 << CAN_F7R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F7R2_FB29          EQU		CAN_F7R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F7R2_FB30_Pos      EQU		30                                           
CAN_F7R2_FB30_Msk      EQU		0x1 << CAN_F7R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F7R2_FB30          EQU		CAN_F7R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F7R2_FB31_Pos      EQU		31                                           
CAN_F7R2_FB31_Msk      EQU		0x1 << CAN_F7R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F7R2_FB31          EQU		CAN_F7R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F8R2		       EQU		0x284
;/*******************  Bit definition for CAN_F8R2 register  *******************/
CAN_F8R2_FB0_Pos       EQU		0                                            
CAN_F8R2_FB0_Msk       EQU		0x1 << CAN_F8R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F8R2_FB0           EQU		CAN_F8R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F8R2_FB1_Pos       EQU		1                                            
CAN_F8R2_FB1_Msk       EQU		0x1 << CAN_F8R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F8R2_FB1           EQU		CAN_F8R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F8R2_FB2_Pos       EQU		2                                            
CAN_F8R2_FB2_Msk       EQU		0x1 << CAN_F8R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F8R2_FB2           EQU		CAN_F8R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F8R2_FB3_Pos       EQU		3                                            
CAN_F8R2_FB3_Msk       EQU		0x1 << CAN_F8R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F8R2_FB3           EQU		CAN_F8R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F8R2_FB4_Pos       EQU		4                                            
CAN_F8R2_FB4_Msk       EQU		0x1 << CAN_F8R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F8R2_FB4           EQU		CAN_F8R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F8R2_FB5_Pos       EQU		5                                            
CAN_F8R2_FB5_Msk       EQU		0x1 << CAN_F8R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F8R2_FB5           EQU		CAN_F8R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F8R2_FB6_Pos       EQU		6                                            
CAN_F8R2_FB6_Msk       EQU		0x1 << CAN_F8R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F8R2_FB6           EQU		CAN_F8R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F8R2_FB7_Pos       EQU		7                                            
CAN_F8R2_FB7_Msk       EQU		0x1 << CAN_F8R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F8R2_FB7           EQU		CAN_F8R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F8R2_FB8_Pos       EQU		8                                            
CAN_F8R2_FB8_Msk       EQU		0x1 << CAN_F8R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F8R2_FB8           EQU		CAN_F8R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F8R2_FB9_Pos       EQU		9                                            
CAN_F8R2_FB9_Msk       EQU		0x1 << CAN_F8R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F8R2_FB9           EQU		CAN_F8R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F8R2_FB10_Pos      EQU		10                                           
CAN_F8R2_FB10_Msk      EQU		0x1 << CAN_F8R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F8R2_FB10          EQU		CAN_F8R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F8R2_FB11_Pos      EQU		11                                           
CAN_F8R2_FB11_Msk      EQU		0x1 << CAN_F8R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F8R2_FB11          EQU		CAN_F8R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F8R2_FB12_Pos      EQU		12                                           
CAN_F8R2_FB12_Msk      EQU		0x1 << CAN_F8R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F8R2_FB12          EQU		CAN_F8R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F8R2_FB13_Pos      EQU		13                                           
CAN_F8R2_FB13_Msk      EQU		0x1 << CAN_F8R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F8R2_FB13          EQU		CAN_F8R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F8R2_FB14_Pos      EQU		14                                           
CAN_F8R2_FB14_Msk      EQU		0x1 << CAN_F8R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F8R2_FB14          EQU		CAN_F8R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F8R2_FB15_Pos      EQU		15                                           
CAN_F8R2_FB15_Msk      EQU		0x1 << CAN_F8R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F8R2_FB15          EQU		CAN_F8R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F8R2_FB16_Pos      EQU		16                                           
CAN_F8R2_FB16_Msk      EQU		0x1 << CAN_F8R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F8R2_FB16          EQU		CAN_F8R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F8R2_FB17_Pos      EQU		17                                           
CAN_F8R2_FB17_Msk      EQU		0x1 << CAN_F8R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F8R2_FB17          EQU		CAN_F8R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F8R2_FB18_Pos      EQU		18                                           
CAN_F8R2_FB18_Msk      EQU		0x1 << CAN_F8R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F8R2_FB18          EQU		CAN_F8R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F8R2_FB19_Pos      EQU		19                                           
CAN_F8R2_FB19_Msk      EQU		0x1 << CAN_F8R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F8R2_FB19          EQU		CAN_F8R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F8R2_FB20_Pos      EQU		20                                           
CAN_F8R2_FB20_Msk      EQU		0x1 << CAN_F8R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F8R2_FB20          EQU		CAN_F8R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F8R2_FB21_Pos      EQU		21                                           
CAN_F8R2_FB21_Msk      EQU		0x1 << CAN_F8R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F8R2_FB21          EQU		CAN_F8R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F8R2_FB22_Pos      EQU		22                                           
CAN_F8R2_FB22_Msk      EQU		0x1 << CAN_F8R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F8R2_FB22          EQU		CAN_F8R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F8R2_FB23_Pos      EQU		23                                           
CAN_F8R2_FB23_Msk      EQU		0x1 << CAN_F8R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F8R2_FB23          EQU		CAN_F8R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F8R2_FB24_Pos      EQU		24                                           
CAN_F8R2_FB24_Msk      EQU		0x1 << CAN_F8R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F8R2_FB24          EQU		CAN_F8R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F8R2_FB25_Pos      EQU		25                                           
CAN_F8R2_FB25_Msk      EQU		0x1 << CAN_F8R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F8R2_FB25          EQU		CAN_F8R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F8R2_FB26_Pos      EQU		26                                           
CAN_F8R2_FB26_Msk      EQU		0x1 << CAN_F8R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F8R2_FB26          EQU		CAN_F8R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F8R2_FB27_Pos      EQU		27                                           
CAN_F8R2_FB27_Msk      EQU		0x1 << CAN_F8R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F8R2_FB27          EQU		CAN_F8R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F8R2_FB28_Pos      EQU		28                                           
CAN_F8R2_FB28_Msk      EQU		0x1 << CAN_F8R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F8R2_FB28          EQU		CAN_F8R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F8R2_FB29_Pos      EQU		29                                           
CAN_F8R2_FB29_Msk      EQU		0x1 << CAN_F8R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F8R2_FB29          EQU		CAN_F8R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F8R2_FB30_Pos      EQU		30                                           
CAN_F8R2_FB30_Msk      EQU		0x1 << CAN_F8R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F8R2_FB30          EQU		CAN_F8R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F8R2_FB31_Pos      EQU		31                                           
CAN_F8R2_FB31_Msk      EQU		0x1 << CAN_F8R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F8R2_FB31          EQU		CAN_F8R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F9R2		       EQU		0x28C
;/*******************  Bit definition for CAN_F9R2 register  *******************/
CAN_F9R2_FB0_Pos       EQU		0                                            
CAN_F9R2_FB0_Msk       EQU		0x1 << CAN_F9R2_FB0_Pos                         ;/*!< 0x00000001 */
CAN_F9R2_FB0           EQU		CAN_F9R2_FB0_Msk                                ;/*!<Filter bit 0 */
CAN_F9R2_FB1_Pos       EQU		1                                            
CAN_F9R2_FB1_Msk       EQU		0x1 << CAN_F9R2_FB1_Pos                         ;/*!< 0x00000002 */
CAN_F9R2_FB1           EQU		CAN_F9R2_FB1_Msk                                ;/*!<Filter bit 1 */
CAN_F9R2_FB2_Pos       EQU		2                                            
CAN_F9R2_FB2_Msk       EQU		0x1 << CAN_F9R2_FB2_Pos                         ;/*!< 0x00000004 */
CAN_F9R2_FB2           EQU		CAN_F9R2_FB2_Msk                                ;/*!<Filter bit 2 */
CAN_F9R2_FB3_Pos       EQU		3                                            
CAN_F9R2_FB3_Msk       EQU		0x1 << CAN_F9R2_FB3_Pos                         ;/*!< 0x00000008 */
CAN_F9R2_FB3           EQU		CAN_F9R2_FB3_Msk                                ;/*!<Filter bit 3 */
CAN_F9R2_FB4_Pos       EQU		4                                            
CAN_F9R2_FB4_Msk       EQU		0x1 << CAN_F9R2_FB4_Pos                         ;/*!< 0x00000010 */
CAN_F9R2_FB4           EQU		CAN_F9R2_FB4_Msk                                ;/*!<Filter bit 4 */
CAN_F9R2_FB5_Pos       EQU		5                                            
CAN_F9R2_FB5_Msk       EQU		0x1 << CAN_F9R2_FB5_Pos                         ;/*!< 0x00000020 */
CAN_F9R2_FB5           EQU		CAN_F9R2_FB5_Msk                                ;/*!<Filter bit 5 */
CAN_F9R2_FB6_Pos       EQU		6                                            
CAN_F9R2_FB6_Msk       EQU		0x1 << CAN_F9R2_FB6_Pos                         ;/*!< 0x00000040 */
CAN_F9R2_FB6           EQU		CAN_F9R2_FB6_Msk                                ;/*!<Filter bit 6 */
CAN_F9R2_FB7_Pos       EQU		7                                            
CAN_F9R2_FB7_Msk       EQU		0x1 << CAN_F9R2_FB7_Pos                         ;/*!< 0x00000080 */
CAN_F9R2_FB7           EQU		CAN_F9R2_FB7_Msk                                ;/*!<Filter bit 7 */
CAN_F9R2_FB8_Pos       EQU		8                                            
CAN_F9R2_FB8_Msk       EQU		0x1 << CAN_F9R2_FB8_Pos                         ;/*!< 0x00000100 */
CAN_F9R2_FB8           EQU		CAN_F9R2_FB8_Msk                                ;/*!<Filter bit 8 */
CAN_F9R2_FB9_Pos       EQU		9                                            
CAN_F9R2_FB9_Msk       EQU		0x1 << CAN_F9R2_FB9_Pos                         ;/*!< 0x00000200 */
CAN_F9R2_FB9           EQU		CAN_F9R2_FB9_Msk                                ;/*!<Filter bit 9 */
CAN_F9R2_FB10_Pos      EQU		10                                           
CAN_F9R2_FB10_Msk      EQU		0x1 << CAN_F9R2_FB10_Pos                        ;/*!< 0x00000400 */
CAN_F9R2_FB10          EQU		CAN_F9R2_FB10_Msk                               ;/*!<Filter bit 10 */
CAN_F9R2_FB11_Pos      EQU		11                                           
CAN_F9R2_FB11_Msk      EQU		0x1 << CAN_F9R2_FB11_Pos                        ;/*!< 0x00000800 */
CAN_F9R2_FB11          EQU		CAN_F9R2_FB11_Msk                               ;/*!<Filter bit 11 */
CAN_F9R2_FB12_Pos      EQU		12                                           
CAN_F9R2_FB12_Msk      EQU		0x1 << CAN_F9R2_FB12_Pos                        ;/*!< 0x00001000 */
CAN_F9R2_FB12          EQU		CAN_F9R2_FB12_Msk                               ;/*!<Filter bit 12 */
CAN_F9R2_FB13_Pos      EQU		13                                           
CAN_F9R2_FB13_Msk      EQU		0x1 << CAN_F9R2_FB13_Pos                        ;/*!< 0x00002000 */
CAN_F9R2_FB13          EQU		CAN_F9R2_FB13_Msk                               ;/*!<Filter bit 13 */
CAN_F9R2_FB14_Pos      EQU		14                                           
CAN_F9R2_FB14_Msk      EQU		0x1 << CAN_F9R2_FB14_Pos                        ;/*!< 0x00004000 */
CAN_F9R2_FB14          EQU		CAN_F9R2_FB14_Msk                               ;/*!<Filter bit 14 */
CAN_F9R2_FB15_Pos      EQU		15                                           
CAN_F9R2_FB15_Msk      EQU		0x1 << CAN_F9R2_FB15_Pos                        ;/*!< 0x00008000 */
CAN_F9R2_FB15          EQU		CAN_F9R2_FB15_Msk                               ;/*!<Filter bit 15 */
CAN_F9R2_FB16_Pos      EQU		16                                           
CAN_F9R2_FB16_Msk      EQU		0x1 << CAN_F9R2_FB16_Pos                        ;/*!< 0x00010000 */
CAN_F9R2_FB16          EQU		CAN_F9R2_FB16_Msk                               ;/*!<Filter bit 16 */
CAN_F9R2_FB17_Pos      EQU		17                                           
CAN_F9R2_FB17_Msk      EQU		0x1 << CAN_F9R2_FB17_Pos                        ;/*!< 0x00020000 */
CAN_F9R2_FB17          EQU		CAN_F9R2_FB17_Msk                               ;/*!<Filter bit 17 */
CAN_F9R2_FB18_Pos      EQU		18                                           
CAN_F9R2_FB18_Msk      EQU		0x1 << CAN_F9R2_FB18_Pos                        ;/*!< 0x00040000 */
CAN_F9R2_FB18          EQU		CAN_F9R2_FB18_Msk                               ;/*!<Filter bit 18 */
CAN_F9R2_FB19_Pos      EQU		19                                           
CAN_F9R2_FB19_Msk      EQU		0x1 << CAN_F9R2_FB19_Pos                        ;/*!< 0x00080000 */
CAN_F9R2_FB19          EQU		CAN_F9R2_FB19_Msk                               ;/*!<Filter bit 19 */
CAN_F9R2_FB20_Pos      EQU		20                                           
CAN_F9R2_FB20_Msk      EQU		0x1 << CAN_F9R2_FB20_Pos                        ;/*!< 0x00100000 */
CAN_F9R2_FB20          EQU		CAN_F9R2_FB20_Msk                               ;/*!<Filter bit 20 */
CAN_F9R2_FB21_Pos      EQU		21                                           
CAN_F9R2_FB21_Msk      EQU		0x1 << CAN_F9R2_FB21_Pos                        ;/*!< 0x00200000 */
CAN_F9R2_FB21          EQU		CAN_F9R2_FB21_Msk                               ;/*!<Filter bit 21 */
CAN_F9R2_FB22_Pos      EQU		22                                           
CAN_F9R2_FB22_Msk      EQU		0x1 << CAN_F9R2_FB22_Pos                        ;/*!< 0x00400000 */
CAN_F9R2_FB22          EQU		CAN_F9R2_FB22_Msk                               ;/*!<Filter bit 22 */
CAN_F9R2_FB23_Pos      EQU		23                                           
CAN_F9R2_FB23_Msk      EQU		0x1 << CAN_F9R2_FB23_Pos                        ;/*!< 0x00800000 */
CAN_F9R2_FB23          EQU		CAN_F9R2_FB23_Msk                               ;/*!<Filter bit 23 */
CAN_F9R2_FB24_Pos      EQU		24                                           
CAN_F9R2_FB24_Msk      EQU		0x1 << CAN_F9R2_FB24_Pos                        ;/*!< 0x01000000 */
CAN_F9R2_FB24          EQU		CAN_F9R2_FB24_Msk                               ;/*!<Filter bit 24 */
CAN_F9R2_FB25_Pos      EQU		25                                           
CAN_F9R2_FB25_Msk      EQU		0x1 << CAN_F9R2_FB25_Pos                        ;/*!< 0x02000000 */
CAN_F9R2_FB25          EQU		CAN_F9R2_FB25_Msk                               ;/*!<Filter bit 25 */
CAN_F9R2_FB26_Pos      EQU		26                                           
CAN_F9R2_FB26_Msk      EQU		0x1 << CAN_F9R2_FB26_Pos                        ;/*!< 0x04000000 */
CAN_F9R2_FB26          EQU		CAN_F9R2_FB26_Msk                               ;/*!<Filter bit 26 */
CAN_F9R2_FB27_Pos      EQU		27                                           
CAN_F9R2_FB27_Msk      EQU		0x1 << CAN_F9R2_FB27_Pos                        ;/*!< 0x08000000 */
CAN_F9R2_FB27          EQU		CAN_F9R2_FB27_Msk                               ;/*!<Filter bit 27 */
CAN_F9R2_FB28_Pos      EQU		28                                           
CAN_F9R2_FB28_Msk      EQU		0x1 << CAN_F9R2_FB28_Pos                        ;/*!< 0x10000000 */
CAN_F9R2_FB28          EQU		CAN_F9R2_FB28_Msk                               ;/*!<Filter bit 28 */
CAN_F9R2_FB29_Pos      EQU		29                                           
CAN_F9R2_FB29_Msk      EQU		0x1 << CAN_F9R2_FB29_Pos                        ;/*!< 0x20000000 */
CAN_F9R2_FB29          EQU		CAN_F9R2_FB29_Msk                               ;/*!<Filter bit 29 */
CAN_F9R2_FB30_Pos      EQU		30                                           
CAN_F9R2_FB30_Msk      EQU		0x1 << CAN_F9R2_FB30_Pos                        ;/*!< 0x40000000 */
CAN_F9R2_FB30          EQU		CAN_F9R2_FB30_Msk                               ;/*!<Filter bit 30 */
CAN_F9R2_FB31_Pos      EQU		31                                           
CAN_F9R2_FB31_Msk      EQU		0x1 << CAN_F9R2_FB31_Pos                        ;/*!< 0x80000000 */
CAN_F9R2_FB31          EQU		CAN_F9R2_FB31_Msk                               ;/*!<Filter bit 31 */

CAN_F10R2		       EQU		0x294
;/*******************  Bit definition for CAN_F10R2 register  ******************/
CAN_F10R2_FB0_Pos      EQU		0                                            
CAN_F10R2_FB0_Msk      EQU		0x1 << CAN_F10R2_FB0_Pos                        ;/*!< 0x00000001 */
CAN_F10R2_FB0          EQU		CAN_F10R2_FB0_Msk                               ;/*!<Filter bit 0 */
CAN_F10R2_FB1_Pos      EQU		1                                            
CAN_F10R2_FB1_Msk      EQU		0x1 << CAN_F10R2_FB1_Pos                        ;/*!< 0x00000002 */
CAN_F10R2_FB1          EQU		CAN_F10R2_FB1_Msk                               ;/*!<Filter bit 1 */
CAN_F10R2_FB2_Pos      EQU		2                                            
CAN_F10R2_FB2_Msk      EQU		0x1 << CAN_F10R2_FB2_Pos                        ;/*!< 0x00000004 */
CAN_F10R2_FB2          EQU		CAN_F10R2_FB2_Msk                               ;/*!<Filter bit 2 */
CAN_F10R2_FB3_Pos      EQU		3                                            
CAN_F10R2_FB3_Msk      EQU		0x1 << CAN_F10R2_FB3_Pos                        ;/*!< 0x00000008 */
CAN_F10R2_FB3          EQU		CAN_F10R2_FB3_Msk                               ;/*!<Filter bit 3 */
CAN_F10R2_FB4_Pos      EQU		4                                            
CAN_F10R2_FB4_Msk      EQU		0x1 << CAN_F10R2_FB4_Pos                        ;/*!< 0x00000010 */
CAN_F10R2_FB4          EQU		CAN_F10R2_FB4_Msk                               ;/*!<Filter bit 4 */
CAN_F10R2_FB5_Pos      EQU		5                                            
CAN_F10R2_FB5_Msk      EQU		0x1 << CAN_F10R2_FB5_Pos                        ;/*!< 0x00000020 */
CAN_F10R2_FB5          EQU		CAN_F10R2_FB5_Msk                               ;/*!<Filter bit 5 */
CAN_F10R2_FB6_Pos      EQU		6                                            
CAN_F10R2_FB6_Msk      EQU		0x1 << CAN_F10R2_FB6_Pos                        ;/*!< 0x00000040 */
CAN_F10R2_FB6          EQU		CAN_F10R2_FB6_Msk                               ;/*!<Filter bit 6 */
CAN_F10R2_FB7_Pos      EQU		7                                            
CAN_F10R2_FB7_Msk      EQU		0x1 << CAN_F10R2_FB7_Pos                        ;/*!< 0x00000080 */
CAN_F10R2_FB7          EQU		CAN_F10R2_FB7_Msk                               ;/*!<Filter bit 7 */
CAN_F10R2_FB8_Pos      EQU		8                                            
CAN_F10R2_FB8_Msk      EQU		0x1 << CAN_F10R2_FB8_Pos                        ;/*!< 0x00000100 */
CAN_F10R2_FB8          EQU		CAN_F10R2_FB8_Msk                               ;/*!<Filter bit 8 */
CAN_F10R2_FB9_Pos      EQU		9                                            
CAN_F10R2_FB9_Msk      EQU		0x1 << CAN_F10R2_FB9_Pos                        ;/*!< 0x00000200 */
CAN_F10R2_FB9          EQU		CAN_F10R2_FB9_Msk                               ;/*!<Filter bit 9 */
CAN_F10R2_FB10_Pos     EQU		10                                           
CAN_F10R2_FB10_Msk     EQU		0x1 << CAN_F10R2_FB10_Pos                       ;/*!< 0x00000400 */
CAN_F10R2_FB10         EQU		CAN_F10R2_FB10_Msk                              ;/*!<Filter bit 10 */
CAN_F10R2_FB11_Pos     EQU		11                                           
CAN_F10R2_FB11_Msk     EQU		0x1 << CAN_F10R2_FB11_Pos                       ;/*!< 0x00000800 */
CAN_F10R2_FB11         EQU		CAN_F10R2_FB11_Msk                              ;/*!<Filter bit 11 */
CAN_F10R2_FB12_Pos     EQU		12                                           
CAN_F10R2_FB12_Msk     EQU		0x1 << CAN_F10R2_FB12_Pos                       ;/*!< 0x00001000 */
CAN_F10R2_FB12         EQU		CAN_F10R2_FB12_Msk                              ;/*!<Filter bit 12 */
CAN_F10R2_FB13_Pos     EQU		13                                           
CAN_F10R2_FB13_Msk     EQU		0x1 << CAN_F10R2_FB13_Pos                       ;/*!< 0x00002000 */
CAN_F10R2_FB13         EQU		CAN_F10R2_FB13_Msk                              ;/*!<Filter bit 13 */
CAN_F10R2_FB14_Pos     EQU		14                                           
CAN_F10R2_FB14_Msk     EQU		0x1 << CAN_F10R2_FB14_Pos                       ;/*!< 0x00004000 */
CAN_F10R2_FB14         EQU		CAN_F10R2_FB14_Msk                              ;/*!<Filter bit 14 */
CAN_F10R2_FB15_Pos     EQU		15                                           
CAN_F10R2_FB15_Msk     EQU		0x1 << CAN_F10R2_FB15_Pos                       ;/*!< 0x00008000 */
CAN_F10R2_FB15         EQU		CAN_F10R2_FB15_Msk                              ;/*!<Filter bit 15 */
CAN_F10R2_FB16_Pos     EQU		16                                           
CAN_F10R2_FB16_Msk     EQU		0x1 << CAN_F10R2_FB16_Pos                       ;/*!< 0x00010000 */
CAN_F10R2_FB16         EQU		CAN_F10R2_FB16_Msk                              ;/*!<Filter bit 16 */
CAN_F10R2_FB17_Pos     EQU		17                                           
CAN_F10R2_FB17_Msk     EQU		0x1 << CAN_F10R2_FB17_Pos                       ;/*!< 0x00020000 */
CAN_F10R2_FB17         EQU		CAN_F10R2_FB17_Msk                              ;/*!<Filter bit 17 */
CAN_F10R2_FB18_Pos     EQU		18                                           
CAN_F10R2_FB18_Msk     EQU		0x1 << CAN_F10R2_FB18_Pos                       ;/*!< 0x00040000 */
CAN_F10R2_FB18         EQU		CAN_F10R2_FB18_Msk                              ;/*!<Filter bit 18 */
CAN_F10R2_FB19_Pos     EQU		19                                           
CAN_F10R2_FB19_Msk     EQU		0x1 << CAN_F10R2_FB19_Pos                       ;/*!< 0x00080000 */
CAN_F10R2_FB19         EQU		CAN_F10R2_FB19_Msk                              ;/*!<Filter bit 19 */
CAN_F10R2_FB20_Pos     EQU		20                                           
CAN_F10R2_FB20_Msk     EQU		0x1 << CAN_F10R2_FB20_Pos                       ;/*!< 0x00100000 */
CAN_F10R2_FB20         EQU		CAN_F10R2_FB20_Msk                              ;/*!<Filter bit 20 */
CAN_F10R2_FB21_Pos     EQU		21                                           
CAN_F10R2_FB21_Msk     EQU		0x1 << CAN_F10R2_FB21_Pos                       ;/*!< 0x00200000 */
CAN_F10R2_FB21         EQU		CAN_F10R2_FB21_Msk                              ;/*!<Filter bit 21 */
CAN_F10R2_FB22_Pos     EQU		22                                           
CAN_F10R2_FB22_Msk     EQU		0x1 << CAN_F10R2_FB22_Pos                       ;/*!< 0x00400000 */
CAN_F10R2_FB22         EQU		CAN_F10R2_FB22_Msk                              ;/*!<Filter bit 22 */
CAN_F10R2_FB23_Pos     EQU		23                                           
CAN_F10R2_FB23_Msk     EQU		0x1 << CAN_F10R2_FB23_Pos                       ;/*!< 0x00800000 */
CAN_F10R2_FB23         EQU		CAN_F10R2_FB23_Msk                              ;/*!<Filter bit 23 */
CAN_F10R2_FB24_Pos     EQU		24                                           
CAN_F10R2_FB24_Msk     EQU		0x1 << CAN_F10R2_FB24_Pos                       ;/*!< 0x01000000 */
CAN_F10R2_FB24         EQU		CAN_F10R2_FB24_Msk                              ;/*!<Filter bit 24 */
CAN_F10R2_FB25_Pos     EQU		25                                           
CAN_F10R2_FB25_Msk     EQU		0x1 << CAN_F10R2_FB25_Pos                       ;/*!< 0x02000000 */
CAN_F10R2_FB25         EQU		CAN_F10R2_FB25_Msk                              ;/*!<Filter bit 25 */
CAN_F10R2_FB26_Pos     EQU		26                                           
CAN_F10R2_FB26_Msk     EQU		0x1 << CAN_F10R2_FB26_Pos                       ;/*!< 0x04000000 */
CAN_F10R2_FB26         EQU		CAN_F10R2_FB26_Msk                              ;/*!<Filter bit 26 */
CAN_F10R2_FB27_Pos     EQU		27                                           
CAN_F10R2_FB27_Msk     EQU		0x1 << CAN_F10R2_FB27_Pos                       ;/*!< 0x08000000 */
CAN_F10R2_FB27         EQU		CAN_F10R2_FB27_Msk                              ;/*!<Filter bit 27 */
CAN_F10R2_FB28_Pos     EQU		28                                           
CAN_F10R2_FB28_Msk     EQU		0x1 << CAN_F10R2_FB28_Pos                       ;/*!< 0x10000000 */
CAN_F10R2_FB28         EQU		CAN_F10R2_FB28_Msk                              ;/*!<Filter bit 28 */
CAN_F10R2_FB29_Pos     EQU		29                                           
CAN_F10R2_FB29_Msk     EQU		0x1 << CAN_F10R2_FB29_Pos                       ;/*!< 0x20000000 */
CAN_F10R2_FB29         EQU		CAN_F10R2_FB29_Msk                              ;/*!<Filter bit 29 */
CAN_F10R2_FB30_Pos     EQU		30                                           
CAN_F10R2_FB30_Msk     EQU		0x1 << CAN_F10R2_FB30_Pos                       ;/*!< 0x40000000 */
CAN_F10R2_FB30         EQU		CAN_F10R2_FB30_Msk                              ;/*!<Filter bit 30 */
CAN_F10R2_FB31_Pos     EQU		31                                           
CAN_F10R2_FB31_Msk     EQU		0x1 << CAN_F10R2_FB31_Pos                       ;/*!< 0x80000000 */
CAN_F10R2_FB31         EQU		CAN_F10R2_FB31_Msk                              ;/*!<Filter bit 31 */

CAN_F11R2		       EQU		0x29C
;/*******************  Bit definition for CAN_F11R2 register  ******************/
CAN_F11R2_FB0_Pos      EQU		0                                            
CAN_F11R2_FB0_Msk      EQU		0x1 << CAN_F11R2_FB0_Pos                        ;/*!< 0x00000001 */
CAN_F11R2_FB0          EQU		CAN_F11R2_FB0_Msk                               ;/*!<Filter bit 0 */
CAN_F11R2_FB1_Pos      EQU		1                                            
CAN_F11R2_FB1_Msk      EQU		0x1 << CAN_F11R2_FB1_Pos                        ;/*!< 0x00000002 */
CAN_F11R2_FB1          EQU		CAN_F11R2_FB1_Msk                               ;/*!<Filter bit 1 */
CAN_F11R2_FB2_Pos      EQU		2                                            
CAN_F11R2_FB2_Msk      EQU		0x1 << CAN_F11R2_FB2_Pos                        ;/*!< 0x00000004 */
CAN_F11R2_FB2          EQU		CAN_F11R2_FB2_Msk                               ;/*!<Filter bit 2 */
CAN_F11R2_FB3_Pos      EQU		3                                            
CAN_F11R2_FB3_Msk      EQU		0x1 << CAN_F11R2_FB3_Pos                        ;/*!< 0x00000008 */
CAN_F11R2_FB3          EQU		CAN_F11R2_FB3_Msk                               ;/*!<Filter bit 3 */
CAN_F11R2_FB4_Pos      EQU		4                                            
CAN_F11R2_FB4_Msk      EQU		0x1 << CAN_F11R2_FB4_Pos                        ;/*!< 0x00000010 */
CAN_F11R2_FB4          EQU		CAN_F11R2_FB4_Msk                               ;/*!<Filter bit 4 */
CAN_F11R2_FB5_Pos      EQU		5                                            
CAN_F11R2_FB5_Msk      EQU		0x1 << CAN_F11R2_FB5_Pos                        ;/*!< 0x00000020 */
CAN_F11R2_FB5          EQU		CAN_F11R2_FB5_Msk                               ;/*!<Filter bit 5 */
CAN_F11R2_FB6_Pos      EQU		6                                            
CAN_F11R2_FB6_Msk      EQU		0x1 << CAN_F11R2_FB6_Pos                        ;/*!< 0x00000040 */
CAN_F11R2_FB6          EQU		CAN_F11R2_FB6_Msk                               ;/*!<Filter bit 6 */
CAN_F11R2_FB7_Pos      EQU		7                                            
CAN_F11R2_FB7_Msk      EQU		0x1 << CAN_F11R2_FB7_Pos                        ;/*!< 0x00000080 */
CAN_F11R2_FB7          EQU		CAN_F11R2_FB7_Msk                               ;/*!<Filter bit 7 */
CAN_F11R2_FB8_Pos      EQU		8                                            
CAN_F11R2_FB8_Msk      EQU		0x1 << CAN_F11R2_FB8_Pos                        ;/*!< 0x00000100 */
CAN_F11R2_FB8          EQU		CAN_F11R2_FB8_Msk                               ;/*!<Filter bit 8 */
CAN_F11R2_FB9_Pos      EQU		9                                            
CAN_F11R2_FB9_Msk      EQU		0x1 << CAN_F11R2_FB9_Pos                        ;/*!< 0x00000200 */
CAN_F11R2_FB9          EQU		CAN_F11R2_FB9_Msk                               ;/*!<Filter bit 9 */
CAN_F11R2_FB10_Pos     EQU		10                                           
CAN_F11R2_FB10_Msk     EQU		0x1 << CAN_F11R2_FB10_Pos                       ;/*!< 0x00000400 */
CAN_F11R2_FB10         EQU		CAN_F11R2_FB10_Msk                              ;/*!<Filter bit 10 */
CAN_F11R2_FB11_Pos     EQU		11                                           
CAN_F11R2_FB11_Msk     EQU		0x1 << CAN_F11R2_FB11_Pos                       ;/*!< 0x00000800 */
CAN_F11R2_FB11         EQU		CAN_F11R2_FB11_Msk                              ;/*!<Filter bit 11 */
CAN_F11R2_FB12_Pos     EQU		12                                           
CAN_F11R2_FB12_Msk     EQU		0x1 << CAN_F11R2_FB12_Pos                       ;/*!< 0x00001000 */
CAN_F11R2_FB12         EQU		CAN_F11R2_FB12_Msk                              ;/*!<Filter bit 12 */
CAN_F11R2_FB13_Pos     EQU		13                                           
CAN_F11R2_FB13_Msk     EQU		0x1 << CAN_F11R2_FB13_Pos                       ;/*!< 0x00002000 */
CAN_F11R2_FB13         EQU		CAN_F11R2_FB13_Msk                              ;/*!<Filter bit 13 */
CAN_F11R2_FB14_Pos     EQU		14                                           
CAN_F11R2_FB14_Msk     EQU		0x1 << CAN_F11R2_FB14_Pos                       ;/*!< 0x00004000 */
CAN_F11R2_FB14         EQU		CAN_F11R2_FB14_Msk                              ;/*!<Filter bit 14 */
CAN_F11R2_FB15_Pos     EQU		15                                           
CAN_F11R2_FB15_Msk     EQU		0x1 << CAN_F11R2_FB15_Pos                       ;/*!< 0x00008000 */
CAN_F11R2_FB15         EQU		CAN_F11R2_FB15_Msk                              ;/*!<Filter bit 15 */
CAN_F11R2_FB16_Pos     EQU		16                                           
CAN_F11R2_FB16_Msk     EQU		0x1 << CAN_F11R2_FB16_Pos                       ;/*!< 0x00010000 */
CAN_F11R2_FB16         EQU		CAN_F11R2_FB16_Msk                              ;/*!<Filter bit 16 */
CAN_F11R2_FB17_Pos     EQU		17                                           
CAN_F11R2_FB17_Msk     EQU		0x1 << CAN_F11R2_FB17_Pos                       ;/*!< 0x00020000 */
CAN_F11R2_FB17         EQU		CAN_F11R2_FB17_Msk                              ;/*!<Filter bit 17 */
CAN_F11R2_FB18_Pos     EQU		18                                           
CAN_F11R2_FB18_Msk     EQU		0x1 << CAN_F11R2_FB18_Pos                       ;/*!< 0x00040000 */
CAN_F11R2_FB18         EQU		CAN_F11R2_FB18_Msk                              ;/*!<Filter bit 18 */
CAN_F11R2_FB19_Pos     EQU		19                                           
CAN_F11R2_FB19_Msk     EQU		0x1 << CAN_F11R2_FB19_Pos                       ;/*!< 0x00080000 */
CAN_F11R2_FB19         EQU		CAN_F11R2_FB19_Msk                              ;/*!<Filter bit 19 */
CAN_F11R2_FB20_Pos     EQU		20                                           
CAN_F11R2_FB20_Msk     EQU		0x1 << CAN_F11R2_FB20_Pos                       ;/*!< 0x00100000 */
CAN_F11R2_FB20         EQU		CAN_F11R2_FB20_Msk                              ;/*!<Filter bit 20 */
CAN_F11R2_FB21_Pos     EQU		21                                           
CAN_F11R2_FB21_Msk     EQU		0x1 << CAN_F11R2_FB21_Pos                       ;/*!< 0x00200000 */
CAN_F11R2_FB21         EQU		CAN_F11R2_FB21_Msk                              ;/*!<Filter bit 21 */
CAN_F11R2_FB22_Pos     EQU		22                                           
CAN_F11R2_FB22_Msk     EQU		0x1 << CAN_F11R2_FB22_Pos                       ;/*!< 0x00400000 */
CAN_F11R2_FB22         EQU		CAN_F11R2_FB22_Msk                              ;/*!<Filter bit 22 */
CAN_F11R2_FB23_Pos     EQU		23                                           
CAN_F11R2_FB23_Msk     EQU		0x1 << CAN_F11R2_FB23_Pos                       ;/*!< 0x00800000 */
CAN_F11R2_FB23         EQU		CAN_F11R2_FB23_Msk                              ;/*!<Filter bit 23 */
CAN_F11R2_FB24_Pos     EQU		24                                           
CAN_F11R2_FB24_Msk     EQU		0x1 << CAN_F11R2_FB24_Pos                       ;/*!< 0x01000000 */
CAN_F11R2_FB24         EQU		CAN_F11R2_FB24_Msk                              ;/*!<Filter bit 24 */
CAN_F11R2_FB25_Pos     EQU		25                                           
CAN_F11R2_FB25_Msk     EQU		0x1 << CAN_F11R2_FB25_Pos                       ;/*!< 0x02000000 */
CAN_F11R2_FB25         EQU		CAN_F11R2_FB25_Msk                              ;/*!<Filter bit 25 */
CAN_F11R2_FB26_Pos     EQU		26                                           
CAN_F11R2_FB26_Msk     EQU		0x1 << CAN_F11R2_FB26_Pos                       ;/*!< 0x04000000 */
CAN_F11R2_FB26         EQU		CAN_F11R2_FB26_Msk                              ;/*!<Filter bit 26 */
CAN_F11R2_FB27_Pos     EQU		27                                           
CAN_F11R2_FB27_Msk     EQU		0x1 << CAN_F11R2_FB27_Pos                       ;/*!< 0x08000000 */
CAN_F11R2_FB27         EQU		CAN_F11R2_FB27_Msk                              ;/*!<Filter bit 27 */
CAN_F11R2_FB28_Pos     EQU		28                                           
CAN_F11R2_FB28_Msk     EQU		0x1 << CAN_F11R2_FB28_Pos                       ;/*!< 0x10000000 */
CAN_F11R2_FB28         EQU		CAN_F11R2_FB28_Msk                              ;/*!<Filter bit 28 */
CAN_F11R2_FB29_Pos     EQU		29                                           
CAN_F11R2_FB29_Msk     EQU		0x1 << CAN_F11R2_FB29_Pos                       ;/*!< 0x20000000 */
CAN_F11R2_FB29         EQU		CAN_F11R2_FB29_Msk                              ;/*!<Filter bit 29 */
CAN_F11R2_FB30_Pos     EQU		30                                           
CAN_F11R2_FB30_Msk     EQU		0x1 << CAN_F11R2_FB30_Pos                       ;/*!< 0x40000000 */
CAN_F11R2_FB30         EQU		CAN_F11R2_FB30_Msk                              ;/*!<Filter bit 30 */
CAN_F11R2_FB31_Pos     EQU		31                                           
CAN_F11R2_FB31_Msk     EQU		0x1 << CAN_F11R2_FB31_Pos                       ;/*!< 0x80000000 */
CAN_F11R2_FB31         EQU		CAN_F11R2_FB31_Msk                              ;/*!<Filter bit 31 */

CAN_F12R2		       EQU		0x2A4
;/*******************  Bit definition for CAN_F12R2 register  ******************/
CAN_F12R2_FB0_Pos      EQU		0                                            
CAN_F12R2_FB0_Msk      EQU		0x1 << CAN_F12R2_FB0_Pos                        ;/*!< 0x00000001 */
CAN_F12R2_FB0          EQU		CAN_F12R2_FB0_Msk                               ;/*!<Filter bit 0 */
CAN_F12R2_FB1_Pos      EQU		1                                            
CAN_F12R2_FB1_Msk      EQU		0x1 << CAN_F12R2_FB1_Pos                        ;/*!< 0x00000002 */
CAN_F12R2_FB1          EQU		CAN_F12R2_FB1_Msk                               ;/*!<Filter bit 1 */
CAN_F12R2_FB2_Pos      EQU		2                                            
CAN_F12R2_FB2_Msk      EQU		0x1 << CAN_F12R2_FB2_Pos                        ;/*!< 0x00000004 */
CAN_F12R2_FB2          EQU		CAN_F12R2_FB2_Msk                               ;/*!<Filter bit 2 */
CAN_F12R2_FB3_Pos      EQU		3                                            
CAN_F12R2_FB3_Msk      EQU		0x1 << CAN_F12R2_FB3_Pos                        ;/*!< 0x00000008 */
CAN_F12R2_FB3          EQU		CAN_F12R2_FB3_Msk                               ;/*!<Filter bit 3 */
CAN_F12R2_FB4_Pos      EQU		4                                            
CAN_F12R2_FB4_Msk      EQU		0x1 << CAN_F12R2_FB4_Pos                        ;/*!< 0x00000010 */
CAN_F12R2_FB4          EQU		CAN_F12R2_FB4_Msk                               ;/*!<Filter bit 4 */
CAN_F12R2_FB5_Pos      EQU		5                                            
CAN_F12R2_FB5_Msk      EQU		0x1 << CAN_F12R2_FB5_Pos                        ;/*!< 0x00000020 */
CAN_F12R2_FB5          EQU		CAN_F12R2_FB5_Msk                               ;/*!<Filter bit 5 */
CAN_F12R2_FB6_Pos      EQU		6                                            
CAN_F12R2_FB6_Msk      EQU		0x1 << CAN_F12R2_FB6_Pos                        ;/*!< 0x00000040 */
CAN_F12R2_FB6          EQU		CAN_F12R2_FB6_Msk                               ;/*!<Filter bit 6 */
CAN_F12R2_FB7_Pos      EQU		7                                            
CAN_F12R2_FB7_Msk      EQU		0x1 << CAN_F12R2_FB7_Pos                        ;/*!< 0x00000080 */
CAN_F12R2_FB7          EQU		CAN_F12R2_FB7_Msk                               ;/*!<Filter bit 7 */
CAN_F12R2_FB8_Pos      EQU		8                                            
CAN_F12R2_FB8_Msk      EQU		0x1 << CAN_F12R2_FB8_Pos                        ;/*!< 0x00000100 */
CAN_F12R2_FB8          EQU		CAN_F12R2_FB8_Msk                               ;/*!<Filter bit 8 */
CAN_F12R2_FB9_Pos      EQU		9                                            
CAN_F12R2_FB9_Msk      EQU		0x1 << CAN_F12R2_FB9_Pos                        ;/*!< 0x00000200 */
CAN_F12R2_FB9          EQU		CAN_F12R2_FB9_Msk                               ;/*!<Filter bit 9 */
CAN_F12R2_FB10_Pos     EQU		10                                           
CAN_F12R2_FB10_Msk     EQU		0x1 << CAN_F12R2_FB10_Pos                       ;/*!< 0x00000400 */
CAN_F12R2_FB10         EQU		CAN_F12R2_FB10_Msk                              ;/*!<Filter bit 10 */
CAN_F12R2_FB11_Pos     EQU		11                                           
CAN_F12R2_FB11_Msk     EQU		0x1 << CAN_F12R2_FB11_Pos                       ;/*!< 0x00000800 */
CAN_F12R2_FB11         EQU		CAN_F12R2_FB11_Msk                              ;/*!<Filter bit 11 */
CAN_F12R2_FB12_Pos     EQU		12                                           
CAN_F12R2_FB12_Msk     EQU		0x1 << CAN_F12R2_FB12_Pos                       ;/*!< 0x00001000 */
CAN_F12R2_FB12         EQU		CAN_F12R2_FB12_Msk                              ;/*!<Filter bit 12 */
CAN_F12R2_FB13_Pos     EQU		13                                           
CAN_F12R2_FB13_Msk     EQU		0x1 << CAN_F12R2_FB13_Pos                       ;/*!< 0x00002000 */
CAN_F12R2_FB13         EQU		CAN_F12R2_FB13_Msk                              ;/*!<Filter bit 13 */
CAN_F12R2_FB14_Pos     EQU		14                                           
CAN_F12R2_FB14_Msk     EQU		0x1 << CAN_F12R2_FB14_Pos                       ;/*!< 0x00004000 */
CAN_F12R2_FB14         EQU		CAN_F12R2_FB14_Msk                              ;/*!<Filter bit 14 */
CAN_F12R2_FB15_Pos     EQU		15                                           
CAN_F12R2_FB15_Msk     EQU		0x1 << CAN_F12R2_FB15_Pos                       ;/*!< 0x00008000 */
CAN_F12R2_FB15         EQU		CAN_F12R2_FB15_Msk                              ;/*!<Filter bit 15 */
CAN_F12R2_FB16_Pos     EQU		16                                           
CAN_F12R2_FB16_Msk     EQU		0x1 << CAN_F12R2_FB16_Pos                       ;/*!< 0x00010000 */
CAN_F12R2_FB16         EQU		CAN_F12R2_FB16_Msk                              ;/*!<Filter bit 16 */
CAN_F12R2_FB17_Pos     EQU		17                                           
CAN_F12R2_FB17_Msk     EQU		0x1 << CAN_F12R2_FB17_Pos                       ;/*!< 0x00020000 */
CAN_F12R2_FB17         EQU		CAN_F12R2_FB17_Msk                              ;/*!<Filter bit 17 */
CAN_F12R2_FB18_Pos     EQU		18                                           
CAN_F12R2_FB18_Msk     EQU		0x1 << CAN_F12R2_FB18_Pos                       ;/*!< 0x00040000 */
CAN_F12R2_FB18         EQU		CAN_F12R2_FB18_Msk                              ;/*!<Filter bit 18 */
CAN_F12R2_FB19_Pos     EQU		19                                           
CAN_F12R2_FB19_Msk     EQU		0x1 << CAN_F12R2_FB19_Pos                       ;/*!< 0x00080000 */
CAN_F12R2_FB19         EQU		CAN_F12R2_FB19_Msk                              ;/*!<Filter bit 19 */
CAN_F12R2_FB20_Pos     EQU		20                                           
CAN_F12R2_FB20_Msk     EQU		0x1 << CAN_F12R2_FB20_Pos                       ;/*!< 0x00100000 */
CAN_F12R2_FB20         EQU		CAN_F12R2_FB20_Msk                              ;/*!<Filter bit 20 */
CAN_F12R2_FB21_Pos     EQU		21                                           
CAN_F12R2_FB21_Msk     EQU		0x1 << CAN_F12R2_FB21_Pos                       ;/*!< 0x00200000 */
CAN_F12R2_FB21         EQU		CAN_F12R2_FB21_Msk                              ;/*!<Filter bit 21 */
CAN_F12R2_FB22_Pos     EQU		22                                           
CAN_F12R2_FB22_Msk     EQU		0x1 << CAN_F12R2_FB22_Pos                       ;/*!< 0x00400000 */
CAN_F12R2_FB22         EQU		CAN_F12R2_FB22_Msk                              ;/*!<Filter bit 22 */
CAN_F12R2_FB23_Pos     EQU		23                                           
CAN_F12R2_FB23_Msk     EQU		0x1 << CAN_F12R2_FB23_Pos                       ;/*!< 0x00800000 */
CAN_F12R2_FB23         EQU		CAN_F12R2_FB23_Msk                              ;/*!<Filter bit 23 */
CAN_F12R2_FB24_Pos     EQU		24                                           
CAN_F12R2_FB24_Msk     EQU		0x1 << CAN_F12R2_FB24_Pos                       ;/*!< 0x01000000 */
CAN_F12R2_FB24         EQU		CAN_F12R2_FB24_Msk                              ;/*!<Filter bit 24 */
CAN_F12R2_FB25_Pos     EQU		25                                           
CAN_F12R2_FB25_Msk     EQU		0x1 << CAN_F12R2_FB25_Pos                       ;/*!< 0x02000000 */
CAN_F12R2_FB25         EQU		CAN_F12R2_FB25_Msk                              ;/*!<Filter bit 25 */
CAN_F12R2_FB26_Pos     EQU		26                                           
CAN_F12R2_FB26_Msk     EQU		0x1 << CAN_F12R2_FB26_Pos                       ;/*!< 0x04000000 */
CAN_F12R2_FB26         EQU		CAN_F12R2_FB26_Msk                              ;/*!<Filter bit 26 */
CAN_F12R2_FB27_Pos     EQU		27                                           
CAN_F12R2_FB27_Msk     EQU		0x1 << CAN_F12R2_FB27_Pos                       ;/*!< 0x08000000 */
CAN_F12R2_FB27         EQU		CAN_F12R2_FB27_Msk                              ;/*!<Filter bit 27 */
CAN_F12R2_FB28_Pos     EQU		28                                           
CAN_F12R2_FB28_Msk     EQU		0x1 << CAN_F12R2_FB28_Pos                       ;/*!< 0x10000000 */
CAN_F12R2_FB28         EQU		CAN_F12R2_FB28_Msk                              ;/*!<Filter bit 28 */
CAN_F12R2_FB29_Pos     EQU		29                                           
CAN_F12R2_FB29_Msk     EQU		0x1 << CAN_F12R2_FB29_Pos                       ;/*!< 0x20000000 */
CAN_F12R2_FB29         EQU		CAN_F12R2_FB29_Msk                              ;/*!<Filter bit 29 */
CAN_F12R2_FB30_Pos     EQU		30                                           
CAN_F12R2_FB30_Msk     EQU		0x1 << CAN_F12R2_FB30_Pos                       ;/*!< 0x40000000 */
CAN_F12R2_FB30         EQU		CAN_F12R2_FB30_Msk                              ;/*!<Filter bit 30 */
CAN_F12R2_FB31_Pos     EQU		31                                           
CAN_F12R2_FB31_Msk     EQU		0x1 << CAN_F12R2_FB31_Pos                       ;/*!< 0x80000000 */
CAN_F12R2_FB31         EQU		CAN_F12R2_FB31_Msk                              ;/*!<Filter bit 31 */

CAN_F13R2		       EQU		0x2AC
;/*******************  Bit definition for CAN_F13R2 register  ******************/
CAN_F13R2_FB0_Pos      EQU		0                                            
CAN_F13R2_FB0_Msk      EQU		0x1 << CAN_F13R2_FB0_Pos                        ;/*!< 0x00000001 */
CAN_F13R2_FB0          EQU		CAN_F13R2_FB0_Msk                               ;/*!<Filter bit 0 */
CAN_F13R2_FB1_Pos      EQU		1                                            
CAN_F13R2_FB1_Msk      EQU		0x1 << CAN_F13R2_FB1_Pos                        ;/*!< 0x00000002 */
CAN_F13R2_FB1          EQU		CAN_F13R2_FB1_Msk                               ;/*!<Filter bit 1 */
CAN_F13R2_FB2_Pos      EQU		2                                            
CAN_F13R2_FB2_Msk      EQU		0x1 << CAN_F13R2_FB2_Pos                        ;/*!< 0x00000004 */
CAN_F13R2_FB2          EQU		CAN_F13R2_FB2_Msk                               ;/*!<Filter bit 2 */
CAN_F13R2_FB3_Pos      EQU		3                                            
CAN_F13R2_FB3_Msk      EQU		0x1 << CAN_F13R2_FB3_Pos                        ;/*!< 0x00000008 */
CAN_F13R2_FB3          EQU		CAN_F13R2_FB3_Msk                               ;/*!<Filter bit 3 */
CAN_F13R2_FB4_Pos      EQU		4                                            
CAN_F13R2_FB4_Msk      EQU		0x1 << CAN_F13R2_FB4_Pos                        ;/*!< 0x00000010 */
CAN_F13R2_FB4          EQU		CAN_F13R2_FB4_Msk                               ;/*!<Filter bit 4 */
CAN_F13R2_FB5_Pos      EQU		5                                            
CAN_F13R2_FB5_Msk      EQU		0x1 << CAN_F13R2_FB5_Pos                        ;/*!< 0x00000020 */
CAN_F13R2_FB5          EQU		CAN_F13R2_FB5_Msk                               ;/*!<Filter bit 5 */
CAN_F13R2_FB6_Pos      EQU		6                                            
CAN_F13R2_FB6_Msk      EQU		0x1 << CAN_F13R2_FB6_Pos                        ;/*!< 0x00000040 */
CAN_F13R2_FB6          EQU		CAN_F13R2_FB6_Msk                               ;/*!<Filter bit 6 */
CAN_F13R2_FB7_Pos      EQU		7                                            
CAN_F13R2_FB7_Msk      EQU		0x1 << CAN_F13R2_FB7_Pos                        ;/*!< 0x00000080 */
CAN_F13R2_FB7          EQU		CAN_F13R2_FB7_Msk                               ;/*!<Filter bit 7 */
CAN_F13R2_FB8_Pos      EQU		8                                            
CAN_F13R2_FB8_Msk      EQU		0x1 << CAN_F13R2_FB8_Pos                        ;/*!< 0x00000100 */
CAN_F13R2_FB8          EQU		CAN_F13R2_FB8_Msk                               ;/*!<Filter bit 8 */
CAN_F13R2_FB9_Pos      EQU		9                                            
CAN_F13R2_FB9_Msk      EQU		0x1 << CAN_F13R2_FB9_Pos                        ;/*!< 0x00000200 */
CAN_F13R2_FB9          EQU		CAN_F13R2_FB9_Msk                               ;/*!<Filter bit 9 */
CAN_F13R2_FB10_Pos     EQU		10                                           
CAN_F13R2_FB10_Msk     EQU		0x1 << CAN_F13R2_FB10_Pos                       ;/*!< 0x00000400 */
CAN_F13R2_FB10         EQU		CAN_F13R2_FB10_Msk                              ;/*!<Filter bit 10 */
CAN_F13R2_FB11_Pos     EQU		11                                           
CAN_F13R2_FB11_Msk     EQU		0x1 << CAN_F13R2_FB11_Pos                       ;/*!< 0x00000800 */
CAN_F13R2_FB11         EQU		CAN_F13R2_FB11_Msk                              ;/*!<Filter bit 11 */
CAN_F13R2_FB12_Pos     EQU		12                                           
CAN_F13R2_FB12_Msk     EQU		0x1 << CAN_F13R2_FB12_Pos                       ;/*!< 0x00001000 */
CAN_F13R2_FB12         EQU		CAN_F13R2_FB12_Msk                              ;/*!<Filter bit 12 */
CAN_F13R2_FB13_Pos     EQU		13                                           
CAN_F13R2_FB13_Msk     EQU		0x1 << CAN_F13R2_FB13_Pos                       ;/*!< 0x00002000 */
CAN_F13R2_FB13         EQU		CAN_F13R2_FB13_Msk                              ;/*!<Filter bit 13 */
CAN_F13R2_FB14_Pos     EQU		14                                           
CAN_F13R2_FB14_Msk     EQU		0x1 << CAN_F13R2_FB14_Pos                       ;/*!< 0x00004000 */
CAN_F13R2_FB14         EQU		CAN_F13R2_FB14_Msk                              ;/*!<Filter bit 14 */
CAN_F13R2_FB15_Pos     EQU		15                                           
CAN_F13R2_FB15_Msk     EQU		0x1 << CAN_F13R2_FB15_Pos                       ;/*!< 0x00008000 */
CAN_F13R2_FB15         EQU		CAN_F13R2_FB15_Msk                              ;/*!<Filter bit 15 */
CAN_F13R2_FB16_Pos     EQU		16                                           
CAN_F13R2_FB16_Msk     EQU		0x1 << CAN_F13R2_FB16_Pos                       ;/*!< 0x00010000 */
CAN_F13R2_FB16         EQU		CAN_F13R2_FB16_Msk                              ;/*!<Filter bit 16 */
CAN_F13R2_FB17_Pos     EQU		17                                           
CAN_F13R2_FB17_Msk     EQU		0x1 << CAN_F13R2_FB17_Pos                       ;/*!< 0x00020000 */
CAN_F13R2_FB17         EQU		CAN_F13R2_FB17_Msk                              ;/*!<Filter bit 17 */
CAN_F13R2_FB18_Pos     EQU		18                                           
CAN_F13R2_FB18_Msk     EQU		0x1 << CAN_F13R2_FB18_Pos                       ;/*!< 0x00040000 */
CAN_F13R2_FB18         EQU		CAN_F13R2_FB18_Msk                              ;/*!<Filter bit 18 */
CAN_F13R2_FB19_Pos     EQU		19                                           
CAN_F13R2_FB19_Msk     EQU		0x1 << CAN_F13R2_FB19_Pos                       ;/*!< 0x00080000 */
CAN_F13R2_FB19         EQU		CAN_F13R2_FB19_Msk                              ;/*!<Filter bit 19 */
CAN_F13R2_FB20_Pos     EQU		20                                           
CAN_F13R2_FB20_Msk     EQU		0x1 << CAN_F13R2_FB20_Pos                       ;/*!< 0x00100000 */
CAN_F13R2_FB20         EQU		CAN_F13R2_FB20_Msk                              ;/*!<Filter bit 20 */
CAN_F13R2_FB21_Pos     EQU		21                                           
CAN_F13R2_FB21_Msk     EQU		0x1 << CAN_F13R2_FB21_Pos                       ;/*!< 0x00200000 */
CAN_F13R2_FB21         EQU		CAN_F13R2_FB21_Msk                              ;/*!<Filter bit 21 */
CAN_F13R2_FB22_Pos     EQU		22                                           
CAN_F13R2_FB22_Msk     EQU		0x1 << CAN_F13R2_FB22_Pos                       ;/*!< 0x00400000 */
CAN_F13R2_FB22         EQU		CAN_F13R2_FB22_Msk                              ;/*!<Filter bit 22 */
CAN_F13R2_FB23_Pos     EQU		23                                           
CAN_F13R2_FB23_Msk     EQU		0x1 << CAN_F13R2_FB23_Pos                       ;/*!< 0x00800000 */
CAN_F13R2_FB23         EQU		CAN_F13R2_FB23_Msk                              ;/*!<Filter bit 23 */
CAN_F13R2_FB24_Pos     EQU		24                                           
CAN_F13R2_FB24_Msk     EQU		0x1 << CAN_F13R2_FB24_Pos                       ;/*!< 0x01000000 */
CAN_F13R2_FB24         EQU		CAN_F13R2_FB24_Msk                              ;/*!<Filter bit 24 */
CAN_F13R2_FB25_Pos     EQU		25                                           
CAN_F13R2_FB25_Msk     EQU		0x1 << CAN_F13R2_FB25_Pos                       ;/*!< 0x02000000 */
CAN_F13R2_FB25         EQU		CAN_F13R2_FB25_Msk                              ;/*!<Filter bit 25 */
CAN_F13R2_FB26_Pos     EQU		26                                           
CAN_F13R2_FB26_Msk     EQU		0x1 << CAN_F13R2_FB26_Pos                       ;/*!< 0x04000000 */
CAN_F13R2_FB26         EQU		CAN_F13R2_FB26_Msk                              ;/*!<Filter bit 26 */
CAN_F13R2_FB27_Pos     EQU		27                                           
CAN_F13R2_FB27_Msk     EQU		0x1 << CAN_F13R2_FB27_Pos                       ;/*!< 0x08000000 */
CAN_F13R2_FB27         EQU		CAN_F13R2_FB27_Msk                              ;/*!<Filter bit 27 */
CAN_F13R2_FB28_Pos     EQU		28                                           
CAN_F13R2_FB28_Msk     EQU		0x1 << CAN_F13R2_FB28_Pos                       ;/*!< 0x10000000 */
CAN_F13R2_FB28         EQU		CAN_F13R2_FB28_Msk                              ;/*!<Filter bit 28 */
CAN_F13R2_FB29_Pos     EQU		29                                           
CAN_F13R2_FB29_Msk     EQU		0x1 << CAN_F13R2_FB29_Pos                       ;/*!< 0x20000000 */
CAN_F13R2_FB29         EQU		CAN_F13R2_FB29_Msk                              ;/*!<Filter bit 29 */
CAN_F13R2_FB30_Pos     EQU		30                                           
CAN_F13R2_FB30_Msk     EQU		0x1 << CAN_F13R2_FB30_Pos                       ;/*!< 0x40000000 */
CAN_F13R2_FB30         EQU		CAN_F13R2_FB30_Msk                              ;/*!<Filter bit 30 */
CAN_F13R2_FB31_Pos     EQU		31                                           
CAN_F13R2_FB31_Msk     EQU		0x1 << CAN_F13R2_FB31_Pos                       ;/*!< 0x80000000 */
CAN_F13R2_FB31         EQU		CAN_F13R2_FB31_Msk                              ;/*!<Filter bit 31 */

;/******************************************************************************/
;/*                                                                            */
;/*                          CRC calculation unit                              */
;/*                                                                            */
;/******************************************************************************/

CRC_DR		        EQU		0x00
;/*******************  Bit definition for CRC_DR register  *********************/
CRC_DR_DR_Pos       EQU		0                                               
CRC_DR_DR_Msk       EQU		0xFFFFFFFF << CRC_DR_DR_Pos                        ;/*!< 0xFFFFFFFF */
CRC_DR_DR           EQU		CRC_DR_DR_Msk                                      ;/*!< Data register bits */

CRC_IDR			    EQU		0x04
;/*******************  Bit definition for CRC_IDR register  ********************/
CRC_IDR_IDR_Pos     EQU		0                                               
CRC_IDR_IDR_Msk     EQU		0xFF << CRC_IDR_IDR_Pos                            ;/*!< 0x000000FF */
CRC_IDR_IDR         EQU		CRC_IDR_IDR_Msk                                    ;/*!< General-purpose 8-bit data register bits */

CRC_CR			    EQU		0x08
;/********************  Bit definition for CRC_CR register  ********************/
CRC_CR_RESET_Pos    EQU		0                                               
CRC_CR_RESET_Msk    EQU		0x1 << CRC_CR_RESET_Pos                            ;/*!< 0x00000001 */
CRC_CR_RESET        EQU		CRC_CR_RESET_Msk                                   ;/*!< RESET bit */

;/******************************************************************************/
;/*                                                                            */
;/*                      Digital to Analog Converter                           */
;/*                                                                            */
;/******************************************************************************/

DAC_CR			            EQU		0x00
;/********************  Bit definition for DAC_CR register  ********************/
DAC_CR_EN1_Pos              EQU		0                                       
DAC_CR_EN1_Msk              EQU		0x1 << DAC_CR_EN1_Pos                      ;/*!< 0x00000001 */
DAC_CR_EN1                  EQU		DAC_CR_EN1_Msk                             ;/*!<DAC channel1 enable */
DAC_CR_BOFF1_Pos            EQU		1                                       
DAC_CR_BOFF1_Msk            EQU		0x1 << DAC_CR_BOFF1_Pos                    ;/*!< 0x00000002 */
DAC_CR_BOFF1                EQU		DAC_CR_BOFF1_Msk                           ;/*!<DAC channel1 output buffer disable */
DAC_CR_TEN1_Pos             EQU		2                                       
DAC_CR_TEN1_Msk             EQU		0x1 << DAC_CR_TEN1_Pos                     ;/*!< 0x00000004 */
DAC_CR_TEN1                 EQU		DAC_CR_TEN1_Msk                            ;/*!<DAC channel1 Trigger enable */

DAC_CR_TSEL1_Pos            EQU		3                                       
DAC_CR_TSEL1_Msk            EQU		0x7 << DAC_CR_TSEL1_Pos                    ;/*!< 0x00000038 */
DAC_CR_TSEL1                EQU		DAC_CR_TSEL1_Msk                           ;/*!<TSEL1[2:0] EQU		DAC channel1 Trigger selection    */
DAC_CR_TSEL1_0              EQU		0x1 << DAC_CR_TSEL1_Pos                    ;/*!< 0x00000008 */
DAC_CR_TSEL1_1              EQU		0x2 << DAC_CR_TSEL1_Pos                    ;/*!< 0x00000010 */
DAC_CR_TSEL1_2              EQU		0x4 << DAC_CR_TSEL1_Pos                    ;/*!< 0x00000020 */

DAC_CR_WAVE1_Pos            EQU		6                                       
DAC_CR_WAVE1_Msk            EQU		0x3 << DAC_CR_WAVE1_Pos                    ;/*!< 0x000000C0 */
DAC_CR_WAVE1                EQU		DAC_CR_WAVE1_Msk                           ;/*!<WAVE1[1:0] EQU		DAC channel1 noise/triangle wave generation enable    */
DAC_CR_WAVE1_0              EQU		0x1 << DAC_CR_WAVE1_Pos                    ;/*!< 0x00000040 */
DAC_CR_WAVE1_1              EQU		0x2 << DAC_CR_WAVE1_Pos                    ;/*!< 0x00000080 */

DAC_CR_MAMP1_Pos            EQU		8                                       
DAC_CR_MAMP1_Msk            EQU		0xF << DAC_CR_MAMP1_Pos                    ;/*!< 0x00000F00 */
DAC_CR_MAMP1                EQU		DAC_CR_MAMP1_Msk                           ;/*!<MAMP1[3:0] EQU		DAC channel1 Mask/Amplitude selector    */
DAC_CR_MAMP1_0              EQU		0x1 << DAC_CR_MAMP1_Pos                    ;/*!< 0x00000100 */
DAC_CR_MAMP1_1              EQU		0x2 << DAC_CR_MAMP1_Pos                    ;/*!< 0x00000200 */
DAC_CR_MAMP1_2              EQU		0x4 << DAC_CR_MAMP1_Pos                    ;/*!< 0x00000400 */
DAC_CR_MAMP1_3              EQU		0x8 << DAC_CR_MAMP1_Pos                    ;/*!< 0x00000800 */

DAC_CR_DMAEN1_Pos           EQU		12                                      
DAC_CR_DMAEN1_Msk           EQU		0x1 << DAC_CR_DMAEN1_Pos                   ;/*!< 0x00001000 */
DAC_CR_DMAEN1               EQU		DAC_CR_DMAEN1_Msk                          ;/*!<DAC channel1 DMA enable */
DAC_CR_DMAUDRIE1_Pos        EQU		13                                      
DAC_CR_DMAUDRIE1_Msk        EQU		0x1 << DAC_CR_DMAUDRIE1_Pos                ;/*!< 0x00002000 */
DAC_CR_DMAUDRIE1            EQU		DAC_CR_DMAUDRIE1_Msk                       ;/*!<DAC channel1 DMA underrun interrupt enable*/
DAC_CR_EN2_Pos              EQU		16                                      
DAC_CR_EN2_Msk              EQU		0x1 << DAC_CR_EN2_Pos                      ;/*!< 0x00010000 */
DAC_CR_EN2                  EQU		DAC_CR_EN2_Msk                             ;/*!<DAC channel2 enable */
DAC_CR_BOFF2_Pos            EQU		17                                      
DAC_CR_BOFF2_Msk            EQU		0x1 << DAC_CR_BOFF2_Pos                    ;/*!< 0x00020000 */
DAC_CR_BOFF2                EQU		DAC_CR_BOFF2_Msk                           ;/*!<DAC channel2 output buffer disable */
DAC_CR_TEN2_Pos             EQU		18                                      
DAC_CR_TEN2_Msk             EQU		0x1 << DAC_CR_TEN2_Pos                     ;/*!< 0x00040000 */
DAC_CR_TEN2                 EQU		DAC_CR_TEN2_Msk                            ;/*!<DAC channel2 Trigger enable */

DAC_CR_TSEL2_Pos            EQU		19                                      
DAC_CR_TSEL2_Msk            EQU		0x7 << DAC_CR_TSEL2_Pos                    ;/*!< 0x00380000 */
DAC_CR_TSEL2                EQU		DAC_CR_TSEL2_Msk                           ;/*!<TSEL2[2:0] EQU		DAC channel2 Trigger selection    */
DAC_CR_TSEL2_0              EQU		0x1 << DAC_CR_TSEL2_Pos                    ;/*!< 0x00080000 */
DAC_CR_TSEL2_1              EQU		0x2 << DAC_CR_TSEL2_Pos                    ;/*!< 0x00100000 */
DAC_CR_TSEL2_2              EQU		0x4 << DAC_CR_TSEL2_Pos                    ;/*!< 0x00200000 */

DAC_CR_WAVE2_Pos            EQU		22                                      
DAC_CR_WAVE2_Msk            EQU		0x3 << DAC_CR_WAVE2_Pos                    ;/*!< 0x00C00000 */
DAC_CR_WAVE2                EQU		DAC_CR_WAVE2_Msk                           ;/*!<WAVE2[1:0] EQU		DAC channel2 noise/triangle wave generation enable    */
DAC_CR_WAVE2_0              EQU		0x1 << DAC_CR_WAVE2_Pos                    ;/*!< 0x00400000 */
DAC_CR_WAVE2_1              EQU		0x2 << DAC_CR_WAVE2_Pos                    ;/*!< 0x00800000 */

DAC_CR_MAMP2_Pos            EQU		24                                      
DAC_CR_MAMP2_Msk            EQU		0xF << DAC_CR_MAMP2_Pos                    ;/*!< 0x0F000000 */
DAC_CR_MAMP2                EQU		DAC_CR_MAMP2_Msk                           ;/*!<MAMP2[3:0] EQU		DAC channel2 Mask/Amplitude selector    */
DAC_CR_MAMP2_0              EQU		0x1 << DAC_CR_MAMP2_Pos                    ;/*!< 0x01000000 */
DAC_CR_MAMP2_1              EQU		0x2 << DAC_CR_MAMP2_Pos                    ;/*!< 0x02000000 */
DAC_CR_MAMP2_2              EQU		0x4 << DAC_CR_MAMP2_Pos                    ;/*!< 0x04000000 */
DAC_CR_MAMP2_3              EQU		0x8 << DAC_CR_MAMP2_Pos                    ;/*!< 0x08000000 */

DAC_CR_DMAEN2_Pos           EQU		28                                      
DAC_CR_DMAEN2_Msk           EQU		0x1 << DAC_CR_DMAEN2_Pos                   ;/*!< 0x10000000 */
DAC_CR_DMAEN2               EQU		DAC_CR_DMAEN2_Msk                          ;/*!<DAC channel2 DMA enabled */
DAC_CR_DMAUDRIE2_Pos        EQU		29                                      
DAC_CR_DMAUDRIE2_Msk        EQU		0x1 << DAC_CR_DMAUDRIE2_Pos                ;/*!< 0x20000000 */
DAC_CR_DMAUDRIE2            EQU		DAC_CR_DMAUDRIE2_Msk                       ;/*!<DAC channel2 DMA underrun interrupt enable*/

DAC_SWTRIGR				    EQU		0x04
;/*****************  Bit definition for DAC_SWTRIGR register  ******************/
DAC_SWTRIGR_SWTRIG1_Pos     EQU		0                                       
DAC_SWTRIGR_SWTRIG1_Msk     EQU		0x1 << DAC_SWTRIGR_SWTRIG1_Pos             ;/*!< 0x00000001 */
DAC_SWTRIGR_SWTRIG1         EQU		DAC_SWTRIGR_SWTRIG1_Msk                    ;/*!<DAC channel1 software trigger */
DAC_SWTRIGR_SWTRIG2_Pos     EQU		1                                       
DAC_SWTRIGR_SWTRIG2_Msk     EQU		0x1 << DAC_SWTRIGR_SWTRIG2_Pos             ;/*!< 0x00000002 */
DAC_SWTRIGR_SWTRIG2         EQU		DAC_SWTRIGR_SWTRIG2_Msk                    ;/*!<DAC channel2 software trigger */

DAC_DHR12R1				    EQU		0x08
;/*****************  Bit definition for DAC_DHR12R1 register  ******************/
DAC_DHR12R1_DACC1DHR_Pos    EQU		0                                       
DAC_DHR12R1_DACC1DHR_Msk    EQU		0xFFF << DAC_DHR12R1_DACC1DHR_Pos          ;/*!< 0x00000FFF */
DAC_DHR12R1_DACC1DHR        EQU		DAC_DHR12R1_DACC1DHR_Msk                   ;/*!<DAC channel1 12-bit Right aligned data */

DAC_DHR12L1				    EQU		0x0C
;/*****************  Bit definition for DAC_DHR12L1 register  ******************/
DAC_DHR12L1_DACC1DHR_Pos    EQU		4                                       
DAC_DHR12L1_DACC1DHR_Msk    EQU		0xFFF << DAC_DHR12L1_DACC1DHR_Pos          ;/*!< 0x0000FFF0 */
DAC_DHR12L1_DACC1DHR        EQU		DAC_DHR12L1_DACC1DHR_Msk                   ;/*!<DAC channel1 12-bit Left aligned data */

DAC_DHR8R1				    EQU		0x10
;/******************  Bit definition for DAC_DHR8R1 register  ******************/
DAC_DHR8R1_DACC1DHR_Pos     EQU		0                                       
DAC_DHR8R1_DACC1DHR_Msk     EQU		0xFF << DAC_DHR8R1_DACC1DHR_Pos            ;/*!< 0x000000FF */
DAC_DHR8R1_DACC1DHR         EQU		DAC_DHR8R1_DACC1DHR_Msk                    ;/*!<DAC channel1 8-bit Right aligned data */

DAC_DHR12R2				    EQU		0x14
;/*****************  Bit definition for DAC_DHR12R2 register  ******************/
DAC_DHR12R2_DACC2DHR_Pos    EQU		0                                       
DAC_DHR12R2_DACC2DHR_Msk    EQU		0xFFF << DAC_DHR12R2_DACC2DHR_Pos          ;/*!< 0x00000FFF */
DAC_DHR12R2_DACC2DHR        EQU		DAC_DHR12R2_DACC2DHR_Msk                   ;/*!<DAC channel2 12-bit Right aligned data */

DAC_DHR12L2				    EQU		0x18
;/*****************  Bit definition for DAC_DHR12L2 register  ******************/
DAC_DHR12L2_DACC2DHR_Pos    EQU		4                                       
DAC_DHR12L2_DACC2DHR_Msk    EQU		0xFFF << DAC_DHR12L2_DACC2DHR_Pos          ;/*!< 0x0000FFF0 */
DAC_DHR12L2_DACC2DHR        EQU		DAC_DHR12L2_DACC2DHR_Msk                   ;/*!<DAC channel2 12-bit Left aligned data */

DAC_DHR8R2				    EQU		0x1C
;/******************  Bit definition for DAC_DHR8R2 register  ******************/
DAC_DHR8R2_DACC2DHR_Pos     EQU		0                                       
DAC_DHR8R2_DACC2DHR_Msk     EQU		0xFF << DAC_DHR8R2_DACC2DHR_Pos            ;/*!< 0x000000FF */
DAC_DHR8R2_DACC2DHR         EQU		DAC_DHR8R2_DACC2DHR_Msk                    ;/*!<DAC channel2 8-bit Right aligned data */

DAC_DHR12RD				    EQU		0x20
;/*****************  Bit definition for DAC_DHR12RD register  ******************/
DAC_DHR12RD_DACC1DHR_Pos    EQU		0                                       
DAC_DHR12RD_DACC1DHR_Msk    EQU		0xFFF << DAC_DHR12RD_DACC1DHR_Pos          ;/*!< 0x00000FFF */
DAC_DHR12RD_DACC1DHR        EQU		DAC_DHR12RD_DACC1DHR_Msk                   ;/*!<DAC channel1 12-bit Right aligned data */
DAC_DHR12RD_DACC2DHR_Pos    EQU		16                                      
DAC_DHR12RD_DACC2DHR_Msk    EQU		0xFFF << DAC_DHR12RD_DACC2DHR_Pos          ;/*!< 0x0FFF0000 */
DAC_DHR12RD_DACC2DHR        EQU		DAC_DHR12RD_DACC2DHR_Msk                   ;/*!<DAC channel2 12-bit Right aligned data */

DAC_DHR12LD				    EQU		0x24
;/*****************  Bit definition for DAC_DHR12LD register  ******************/
DAC_DHR12LD_DACC1DHR_Pos    EQU		4                                       
DAC_DHR12LD_DACC1DHR_Msk    EQU		0xFFF << DAC_DHR12LD_DACC1DHR_Pos          ;/*!< 0x0000FFF0 */
DAC_DHR12LD_DACC1DHR        EQU		DAC_DHR12LD_DACC1DHR_Msk                   ;/*!<DAC channel1 12-bit Left aligned data */
DAC_DHR12LD_DACC2DHR_Pos    EQU		20                                      
DAC_DHR12LD_DACC2DHR_Msk    EQU		0xFFF << DAC_DHR12LD_DACC2DHR_Pos          ;/*!< 0xFFF00000 */
DAC_DHR12LD_DACC2DHR        EQU		DAC_DHR12LD_DACC2DHR_Msk                   ;/*!<DAC channel2 12-bit Left aligned data */

DAC_DHR8RD				    EQU		0x28
;/******************  Bit definition for DAC_DHR8RD register  ******************/
DAC_DHR8RD_DACC1DHR_Pos     EQU		0                                       
DAC_DHR8RD_DACC1DHR_Msk     EQU		0xFF << DAC_DHR8RD_DACC1DHR_Pos            ;/*!< 0x000000FF */
DAC_DHR8RD_DACC1DHR         EQU		DAC_DHR8RD_DACC1DHR_Msk                    ;/*!<DAC channel1 8-bit Right aligned data */
DAC_DHR8RD_DACC2DHR_Pos     EQU		8                                       
DAC_DHR8RD_DACC2DHR_Msk     EQU		0xFF << DAC_DHR8RD_DACC2DHR_Pos            ;/*!< 0x0000FF00 */
DAC_DHR8RD_DACC2DHR         EQU		DAC_DHR8RD_DACC2DHR_Msk                    ;/*!<DAC channel2 8-bit Right aligned data */

DAC_DOR1			        EQU		0x2C
;/*******************  Bit definition for DAC_DOR1 register  *******************/
DAC_DOR1_DACC1DOR_Pos       EQU		0                                       
DAC_DOR1_DACC1DOR_Msk       EQU		0xFFF << DAC_DOR1_DACC1DOR_Pos             ;/*!< 0x00000FFF */
DAC_DOR1_DACC1DOR           EQU		DAC_DOR1_DACC1DOR_Msk                      ;/*!<DAC channel1 data output */

DAC_DOR2			        EQU		0x30
;/*******************  Bit definition for DAC_DOR2 register  *******************/
DAC_DOR2_DACC2DOR_Pos       EQU		0                                       
DAC_DOR2_DACC2DOR_Msk       EQU		0xFFF << DAC_DOR2_DACC2DOR_Pos             ;/*!< 0x00000FFF */
DAC_DOR2_DACC2DOR           EQU		DAC_DOR2_DACC2DOR_Msk                      ;/*!<DAC channel2 data output */

DAC_SR				        EQU		0x34
;/********************  Bit definition for DAC_SR register  ********************/
DAC_SR_DMAUDR1_Pos          EQU		13                                      
DAC_SR_DMAUDR1_Msk          EQU		0x1 << DAC_SR_DMAUDR1_Pos                  ;/*!< 0x00002000 */
DAC_SR_DMAUDR1              EQU		DAC_SR_DMAUDR1_Msk                         ;/*!<DAC channel1 DMA underrun flag */
DAC_SR_DMAUDR2_Pos          EQU		29                                      
DAC_SR_DMAUDR2_Msk          EQU		0x1 << DAC_SR_DMAUDR2_Pos                  ;/*!< 0x20000000 */
DAC_SR_DMAUDR2              EQU		DAC_SR_DMAUDR2_Msk                         ;/*!<DAC channel2 DMA underrun flag */

;/******************************************************************************/
;/*                                                                            */
;/*                                    DCMI                                    */
;/*                                                                            */
;/******************************************************************************/

DCMI_CR				       EQU		0x00
;/********************  Bits definition for DCMI_CR register  ******************/
DCMI_CR_CAPTURE_Pos        EQU		0                                        
DCMI_CR_CAPTURE_Msk        EQU		0x1 << DCMI_CR_CAPTURE_Pos                  ;/*!< 0x00000001 */
DCMI_CR_CAPTURE            EQU		DCMI_CR_CAPTURE_Msk                         
DCMI_CR_CM_Pos             EQU		1                                        
DCMI_CR_CM_Msk             EQU		0x1 << DCMI_CR_CM_Pos                       ;/*!< 0x00000002 */
DCMI_CR_CM                 EQU		DCMI_CR_CM_Msk                              
DCMI_CR_CROP_Pos           EQU		2                                        
DCMI_CR_CROP_Msk           EQU		0x1 << DCMI_CR_CROP_Pos                     ;/*!< 0x00000004 */
DCMI_CR_CROP               EQU		DCMI_CR_CROP_Msk                            
DCMI_CR_JPEG_Pos           EQU		3                                        
DCMI_CR_JPEG_Msk           EQU		0x1 << DCMI_CR_JPEG_Pos                     ;/*!< 0x00000008 */
DCMI_CR_JPEG               EQU		DCMI_CR_JPEG_Msk                            
DCMI_CR_ESS_Pos            EQU		4                                        
DCMI_CR_ESS_Msk            EQU		0x1 << DCMI_CR_ESS_Pos                      ;/*!< 0x00000010 */
DCMI_CR_ESS                EQU		DCMI_CR_ESS_Msk                             
DCMI_CR_PCKPOL_Pos         EQU		5                                        
DCMI_CR_PCKPOL_Msk         EQU		0x1 << DCMI_CR_PCKPOL_Pos                   ;/*!< 0x00000020 */
DCMI_CR_PCKPOL             EQU		DCMI_CR_PCKPOL_Msk                          
DCMI_CR_HSPOL_Pos          EQU		6                                        
DCMI_CR_HSPOL_Msk          EQU		0x1 << DCMI_CR_HSPOL_Pos                    ;/*!< 0x00000040 */
DCMI_CR_HSPOL              EQU		DCMI_CR_HSPOL_Msk                           
DCMI_CR_VSPOL_Pos          EQU		7                                        
DCMI_CR_VSPOL_Msk          EQU		0x1 << DCMI_CR_VSPOL_Pos                    ;/*!< 0x00000080 */
DCMI_CR_VSPOL              EQU		DCMI_CR_VSPOL_Msk                           
DCMI_CR_FCRC_0             EQU		0x00000100                                 
DCMI_CR_FCRC_1             EQU		0x00000200                                 
DCMI_CR_EDM_0              EQU		0x00000400                                 
DCMI_CR_EDM_1              EQU		0x00000800                                 
DCMI_CR_CRE_Pos            EQU		12                                       
DCMI_CR_CRE_Msk            EQU		0x1 << DCMI_CR_CRE_Pos                      ;/*!< 0x00001000 */
DCMI_CR_CRE                EQU		DCMI_CR_CRE_Msk                             
DCMI_CR_ENABLE_Pos         EQU		14                                       
DCMI_CR_ENABLE_Msk         EQU		0x1 << DCMI_CR_ENABLE_Pos                   ;/*!< 0x00004000 */
DCMI_CR_ENABLE             EQU		DCMI_CR_ENABLE_Msk                          

DCMI_SR			           EQU		0x04
;/********************  Bits definition for DCMI_SR register  ******************/
DCMI_SR_HSYNC_Pos          EQU		0                                        
DCMI_SR_HSYNC_Msk          EQU		0x1 << DCMI_SR_HSYNC_Pos                    ;/*!< 0x00000001 */
DCMI_SR_HSYNC              EQU		DCMI_SR_HSYNC_Msk                           
DCMI_SR_VSYNC_Pos          EQU		1                                        
DCMI_SR_VSYNC_Msk          EQU		0x1 << DCMI_SR_VSYNC_Pos                    ;/*!< 0x00000002 */
DCMI_SR_VSYNC              EQU		DCMI_SR_VSYNC_Msk                           
DCMI_SR_FNE_Pos            EQU		2                                        
DCMI_SR_FNE_Msk            EQU		0x1 << DCMI_SR_FNE_Pos                      ;/*!< 0x00000004 */
DCMI_SR_FNE                EQU		DCMI_SR_FNE_Msk                             

DCMI_RIS				   EQU		0x08
;/********************  Bits definition for DCMI_RIS register  *****************/
DCMI_RIS_FRAME_RIS_Pos     EQU		0                                        
DCMI_RIS_FRAME_RIS_Msk     EQU		0x1 << DCMI_RIS_FRAME_RIS_Pos               ;/*!< 0x00000001 */
DCMI_RIS_FRAME_RIS         EQU		DCMI_RIS_FRAME_RIS_Msk                      
DCMI_RIS_OVR_RIS_Pos       EQU		1                                        
DCMI_RIS_OVR_RIS_Msk       EQU		0x1 << DCMI_RIS_OVR_RIS_Pos                 ;/*!< 0x00000002 */
DCMI_RIS_OVR_RIS           EQU		DCMI_RIS_OVR_RIS_Msk                        
DCMI_RIS_ERR_RIS_Pos       EQU		2                                        
DCMI_RIS_ERR_RIS_Msk       EQU		0x1 << DCMI_RIS_ERR_RIS_Pos                 ;/*!< 0x00000004 */
DCMI_RIS_ERR_RIS           EQU		DCMI_RIS_ERR_RIS_Msk                        
DCMI_RIS_VSYNC_RIS_Pos     EQU		3                                        
DCMI_RIS_VSYNC_RIS_Msk     EQU		0x1 << DCMI_RIS_VSYNC_RIS_Pos               ;/*!< 0x00000008 */
DCMI_RIS_VSYNC_RIS         EQU		DCMI_RIS_VSYNC_RIS_Msk                      
DCMI_RIS_LINE_RIS_Pos      EQU		4                                        
DCMI_RIS_LINE_RIS_Msk      EQU		0x1 << DCMI_RIS_LINE_RIS_Pos                ;/*!< 0x00000010 */
DCMI_RIS_LINE_RIS          EQU		DCMI_RIS_LINE_RIS_Msk                       

;/* Legacy defines */
DCMI_RISR_FRAME_RIS        EQU		DCMI_RIS_FRAME_RIS
DCMI_RISR_OVR_RIS          EQU		DCMI_RIS_OVR_RIS
DCMI_RISR_ERR_RIS          EQU		DCMI_RIS_ERR_RIS
DCMI_RISR_VSYNC_RIS        EQU		DCMI_RIS_VSYNC_RIS
DCMI_RISR_LINE_RIS         EQU		DCMI_RIS_LINE_RIS
DCMI_RISR_OVF_RIS          EQU		DCMI_RIS_OVR_RIS

DCMI_IER				   EQU		0x0C
;/********************  Bits definition for DCMI_IER register  *****************/
DCMI_IER_FRAME_IE_Pos      EQU		0                                        
DCMI_IER_FRAME_IE_Msk      EQU		0x1 << DCMI_IER_FRAME_IE_Pos                ;/*!< 0x00000001 */
DCMI_IER_FRAME_IE          EQU		DCMI_IER_FRAME_IE_Msk                       
DCMI_IER_OVR_IE_Pos        EQU		1                                        
DCMI_IER_OVR_IE_Msk        EQU		0x1 << DCMI_IER_OVR_IE_Pos                  ;/*!< 0x00000002 */
DCMI_IER_OVR_IE            EQU		DCMI_IER_OVR_IE_Msk                         
DCMI_IER_ERR_IE_Pos        EQU		2                                        
DCMI_IER_ERR_IE_Msk        EQU		0x1 << DCMI_IER_ERR_IE_Pos                  ;/*!< 0x00000004 */
DCMI_IER_ERR_IE            EQU		DCMI_IER_ERR_IE_Msk                         
DCMI_IER_VSYNC_IE_Pos      EQU		3                                        
DCMI_IER_VSYNC_IE_Msk      EQU		0x1 << DCMI_IER_VSYNC_IE_Pos                ;/*!< 0x00000008 */
DCMI_IER_VSYNC_IE          EQU		DCMI_IER_VSYNC_IE_Msk                       
DCMI_IER_LINE_IE_Pos       EQU		4                                        
DCMI_IER_LINE_IE_Msk       EQU		0x1 << DCMI_IER_LINE_IE_Pos                 ;/*!< 0x00000010 */
DCMI_IER_LINE_IE           EQU		DCMI_IER_LINE_IE_Msk                        

;/* Legacy defines */
DCMI_IER_OVF_IE            EQU		DCMI_IER_OVR_IE

DCMI_MIS				   EQU		0x10
;/********************  Bits definition for DCMI_MIS register  *****************/
DCMI_MIS_FRAME_MIS_Pos     EQU		0                                        
DCMI_MIS_FRAME_MIS_Msk     EQU		0x1 << DCMI_MIS_FRAME_MIS_Pos               ;/*!< 0x00000001 */
DCMI_MIS_FRAME_MIS         EQU		DCMI_MIS_FRAME_MIS_Msk                      
DCMI_MIS_OVR_MIS_Pos       EQU		1                                        
DCMI_MIS_OVR_MIS_Msk       EQU		0x1 << DCMI_MIS_OVR_MIS_Pos                 ;/*!< 0x00000002 */
DCMI_MIS_OVR_MIS           EQU		DCMI_MIS_OVR_MIS_Msk                        
DCMI_MIS_ERR_MIS_Pos       EQU		2                                        
DCMI_MIS_ERR_MIS_Msk       EQU		0x1 << DCMI_MIS_ERR_MIS_Pos                 ;/*!< 0x00000004 */
DCMI_MIS_ERR_MIS           EQU		DCMI_MIS_ERR_MIS_Msk                        
DCMI_MIS_VSYNC_MIS_Pos     EQU		3                                        
DCMI_MIS_VSYNC_MIS_Msk     EQU		0x1 << DCMI_MIS_VSYNC_MIS_Pos               ;/*!< 0x00000008 */
DCMI_MIS_VSYNC_MIS         EQU		DCMI_MIS_VSYNC_MIS_Msk                      
DCMI_MIS_LINE_MIS_Pos      EQU		4                                        
DCMI_MIS_LINE_MIS_Msk      EQU		0x1 << DCMI_MIS_LINE_MIS_Pos                ;/*!< 0x00000010 */
DCMI_MIS_LINE_MIS          EQU		DCMI_MIS_LINE_MIS_Msk                       

;/* Legacy defines */
DCMI_MISR_FRAME_MIS        EQU		DCMI_MIS_FRAME_MIS
DCMI_MISR_OVF_MIS          EQU		DCMI_MIS_OVR_MIS
DCMI_MISR_ERR_MIS          EQU		DCMI_MIS_ERR_MIS
DCMI_MISR_VSYNC_MIS        EQU		DCMI_MIS_VSYNC_MIS
DCMI_MISR_LINE_MIS         EQU		DCMI_MIS_LINE_MIS

DCMI_ICR			       EQU		0x14
;/********************  Bits definition for DCMI_ICR register  *****************/
DCMI_ICR_FRAME_ISC_Pos     EQU		0                                        
DCMI_ICR_FRAME_ISC_Msk     EQU		0x1 << DCMI_ICR_FRAME_ISC_Pos               ;/*!< 0x00000001 */
DCMI_ICR_FRAME_ISC         EQU		DCMI_ICR_FRAME_ISC_Msk                      
DCMI_ICR_OVR_ISC_Pos       EQU		1                                        
DCMI_ICR_OVR_ISC_Msk       EQU		0x1 << DCMI_ICR_OVR_ISC_Pos                 ;/*!< 0x00000002 */
DCMI_ICR_OVR_ISC           EQU		DCMI_ICR_OVR_ISC_Msk                        
DCMI_ICR_ERR_ISC_Pos       EQU		2                                        
DCMI_ICR_ERR_ISC_Msk       EQU		0x1 << DCMI_ICR_ERR_ISC_Pos                 ;/*!< 0x00000004 */
DCMI_ICR_ERR_ISC           EQU		DCMI_ICR_ERR_ISC_Msk                        
DCMI_ICR_VSYNC_ISC_Pos     EQU		3                                        
DCMI_ICR_VSYNC_ISC_Msk     EQU		0x1 << DCMI_ICR_VSYNC_ISC_Pos               ;/*!< 0x00000008 */
DCMI_ICR_VSYNC_ISC         EQU		DCMI_ICR_VSYNC_ISC_Msk                      
DCMI_ICR_LINE_ISC_Pos      EQU		4                                        
DCMI_ICR_LINE_ISC_Msk      EQU		0x1 << DCMI_ICR_LINE_ISC_Pos                ;/*!< 0x00000010 */
DCMI_ICR_LINE_ISC          EQU		DCMI_ICR_LINE_ISC_Msk                       

;/* Legacy defines */
DCMI_ICR_OVF_ISC           EQU		DCMI_ICR_OVR_ISC

DCMI_ESCR		           EQU		0x18
;/********************  Bits definition for DCMI_ESCR register  ******************/
DCMI_ESCR_FSC_Pos          EQU		0                                        
DCMI_ESCR_FSC_Msk          EQU		0xFF << DCMI_ESCR_FSC_Pos                   ;/*!< 0x000000FF */
DCMI_ESCR_FSC              EQU		DCMI_ESCR_FSC_Msk                           
DCMI_ESCR_LSC_Pos          EQU		8                                        
DCMI_ESCR_LSC_Msk          EQU		0xFF << DCMI_ESCR_LSC_Pos                   ;/*!< 0x0000FF00 */
DCMI_ESCR_LSC              EQU		DCMI_ESCR_LSC_Msk                           
DCMI_ESCR_LEC_Pos          EQU		16                                       
DCMI_ESCR_LEC_Msk          EQU		0xFF << DCMI_ESCR_LEC_Pos                   ;/*!< 0x00FF0000 */
DCMI_ESCR_LEC              EQU		DCMI_ESCR_LEC_Msk                           
DCMI_ESCR_FEC_Pos          EQU		24                                       
DCMI_ESCR_FEC_Msk          EQU		0xFF << DCMI_ESCR_FEC_Pos                   ;/*!< 0xFF000000 */
DCMI_ESCR_FEC              EQU		DCMI_ESCR_FEC_Msk                           

DCMI_ESUR		           EQU		0x1C
;/********************  Bits definition for DCMI_ESUR register  ******************/
DCMI_ESUR_FSU_Pos          EQU		0                                        
DCMI_ESUR_FSU_Msk          EQU		0xFF << DCMI_ESUR_FSU_Pos                   ;/*!< 0x000000FF */
DCMI_ESUR_FSU              EQU		DCMI_ESUR_FSU_Msk                           
DCMI_ESUR_LSU_Pos          EQU		8                                        
DCMI_ESUR_LSU_Msk          EQU		0xFF << DCMI_ESUR_LSU_Pos                   ;/*!< 0x0000FF00 */
DCMI_ESUR_LSU              EQU		DCMI_ESUR_LSU_Msk                           
DCMI_ESUR_LEU_Pos          EQU		16                                       
DCMI_ESUR_LEU_Msk          EQU		0xFF << DCMI_ESUR_LEU_Pos                   ;/*!< 0x00FF0000 */
DCMI_ESUR_LEU              EQU		DCMI_ESUR_LEU_Msk                           
DCMI_ESUR_FEU_Pos          EQU		24                                       
DCMI_ESUR_FEU_Msk          EQU		0xFF << DCMI_ESUR_FEU_Pos                   ;/*!< 0xFF000000 */
DCMI_ESUR_FEU              EQU		DCMI_ESUR_FEU_Msk                           

DCMI_CWSTRT				   EQU		0x20
;/********************  Bits definition for DCMI_CWSTRT register  ******************/
DCMI_CWSTRT_HOFFCNT_Pos    EQU		0                                        
DCMI_CWSTRT_HOFFCNT_Msk    EQU		0x3FFF << DCMI_CWSTRT_HOFFCNT_Pos           ;/*!< 0x00003FFF */
DCMI_CWSTRT_HOFFCNT        EQU		DCMI_CWSTRT_HOFFCNT_Msk                     
DCMI_CWSTRT_VST_Pos        EQU		16                                       
DCMI_CWSTRT_VST_Msk        EQU		0x1FFF << DCMI_CWSTRT_VST_Pos               ;/*!< 0x1FFF0000 */
DCMI_CWSTRT_VST            EQU		DCMI_CWSTRT_VST_Msk                         

DCMI_CWSIZE			       EQU		0x24
;/********************  Bits definition for DCMI_CWSIZE register  ******************/
DCMI_CWSIZE_CAPCNT_Pos     EQU		0                                        
DCMI_CWSIZE_CAPCNT_Msk     EQU		0x3FFF << DCMI_CWSIZE_CAPCNT_Pos            ;/*!< 0x00003FFF */
DCMI_CWSIZE_CAPCNT         EQU		DCMI_CWSIZE_CAPCNT_Msk                      
DCMI_CWSIZE_VLINE_Pos      EQU		16                                       
DCMI_CWSIZE_VLINE_Msk      EQU		0x3FFF << DCMI_CWSIZE_VLINE_Pos             ;/*!< 0x3FFF0000 */
DCMI_CWSIZE_VLINE          EQU		DCMI_CWSIZE_VLINE_Msk                       

DCMI_DR			           EQU		0x28
;/********************  Bits definition for DCMI_DR register  *********************/
DCMI_DR_BYTE0_Pos          EQU		0                                        
DCMI_DR_BYTE0_Msk          EQU		0xFF << DCMI_DR_BYTE0_Pos                   ;/*!< 0x000000FF */
DCMI_DR_BYTE0              EQU		DCMI_DR_BYTE0_Msk                           
DCMI_DR_BYTE1_Pos          EQU		8                                        
DCMI_DR_BYTE1_Msk          EQU		0xFF << DCMI_DR_BYTE1_Pos                   ;/*!< 0x0000FF00 */
DCMI_DR_BYTE1              EQU		DCMI_DR_BYTE1_Msk                           
DCMI_DR_BYTE2_Pos          EQU		16                                       
DCMI_DR_BYTE2_Msk          EQU		0xFF << DCMI_DR_BYTE2_Pos                   ;/*!< 0x00FF0000 */
DCMI_DR_BYTE2              EQU		DCMI_DR_BYTE2_Msk                           
DCMI_DR_BYTE3_Pos          EQU		24                                       
DCMI_DR_BYTE3_Msk          EQU		0xFF << DCMI_DR_BYTE3_Pos                   ;/*!< 0xFF000000 */
DCMI_DR_BYTE3              EQU		DCMI_DR_BYTE3_Msk                           

;/******************************************************************************/
;/*                                                                            */
;/*                             DMA Controller                                 */
;/*                                                                            */
;/******************************************************************************/

DMA_S0CR			     EQU		0x10
DMA_S1CR			     EQU		0x28
DMA_S2CR			     EQU		0x40
DMA_S3CR			     EQU		0x58
DMA_S4CR			     EQU		0x70
DMA_S5CR			     EQU		0x88
DMA_S6CR			     EQU		0xA0
DMA_S7CR			     EQU		0xB4
;/********************  Bits definition for DMA_SxCR register  *****************/
DMA_SxCR_CHSEL_Pos       EQU		25                                         
DMA_SxCR_CHSEL_Msk       EQU		0x7 << DMA_SxCR_CHSEL_Pos                     ;/*!< 0x0E000000 */
DMA_SxCR_CHSEL           EQU		DMA_SxCR_CHSEL_Msk                            
DMA_SxCR_CHSEL_0         EQU		0x02000000                                   
DMA_SxCR_CHSEL_1         EQU		0x04000000                                   
DMA_SxCR_CHSEL_2         EQU		0x08000000                                   
DMA_SxCR_MBURST_Pos      EQU		23                                         
DMA_SxCR_MBURST_Msk      EQU		0x3 << DMA_SxCR_MBURST_Pos                    ;/*!< 0x01800000 */
DMA_SxCR_MBURST          EQU		DMA_SxCR_MBURST_Msk                           
DMA_SxCR_MBURST_0        EQU		0x1 << DMA_SxCR_MBURST_Pos                    ;/*!< 0x00800000 */
DMA_SxCR_MBURST_1        EQU		0x2 << DMA_SxCR_MBURST_Pos                    ;/*!< 0x01000000 */
DMA_SxCR_PBURST_Pos      EQU		21                                         
DMA_SxCR_PBURST_Msk      EQU		0x3 << DMA_SxCR_PBURST_Pos                    ;/*!< 0x00600000 */
DMA_SxCR_PBURST          EQU		DMA_SxCR_PBURST_Msk                           
DMA_SxCR_PBURST_0        EQU		0x1 << DMA_SxCR_PBURST_Pos                    ;/*!< 0x00200000 */
DMA_SxCR_PBURST_1        EQU		0x2 << DMA_SxCR_PBURST_Pos                    ;/*!< 0x00400000 */
DMA_SxCR_CT_Pos          EQU		19                                         
DMA_SxCR_CT_Msk          EQU		0x1 << DMA_SxCR_CT_Pos                        ;/*!< 0x00080000 */
DMA_SxCR_CT              EQU		DMA_SxCR_CT_Msk                               
DMA_SxCR_DBM_Pos         EQU		18                                         
DMA_SxCR_DBM_Msk         EQU		0x1 << DMA_SxCR_DBM_Pos                       ;/*!< 0x00040000 */
DMA_SxCR_DBM             EQU		DMA_SxCR_DBM_Msk                              
DMA_SxCR_PL_Pos          EQU		16                                         
DMA_SxCR_PL_Msk          EQU		0x3 << DMA_SxCR_PL_Pos                        ;/*!< 0x00030000 */
DMA_SxCR_PL              EQU		DMA_SxCR_PL_Msk                               
DMA_SxCR_PL_0            EQU		0x1 << DMA_SxCR_PL_Pos                        ;/*!< 0x00010000 */
DMA_SxCR_PL_1            EQU		0x2 << DMA_SxCR_PL_Pos                        ;/*!< 0x00020000 */
DMA_SxCR_PINCOS_Pos      EQU		15                                         
DMA_SxCR_PINCOS_Msk      EQU		0x1 << DMA_SxCR_PINCOS_Pos                    ;/*!< 0x00008000 */
DMA_SxCR_PINCOS          EQU		DMA_SxCR_PINCOS_Msk                           
DMA_SxCR_MSIZE_Pos       EQU		13                                         
DMA_SxCR_MSIZE_Msk       EQU		0x3 << DMA_SxCR_MSIZE_Pos                     ;/*!< 0x00006000 */
DMA_SxCR_MSIZE           EQU		DMA_SxCR_MSIZE_Msk                            
DMA_SxCR_MSIZE_0         EQU		0x1 << DMA_SxCR_MSIZE_Pos                     ;/*!< 0x00002000 */
DMA_SxCR_MSIZE_1         EQU		0x2 << DMA_SxCR_MSIZE_Pos                     ;/*!< 0x00004000 */
DMA_SxCR_PSIZE_Pos       EQU		11                                         
DMA_SxCR_PSIZE_Msk       EQU		0x3 << DMA_SxCR_PSIZE_Pos                     ;/*!< 0x00001800 */
DMA_SxCR_PSIZE           EQU		DMA_SxCR_PSIZE_Msk                            
DMA_SxCR_PSIZE_0         EQU		0x1 << DMA_SxCR_PSIZE_Pos                     ;/*!< 0x00000800 */
DMA_SxCR_PSIZE_1         EQU		0x2 << DMA_SxCR_PSIZE_Pos                     ;/*!< 0x00001000 */
DMA_SxCR_MINC_Pos        EQU		10                                         
DMA_SxCR_MINC_Msk        EQU		0x1 << DMA_SxCR_MINC_Pos                      ;/*!< 0x00000400 */
DMA_SxCR_MINC            EQU		DMA_SxCR_MINC_Msk                             
DMA_SxCR_PINC_Pos        EQU		9                                          
DMA_SxCR_PINC_Msk        EQU		0x1 << DMA_SxCR_PINC_Pos                      ;/*!< 0x00000200 */
DMA_SxCR_PINC            EQU		DMA_SxCR_PINC_Msk                             
DMA_SxCR_CIRC_Pos        EQU		8                                          
DMA_SxCR_CIRC_Msk        EQU		0x1 << DMA_SxCR_CIRC_Pos                      ;/*!< 0x00000100 */
DMA_SxCR_CIRC            EQU		DMA_SxCR_CIRC_Msk                             
DMA_SxCR_DIR_Pos         EQU		6                                          
DMA_SxCR_DIR_Msk         EQU		0x3 << DMA_SxCR_DIR_Pos                       ;/*!< 0x000000C0 */
DMA_SxCR_DIR             EQU		DMA_SxCR_DIR_Msk                              
DMA_SxCR_DIR_0           EQU		0x1 << DMA_SxCR_DIR_Pos                       ;/*!< 0x00000040 */
DMA_SxCR_DIR_1           EQU		0x2 << DMA_SxCR_DIR_Pos                       ;/*!< 0x00000080 */
DMA_SxCR_PFCTRL_Pos      EQU		5                                          
DMA_SxCR_PFCTRL_Msk      EQU		0x1 << DMA_SxCR_PFCTRL_Pos                    ;/*!< 0x00000020 */
DMA_SxCR_PFCTRL          EQU		DMA_SxCR_PFCTRL_Msk                           
DMA_SxCR_TCIE_Pos        EQU		4                                          
DMA_SxCR_TCIE_Msk        EQU		0x1 << DMA_SxCR_TCIE_Pos                      ;/*!< 0x00000010 */
DMA_SxCR_TCIE            EQU		DMA_SxCR_TCIE_Msk                             
DMA_SxCR_HTIE_Pos        EQU		3                                          
DMA_SxCR_HTIE_Msk        EQU		0x1 << DMA_SxCR_HTIE_Pos                      ;/*!< 0x00000008 */
DMA_SxCR_HTIE            EQU		DMA_SxCR_HTIE_Msk                             
DMA_SxCR_TEIE_Pos        EQU		2                                          
DMA_SxCR_TEIE_Msk        EQU		0x1 << DMA_SxCR_TEIE_Pos                      ;/*!< 0x00000004 */
DMA_SxCR_TEIE            EQU		DMA_SxCR_TEIE_Msk                             
DMA_SxCR_DMEIE_Pos       EQU		1                                          
DMA_SxCR_DMEIE_Msk       EQU		0x1 << DMA_SxCR_DMEIE_Pos                     ;/*!< 0x00000002 */
DMA_SxCR_DMEIE           EQU		DMA_SxCR_DMEIE_Msk                            
DMA_SxCR_EN_Pos          EQU		0                                          
DMA_SxCR_EN_Msk          EQU		0x1 << DMA_SxCR_EN_Pos                        ;/*!< 0x00000001 */
DMA_SxCR_EN              EQU		DMA_SxCR_EN_Msk                               

;/* Legacy defines */
DMA_SxCR_ACK_Pos         EQU		20                                         
DMA_SxCR_ACK_Msk         EQU		0x1 << DMA_SxCR_ACK_Pos                       ;/*!< 0x00100000 */
DMA_SxCR_ACK             EQU		DMA_SxCR_ACK_Msk                              

DMA_S0NDTR	             EQU		0x14
DMA_S1NDTR	             EQU		0x2C
DMA_S2NDTR	             EQU		0x44
DMA_S3NDTR	             EQU		0x5C
DMA_S4NDTR	             EQU		0x74
DMA_S5NDTR	             EQU		0x8C
DMA_S6NDTR	             EQU		0xA4
DMA_S7NDTR	             EQU		0xBC
;/********************  Bits definition for DMA_SxCNDTR register  **************/
DMA_SxNDT_Pos            EQU		0                                          
DMA_SxNDT_Msk            EQU		0xFFFF << DMA_SxNDT_Pos                       ;/*!< 0x0000FFFF */
DMA_SxNDT                EQU		DMA_SxNDT_Msk                                 
DMA_SxNDT_0              EQU		0x0001 << DMA_SxNDT_Pos                       ;/*!< 0x00000001 */
DMA_SxNDT_1              EQU		0x0002 << DMA_SxNDT_Pos                       ;/*!< 0x00000002 */
DMA_SxNDT_2              EQU		0x0004 << DMA_SxNDT_Pos                       ;/*!< 0x00000004 */
DMA_SxNDT_3              EQU		0x0008 << DMA_SxNDT_Pos                       ;/*!< 0x00000008 */
DMA_SxNDT_4              EQU		0x0010 << DMA_SxNDT_Pos                       ;/*!< 0x00000010 */
DMA_SxNDT_5              EQU		0x0020 << DMA_SxNDT_Pos                       ;/*!< 0x00000020 */
DMA_SxNDT_6              EQU		0x0040 << DMA_SxNDT_Pos                       ;/*!< 0x00000040 */
DMA_SxNDT_7              EQU		0x0080 << DMA_SxNDT_Pos                       ;/*!< 0x00000080 */
DMA_SxNDT_8              EQU		0x0100 << DMA_SxNDT_Pos                       ;/*!< 0x00000100 */
DMA_SxNDT_9              EQU		0x0200 << DMA_SxNDT_Pos                       ;/*!< 0x00000200 */
DMA_SxNDT_10             EQU		0x0400 << DMA_SxNDT_Pos                       ;/*!< 0x00000400 */
DMA_SxNDT_11             EQU		0x0800 << DMA_SxNDT_Pos                       ;/*!< 0x00000800 */
DMA_SxNDT_12             EQU		0x1000 << DMA_SxNDT_Pos                       ;/*!< 0x00001000 */
DMA_SxNDT_13             EQU		0x2000 << DMA_SxNDT_Pos                       ;/*!< 0x00002000 */
DMA_SxNDT_14             EQU		0x4000 << DMA_SxNDT_Pos                       ;/*!< 0x00004000 */
DMA_SxNDT_15             EQU		0x8000 << DMA_SxNDT_Pos                       ;/*!< 0x00008000 */

DMA_S0FCR			     EQU		0x24
DMA_S1FCR			     EQU		0x3C
DMA_S2FCR			     EQU		0x54
DMA_S3FCR			     EQU		0x6C
DMA_S4FCR			     EQU		0x84
DMA_S5FCR			     EQU		0x9C
DMA_S6FCR			     EQU		0xB4
DMA_S7FCR			     EQU		0xCC
;/********************  Bits definition for DMA_SxFCR register  ****************/ 
DMA_SxFCR_FEIE_Pos       EQU		7                                          
DMA_SxFCR_FEIE_Msk       EQU		0x1 << DMA_SxFCR_FEIE_Pos                     ;/*!< 0x00000080 */
DMA_SxFCR_FEIE           EQU		DMA_SxFCR_FEIE_Msk                            
DMA_SxFCR_FS_Pos         EQU		3                                          
DMA_SxFCR_FS_Msk         EQU		0x7 << DMA_SxFCR_FS_Pos                       ;/*!< 0x00000038 */
DMA_SxFCR_FS             EQU		DMA_SxFCR_FS_Msk                              
DMA_SxFCR_FS_0           EQU		0x1 << DMA_SxFCR_FS_Pos                       ;/*!< 0x00000008 */
DMA_SxFCR_FS_1           EQU		0x2 << DMA_SxFCR_FS_Pos                       ;/*!< 0x00000010 */
DMA_SxFCR_FS_2           EQU		0x4 << DMA_SxFCR_FS_Pos                       ;/*!< 0x00000020 */
DMA_SxFCR_DMDIS_Pos      EQU		2                                          
DMA_SxFCR_DMDIS_Msk      EQU		0x1 << DMA_SxFCR_DMDIS_Pos                    ;/*!< 0x00000004 */
DMA_SxFCR_DMDIS          EQU		DMA_SxFCR_DMDIS_Msk                           
DMA_SxFCR_FTH_Pos        EQU		0                                          
DMA_SxFCR_FTH_Msk        EQU		0x3 << DMA_SxFCR_FTH_Pos                      ;/*!< 0x00000003 */
DMA_SxFCR_FTH            EQU		DMA_SxFCR_FTH_Msk                             
DMA_SxFCR_FTH_0          EQU		0x1 << DMA_SxFCR_FTH_Pos                      ;/*!< 0x00000001 */
DMA_SxFCR_FTH_1          EQU		0x2 << DMA_SxFCR_FTH_Pos                      ;/*!< 0x00000002 */

DMA_LISR			     EQU		0x00
;/********************  Bits definition for DMA_LISR register  *****************/ 
DMA_LISR_TCIF3_Pos       EQU		27                                         
DMA_LISR_TCIF3_Msk       EQU		0x1 << DMA_LISR_TCIF3_Pos                     ;/*!< 0x08000000 */
DMA_LISR_TCIF3           EQU		DMA_LISR_TCIF3_Msk                            
DMA_LISR_HTIF3_Pos       EQU		26                                         
DMA_LISR_HTIF3_Msk       EQU		0x1 << DMA_LISR_HTIF3_Pos                     ;/*!< 0x04000000 */
DMA_LISR_HTIF3           EQU		DMA_LISR_HTIF3_Msk                            
DMA_LISR_TEIF3_Pos       EQU		25                                         
DMA_LISR_TEIF3_Msk       EQU		0x1 << DMA_LISR_TEIF3_Pos                     ;/*!< 0x02000000 */
DMA_LISR_TEIF3           EQU		DMA_LISR_TEIF3_Msk                            
DMA_LISR_DMEIF3_Pos      EQU		24                                         
DMA_LISR_DMEIF3_Msk      EQU		0x1 << DMA_LISR_DMEIF3_Pos                    ;/*!< 0x01000000 */
DMA_LISR_DMEIF3          EQU		DMA_LISR_DMEIF3_Msk                           
DMA_LISR_FEIF3_Pos       EQU		22                                         
DMA_LISR_FEIF3_Msk       EQU		0x1 << DMA_LISR_FEIF3_Pos                     ;/*!< 0x00400000 */
DMA_LISR_FEIF3           EQU		DMA_LISR_FEIF3_Msk                            
DMA_LISR_TCIF2_Pos       EQU		21                                         
DMA_LISR_TCIF2_Msk       EQU		0x1 << DMA_LISR_TCIF2_Pos                     ;/*!< 0x00200000 */
DMA_LISR_TCIF2           EQU		DMA_LISR_TCIF2_Msk                            
DMA_LISR_HTIF2_Pos       EQU		20                                         
DMA_LISR_HTIF2_Msk       EQU		0x1 << DMA_LISR_HTIF2_Pos                     ;/*!< 0x00100000 */
DMA_LISR_HTIF2           EQU		DMA_LISR_HTIF2_Msk                            
DMA_LISR_TEIF2_Pos       EQU		19                                         
DMA_LISR_TEIF2_Msk       EQU		0x1 << DMA_LISR_TEIF2_Pos                     ;/*!< 0x00080000 */
DMA_LISR_TEIF2           EQU		DMA_LISR_TEIF2_Msk                            
DMA_LISR_DMEIF2_Pos      EQU		18                                         
DMA_LISR_DMEIF2_Msk      EQU		0x1 << DMA_LISR_DMEIF2_Pos                    ;/*!< 0x00040000 */
DMA_LISR_DMEIF2          EQU		DMA_LISR_DMEIF2_Msk                           
DMA_LISR_FEIF2_Pos       EQU		16                                         
DMA_LISR_FEIF2_Msk       EQU		0x1 << DMA_LISR_FEIF2_Pos                     ;/*!< 0x00010000 */
DMA_LISR_FEIF2           EQU		DMA_LISR_FEIF2_Msk                            
DMA_LISR_TCIF1_Pos       EQU		11                                         
DMA_LISR_TCIF1_Msk       EQU		0x1 << DMA_LISR_TCIF1_Pos                     ;/*!< 0x00000800 */
DMA_LISR_TCIF1           EQU		DMA_LISR_TCIF1_Msk                            
DMA_LISR_HTIF1_Pos       EQU		10                                         
DMA_LISR_HTIF1_Msk       EQU		0x1 << DMA_LISR_HTIF1_Pos                     ;/*!< 0x00000400 */
DMA_LISR_HTIF1           EQU		DMA_LISR_HTIF1_Msk                            
DMA_LISR_TEIF1_Pos       EQU		9                                          
DMA_LISR_TEIF1_Msk       EQU		0x1 << DMA_LISR_TEIF1_Pos                     ;/*!< 0x00000200 */
DMA_LISR_TEIF1           EQU		DMA_LISR_TEIF1_Msk                            
DMA_LISR_DMEIF1_Pos      EQU		8                                          
DMA_LISR_DMEIF1_Msk      EQU		0x1 << DMA_LISR_DMEIF1_Pos                    ;/*!< 0x00000100 */
DMA_LISR_DMEIF1          EQU		DMA_LISR_DMEIF1_Msk                           
DMA_LISR_FEIF1_Pos       EQU		6                                          
DMA_LISR_FEIF1_Msk       EQU		0x1 << DMA_LISR_FEIF1_Pos                     ;/*!< 0x00000040 */
DMA_LISR_FEIF1           EQU		DMA_LISR_FEIF1_Msk                            
DMA_LISR_TCIF0_Pos       EQU		5                                          
DMA_LISR_TCIF0_Msk       EQU		0x1 << DMA_LISR_TCIF0_Pos                     ;/*!< 0x00000020 */
DMA_LISR_TCIF0           EQU		DMA_LISR_TCIF0_Msk                            
DMA_LISR_HTIF0_Pos       EQU		4                                          
DMA_LISR_HTIF0_Msk       EQU		0x1 << DMA_LISR_HTIF0_Pos                     ;/*!< 0x00000010 */
DMA_LISR_HTIF0           EQU		DMA_LISR_HTIF0_Msk                            
DMA_LISR_TEIF0_Pos       EQU		3                                          
DMA_LISR_TEIF0_Msk       EQU		0x1 << DMA_LISR_TEIF0_Pos                     ;/*!< 0x00000008 */
DMA_LISR_TEIF0           EQU		DMA_LISR_TEIF0_Msk                            
DMA_LISR_DMEIF0_Pos      EQU		2                                          
DMA_LISR_DMEIF0_Msk      EQU		0x1 << DMA_LISR_DMEIF0_Pos                    ;/*!< 0x00000004 */
DMA_LISR_DMEIF0          EQU		DMA_LISR_DMEIF0_Msk                           
DMA_LISR_FEIF0_Pos       EQU		0                                          
DMA_LISR_FEIF0_Msk       EQU		0x1 << DMA_LISR_FEIF0_Pos                     ;/*!< 0x00000001 */
DMA_LISR_FEIF0           EQU		DMA_LISR_FEIF0_Msk                            

DMA_HISR			     EQU		0x04
;/********************  Bits definition for DMA_HISR register  *****************/ 
DMA_HISR_TCIF7_Pos       EQU		27                                         
DMA_HISR_TCIF7_Msk       EQU		0x1 << DMA_HISR_TCIF7_Pos                     ;/*!< 0x08000000 */
DMA_HISR_TCIF7           EQU		DMA_HISR_TCIF7_Msk                            
DMA_HISR_HTIF7_Pos       EQU		26                                         
DMA_HISR_HTIF7_Msk       EQU		0x1 << DMA_HISR_HTIF7_Pos                     ;/*!< 0x04000000 */
DMA_HISR_HTIF7           EQU		DMA_HISR_HTIF7_Msk                            
DMA_HISR_TEIF7_Pos       EQU		25                                         
DMA_HISR_TEIF7_Msk       EQU		0x1 << DMA_HISR_TEIF7_Pos                     ;/*!< 0x02000000 */
DMA_HISR_TEIF7           EQU		DMA_HISR_TEIF7_Msk                            
DMA_HISR_DMEIF7_Pos      EQU		24                                         
DMA_HISR_DMEIF7_Msk      EQU		0x1 << DMA_HISR_DMEIF7_Pos                    ;/*!< 0x01000000 */
DMA_HISR_DMEIF7          EQU		DMA_HISR_DMEIF7_Msk                           
DMA_HISR_FEIF7_Pos       EQU		22                                         
DMA_HISR_FEIF7_Msk       EQU		0x1 << DMA_HISR_FEIF7_Pos                     ;/*!< 0x00400000 */
DMA_HISR_FEIF7           EQU		DMA_HISR_FEIF7_Msk                            
DMA_HISR_TCIF6_Pos       EQU		21                                         
DMA_HISR_TCIF6_Msk       EQU		0x1 << DMA_HISR_TCIF6_Pos                     ;/*!< 0x00200000 */
DMA_HISR_TCIF6           EQU		DMA_HISR_TCIF6_Msk                            
DMA_HISR_HTIF6_Pos       EQU		20                                         
DMA_HISR_HTIF6_Msk       EQU		0x1 << DMA_HISR_HTIF6_Pos                     ;/*!< 0x00100000 */
DMA_HISR_HTIF6           EQU		DMA_HISR_HTIF6_Msk                            
DMA_HISR_TEIF6_Pos       EQU		19                                         
DMA_HISR_TEIF6_Msk       EQU		0x1 << DMA_HISR_TEIF6_Pos                     ;/*!< 0x00080000 */
DMA_HISR_TEIF6           EQU		DMA_HISR_TEIF6_Msk                            
DMA_HISR_DMEIF6_Pos      EQU		18                                         
DMA_HISR_DMEIF6_Msk      EQU		0x1 << DMA_HISR_DMEIF6_Pos                    ;/*!< 0x00040000 */
DMA_HISR_DMEIF6          EQU		DMA_HISR_DMEIF6_Msk                           
DMA_HISR_FEIF6_Pos       EQU		16                                         
DMA_HISR_FEIF6_Msk       EQU		0x1 << DMA_HISR_FEIF6_Pos                     ;/*!< 0x00010000 */
DMA_HISR_FEIF6           EQU		DMA_HISR_FEIF6_Msk                            
DMA_HISR_TCIF5_Pos       EQU		11                                         
DMA_HISR_TCIF5_Msk       EQU		0x1 << DMA_HISR_TCIF5_Pos                     ;/*!< 0x00000800 */
DMA_HISR_TCIF5           EQU		DMA_HISR_TCIF5_Msk                            
DMA_HISR_HTIF5_Pos       EQU		10                                         
DMA_HISR_HTIF5_Msk       EQU		0x1 << DMA_HISR_HTIF5_Pos                     ;/*!< 0x00000400 */
DMA_HISR_HTIF5           EQU		DMA_HISR_HTIF5_Msk                            
DMA_HISR_TEIF5_Pos       EQU		9                                          
DMA_HISR_TEIF5_Msk       EQU		0x1 << DMA_HISR_TEIF5_Pos                     ;/*!< 0x00000200 */
DMA_HISR_TEIF5           EQU		DMA_HISR_TEIF5_Msk                            
DMA_HISR_DMEIF5_Pos      EQU		8                                          
DMA_HISR_DMEIF5_Msk      EQU		0x1 << DMA_HISR_DMEIF5_Pos                    ;/*!< 0x00000100 */
DMA_HISR_DMEIF5          EQU		DMA_HISR_DMEIF5_Msk                           
DMA_HISR_FEIF5_Pos       EQU		6                                          
DMA_HISR_FEIF5_Msk       EQU		0x1 << DMA_HISR_FEIF5_Pos                     ;/*!< 0x00000040 */
DMA_HISR_FEIF5           EQU		DMA_HISR_FEIF5_Msk                            
DMA_HISR_TCIF4_Pos       EQU		5                                          
DMA_HISR_TCIF4_Msk       EQU		0x1 << DMA_HISR_TCIF4_Pos                     ;/*!< 0x00000020 */
DMA_HISR_TCIF4           EQU		DMA_HISR_TCIF4_Msk                            
DMA_HISR_HTIF4_Pos       EQU		4                                          
DMA_HISR_HTIF4_Msk       EQU		0x1 << DMA_HISR_HTIF4_Pos                     ;/*!< 0x00000010 */
DMA_HISR_HTIF4           EQU		DMA_HISR_HTIF4_Msk                            
DMA_HISR_TEIF4_Pos       EQU		3                                          
DMA_HISR_TEIF4_Msk       EQU		0x1 << DMA_HISR_TEIF4_Pos                     ;/*!< 0x00000008 */
DMA_HISR_TEIF4           EQU		DMA_HISR_TEIF4_Msk                            
DMA_HISR_DMEIF4_Pos      EQU		2                                          
DMA_HISR_DMEIF4_Msk      EQU		0x1 << DMA_HISR_DMEIF4_Pos                    ;/*!< 0x00000004 */
DMA_HISR_DMEIF4          EQU		DMA_HISR_DMEIF4_Msk                           
DMA_HISR_FEIF4_Pos       EQU		0                                          
DMA_HISR_FEIF4_Msk       EQU		0x1 << DMA_HISR_FEIF4_Pos                     ;/*!< 0x00000001 */
DMA_HISR_FEIF4           EQU		DMA_HISR_FEIF4_Msk                            

DMA_LIFCR			     EQU		0x08
;/********************  Bits definition for DMA_LIFCR register  ****************/ 
DMA_LIFCR_CTCIF3_Pos     EQU		27                                         
DMA_LIFCR_CTCIF3_Msk     EQU		0x1 << DMA_LIFCR_CTCIF3_Pos                   ;/*!< 0x08000000 */
DMA_LIFCR_CTCIF3         EQU		DMA_LIFCR_CTCIF3_Msk                          
DMA_LIFCR_CHTIF3_Pos     EQU		26                                         
DMA_LIFCR_CHTIF3_Msk     EQU		0x1 << DMA_LIFCR_CHTIF3_Pos                   ;/*!< 0x04000000 */
DMA_LIFCR_CHTIF3         EQU		DMA_LIFCR_CHTIF3_Msk                          
DMA_LIFCR_CTEIF3_Pos     EQU		25                                         
DMA_LIFCR_CTEIF3_Msk     EQU		0x1 << DMA_LIFCR_CTEIF3_Pos                   ;/*!< 0x02000000 */
DMA_LIFCR_CTEIF3         EQU		DMA_LIFCR_CTEIF3_Msk                          
DMA_LIFCR_CDMEIF3_Pos    EQU		24                                         
DMA_LIFCR_CDMEIF3_Msk    EQU		0x1 << DMA_LIFCR_CDMEIF3_Pos                  ;/*!< 0x01000000 */
DMA_LIFCR_CDMEIF3        EQU		DMA_LIFCR_CDMEIF3_Msk                         
DMA_LIFCR_CFEIF3_Pos     EQU		22                                         
DMA_LIFCR_CFEIF3_Msk     EQU		0x1 << DMA_LIFCR_CFEIF3_Pos                   ;/*!< 0x00400000 */
DMA_LIFCR_CFEIF3         EQU		DMA_LIFCR_CFEIF3_Msk                          
DMA_LIFCR_CTCIF2_Pos     EQU		21                                         
DMA_LIFCR_CTCIF2_Msk     EQU		0x1 << DMA_LIFCR_CTCIF2_Pos                   ;/*!< 0x00200000 */
DMA_LIFCR_CTCIF2         EQU		DMA_LIFCR_CTCIF2_Msk                          
DMA_LIFCR_CHTIF2_Pos     EQU		20                                         
DMA_LIFCR_CHTIF2_Msk     EQU		0x1 << DMA_LIFCR_CHTIF2_Pos                   ;/*!< 0x00100000 */
DMA_LIFCR_CHTIF2         EQU		DMA_LIFCR_CHTIF2_Msk                          
DMA_LIFCR_CTEIF2_Pos     EQU		19                                         
DMA_LIFCR_CTEIF2_Msk     EQU		0x1 << DMA_LIFCR_CTEIF2_Pos                   ;/*!< 0x00080000 */
DMA_LIFCR_CTEIF2         EQU		DMA_LIFCR_CTEIF2_Msk                          
DMA_LIFCR_CDMEIF2_Pos    EQU		18                                         
DMA_LIFCR_CDMEIF2_Msk    EQU		0x1 << DMA_LIFCR_CDMEIF2_Pos                  ;/*!< 0x00040000 */
DMA_LIFCR_CDMEIF2        EQU		DMA_LIFCR_CDMEIF2_Msk                         
DMA_LIFCR_CFEIF2_Pos     EQU		16                                         
DMA_LIFCR_CFEIF2_Msk     EQU		0x1 << DMA_LIFCR_CFEIF2_Pos                   ;/*!< 0x00010000 */
DMA_LIFCR_CFEIF2         EQU		DMA_LIFCR_CFEIF2_Msk                          
DMA_LIFCR_CTCIF1_Pos     EQU		11                                         
DMA_LIFCR_CTCIF1_Msk     EQU		0x1 << DMA_LIFCR_CTCIF1_Pos                   ;/*!< 0x00000800 */
DMA_LIFCR_CTCIF1         EQU		DMA_LIFCR_CTCIF1_Msk                          
DMA_LIFCR_CHTIF1_Pos     EQU		10                                         
DMA_LIFCR_CHTIF1_Msk     EQU		0x1 << DMA_LIFCR_CHTIF1_Pos                   ;/*!< 0x00000400 */
DMA_LIFCR_CHTIF1         EQU		DMA_LIFCR_CHTIF1_Msk                          
DMA_LIFCR_CTEIF1_Pos     EQU		9                                          
DMA_LIFCR_CTEIF1_Msk     EQU		0x1 << DMA_LIFCR_CTEIF1_Pos                   ;/*!< 0x00000200 */
DMA_LIFCR_CTEIF1         EQU		DMA_LIFCR_CTEIF1_Msk                          
DMA_LIFCR_CDMEIF1_Pos    EQU		8                                          
DMA_LIFCR_CDMEIF1_Msk    EQU		0x1 << DMA_LIFCR_CDMEIF1_Pos                  ;/*!< 0x00000100 */
DMA_LIFCR_CDMEIF1        EQU		DMA_LIFCR_CDMEIF1_Msk                         
DMA_LIFCR_CFEIF1_Pos     EQU		6                                          
DMA_LIFCR_CFEIF1_Msk     EQU		0x1 << DMA_LIFCR_CFEIF1_Pos                   ;/*!< 0x00000040 */
DMA_LIFCR_CFEIF1         EQU		DMA_LIFCR_CFEIF1_Msk                          
DMA_LIFCR_CTCIF0_Pos     EQU		5                                          
DMA_LIFCR_CTCIF0_Msk     EQU		0x1 << DMA_LIFCR_CTCIF0_Pos                   ;/*!< 0x00000020 */
DMA_LIFCR_CTCIF0         EQU		DMA_LIFCR_CTCIF0_Msk                          
DMA_LIFCR_CHTIF0_Pos     EQU		4                                          
DMA_LIFCR_CHTIF0_Msk     EQU		0x1 << DMA_LIFCR_CHTIF0_Pos                   ;/*!< 0x00000010 */
DMA_LIFCR_CHTIF0         EQU		DMA_LIFCR_CHTIF0_Msk                          
DMA_LIFCR_CTEIF0_Pos     EQU		3                                          
DMA_LIFCR_CTEIF0_Msk     EQU		0x1 << DMA_LIFCR_CTEIF0_Pos                   ;/*!< 0x00000008 */
DMA_LIFCR_CTEIF0         EQU		DMA_LIFCR_CTEIF0_Msk                          
DMA_LIFCR_CDMEIF0_Pos    EQU		2                                          
DMA_LIFCR_CDMEIF0_Msk    EQU		0x1 << DMA_LIFCR_CDMEIF0_Pos                  ;/*!< 0x00000004 */
DMA_LIFCR_CDMEIF0        EQU		DMA_LIFCR_CDMEIF0_Msk                         
DMA_LIFCR_CFEIF0_Pos     EQU		0                                          
DMA_LIFCR_CFEIF0_Msk     EQU		0x1 << DMA_LIFCR_CFEIF0_Pos                   ;/*!< 0x00000001 */
DMA_LIFCR_CFEIF0         EQU		DMA_LIFCR_CFEIF0_Msk                          

DMA_HIFCR			     EQU		0x0C
;/********************  Bits definition for DMA_HIFCR  register  ****************/ 
DMA_HIFCR_CTCIF7_Pos     EQU		27                                         
DMA_HIFCR_CTCIF7_Msk     EQU		0x1 << DMA_HIFCR_CTCIF7_Pos                   ;/*!< 0x08000000 */
DMA_HIFCR_CTCIF7         EQU		DMA_HIFCR_CTCIF7_Msk                          
DMA_HIFCR_CHTIF7_Pos     EQU		26                                         
DMA_HIFCR_CHTIF7_Msk     EQU		0x1 << DMA_HIFCR_CHTIF7_Pos                   ;/*!< 0x04000000 */
DMA_HIFCR_CHTIF7         EQU		DMA_HIFCR_CHTIF7_Msk                          
DMA_HIFCR_CTEIF7_Pos     EQU		25                                         
DMA_HIFCR_CTEIF7_Msk     EQU		0x1 << DMA_HIFCR_CTEIF7_Pos                   ;/*!< 0x02000000 */
DMA_HIFCR_CTEIF7         EQU		DMA_HIFCR_CTEIF7_Msk                          
DMA_HIFCR_CDMEIF7_Pos    EQU		24                                         
DMA_HIFCR_CDMEIF7_Msk    EQU		0x1 << DMA_HIFCR_CDMEIF7_Pos                  ;/*!< 0x01000000 */
DMA_HIFCR_CDMEIF7        EQU		DMA_HIFCR_CDMEIF7_Msk                         
DMA_HIFCR_CFEIF7_Pos     EQU		22                                         
DMA_HIFCR_CFEIF7_Msk     EQU		0x1 << DMA_HIFCR_CFEIF7_Pos                   ;/*!< 0x00400000 */
DMA_HIFCR_CFEIF7         EQU		DMA_HIFCR_CFEIF7_Msk                          
DMA_HIFCR_CTCIF6_Pos     EQU		21                                         
DMA_HIFCR_CTCIF6_Msk     EQU		0x1 << DMA_HIFCR_CTCIF6_Pos                   ;/*!< 0x00200000 */
DMA_HIFCR_CTCIF6         EQU		DMA_HIFCR_CTCIF6_Msk                          
DMA_HIFCR_CHTIF6_Pos     EQU		20                                         
DMA_HIFCR_CHTIF6_Msk     EQU		0x1 << DMA_HIFCR_CHTIF6_Pos                   ;/*!< 0x00100000 */
DMA_HIFCR_CHTIF6         EQU		DMA_HIFCR_CHTIF6_Msk                          
DMA_HIFCR_CTEIF6_Pos     EQU		19                                         
DMA_HIFCR_CTEIF6_Msk     EQU		0x1 << DMA_HIFCR_CTEIF6_Pos                   ;/*!< 0x00080000 */
DMA_HIFCR_CTEIF6         EQU		DMA_HIFCR_CTEIF6_Msk                          
DMA_HIFCR_CDMEIF6_Pos    EQU		18                                         
DMA_HIFCR_CDMEIF6_Msk    EQU		0x1 << DMA_HIFCR_CDMEIF6_Pos                  ;/*!< 0x00040000 */
DMA_HIFCR_CDMEIF6        EQU		DMA_HIFCR_CDMEIF6_Msk                         
DMA_HIFCR_CFEIF6_Pos     EQU		16                                         
DMA_HIFCR_CFEIF6_Msk     EQU		0x1 << DMA_HIFCR_CFEIF6_Pos                   ;/*!< 0x00010000 */
DMA_HIFCR_CFEIF6         EQU		DMA_HIFCR_CFEIF6_Msk                          
DMA_HIFCR_CTCIF5_Pos     EQU		11                                         
DMA_HIFCR_CTCIF5_Msk     EQU		0x1 << DMA_HIFCR_CTCIF5_Pos                   ;/*!< 0x00000800 */
DMA_HIFCR_CTCIF5         EQU		DMA_HIFCR_CTCIF5_Msk                          
DMA_HIFCR_CHTIF5_Pos     EQU		10                                         
DMA_HIFCR_CHTIF5_Msk     EQU		0x1 << DMA_HIFCR_CHTIF5_Pos                   ;/*!< 0x00000400 */
DMA_HIFCR_CHTIF5         EQU		DMA_HIFCR_CHTIF5_Msk                          
DMA_HIFCR_CTEIF5_Pos     EQU		9                                          
DMA_HIFCR_CTEIF5_Msk     EQU		0x1 << DMA_HIFCR_CTEIF5_Pos                   ;/*!< 0x00000200 */
DMA_HIFCR_CTEIF5         EQU		DMA_HIFCR_CTEIF5_Msk                          
DMA_HIFCR_CDMEIF5_Pos    EQU		8                                          
DMA_HIFCR_CDMEIF5_Msk    EQU		0x1 << DMA_HIFCR_CDMEIF5_Pos                  ;/*!< 0x00000100 */
DMA_HIFCR_CDMEIF5        EQU		DMA_HIFCR_CDMEIF5_Msk                         
DMA_HIFCR_CFEIF5_Pos     EQU		6                                          
DMA_HIFCR_CFEIF5_Msk     EQU		0x1 << DMA_HIFCR_CFEIF5_Pos                   ;/*!< 0x00000040 */
DMA_HIFCR_CFEIF5         EQU		DMA_HIFCR_CFEIF5_Msk                          
DMA_HIFCR_CTCIF4_Pos     EQU		5                                          
DMA_HIFCR_CTCIF4_Msk     EQU		0x1 << DMA_HIFCR_CTCIF4_Pos                   ;/*!< 0x00000020 */
DMA_HIFCR_CTCIF4         EQU		DMA_HIFCR_CTCIF4_Msk                          
DMA_HIFCR_CHTIF4_Pos     EQU		4                                          
DMA_HIFCR_CHTIF4_Msk     EQU		0x1 << DMA_HIFCR_CHTIF4_Pos                   ;/*!< 0x00000010 */
DMA_HIFCR_CHTIF4         EQU		DMA_HIFCR_CHTIF4_Msk                          
DMA_HIFCR_CTEIF4_Pos     EQU		3                                          
DMA_HIFCR_CTEIF4_Msk     EQU		0x1 << DMA_HIFCR_CTEIF4_Pos                   ;/*!< 0x00000008 */
DMA_HIFCR_CTEIF4         EQU		DMA_HIFCR_CTEIF4_Msk                          
DMA_HIFCR_CDMEIF4_Pos    EQU		2                                          
DMA_HIFCR_CDMEIF4_Msk    EQU		0x1 << DMA_HIFCR_CDMEIF4_Pos                  ;/*!< 0x00000004 */
DMA_HIFCR_CDMEIF4        EQU		DMA_HIFCR_CDMEIF4_Msk                         
DMA_HIFCR_CFEIF4_Pos     EQU		0                                          
DMA_HIFCR_CFEIF4_Msk     EQU		0x1 << DMA_HIFCR_CFEIF4_Pos                   ;/*!< 0x00000001 */
DMA_HIFCR_CFEIF4         EQU		DMA_HIFCR_CFEIF4_Msk                          

DMA_S0PAR		         EQU		0x18
DMA_S1PAR		         EQU		0x30
DMA_S2PAR		         EQU		0x48
DMA_S3PAR		         EQU		0x60
DMA_S4PAR		         EQU		0x78
DMA_S5PAR		         EQU		0x90
DMA_S6PAR		         EQU		0xA8
DMA_S7PAR		         EQU		0xC0
;/******************  Bit definition for DMA_SxPAR register  ********************/
DMA_SxPAR_PA_Pos         EQU		0                                          
DMA_SxPAR_PA_Msk         EQU		0xFFFFFFFF << DMA_SxPAR_PA_Pos                ;/*!< 0xFFFFFFFF */
DMA_SxPAR_PA             EQU		DMA_SxPAR_PA_Msk                              ;/*!< Peripheral Address */

DMA_S0M0AR			     EQU		0x1C
DMA_S1M0AR			     EQU		0x34
DMA_S2M0AR			     EQU		0x4C
DMA_S3M0AR			     EQU		0x64
DMA_S4M0AR			     EQU		0x7C
DMA_S5M0AR			     EQU		0x94
DMA_S6M0AR			     EQU		0xAC
DMA_S7M0AR			     EQU		0xC4
;/******************  Bit definition for DMA_SxM0AR register  ********************/
DMA_SxM0AR_M0A_Pos       EQU		0                                          
DMA_SxM0AR_M0A_Msk       EQU		0xFFFFFFFF << DMA_SxM0AR_M0A_Pos              ;/*!< 0xFFFFFFFF */
DMA_SxM0AR_M0A           EQU		DMA_SxM0AR_M0A_Msk                            ;/*!< Memory Address */

DMA_S0M1AR			     EQU		0x20
DMA_S1M1AR			     EQU		0x38
DMA_S2M1AR			     EQU		0x50
DMA_S3M1AR			     EQU		0x68
DMA_S4M1AR			     EQU		0x80
DMA_S5M1AR			     EQU		0x98
DMA_S6M1AR			     EQU		0xB0
DMA_S7M1AR			     EQU		0xC8
;/******************  Bit definition for DMA_SxM1AR register  ********************/
DMA_SxM1AR_M1A_Pos       EQU		0                                          
DMA_SxM1AR_M1A_Msk       EQU		0xFFFFFFFF << DMA_SxM1AR_M1A_Pos              ;/*!< 0xFFFFFFFF */
DMA_SxM1AR_M1A           EQU		DMA_SxM1AR_M1A_Msk                            ;/*!< Memory Address */

;/******************************************************************************/
;/*                                                                            */
;/*                    External Interrupt/Event Controller                     */
;/*                                                                            */
;/******************************************************************************/

EXTI_IMR		          EQU		0x00
;/*******************  Bit definition for EXTI_IMR register  *******************/
EXTI_IMR_MR0_Pos          EQU		0                                         
EXTI_IMR_MR0_Msk          EQU		0x1 << EXTI_IMR_MR0_Pos                      ;/*!< 0x00000001 */
EXTI_IMR_MR0              EQU		EXTI_IMR_MR0_Msk                             ;/*!< Interrupt Mask on line 0 */
EXTI_IMR_MR1_Pos          EQU		1                                         
EXTI_IMR_MR1_Msk          EQU		0x1 << EXTI_IMR_MR1_Pos                      ;/*!< 0x00000002 */
EXTI_IMR_MR1              EQU		EXTI_IMR_MR1_Msk                             ;/*!< Interrupt Mask on line 1 */
EXTI_IMR_MR2_Pos          EQU		2                                         
EXTI_IMR_MR2_Msk          EQU		0x1 << EXTI_IMR_MR2_Pos                      ;/*!< 0x00000004 */
EXTI_IMR_MR2              EQU		EXTI_IMR_MR2_Msk                             ;/*!< Interrupt Mask on line 2 */
EXTI_IMR_MR3_Pos          EQU		3                                         
EXTI_IMR_MR3_Msk          EQU		0x1 << EXTI_IMR_MR3_Pos                      ;/*!< 0x00000008 */
EXTI_IMR_MR3              EQU		EXTI_IMR_MR3_Msk                             ;/*!< Interrupt Mask on line 3 */
EXTI_IMR_MR4_Pos          EQU		4                                         
EXTI_IMR_MR4_Msk          EQU		0x1 << EXTI_IMR_MR4_Pos                      ;/*!< 0x00000010 */
EXTI_IMR_MR4              EQU		EXTI_IMR_MR4_Msk                             ;/*!< Interrupt Mask on line 4 */
EXTI_IMR_MR5_Pos          EQU		5                                         
EXTI_IMR_MR5_Msk          EQU		0x1 << EXTI_IMR_MR5_Pos                      ;/*!< 0x00000020 */
EXTI_IMR_MR5              EQU		EXTI_IMR_MR5_Msk                             ;/*!< Interrupt Mask on line 5 */
EXTI_IMR_MR6_Pos          EQU		6                                         
EXTI_IMR_MR6_Msk          EQU		0x1 << EXTI_IMR_MR6_Pos                      ;/*!< 0x00000040 */
EXTI_IMR_MR6              EQU		EXTI_IMR_MR6_Msk                             ;/*!< Interrupt Mask on line 6 */
EXTI_IMR_MR7_Pos          EQU		7                                         
EXTI_IMR_MR7_Msk          EQU		0x1 << EXTI_IMR_MR7_Pos                      ;/*!< 0x00000080 */
EXTI_IMR_MR7              EQU		EXTI_IMR_MR7_Msk                             ;/*!< Interrupt Mask on line 7 */
EXTI_IMR_MR8_Pos          EQU		8                                         
EXTI_IMR_MR8_Msk          EQU		0x1 << EXTI_IMR_MR8_Pos                      ;/*!< 0x00000100 */
EXTI_IMR_MR8              EQU		EXTI_IMR_MR8_Msk                             ;/*!< Interrupt Mask on line 8 */
EXTI_IMR_MR9_Pos          EQU		9                                         
EXTI_IMR_MR9_Msk          EQU		0x1 << EXTI_IMR_MR9_Pos                      ;/*!< 0x00000200 */
EXTI_IMR_MR9              EQU		EXTI_IMR_MR9_Msk                             ;/*!< Interrupt Mask on line 9 */
EXTI_IMR_MR10_Pos         EQU		10                                        
EXTI_IMR_MR10_Msk         EQU		0x1 << EXTI_IMR_MR10_Pos                     ;/*!< 0x00000400 */
EXTI_IMR_MR10             EQU		EXTI_IMR_MR10_Msk                            ;/*!< Interrupt Mask on line 10 */
EXTI_IMR_MR11_Pos         EQU		11                                        
EXTI_IMR_MR11_Msk         EQU		0x1 << EXTI_IMR_MR11_Pos                     ;/*!< 0x00000800 */
EXTI_IMR_MR11             EQU		EXTI_IMR_MR11_Msk                            ;/*!< Interrupt Mask on line 11 */
EXTI_IMR_MR12_Pos         EQU		12                                        
EXTI_IMR_MR12_Msk         EQU		0x1 << EXTI_IMR_MR12_Pos                     ;/*!< 0x00001000 */
EXTI_IMR_MR12             EQU		EXTI_IMR_MR12_Msk                            ;/*!< Interrupt Mask on line 12 */
EXTI_IMR_MR13_Pos         EQU		13                                        
EXTI_IMR_MR13_Msk         EQU		0x1 << EXTI_IMR_MR13_Pos                     ;/*!< 0x00002000 */
EXTI_IMR_MR13             EQU		EXTI_IMR_MR13_Msk                            ;/*!< Interrupt Mask on line 13 */
EXTI_IMR_MR14_Pos         EQU		14                                        
EXTI_IMR_MR14_Msk         EQU		0x1 << EXTI_IMR_MR14_Pos                     ;/*!< 0x00004000 */
EXTI_IMR_MR14             EQU		EXTI_IMR_MR14_Msk                            ;/*!< Interrupt Mask on line 14 */
EXTI_IMR_MR15_Pos         EQU		15                                        
EXTI_IMR_MR15_Msk         EQU		0x1 << EXTI_IMR_MR15_Pos                     ;/*!< 0x00008000 */
EXTI_IMR_MR15             EQU		EXTI_IMR_MR15_Msk                            ;/*!< Interrupt Mask on line 15 */
EXTI_IMR_MR16_Pos         EQU		16                                        
EXTI_IMR_MR16_Msk         EQU		0x1 << EXTI_IMR_MR16_Pos                     ;/*!< 0x00010000 */
EXTI_IMR_MR16             EQU		EXTI_IMR_MR16_Msk                            ;/*!< Interrupt Mask on line 16 */
EXTI_IMR_MR17_Pos         EQU		17                                        
EXTI_IMR_MR17_Msk         EQU		0x1 << EXTI_IMR_MR17_Pos                     ;/*!< 0x00020000 */
EXTI_IMR_MR17             EQU		EXTI_IMR_MR17_Msk                            ;/*!< Interrupt Mask on line 17 */
EXTI_IMR_MR18_Pos         EQU		18                                        
EXTI_IMR_MR18_Msk         EQU		0x1 << EXTI_IMR_MR18_Pos                     ;/*!< 0x00040000 */
EXTI_IMR_MR18             EQU		EXTI_IMR_MR18_Msk                            ;/*!< Interrupt Mask on line 18 */
EXTI_IMR_MR19_Pos         EQU		19                                        
EXTI_IMR_MR19_Msk         EQU		0x1 << EXTI_IMR_MR19_Pos                     ;/*!< 0x00080000 */
EXTI_IMR_MR19             EQU		EXTI_IMR_MR19_Msk                            ;/*!< Interrupt Mask on line 19 */
EXTI_IMR_MR20_Pos         EQU		20                                        
EXTI_IMR_MR20_Msk         EQU		0x1 << EXTI_IMR_MR20_Pos                     ;/*!< 0x00100000 */
EXTI_IMR_MR20             EQU		EXTI_IMR_MR20_Msk                            ;/*!< Interrupt Mask on line 20 */
EXTI_IMR_MR21_Pos         EQU		21                                        
EXTI_IMR_MR21_Msk         EQU		0x1 << EXTI_IMR_MR21_Pos                     ;/*!< 0x00200000 */
EXTI_IMR_MR21             EQU		EXTI_IMR_MR21_Msk                            ;/*!< Interrupt Mask on line 21 */
EXTI_IMR_MR22_Pos         EQU		22                                        
EXTI_IMR_MR22_Msk         EQU		0x1 << EXTI_IMR_MR22_Pos                     ;/*!< 0x00400000 */
EXTI_IMR_MR22             EQU		EXTI_IMR_MR22_Msk                            ;/*!< Interrupt Mask on line 22 */

;/* Reference Defines */
EXTI_IMR_IM0              EQU		EXTI_IMR_MR0
EXTI_IMR_IM1              EQU		EXTI_IMR_MR1
EXTI_IMR_IM2              EQU		EXTI_IMR_MR2
EXTI_IMR_IM3              EQU		EXTI_IMR_MR3
EXTI_IMR_IM4              EQU		EXTI_IMR_MR4
EXTI_IMR_IM5              EQU		EXTI_IMR_MR5
EXTI_IMR_IM6              EQU		EXTI_IMR_MR6
EXTI_IMR_IM7              EQU		EXTI_IMR_MR7
EXTI_IMR_IM8              EQU		EXTI_IMR_MR8
EXTI_IMR_IM9              EQU		EXTI_IMR_MR9
EXTI_IMR_IM10             EQU		EXTI_IMR_MR10
EXTI_IMR_IM11             EQU		EXTI_IMR_MR11
EXTI_IMR_IM12             EQU		EXTI_IMR_MR12
EXTI_IMR_IM13             EQU		EXTI_IMR_MR13
EXTI_IMR_IM14             EQU		EXTI_IMR_MR14
EXTI_IMR_IM15             EQU		EXTI_IMR_MR15
EXTI_IMR_IM16             EQU		EXTI_IMR_MR16
EXTI_IMR_IM17             EQU		EXTI_IMR_MR17
EXTI_IMR_IM18             EQU		EXTI_IMR_MR18
EXTI_IMR_IM19             EQU		EXTI_IMR_MR19
EXTI_IMR_IM20             EQU		EXTI_IMR_MR20
EXTI_IMR_IM21             EQU		EXTI_IMR_MR21
EXTI_IMR_IM22             EQU		EXTI_IMR_MR22
EXTI_IMR_IM_Pos           EQU		0                                         
EXTI_IMR_IM_Msk           EQU		0x7FFFFF << EXTI_IMR_IM_Pos                  ;/*!< 0x007FFFFF */
EXTI_IMR_IM               EQU		EXTI_IMR_IM_Msk                              ;/*!< Interrupt Mask All */

EXTI_EMR		          EQU		0x04
;/*******************  Bit definition for EXTI_EMR register  *******************/
EXTI_EMR_MR0_Pos          EQU		0                                         
EXTI_EMR_MR0_Msk          EQU		0x1 << EXTI_EMR_MR0_Pos                      ;/*!< 0x00000001 */
EXTI_EMR_MR0              EQU		EXTI_EMR_MR0_Msk                             ;/*!< Event Mask on line 0 */
EXTI_EMR_MR1_Pos          EQU		1                                         
EXTI_EMR_MR1_Msk          EQU		0x1 << EXTI_EMR_MR1_Pos                      ;/*!< 0x00000002 */
EXTI_EMR_MR1              EQU		EXTI_EMR_MR1_Msk                             ;/*!< Event Mask on line 1 */
EXTI_EMR_MR2_Pos          EQU		2                                         
EXTI_EMR_MR2_Msk          EQU		0x1 << EXTI_EMR_MR2_Pos                      ;/*!< 0x00000004 */
EXTI_EMR_MR2              EQU		EXTI_EMR_MR2_Msk                             ;/*!< Event Mask on line 2 */
EXTI_EMR_MR3_Pos          EQU		3                                         
EXTI_EMR_MR3_Msk          EQU		0x1 << EXTI_EMR_MR3_Pos                      ;/*!< 0x00000008 */
EXTI_EMR_MR3              EQU		EXTI_EMR_MR3_Msk                             ;/*!< Event Mask on line 3 */
EXTI_EMR_MR4_Pos          EQU		4                                         
EXTI_EMR_MR4_Msk          EQU		0x1 << EXTI_EMR_MR4_Pos                      ;/*!< 0x00000010 */
EXTI_EMR_MR4              EQU		EXTI_EMR_MR4_Msk                             ;/*!< Event Mask on line 4 */
EXTI_EMR_MR5_Pos          EQU		5                                         
EXTI_EMR_MR5_Msk          EQU		0x1 << EXTI_EMR_MR5_Pos                      ;/*!< 0x00000020 */
EXTI_EMR_MR5              EQU		EXTI_EMR_MR5_Msk                             ;/*!< Event Mask on line 5 */
EXTI_EMR_MR6_Pos          EQU		6                                         
EXTI_EMR_MR6_Msk          EQU		0x1 << EXTI_EMR_MR6_Pos                      ;/*!< 0x00000040 */
EXTI_EMR_MR6              EQU		EXTI_EMR_MR6_Msk                             ;/*!< Event Mask on line 6 */
EXTI_EMR_MR7_Pos          EQU		7                                         
EXTI_EMR_MR7_Msk          EQU		0x1 << EXTI_EMR_MR7_Pos                      ;/*!< 0x00000080 */
EXTI_EMR_MR7              EQU		EXTI_EMR_MR7_Msk                             ;/*!< Event Mask on line 7 */
EXTI_EMR_MR8_Pos          EQU		8                                         
EXTI_EMR_MR8_Msk          EQU		0x1 << EXTI_EMR_MR8_Pos                      ;/*!< 0x00000100 */
EXTI_EMR_MR8              EQU		EXTI_EMR_MR8_Msk                             ;/*!< Event Mask on line 8 */
EXTI_EMR_MR9_Pos          EQU		9                                         
EXTI_EMR_MR9_Msk          EQU		0x1 << EXTI_EMR_MR9_Pos                      ;/*!< 0x00000200 */
EXTI_EMR_MR9              EQU		EXTI_EMR_MR9_Msk                             ;/*!< Event Mask on line 9 */
EXTI_EMR_MR10_Pos         EQU		10                                        
EXTI_EMR_MR10_Msk         EQU		0x1 << EXTI_EMR_MR10_Pos                     ;/*!< 0x00000400 */
EXTI_EMR_MR10             EQU		EXTI_EMR_MR10_Msk                            ;/*!< Event Mask on line 10 */
EXTI_EMR_MR11_Pos         EQU		11                                        
EXTI_EMR_MR11_Msk         EQU		0x1 << EXTI_EMR_MR11_Pos                     ;/*!< 0x00000800 */
EXTI_EMR_MR11             EQU		EXTI_EMR_MR11_Msk                            ;/*!< Event Mask on line 11 */
EXTI_EMR_MR12_Pos         EQU		12                                        
EXTI_EMR_MR12_Msk         EQU		0x1 << EXTI_EMR_MR12_Pos                     ;/*!< 0x00001000 */
EXTI_EMR_MR12             EQU		EXTI_EMR_MR12_Msk                            ;/*!< Event Mask on line 12 */
EXTI_EMR_MR13_Pos         EQU		13                                        
EXTI_EMR_MR13_Msk         EQU		0x1 << EXTI_EMR_MR13_Pos                     ;/*!< 0x00002000 */
EXTI_EMR_MR13             EQU		EXTI_EMR_MR13_Msk                            ;/*!< Event Mask on line 13 */
EXTI_EMR_MR14_Pos         EQU		14                                        
EXTI_EMR_MR14_Msk         EQU		0x1 << EXTI_EMR_MR14_Pos                     ;/*!< 0x00004000 */
EXTI_EMR_MR14             EQU		EXTI_EMR_MR14_Msk                            ;/*!< Event Mask on line 14 */
EXTI_EMR_MR15_Pos         EQU		15                                        
EXTI_EMR_MR15_Msk         EQU		0x1 << EXTI_EMR_MR15_Pos                     ;/*!< 0x00008000 */
EXTI_EMR_MR15             EQU		EXTI_EMR_MR15_Msk                            ;/*!< Event Mask on line 15 */
EXTI_EMR_MR16_Pos         EQU		16                                        
EXTI_EMR_MR16_Msk         EQU		0x1 << EXTI_EMR_MR16_Pos                     ;/*!< 0x00010000 */
EXTI_EMR_MR16             EQU		EXTI_EMR_MR16_Msk                            ;/*!< Event Mask on line 16 */
EXTI_EMR_MR17_Pos         EQU		17                                        
EXTI_EMR_MR17_Msk         EQU		0x1 << EXTI_EMR_MR17_Pos                     ;/*!< 0x00020000 */
EXTI_EMR_MR17             EQU		EXTI_EMR_MR17_Msk                            ;/*!< Event Mask on line 17 */
EXTI_EMR_MR18_Pos         EQU		18                                        
EXTI_EMR_MR18_Msk         EQU		0x1 << EXTI_EMR_MR18_Pos                     ;/*!< 0x00040000 */
EXTI_EMR_MR18             EQU		EXTI_EMR_MR18_Msk                            ;/*!< Event Mask on line 18 */
EXTI_EMR_MR19_Pos         EQU		19                                        
EXTI_EMR_MR19_Msk         EQU		0x1 << EXTI_EMR_MR19_Pos                     ;/*!< 0x00080000 */
EXTI_EMR_MR19             EQU		EXTI_EMR_MR19_Msk                            ;/*!< Event Mask on line 19 */
EXTI_EMR_MR20_Pos         EQU		20                                        
EXTI_EMR_MR20_Msk         EQU		0x1 << EXTI_EMR_MR20_Pos                     ;/*!< 0x00100000 */
EXTI_EMR_MR20             EQU		EXTI_EMR_MR20_Msk                            ;/*!< Event Mask on line 20 */
EXTI_EMR_MR21_Pos         EQU		21                                        
EXTI_EMR_MR21_Msk         EQU		0x1 << EXTI_EMR_MR21_Pos                     ;/*!< 0x00200000 */
EXTI_EMR_MR21             EQU		EXTI_EMR_MR21_Msk                            ;/*!< Event Mask on line 21 */
EXTI_EMR_MR22_Pos         EQU		22                                        
EXTI_EMR_MR22_Msk         EQU		0x1 << EXTI_EMR_MR22_Pos                     ;/*!< 0x00400000 */
EXTI_EMR_MR22             EQU		EXTI_EMR_MR22_Msk                            ;/*!< Event Mask on line 22 */

;/* Reference Defines */
EXTI_EMR_EM0              EQU		EXTI_EMR_MR0
EXTI_EMR_EM1              EQU		EXTI_EMR_MR1
EXTI_EMR_EM2              EQU		EXTI_EMR_MR2
EXTI_EMR_EM3              EQU		EXTI_EMR_MR3
EXTI_EMR_EM4              EQU		EXTI_EMR_MR4
EXTI_EMR_EM5              EQU		EXTI_EMR_MR5
EXTI_EMR_EM6              EQU		EXTI_EMR_MR6
EXTI_EMR_EM7              EQU		EXTI_EMR_MR7
EXTI_EMR_EM8              EQU		EXTI_EMR_MR8
EXTI_EMR_EM9              EQU		EXTI_EMR_MR9
EXTI_EMR_EM10             EQU		EXTI_EMR_MR10
EXTI_EMR_EM11             EQU		EXTI_EMR_MR11
EXTI_EMR_EM12             EQU		EXTI_EMR_MR12
EXTI_EMR_EM13             EQU		EXTI_EMR_MR13
EXTI_EMR_EM14             EQU		EXTI_EMR_MR14
EXTI_EMR_EM15             EQU		EXTI_EMR_MR15
EXTI_EMR_EM16             EQU		EXTI_EMR_MR16
EXTI_EMR_EM17             EQU		EXTI_EMR_MR17
EXTI_EMR_EM18             EQU		EXTI_EMR_MR18
EXTI_EMR_EM19             EQU		EXTI_EMR_MR19
EXTI_EMR_EM20             EQU		EXTI_EMR_MR20
EXTI_EMR_EM21             EQU		EXTI_EMR_MR21
EXTI_EMR_EM22             EQU		EXTI_EMR_MR22

EXTI_RTSR		          EQU		0x08
;/******************  Bit definition for EXTI_RTSR register  *******************/
EXTI_RTSR_TR0_Pos         EQU		0                                         
EXTI_RTSR_TR0_Msk         EQU		0x1 << EXTI_RTSR_TR0_Pos                     ;/*!< 0x00000001 */
EXTI_RTSR_TR0             EQU		EXTI_RTSR_TR0_Msk                            ;/*!< Rising trigger event configuration bit of line 0 */
EXTI_RTSR_TR1_Pos         EQU		1                                         
EXTI_RTSR_TR1_Msk         EQU		0x1 << EXTI_RTSR_TR1_Pos                     ;/*!< 0x00000002 */
EXTI_RTSR_TR1             EQU		EXTI_RTSR_TR1_Msk                            ;/*!< Rising trigger event configuration bit of line 1 */
EXTI_RTSR_TR2_Pos         EQU		2                                         
EXTI_RTSR_TR2_Msk         EQU		0x1 << EXTI_RTSR_TR2_Pos                     ;/*!< 0x00000004 */
EXTI_RTSR_TR2             EQU		EXTI_RTSR_TR2_Msk                            ;/*!< Rising trigger event configuration bit of line 2 */
EXTI_RTSR_TR3_Pos         EQU		3                                         
EXTI_RTSR_TR3_Msk         EQU		0x1 << EXTI_RTSR_TR3_Pos                     ;/*!< 0x00000008 */
EXTI_RTSR_TR3             EQU		EXTI_RTSR_TR3_Msk                            ;/*!< Rising trigger event configuration bit of line 3 */
EXTI_RTSR_TR4_Pos         EQU		4                                         
EXTI_RTSR_TR4_Msk         EQU		0x1 << EXTI_RTSR_TR4_Pos                     ;/*!< 0x00000010 */
EXTI_RTSR_TR4             EQU		EXTI_RTSR_TR4_Msk                            ;/*!< Rising trigger event configuration bit of line 4 */
EXTI_RTSR_TR5_Pos         EQU		5                                         
EXTI_RTSR_TR5_Msk         EQU		0x1 << EXTI_RTSR_TR5_Pos                     ;/*!< 0x00000020 */
EXTI_RTSR_TR5             EQU		EXTI_RTSR_TR5_Msk                            ;/*!< Rising trigger event configuration bit of line 5 */
EXTI_RTSR_TR6_Pos         EQU		6                                         
EXTI_RTSR_TR6_Msk         EQU		0x1 << EXTI_RTSR_TR6_Pos                     ;/*!< 0x00000040 */
EXTI_RTSR_TR6             EQU		EXTI_RTSR_TR6_Msk                            ;/*!< Rising trigger event configuration bit of line 6 */
EXTI_RTSR_TR7_Pos         EQU		7                                         
EXTI_RTSR_TR7_Msk         EQU		0x1 << EXTI_RTSR_TR7_Pos                     ;/*!< 0x00000080 */
EXTI_RTSR_TR7             EQU		EXTI_RTSR_TR7_Msk                            ;/*!< Rising trigger event configuration bit of line 7 */
EXTI_RTSR_TR8_Pos         EQU		8                                         
EXTI_RTSR_TR8_Msk         EQU		0x1 << EXTI_RTSR_TR8_Pos                     ;/*!< 0x00000100 */
EXTI_RTSR_TR8             EQU		EXTI_RTSR_TR8_Msk                            ;/*!< Rising trigger event configuration bit of line 8 */
EXTI_RTSR_TR9_Pos         EQU		9                                         
EXTI_RTSR_TR9_Msk         EQU		0x1 << EXTI_RTSR_TR9_Pos                     ;/*!< 0x00000200 */
EXTI_RTSR_TR9             EQU		EXTI_RTSR_TR9_Msk                            ;/*!< Rising trigger event configuration bit of line 9 */
EXTI_RTSR_TR10_Pos        EQU		10                                        
EXTI_RTSR_TR10_Msk        EQU		0x1 << EXTI_RTSR_TR10_Pos                    ;/*!< 0x00000400 */
EXTI_RTSR_TR10            EQU		EXTI_RTSR_TR10_Msk                           ;/*!< Rising trigger event configuration bit of line 10 */
EXTI_RTSR_TR11_Pos        EQU		11                                        
EXTI_RTSR_TR11_Msk        EQU		0x1 << EXTI_RTSR_TR11_Pos                    ;/*!< 0x00000800 */
EXTI_RTSR_TR11            EQU		EXTI_RTSR_TR11_Msk                           ;/*!< Rising trigger event configuration bit of line 11 */
EXTI_RTSR_TR12_Pos        EQU		12                                        
EXTI_RTSR_TR12_Msk        EQU		0x1 << EXTI_RTSR_TR12_Pos                    ;/*!< 0x00001000 */
EXTI_RTSR_TR12            EQU		EXTI_RTSR_TR12_Msk                           ;/*!< Rising trigger event configuration bit of line 12 */
EXTI_RTSR_TR13_Pos        EQU		13                                        
EXTI_RTSR_TR13_Msk        EQU		0x1 << EXTI_RTSR_TR13_Pos                    ;/*!< 0x00002000 */
EXTI_RTSR_TR13            EQU		EXTI_RTSR_TR13_Msk                           ;/*!< Rising trigger event configuration bit of line 13 */
EXTI_RTSR_TR14_Pos        EQU		14                                        
EXTI_RTSR_TR14_Msk        EQU		0x1 << EXTI_RTSR_TR14_Pos                    ;/*!< 0x00004000 */
EXTI_RTSR_TR14            EQU		EXTI_RTSR_TR14_Msk                           ;/*!< Rising trigger event configuration bit of line 14 */
EXTI_RTSR_TR15_Pos        EQU		15                                        
EXTI_RTSR_TR15_Msk        EQU		0x1 << EXTI_RTSR_TR15_Pos                    ;/*!< 0x00008000 */
EXTI_RTSR_TR15            EQU		EXTI_RTSR_TR15_Msk                           ;/*!< Rising trigger event configuration bit of line 15 */
EXTI_RTSR_TR16_Pos        EQU		16                                        
EXTI_RTSR_TR16_Msk        EQU		0x1 << EXTI_RTSR_TR16_Pos                    ;/*!< 0x00010000 */
EXTI_RTSR_TR16            EQU		EXTI_RTSR_TR16_Msk                           ;/*!< Rising trigger event configuration bit of line 16 */
EXTI_RTSR_TR17_Pos        EQU		17                                        
EXTI_RTSR_TR17_Msk        EQU		0x1 << EXTI_RTSR_TR17_Pos                    ;/*!< 0x00020000 */
EXTI_RTSR_TR17            EQU		EXTI_RTSR_TR17_Msk                           ;/*!< Rising trigger event configuration bit of line 17 */
EXTI_RTSR_TR18_Pos        EQU		18                                        
EXTI_RTSR_TR18_Msk        EQU		0x1 << EXTI_RTSR_TR18_Pos                    ;/*!< 0x00040000 */
EXTI_RTSR_TR18            EQU		EXTI_RTSR_TR18_Msk                           ;/*!< Rising trigger event configuration bit of line 18 */
EXTI_RTSR_TR19_Pos        EQU		19                                        
EXTI_RTSR_TR19_Msk        EQU		0x1 << EXTI_RTSR_TR19_Pos                    ;/*!< 0x00080000 */
EXTI_RTSR_TR19            EQU		EXTI_RTSR_TR19_Msk                           ;/*!< Rising trigger event configuration bit of line 19 */
EXTI_RTSR_TR20_Pos        EQU		20                                        
EXTI_RTSR_TR20_Msk        EQU		0x1 << EXTI_RTSR_TR20_Pos                    ;/*!< 0x00100000 */
EXTI_RTSR_TR20            EQU		EXTI_RTSR_TR20_Msk                           ;/*!< Rising trigger event configuration bit of line 20 */
EXTI_RTSR_TR21_Pos        EQU		21                                        
EXTI_RTSR_TR21_Msk        EQU		0x1 << EXTI_RTSR_TR21_Pos                    ;/*!< 0x00200000 */
EXTI_RTSR_TR21            EQU		EXTI_RTSR_TR21_Msk                           ;/*!< Rising trigger event configuration bit of line 21 */
EXTI_RTSR_TR22_Pos        EQU		22                                        
EXTI_RTSR_TR22_Msk        EQU		0x1 << EXTI_RTSR_TR22_Pos                    ;/*!< 0x00400000 */
EXTI_RTSR_TR22            EQU		EXTI_RTSR_TR22_Msk                           ;/*!< Rising trigger event configuration bit of line 22 */

EXTI_FTSR		          EQU		0x0C
;/******************  Bit definition for EXTI_FTSR register  *******************/
EXTI_FTSR_TR0_Pos         EQU		0                                         
EXTI_FTSR_TR0_Msk         EQU		0x1 << EXTI_FTSR_TR0_Pos                     ;/*!< 0x00000001 */
EXTI_FTSR_TR0             EQU		EXTI_FTSR_TR0_Msk                            ;/*!< Falling trigger event configuration bit of line 0 */
EXTI_FTSR_TR1_Pos         EQU		1                                         
EXTI_FTSR_TR1_Msk         EQU		0x1 << EXTI_FTSR_TR1_Pos                     ;/*!< 0x00000002 */
EXTI_FTSR_TR1             EQU		EXTI_FTSR_TR1_Msk                            ;/*!< Falling trigger event configuration bit of line 1 */
EXTI_FTSR_TR2_Pos         EQU		2                                         
EXTI_FTSR_TR2_Msk         EQU		0x1 << EXTI_FTSR_TR2_Pos                     ;/*!< 0x00000004 */
EXTI_FTSR_TR2             EQU		EXTI_FTSR_TR2_Msk                            ;/*!< Falling trigger event configuration bit of line 2 */
EXTI_FTSR_TR3_Pos         EQU		3                                         
EXTI_FTSR_TR3_Msk         EQU		0x1 << EXTI_FTSR_TR3_Pos                     ;/*!< 0x00000008 */
EXTI_FTSR_TR3             EQU		EXTI_FTSR_TR3_Msk                            ;/*!< Falling trigger event configuration bit of line 3 */
EXTI_FTSR_TR4_Pos         EQU		4                                         
EXTI_FTSR_TR4_Msk         EQU		0x1 << EXTI_FTSR_TR4_Pos                     ;/*!< 0x00000010 */
EXTI_FTSR_TR4             EQU		EXTI_FTSR_TR4_Msk                            ;/*!< Falling trigger event configuration bit of line 4 */
EXTI_FTSR_TR5_Pos         EQU		5                                         
EXTI_FTSR_TR5_Msk         EQU		0x1 << EXTI_FTSR_TR5_Pos                     ;/*!< 0x00000020 */
EXTI_FTSR_TR5             EQU		EXTI_FTSR_TR5_Msk                            ;/*!< Falling trigger event configuration bit of line 5 */
EXTI_FTSR_TR6_Pos         EQU		6                                         
EXTI_FTSR_TR6_Msk         EQU		0x1 << EXTI_FTSR_TR6_Pos                     ;/*!< 0x00000040 */
EXTI_FTSR_TR6             EQU		EXTI_FTSR_TR6_Msk                            ;/*!< Falling trigger event configuration bit of line 6 */
EXTI_FTSR_TR7_Pos         EQU		7                                         
EXTI_FTSR_TR7_Msk         EQU		0x1 << EXTI_FTSR_TR7_Pos                     ;/*!< 0x00000080 */
EXTI_FTSR_TR7             EQU		EXTI_FTSR_TR7_Msk                            ;/*!< Falling trigger event configuration bit of line 7 */
EXTI_FTSR_TR8_Pos         EQU		8                                         
EXTI_FTSR_TR8_Msk         EQU		0x1 << EXTI_FTSR_TR8_Pos                     ;/*!< 0x00000100 */
EXTI_FTSR_TR8             EQU		EXTI_FTSR_TR8_Msk                            ;/*!< Falling trigger event configuration bit of line 8 */
EXTI_FTSR_TR9_Pos         EQU		9                                         
EXTI_FTSR_TR9_Msk         EQU		0x1 << EXTI_FTSR_TR9_Pos                     ;/*!< 0x00000200 */
EXTI_FTSR_TR9             EQU		EXTI_FTSR_TR9_Msk                            ;/*!< Falling trigger event configuration bit of line 9 */
EXTI_FTSR_TR10_Pos        EQU		10                                        
EXTI_FTSR_TR10_Msk        EQU		0x1 << EXTI_FTSR_TR10_Pos                    ;/*!< 0x00000400 */
EXTI_FTSR_TR10            EQU		EXTI_FTSR_TR10_Msk                           ;/*!< Falling trigger event configuration bit of line 10 */
EXTI_FTSR_TR11_Pos        EQU		11                                        
EXTI_FTSR_TR11_Msk        EQU		0x1 << EXTI_FTSR_TR11_Pos                    ;/*!< 0x00000800 */
EXTI_FTSR_TR11            EQU		EXTI_FTSR_TR11_Msk                           ;/*!< Falling trigger event configuration bit of line 11 */
EXTI_FTSR_TR12_Pos        EQU		12                                        
EXTI_FTSR_TR12_Msk        EQU		0x1 << EXTI_FTSR_TR12_Pos                    ;/*!< 0x00001000 */
EXTI_FTSR_TR12            EQU		EXTI_FTSR_TR12_Msk                           ;/*!< Falling trigger event configuration bit of line 12 */
EXTI_FTSR_TR13_Pos        EQU		13                                        
EXTI_FTSR_TR13_Msk        EQU		0x1 << EXTI_FTSR_TR13_Pos                    ;/*!< 0x00002000 */
EXTI_FTSR_TR13            EQU		EXTI_FTSR_TR13_Msk                           ;/*!< Falling trigger event configuration bit of line 13 */
EXTI_FTSR_TR14_Pos        EQU		14                                        
EXTI_FTSR_TR14_Msk        EQU		0x1 << EXTI_FTSR_TR14_Pos                    ;/*!< 0x00004000 */
EXTI_FTSR_TR14            EQU		EXTI_FTSR_TR14_Msk                           ;/*!< Falling trigger event configuration bit of line 14 */
EXTI_FTSR_TR15_Pos        EQU		15                                        
EXTI_FTSR_TR15_Msk        EQU		0x1 << EXTI_FTSR_TR15_Pos                    ;/*!< 0x00008000 */
EXTI_FTSR_TR15            EQU		EXTI_FTSR_TR15_Msk                           ;/*!< Falling trigger event configuration bit of line 15 */
EXTI_FTSR_TR16_Pos        EQU		16                                        
EXTI_FTSR_TR16_Msk        EQU		0x1 << EXTI_FTSR_TR16_Pos                    ;/*!< 0x00010000 */
EXTI_FTSR_TR16            EQU		EXTI_FTSR_TR16_Msk                           ;/*!< Falling trigger event configuration bit of line 16 */
EXTI_FTSR_TR17_Pos        EQU		17                                        
EXTI_FTSR_TR17_Msk        EQU		0x1 << EXTI_FTSR_TR17_Pos                    ;/*!< 0x00020000 */
EXTI_FTSR_TR17            EQU		EXTI_FTSR_TR17_Msk                           ;/*!< Falling trigger event configuration bit of line 17 */
EXTI_FTSR_TR18_Pos        EQU		18                                        
EXTI_FTSR_TR18_Msk        EQU		0x1 << EXTI_FTSR_TR18_Pos                    ;/*!< 0x00040000 */
EXTI_FTSR_TR18            EQU		EXTI_FTSR_TR18_Msk                           ;/*!< Falling trigger event configuration bit of line 18 */
EXTI_FTSR_TR19_Pos        EQU		19                                        
EXTI_FTSR_TR19_Msk        EQU		0x1 << EXTI_FTSR_TR19_Pos                    ;/*!< 0x00080000 */
EXTI_FTSR_TR19            EQU		EXTI_FTSR_TR19_Msk                           ;/*!< Falling trigger event configuration bit of line 19 */
EXTI_FTSR_TR20_Pos        EQU		20                                        
EXTI_FTSR_TR20_Msk        EQU		0x1 << EXTI_FTSR_TR20_Pos                    ;/*!< 0x00100000 */
EXTI_FTSR_TR20            EQU		EXTI_FTSR_TR20_Msk                           ;/*!< Falling trigger event configuration bit of line 20 */
EXTI_FTSR_TR21_Pos        EQU		21                                        
EXTI_FTSR_TR21_Msk        EQU		0x1 << EXTI_FTSR_TR21_Pos                    ;/*!< 0x00200000 */
EXTI_FTSR_TR21            EQU		EXTI_FTSR_TR21_Msk                           ;/*!< Falling trigger event configuration bit of line 21 */
EXTI_FTSR_TR22_Pos        EQU		22                                        
EXTI_FTSR_TR22_Msk        EQU		0x1 << EXTI_FTSR_TR22_Pos                    ;/*!< 0x00400000 */
EXTI_FTSR_TR22            EQU		EXTI_FTSR_TR22_Msk                           ;/*!< Falling trigger event configuration bit of line 22 */

EXTI_SWIER			      EQU		0x10
;/******************  Bit definition for EXTI_SWIER register  ******************/
EXTI_SWIER_SWIER0_Pos     EQU		0                                         
EXTI_SWIER_SWIER0_Msk     EQU		0x1 << EXTI_SWIER_SWIER0_Pos                 ;/*!< 0x00000001 */
EXTI_SWIER_SWIER0         EQU		EXTI_SWIER_SWIER0_Msk                        ;/*!< Software Interrupt on line 0 */
EXTI_SWIER_SWIER1_Pos     EQU		1                                         
EXTI_SWIER_SWIER1_Msk     EQU		0x1 << EXTI_SWIER_SWIER1_Pos                 ;/*!< 0x00000002 */
EXTI_SWIER_SWIER1         EQU		EXTI_SWIER_SWIER1_Msk                        ;/*!< Software Interrupt on line 1 */
EXTI_SWIER_SWIER2_Pos     EQU		2                                         
EXTI_SWIER_SWIER2_Msk     EQU		0x1 << EXTI_SWIER_SWIER2_Pos                 ;/*!< 0x00000004 */
EXTI_SWIER_SWIER2         EQU		EXTI_SWIER_SWIER2_Msk                        ;/*!< Software Interrupt on line 2 */
EXTI_SWIER_SWIER3_Pos     EQU		3                                         
EXTI_SWIER_SWIER3_Msk     EQU		0x1 << EXTI_SWIER_SWIER3_Pos                 ;/*!< 0x00000008 */
EXTI_SWIER_SWIER3         EQU		EXTI_SWIER_SWIER3_Msk                        ;/*!< Software Interrupt on line 3 */
EXTI_SWIER_SWIER4_Pos     EQU		4                                         
EXTI_SWIER_SWIER4_Msk     EQU		0x1 << EXTI_SWIER_SWIER4_Pos                 ;/*!< 0x00000010 */
EXTI_SWIER_SWIER4         EQU		EXTI_SWIER_SWIER4_Msk                        ;/*!< Software Interrupt on line 4 */
EXTI_SWIER_SWIER5_Pos     EQU		5                                         
EXTI_SWIER_SWIER5_Msk     EQU		0x1 << EXTI_SWIER_SWIER5_Pos                 ;/*!< 0x00000020 */
EXTI_SWIER_SWIER5         EQU		EXTI_SWIER_SWIER5_Msk                        ;/*!< Software Interrupt on line 5 */
EXTI_SWIER_SWIER6_Pos     EQU		6                                         
EXTI_SWIER_SWIER6_Msk     EQU		0x1 << EXTI_SWIER_SWIER6_Pos                 ;/*!< 0x00000040 */
EXTI_SWIER_SWIER6         EQU		EXTI_SWIER_SWIER6_Msk                        ;/*!< Software Interrupt on line 6 */
EXTI_SWIER_SWIER7_Pos     EQU		7                                         
EXTI_SWIER_SWIER7_Msk     EQU		0x1 << EXTI_SWIER_SWIER7_Pos                 ;/*!< 0x00000080 */
EXTI_SWIER_SWIER7         EQU		EXTI_SWIER_SWIER7_Msk                        ;/*!< Software Interrupt on line 7 */
EXTI_SWIER_SWIER8_Pos     EQU		8                                         
EXTI_SWIER_SWIER8_Msk     EQU		0x1 << EXTI_SWIER_SWIER8_Pos                 ;/*!< 0x00000100 */
EXTI_SWIER_SWIER8         EQU		EXTI_SWIER_SWIER8_Msk                        ;/*!< Software Interrupt on line 8 */
EXTI_SWIER_SWIER9_Pos     EQU		9                                         
EXTI_SWIER_SWIER9_Msk     EQU		0x1 << EXTI_SWIER_SWIER9_Pos                 ;/*!< 0x00000200 */
EXTI_SWIER_SWIER9         EQU		EXTI_SWIER_SWIER9_Msk                        ;/*!< Software Interrupt on line 9 */
EXTI_SWIER_SWIER10_Pos    EQU		10                                        
EXTI_SWIER_SWIER10_Msk    EQU		0x1 << EXTI_SWIER_SWIER10_Pos                ;/*!< 0x00000400 */
EXTI_SWIER_SWIER10        EQU		EXTI_SWIER_SWIER10_Msk                       ;/*!< Software Interrupt on line 10 */
EXTI_SWIER_SWIER11_Pos    EQU		11                                        
EXTI_SWIER_SWIER11_Msk    EQU		0x1 << EXTI_SWIER_SWIER11_Pos                ;/*!< 0x00000800 */
EXTI_SWIER_SWIER11        EQU		EXTI_SWIER_SWIER11_Msk                       ;/*!< Software Interrupt on line 11 */
EXTI_SWIER_SWIER12_Pos    EQU		12                                        
EXTI_SWIER_SWIER12_Msk    EQU		0x1 << EXTI_SWIER_SWIER12_Pos                ;/*!< 0x00001000 */
EXTI_SWIER_SWIER12        EQU		EXTI_SWIER_SWIER12_Msk                       ;/*!< Software Interrupt on line 12 */
EXTI_SWIER_SWIER13_Pos    EQU		13                                        
EXTI_SWIER_SWIER13_Msk    EQU		0x1 << EXTI_SWIER_SWIER13_Pos                ;/*!< 0x00002000 */
EXTI_SWIER_SWIER13        EQU		EXTI_SWIER_SWIER13_Msk                       ;/*!< Software Interrupt on line 13 */
EXTI_SWIER_SWIER14_Pos    EQU		14                                        
EXTI_SWIER_SWIER14_Msk    EQU		0x1 << EXTI_SWIER_SWIER14_Pos                ;/*!< 0x00004000 */
EXTI_SWIER_SWIER14        EQU		EXTI_SWIER_SWIER14_Msk                       ;/*!< Software Interrupt on line 14 */
EXTI_SWIER_SWIER15_Pos    EQU		15                                        
EXTI_SWIER_SWIER15_Msk    EQU		0x1 << EXTI_SWIER_SWIER15_Pos                ;/*!< 0x00008000 */
EXTI_SWIER_SWIER15        EQU		EXTI_SWIER_SWIER15_Msk                       ;/*!< Software Interrupt on line 15 */
EXTI_SWIER_SWIER16_Pos    EQU		16                                        
EXTI_SWIER_SWIER16_Msk    EQU		0x1 << EXTI_SWIER_SWIER16_Pos                ;/*!< 0x00010000 */
EXTI_SWIER_SWIER16        EQU		EXTI_SWIER_SWIER16_Msk                       ;/*!< Software Interrupt on line 16 */
EXTI_SWIER_SWIER17_Pos    EQU		17                                        
EXTI_SWIER_SWIER17_Msk    EQU		0x1 << EXTI_SWIER_SWIER17_Pos                ;/*!< 0x00020000 */
EXTI_SWIER_SWIER17        EQU		EXTI_SWIER_SWIER17_Msk                       ;/*!< Software Interrupt on line 17 */
EXTI_SWIER_SWIER18_Pos    EQU		18                                        
EXTI_SWIER_SWIER18_Msk    EQU		0x1 << EXTI_SWIER_SWIER18_Pos                ;/*!< 0x00040000 */
EXTI_SWIER_SWIER18        EQU		EXTI_SWIER_SWIER18_Msk                       ;/*!< Software Interrupt on line 18 */
EXTI_SWIER_SWIER19_Pos    EQU		19                                        
EXTI_SWIER_SWIER19_Msk    EQU		0x1 << EXTI_SWIER_SWIER19_Pos                ;/*!< 0x00080000 */
EXTI_SWIER_SWIER19        EQU		EXTI_SWIER_SWIER19_Msk                       ;/*!< Software Interrupt on line 19 */
EXTI_SWIER_SWIER20_Pos    EQU		20                                        
EXTI_SWIER_SWIER20_Msk    EQU		0x1 << EXTI_SWIER_SWIER20_Pos                ;/*!< 0x00100000 */
EXTI_SWIER_SWIER20        EQU		EXTI_SWIER_SWIER20_Msk                       ;/*!< Software Interrupt on line 20 */
EXTI_SWIER_SWIER21_Pos    EQU		21                                        
EXTI_SWIER_SWIER21_Msk    EQU		0x1 << EXTI_SWIER_SWIER21_Pos                ;/*!< 0x00200000 */
EXTI_SWIER_SWIER21        EQU		EXTI_SWIER_SWIER21_Msk                       ;/*!< Software Interrupt on line 21 */
EXTI_SWIER_SWIER22_Pos    EQU		22                                        
EXTI_SWIER_SWIER22_Msk    EQU		0x1 << EXTI_SWIER_SWIER22_Pos                ;/*!< 0x00400000 */
EXTI_SWIER_SWIER22        EQU		EXTI_SWIER_SWIER22_Msk                       ;/*!< Software Interrupt on line 22 */

EXTI_PR			          EQU		0x14
;/*******************  Bit definition for EXTI_PR register  ********************/
EXTI_PR_PR0_Pos           EQU		0                                         
EXTI_PR_PR0_Msk           EQU		0x1 << EXTI_PR_PR0_Pos                       ;/*!< 0x00000001 */
EXTI_PR_PR0               EQU		EXTI_PR_PR0_Msk                              ;/*!< Pending bit for line 0 */
EXTI_PR_PR1_Pos           EQU		1                                         
EXTI_PR_PR1_Msk           EQU		0x1 << EXTI_PR_PR1_Pos                       ;/*!< 0x00000002 */
EXTI_PR_PR1               EQU		EXTI_PR_PR1_Msk                              ;/*!< Pending bit for line 1 */
EXTI_PR_PR2_Pos           EQU		2                                         
EXTI_PR_PR2_Msk           EQU		0x1 << EXTI_PR_PR2_Pos                       ;/*!< 0x00000004 */
EXTI_PR_PR2               EQU		EXTI_PR_PR2_Msk                              ;/*!< Pending bit for line 2 */
EXTI_PR_PR3_Pos           EQU		3                                         
EXTI_PR_PR3_Msk           EQU		0x1 << EXTI_PR_PR3_Pos                       ;/*!< 0x00000008 */
EXTI_PR_PR3               EQU		EXTI_PR_PR3_Msk                              ;/*!< Pending bit for line 3 */
EXTI_PR_PR4_Pos           EQU		4                                         
EXTI_PR_PR4_Msk           EQU		0x1 << EXTI_PR_PR4_Pos                       ;/*!< 0x00000010 */
EXTI_PR_PR4               EQU		EXTI_PR_PR4_Msk                              ;/*!< Pending bit for line 4 */
EXTI_PR_PR5_Pos           EQU		5                                         
EXTI_PR_PR5_Msk           EQU		0x1 << EXTI_PR_PR5_Pos                       ;/*!< 0x00000020 */
EXTI_PR_PR5               EQU		EXTI_PR_PR5_Msk                              ;/*!< Pending bit for line 5 */
EXTI_PR_PR6_Pos           EQU		6                                         
EXTI_PR_PR6_Msk           EQU		0x1 << EXTI_PR_PR6_Pos                       ;/*!< 0x00000040 */
EXTI_PR_PR6               EQU		EXTI_PR_PR6_Msk                              ;/*!< Pending bit for line 6 */
EXTI_PR_PR7_Pos           EQU		7                                         
EXTI_PR_PR7_Msk           EQU		0x1 << EXTI_PR_PR7_Pos                       ;/*!< 0x00000080 */
EXTI_PR_PR7               EQU		EXTI_PR_PR7_Msk                              ;/*!< Pending bit for line 7 */
EXTI_PR_PR8_Pos           EQU		8                                         
EXTI_PR_PR8_Msk           EQU		0x1 << EXTI_PR_PR8_Pos                       ;/*!< 0x00000100 */
EXTI_PR_PR8               EQU		EXTI_PR_PR8_Msk                              ;/*!< Pending bit for line 8 */
EXTI_PR_PR9_Pos           EQU		9                                         
EXTI_PR_PR9_Msk           EQU		0x1 << EXTI_PR_PR9_Pos                       ;/*!< 0x00000200 */
EXTI_PR_PR9               EQU		EXTI_PR_PR9_Msk                              ;/*!< Pending bit for line 9 */
EXTI_PR_PR10_Pos          EQU		10                                        
EXTI_PR_PR10_Msk          EQU		0x1 << EXTI_PR_PR10_Pos                      ;/*!< 0x00000400 */
EXTI_PR_PR10              EQU		EXTI_PR_PR10_Msk                             ;/*!< Pending bit for line 10 */
EXTI_PR_PR11_Pos          EQU		11                                        
EXTI_PR_PR11_Msk          EQU		0x1 << EXTI_PR_PR11_Pos                      ;/*!< 0x00000800 */
EXTI_PR_PR11              EQU		EXTI_PR_PR11_Msk                             ;/*!< Pending bit for line 11 */
EXTI_PR_PR12_Pos          EQU		12                                        
EXTI_PR_PR12_Msk          EQU		0x1 << EXTI_PR_PR12_Pos                      ;/*!< 0x00001000 */
EXTI_PR_PR12              EQU		EXTI_PR_PR12_Msk                             ;/*!< Pending bit for line 12 */
EXTI_PR_PR13_Pos          EQU		13                                        
EXTI_PR_PR13_Msk          EQU		0x1 << EXTI_PR_PR13_Pos                      ;/*!< 0x00002000 */
EXTI_PR_PR13              EQU		EXTI_PR_PR13_Msk                             ;/*!< Pending bit for line 13 */
EXTI_PR_PR14_Pos          EQU		14                                        
EXTI_PR_PR14_Msk          EQU		0x1 << EXTI_PR_PR14_Pos                      ;/*!< 0x00004000 */
EXTI_PR_PR14              EQU		EXTI_PR_PR14_Msk                             ;/*!< Pending bit for line 14 */
EXTI_PR_PR15_Pos          EQU		15                                        
EXTI_PR_PR15_Msk          EQU		0x1 << EXTI_PR_PR15_Pos                      ;/*!< 0x00008000 */
EXTI_PR_PR15              EQU		EXTI_PR_PR15_Msk                             ;/*!< Pending bit for line 15 */
EXTI_PR_PR16_Pos          EQU		16                                        
EXTI_PR_PR16_Msk          EQU		0x1 << EXTI_PR_PR16_Pos                      ;/*!< 0x00010000 */
EXTI_PR_PR16              EQU		EXTI_PR_PR16_Msk                             ;/*!< Pending bit for line 16 */
EXTI_PR_PR17_Pos          EQU		17                                        
EXTI_PR_PR17_Msk          EQU		0x1 << EXTI_PR_PR17_Pos                      ;/*!< 0x00020000 */
EXTI_PR_PR17              EQU		EXTI_PR_PR17_Msk                             ;/*!< Pending bit for line 17 */
EXTI_PR_PR18_Pos          EQU		18                                        
EXTI_PR_PR18_Msk          EQU		0x1 << EXTI_PR_PR18_Pos                      ;/*!< 0x00040000 */
EXTI_PR_PR18              EQU		EXTI_PR_PR18_Msk                             ;/*!< Pending bit for line 18 */
EXTI_PR_PR19_Pos          EQU		19                                        
EXTI_PR_PR19_Msk          EQU		0x1 << EXTI_PR_PR19_Pos                      ;/*!< 0x00080000 */
EXTI_PR_PR19              EQU		EXTI_PR_PR19_Msk                             ;/*!< Pending bit for line 19 */
EXTI_PR_PR20_Pos          EQU		20                                        
EXTI_PR_PR20_Msk          EQU		0x1 << EXTI_PR_PR20_Pos                      ;/*!< 0x00100000 */
EXTI_PR_PR20              EQU		EXTI_PR_PR20_Msk                             ;/*!< Pending bit for line 20 */
EXTI_PR_PR21_Pos          EQU		21                                        
EXTI_PR_PR21_Msk          EQU		0x1 << EXTI_PR_PR21_Pos                      ;/*!< 0x00200000 */
EXTI_PR_PR21              EQU		EXTI_PR_PR21_Msk                             ;/*!< Pending bit for line 21 */
EXTI_PR_PR22_Pos          EQU		22                                        
EXTI_PR_PR22_Msk          EQU		0x1 << EXTI_PR_PR22_Pos                      ;/*!< 0x00400000 */
EXTI_PR_PR22              EQU		EXTI_PR_PR22_Msk                             ;/*!< Pending bit for line 22 */

;/******************************************************************************/
;/*                                                                            */
;/*                                    FLASH                                   */
;/*                                                                            */
;/******************************************************************************/

FLASH_ACR			           EQU		0x00
;/*******************  Bits definition for FLASH_ACR register  *****************/
FLASH_ACR_LATENCY_Pos          EQU		0                                    
FLASH_ACR_LATENCY_Msk          EQU		0xF << FLASH_ACR_LATENCY_Pos            ;/*!< 0x0000000F */
FLASH_ACR_LATENCY              EQU		FLASH_ACR_LATENCY_Msk                   
FLASH_ACR_LATENCY_0WS          EQU		0x00000000                             
FLASH_ACR_LATENCY_1WS          EQU		0x00000001                             
FLASH_ACR_LATENCY_2WS          EQU		0x00000002                             
FLASH_ACR_LATENCY_3WS          EQU		0x00000003                             
FLASH_ACR_LATENCY_4WS          EQU		0x00000004                             
FLASH_ACR_LATENCY_5WS          EQU		0x00000005                             
FLASH_ACR_LATENCY_6WS          EQU		0x00000006                             
FLASH_ACR_LATENCY_7WS          EQU		0x00000007                             

FLASH_ACR_PRFTEN_Pos           EQU		8                                    
FLASH_ACR_PRFTEN_Msk           EQU		0x1 << FLASH_ACR_PRFTEN_Pos             	;/*!< 0x00000100 */
FLASH_ACR_PRFTEN               EQU		FLASH_ACR_PRFTEN_Msk                    
FLASH_ACR_ICEN_Pos             EQU		9                                    
FLASH_ACR_ICEN_Msk             EQU		0x1 << FLASH_ACR_ICEN_Pos               	;/*!< 0x00000200 */
FLASH_ACR_ICEN                 EQU		FLASH_ACR_ICEN_Msk                      
FLASH_ACR_DCEN_Pos             EQU		10                                   
FLASH_ACR_DCEN_Msk             EQU		0x1 << FLASH_ACR_DCEN_Pos               	;/*!< 0x00000400 */
FLASH_ACR_DCEN                 EQU		FLASH_ACR_DCEN_Msk                      
FLASH_ACR_ICRST_Pos            EQU		11                                   
FLASH_ACR_ICRST_Msk            EQU		0x1 << FLASH_ACR_ICRST_Pos              	;/*!< 0x00000800 */
FLASH_ACR_ICRST                EQU		FLASH_ACR_ICRST_Msk                     
FLASH_ACR_DCRST_Pos            EQU		12                                   
FLASH_ACR_DCRST_Msk            EQU		0x1 << FLASH_ACR_DCRST_Pos              	;/*!< 0x00001000 */
FLASH_ACR_DCRST                EQU		FLASH_ACR_DCRST_Msk                     
FLASH_ACR_BYTE0_ADDRESS_Pos    EQU		10                                   
FLASH_ACR_BYTE0_ADDRESS_Msk    EQU		0x10008F << FLASH_ACR_BYTE0_ADDRESS_Pos    	;/*!< 0x40023C00 */
FLASH_ACR_BYTE0_ADDRESS        EQU		FLASH_ACR_BYTE0_ADDRESS_Msk             
FLASH_ACR_BYTE2_ADDRESS_Pos    EQU		0                                    
FLASH_ACR_BYTE2_ADDRESS_Msk    EQU		0x40023C03 << FLASH_ACR_BYTE2_ADDRESS_Pos   ;/*!< 0x40023C03 */
FLASH_ACR_BYTE2_ADDRESS        EQU		FLASH_ACR_BYTE2_ADDRESS_Msk             

FLASH_SR			           EQU		0x0C
;/*******************  Bits definition for FLASH_SR register  ******************/
FLASH_SR_EOP_Pos               EQU		0                                    
FLASH_SR_EOP_Msk               EQU		0x1 << FLASH_SR_EOP_Pos                 ;/*!< 0x00000001 */
FLASH_SR_EOP                   EQU		FLASH_SR_EOP_Msk                        
FLASH_SR_SOP_Pos               EQU		1                                    
FLASH_SR_SOP_Msk               EQU		0x1 << FLASH_SR_SOP_Pos                 ;/*!< 0x00000002 */
FLASH_SR_SOP                   EQU		FLASH_SR_SOP_Msk                        
FLASH_SR_WRPERR_Pos            EQU		4                                    
FLASH_SR_WRPERR_Msk            EQU		0x1 << FLASH_SR_WRPERR_Pos              ;/*!< 0x00000010 */
FLASH_SR_WRPERR                EQU		FLASH_SR_WRPERR_Msk                     
FLASH_SR_PGAERR_Pos            EQU		5                                    
FLASH_SR_PGAERR_Msk            EQU		0x1 << FLASH_SR_PGAERR_Pos              ;/*!< 0x00000020 */
FLASH_SR_PGAERR                EQU		FLASH_SR_PGAERR_Msk                     
FLASH_SR_PGPERR_Pos            EQU		6                                    
FLASH_SR_PGPERR_Msk            EQU		0x1 << FLASH_SR_PGPERR_Pos              ;/*!< 0x00000040 */
FLASH_SR_PGPERR                EQU		FLASH_SR_PGPERR_Msk                     
FLASH_SR_PGSERR_Pos            EQU		7                                    
FLASH_SR_PGSERR_Msk            EQU		0x1 << FLASH_SR_PGSERR_Pos              ;/*!< 0x00000080 */
FLASH_SR_PGSERR                EQU		FLASH_SR_PGSERR_Msk                     
FLASH_SR_BSY_Pos               EQU		16                                   
FLASH_SR_BSY_Msk               EQU		0x1 << FLASH_SR_BSY_Pos                 ;/*!< 0x00010000 */
FLASH_SR_BSY                   EQU		FLASH_SR_BSY_Msk                        

FLASH_CR		               EQU		0x10
;/*******************  Bits definition for FLASH_CR register  ******************/
FLASH_CR_PG_Pos                EQU		0                                    
FLASH_CR_PG_Msk                EQU		0x1 << FLASH_CR_PG_Pos                  ;/*!< 0x00000001 */
FLASH_CR_PG                    EQU		FLASH_CR_PG_Msk                         
FLASH_CR_SER_Pos               EQU		1                                    
FLASH_CR_SER_Msk               EQU		0x1 << FLASH_CR_SER_Pos                 ;/*!< 0x00000002 */
FLASH_CR_SER                   EQU		FLASH_CR_SER_Msk                        
FLASH_CR_MER_Pos               EQU		2                                    
FLASH_CR_MER_Msk               EQU		0x1 << FLASH_CR_MER_Pos                 ;/*!< 0x00000004 */
FLASH_CR_MER                   EQU		FLASH_CR_MER_Msk                        
FLASH_CR_SNB_Pos               EQU		3                                    
FLASH_CR_SNB_Msk               EQU		0x1F << FLASH_CR_SNB_Pos                ;/*!< 0x000000F8 */
FLASH_CR_SNB                   EQU		FLASH_CR_SNB_Msk                        
FLASH_CR_SNB_0                 EQU		0x01 << FLASH_CR_SNB_Pos                ;/*!< 0x00000008 */
FLASH_CR_SNB_1                 EQU		0x02 << FLASH_CR_SNB_Pos                ;/*!< 0x00000010 */
FLASH_CR_SNB_2                 EQU		0x04 << FLASH_CR_SNB_Pos                ;/*!< 0x00000020 */
FLASH_CR_SNB_3                 EQU		0x08 << FLASH_CR_SNB_Pos                ;/*!< 0x00000040 */
FLASH_CR_SNB_4                 EQU		0x10 << FLASH_CR_SNB_Pos                ;/*!< 0x00000080 */
FLASH_CR_PSIZE_Pos             EQU		8                                    
FLASH_CR_PSIZE_Msk             EQU		0x3 << FLASH_CR_PSIZE_Pos               ;/*!< 0x00000300 */
FLASH_CR_PSIZE                 EQU		FLASH_CR_PSIZE_Msk                      
FLASH_CR_PSIZE_0               EQU		0x1 << FLASH_CR_PSIZE_Pos               ;/*!< 0x00000100 */
FLASH_CR_PSIZE_1               EQU		0x2 << FLASH_CR_PSIZE_Pos               ;/*!< 0x00000200 */
FLASH_CR_STRT_Pos              EQU		16                                   
FLASH_CR_STRT_Msk              EQU		0x1 << FLASH_CR_STRT_Pos                ;/*!< 0x00010000 */
FLASH_CR_STRT                  EQU		FLASH_CR_STRT_Msk                       
FLASH_CR_EOPIE_Pos             EQU		24                                   
FLASH_CR_EOPIE_Msk             EQU		0x1 << FLASH_CR_EOPIE_Pos               ;/*!< 0x01000000 */
FLASH_CR_EOPIE                 EQU		FLASH_CR_EOPIE_Msk                      
FLASH_CR_LOCK_Pos              EQU		31                                   
FLASH_CR_LOCK_Msk              EQU		0x1 << FLASH_CR_LOCK_Pos                ;/*!< 0x80000000 */
FLASH_CR_LOCK                  EQU		FLASH_CR_LOCK_Msk                       

FLASH_OPTCR				       EQU		0x14
;/*******************  Bits definition for FLASH_OPTCR register  ***************/
FLASH_OPTCR_OPTLOCK_Pos        EQU		0                                    
FLASH_OPTCR_OPTLOCK_Msk        EQU		0x1 << FLASH_OPTCR_OPTLOCK_Pos          ;/*!< 0x00000001 */
FLASH_OPTCR_OPTLOCK            EQU		FLASH_OPTCR_OPTLOCK_Msk                 
FLASH_OPTCR_OPTSTRT_Pos        EQU		1                                    
FLASH_OPTCR_OPTSTRT_Msk        EQU		0x1 << FLASH_OPTCR_OPTSTRT_Pos          ;/*!< 0x00000002 */
FLASH_OPTCR_OPTSTRT            EQU		FLASH_OPTCR_OPTSTRT_Msk                 

FLASH_OPTCR_BOR_LEV_0          EQU		0x00000004                             
FLASH_OPTCR_BOR_LEV_1          EQU		0x00000008                             
FLASH_OPTCR_BOR_LEV_Pos        EQU		2                                    
FLASH_OPTCR_BOR_LEV_Msk        EQU		0x3 << FLASH_OPTCR_BOR_LEV_Pos          ;/*!< 0x0000000C */
FLASH_OPTCR_BOR_LEV            EQU		FLASH_OPTCR_BOR_LEV_Msk                 
FLASH_OPTCR_WDG_SW_Pos         EQU		5                                    
FLASH_OPTCR_WDG_SW_Msk         EQU		0x1 << FLASH_OPTCR_WDG_SW_Pos           ;/*!< 0x00000020 */
FLASH_OPTCR_WDG_SW             EQU		FLASH_OPTCR_WDG_SW_Msk                  
FLASH_OPTCR_nRST_STOP_Pos      EQU		6                                    
FLASH_OPTCR_nRST_STOP_Msk      EQU		0x1 << FLASH_OPTCR_nRST_STOP_Pos        ;/*!< 0x00000040 */
FLASH_OPTCR_nRST_STOP          EQU		FLASH_OPTCR_nRST_STOP_Msk               
FLASH_OPTCR_nRST_STDBY_Pos     EQU		7                                    
FLASH_OPTCR_nRST_STDBY_Msk     EQU		0x1 << FLASH_OPTCR_nRST_STDBY_Pos       ;/*!< 0x00000080 */
FLASH_OPTCR_nRST_STDBY         EQU		FLASH_OPTCR_nRST_STDBY_Msk              
FLASH_OPTCR_RDP_Pos            EQU		8                                    
FLASH_OPTCR_RDP_Msk            EQU		0xFF << FLASH_OPTCR_RDP_Pos             ;/*!< 0x0000FF00 */
FLASH_OPTCR_RDP                EQU		FLASH_OPTCR_RDP_Msk                     
FLASH_OPTCR_RDP_0              EQU		0x01 << FLASH_OPTCR_RDP_Pos             ;/*!< 0x00000100 */
FLASH_OPTCR_RDP_1              EQU		0x02 << FLASH_OPTCR_RDP_Pos             ;/*!< 0x00000200 */
FLASH_OPTCR_RDP_2              EQU		0x04 << FLASH_OPTCR_RDP_Pos             ;/*!< 0x00000400 */
FLASH_OPTCR_RDP_3              EQU		0x08 << FLASH_OPTCR_RDP_Pos             ;/*!< 0x00000800 */
FLASH_OPTCR_RDP_4              EQU		0x10 << FLASH_OPTCR_RDP_Pos             ;/*!< 0x00001000 */
FLASH_OPTCR_RDP_5              EQU		0x20 << FLASH_OPTCR_RDP_Pos             ;/*!< 0x00002000 */
FLASH_OPTCR_RDP_6              EQU		0x40 << FLASH_OPTCR_RDP_Pos             ;/*!< 0x00004000 */
FLASH_OPTCR_RDP_7              EQU		0x80 << FLASH_OPTCR_RDP_Pos             ;/*!< 0x00008000 */
FLASH_OPTCR_nWRP_Pos           EQU		16                                   
FLASH_OPTCR_nWRP_Msk           EQU		0xFFF << FLASH_OPTCR_nWRP_Pos           ;/*!< 0x0FFF0000 */
FLASH_OPTCR_nWRP               EQU		FLASH_OPTCR_nWRP_Msk                    
FLASH_OPTCR_nWRP_0             EQU		0x00010000                             
FLASH_OPTCR_nWRP_1             EQU		0x00020000                             
FLASH_OPTCR_nWRP_2             EQU		0x00040000                             
FLASH_OPTCR_nWRP_3             EQU		0x00080000                             
FLASH_OPTCR_nWRP_4             EQU		0x00100000                             
FLASH_OPTCR_nWRP_5             EQU		0x00200000                             
FLASH_OPTCR_nWRP_6             EQU		0x00400000                             
FLASH_OPTCR_nWRP_7             EQU		0x00800000                             
FLASH_OPTCR_nWRP_8             EQU		0x01000000                             
FLASH_OPTCR_nWRP_9             EQU		0x02000000                             
FLASH_OPTCR_nWRP_10            EQU		0x04000000                             
FLASH_OPTCR_nWRP_11            EQU		0x08000000                             

FLASH_OPTCR1		           EQU		0x18
;/******************  Bits definition for FLASH_OPTCR1 register  ***************/
FLASH_OPTCR1_nWRP_Pos          EQU		16                                   
FLASH_OPTCR1_nWRP_Msk          EQU		0xFFF << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x0FFF0000 */
FLASH_OPTCR1_nWRP              EQU		FLASH_OPTCR1_nWRP_Msk                   
FLASH_OPTCR1_nWRP_0            EQU		0x001 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x00010000 */
FLASH_OPTCR1_nWRP_1            EQU		0x002 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x00020000 */
FLASH_OPTCR1_nWRP_2            EQU		0x004 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x00040000 */
FLASH_OPTCR1_nWRP_3            EQU		0x008 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x00080000 */
FLASH_OPTCR1_nWRP_4            EQU		0x010 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x00100000 */
FLASH_OPTCR1_nWRP_5            EQU		0x020 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x00200000 */
FLASH_OPTCR1_nWRP_6            EQU		0x040 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x00400000 */
FLASH_OPTCR1_nWRP_7            EQU		0x080 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x00800000 */
FLASH_OPTCR1_nWRP_8            EQU		0x100 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x01000000 */
FLASH_OPTCR1_nWRP_9            EQU		0x200 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x02000000 */
FLASH_OPTCR1_nWRP_10           EQU		0x400 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x04000000 */
FLASH_OPTCR1_nWRP_11           EQU		0x800 << FLASH_OPTCR1_nWRP_Pos          ;/*!< 0x08000000 */

;/******************************************************************************/
;/*                                                                            */
;/*                   Flexible Static Memory Controller                        */
;/*                                                                            */
;/******************************************************************************/

FSMC_BCR1			         EQU		0x00
;/******************  Bit definition for FSMC_BCR1 register  *******************/
FSMC_BCR1_MBKEN_Pos          EQU		0                                      
FSMC_BCR1_MBKEN_Msk          EQU		0x1 << FSMC_BCR1_MBKEN_Pos                ;/*!< 0x00000001 */
FSMC_BCR1_MBKEN              EQU		FSMC_BCR1_MBKEN_Msk                       ;/*!<Memory bank enable bit                 */
FSMC_BCR1_MUXEN_Pos          EQU		1                                      
FSMC_BCR1_MUXEN_Msk          EQU		0x1 << FSMC_BCR1_MUXEN_Pos                ;/*!< 0x00000002 */
FSMC_BCR1_MUXEN              EQU		FSMC_BCR1_MUXEN_Msk                       ;/*!<Address/data multiplexing enable bit   */

FSMC_BCR1_MTYP_Pos           EQU		2                                      
FSMC_BCR1_MTYP_Msk           EQU		0x3 << FSMC_BCR1_MTYP_Pos                 ;/*!< 0x0000000C */
FSMC_BCR1_MTYP               EQU		FSMC_BCR1_MTYP_Msk                        ;/*!<MTYP[1:0] bits EQU		Memory type              */
FSMC_BCR1_MTYP_0             EQU		0x1 << FSMC_BCR1_MTYP_Pos                 ;/*!< 0x00000004 */
FSMC_BCR1_MTYP_1             EQU		0x2 << FSMC_BCR1_MTYP_Pos                 ;/*!< 0x00000008 */

FSMC_BCR1_MWID_Pos           EQU		4                                      
FSMC_BCR1_MWID_Msk           EQU		0x3 << FSMC_BCR1_MWID_Pos                 ;/*!< 0x00000030 */
FSMC_BCR1_MWID               EQU		FSMC_BCR1_MWID_Msk                        ;/*!<MWID[1:0] bits EQU		Memory data bus width    */
FSMC_BCR1_MWID_0             EQU		0x1 << FSMC_BCR1_MWID_Pos                 ;/*!< 0x00000010 */
FSMC_BCR1_MWID_1             EQU		0x2 << FSMC_BCR1_MWID_Pos                 ;/*!< 0x00000020 */

FSMC_BCR1_FACCEN_Pos         EQU		6                                      
FSMC_BCR1_FACCEN_Msk         EQU		0x1 << FSMC_BCR1_FACCEN_Pos               ;/*!< 0x00000040 */
FSMC_BCR1_FACCEN             EQU		FSMC_BCR1_FACCEN_Msk                      ;/*!<Flash access enable                    */
FSMC_BCR1_BURSTEN_Pos        EQU		8                                      
FSMC_BCR1_BURSTEN_Msk        EQU		0x1 << FSMC_BCR1_BURSTEN_Pos              ;/*!< 0x00000100 */
FSMC_BCR1_BURSTEN            EQU		FSMC_BCR1_BURSTEN_Msk                     ;/*!<Burst enable bit                       */
FSMC_BCR1_WAITPOL_Pos        EQU		9                                      
FSMC_BCR1_WAITPOL_Msk        EQU		0x1 << FSMC_BCR1_WAITPOL_Pos              ;/*!< 0x00000200 */
FSMC_BCR1_WAITPOL            EQU		FSMC_BCR1_WAITPOL_Msk                     ;/*!<Wait signal polarity bit               */
FSMC_BCR1_WRAPMOD_Pos        EQU		10                                     
FSMC_BCR1_WRAPMOD_Msk        EQU		0x1 << FSMC_BCR1_WRAPMOD_Pos              ;/*!< 0x00000400 */
FSMC_BCR1_WRAPMOD            EQU		FSMC_BCR1_WRAPMOD_Msk                     ;/*!<Wrapped burst mode support             */
FSMC_BCR1_WAITCFG_Pos        EQU		11                                     
FSMC_BCR1_WAITCFG_Msk        EQU		0x1 << FSMC_BCR1_WAITCFG_Pos              ;/*!< 0x00000800 */
FSMC_BCR1_WAITCFG            EQU		FSMC_BCR1_WAITCFG_Msk                     ;/*!<Wait timing configuration              */
FSMC_BCR1_WREN_Pos           EQU		12                                     
FSMC_BCR1_WREN_Msk           EQU		0x1 << FSMC_BCR1_WREN_Pos                 ;/*!< 0x00001000 */
FSMC_BCR1_WREN               EQU		FSMC_BCR1_WREN_Msk                        ;/*!<Write enable bit                       */
FSMC_BCR1_WAITEN_Pos         EQU		13                                     
FSMC_BCR1_WAITEN_Msk         EQU		0x1 << FSMC_BCR1_WAITEN_Pos               ;/*!< 0x00002000 */
FSMC_BCR1_WAITEN             EQU		FSMC_BCR1_WAITEN_Msk                      ;/*!<Wait enable bit                        */
FSMC_BCR1_EXTMOD_Pos         EQU		14                                     
FSMC_BCR1_EXTMOD_Msk         EQU		0x1 << FSMC_BCR1_EXTMOD_Pos               ;/*!< 0x00004000 */
FSMC_BCR1_EXTMOD             EQU		FSMC_BCR1_EXTMOD_Msk                      ;/*!<Extended mode enable                   */
FSMC_BCR1_ASYNCWAIT_Pos      EQU		15                                     
FSMC_BCR1_ASYNCWAIT_Msk      EQU		0x1 << FSMC_BCR1_ASYNCWAIT_Pos            ;/*!< 0x00008000 */
FSMC_BCR1_ASYNCWAIT          EQU		FSMC_BCR1_ASYNCWAIT_Msk                   ;/*!<Asynchronous wait                      */
FSMC_BCR1_CPSIZE_Pos         EQU		16                                     
FSMC_BCR1_CPSIZE_Msk         EQU		0x7 << FSMC_BCR1_CPSIZE_Pos               ;/*!< 0x00070000 */
FSMC_BCR1_CPSIZE             EQU		FSMC_BCR1_CPSIZE_Msk                      ;/*!<CRAM page size */
FSMC_BCR1_CPSIZE_0           EQU		0x1 << FSMC_BCR1_CPSIZE_Pos               ;/*!< 0x00010000 */
FSMC_BCR1_CPSIZE_1           EQU		0x2 << FSMC_BCR1_CPSIZE_Pos               ;/*!< 0x00020000 */
FSMC_BCR1_CPSIZE_2           EQU		0x4 << FSMC_BCR1_CPSIZE_Pos               ;/*!< 0x00040000 */
FSMC_BCR1_CBURSTRW_Pos       EQU		19                                     
FSMC_BCR1_CBURSTRW_Msk       EQU		0x1 << FSMC_BCR1_CBURSTRW_Pos             ;/*!< 0x00080000 */
FSMC_BCR1_CBURSTRW           EQU		FSMC_BCR1_CBURSTRW_Msk                    ;/*!<Write burst enable                     */

FSMC_BCR2			         EQU		0x08
;/******************  Bit definition for FSMC_BCR2 register  *******************/
FSMC_BCR2_MBKEN_Pos          EQU		0                                      
FSMC_BCR2_MBKEN_Msk          EQU		0x1 << FSMC_BCR2_MBKEN_Pos                ;/*!< 0x00000001 */
FSMC_BCR2_MBKEN              EQU		FSMC_BCR2_MBKEN_Msk                       ;/*!<Memory bank enable bit                */
FSMC_BCR2_MUXEN_Pos          EQU		1                                      
FSMC_BCR2_MUXEN_Msk          EQU		0x1 << FSMC_BCR2_MUXEN_Pos                ;/*!< 0x00000002 */
FSMC_BCR2_MUXEN              EQU		FSMC_BCR2_MUXEN_Msk                       ;/*!<Address/data multiplexing enable bit   */

FSMC_BCR2_MTYP_Pos           EQU		2                                      
FSMC_BCR2_MTYP_Msk           EQU		0x3 << FSMC_BCR2_MTYP_Pos                 ;/*!< 0x0000000C */
FSMC_BCR2_MTYP               EQU		FSMC_BCR2_MTYP_Msk                        ;/*!<MTYP[1:0] bits EQU		Memory type              */
FSMC_BCR2_MTYP_0             EQU		0x1 << FSMC_BCR2_MTYP_Pos                 ;/*!< 0x00000004 */
FSMC_BCR2_MTYP_1             EQU		0x2 << FSMC_BCR2_MTYP_Pos                 ;/*!< 0x00000008 */

FSMC_BCR2_MWID_Pos           EQU		4                                      
FSMC_BCR2_MWID_Msk           EQU		0x3 << FSMC_BCR2_MWID_Pos                 ;/*!< 0x00000030 */
FSMC_BCR2_MWID               EQU		FSMC_BCR2_MWID_Msk                        ;/*!<MWID[1:0] bits EQU		Memory data bus width    */
FSMC_BCR2_MWID_0             EQU		0x1 << FSMC_BCR2_MWID_Pos                 ;/*!< 0x00000010 */
FSMC_BCR2_MWID_1             EQU		0x2 << FSMC_BCR2_MWID_Pos                 ;/*!< 0x00000020 */

FSMC_BCR2_FACCEN_Pos         EQU		6                                      
FSMC_BCR2_FACCEN_Msk         EQU		0x1 << FSMC_BCR2_FACCEN_Pos               ;/*!< 0x00000040 */
FSMC_BCR2_FACCEN             EQU		FSMC_BCR2_FACCEN_Msk                      ;/*!<Flash access enable                    */
FSMC_BCR2_BURSTEN_Pos        EQU		8                                      
FSMC_BCR2_BURSTEN_Msk        EQU		0x1 << FSMC_BCR2_BURSTEN_Pos              ;/*!< 0x00000100 */
FSMC_BCR2_BURSTEN            EQU		FSMC_BCR2_BURSTEN_Msk                     ;/*!<Burst enable bit                       */
FSMC_BCR2_WAITPOL_Pos        EQU		9                                      
FSMC_BCR2_WAITPOL_Msk        EQU		0x1 << FSMC_BCR2_WAITPOL_Pos              ;/*!< 0x00000200 */
FSMC_BCR2_WAITPOL            EQU		FSMC_BCR2_WAITPOL_Msk                     ;/*!<Wait signal polarity bit               */
FSMC_BCR2_WRAPMOD_Pos        EQU		10                                     
FSMC_BCR2_WRAPMOD_Msk        EQU		0x1 << FSMC_BCR2_WRAPMOD_Pos              ;/*!< 0x00000400 */
FSMC_BCR2_WRAPMOD            EQU		FSMC_BCR2_WRAPMOD_Msk                     ;/*!<Wrapped burst mode support             */
FSMC_BCR2_WAITCFG_Pos        EQU		11                                     
FSMC_BCR2_WAITCFG_Msk        EQU		0x1 << FSMC_BCR2_WAITCFG_Pos              ;/*!< 0x00000800 */
FSMC_BCR2_WAITCFG            EQU		FSMC_BCR2_WAITCFG_Msk                     ;/*!<Wait timing configuration              */
FSMC_BCR2_WREN_Pos           EQU		12                                     
FSMC_BCR2_WREN_Msk           EQU		0x1 << FSMC_BCR2_WREN_Pos                 ;/*!< 0x00001000 */
FSMC_BCR2_WREN               EQU		FSMC_BCR2_WREN_Msk                        ;/*!<Write enable bit                       */
FSMC_BCR2_WAITEN_Pos         EQU		13                                     
FSMC_BCR2_WAITEN_Msk         EQU		0x1 << FSMC_BCR2_WAITEN_Pos               ;/*!< 0x00002000 */
FSMC_BCR2_WAITEN             EQU		FSMC_BCR2_WAITEN_Msk                      ;/*!<Wait enable bit                        */
FSMC_BCR2_EXTMOD_Pos         EQU		14                                     
FSMC_BCR2_EXTMOD_Msk         EQU		0x1 << FSMC_BCR2_EXTMOD_Pos               ;/*!< 0x00004000 */
FSMC_BCR2_EXTMOD             EQU		FSMC_BCR2_EXTMOD_Msk                      ;/*!<Extended mode enable                   */
FSMC_BCR2_ASYNCWAIT_Pos      EQU		15                                     
FSMC_BCR2_ASYNCWAIT_Msk      EQU		0x1 << FSMC_BCR2_ASYNCWAIT_Pos            ;/*!< 0x00008000 */
FSMC_BCR2_ASYNCWAIT          EQU		FSMC_BCR2_ASYNCWAIT_Msk                   ;/*!<Asynchronous wait                      */
FSMC_BCR2_CPSIZE_Pos         EQU		16                                     
FSMC_BCR2_CPSIZE_Msk         EQU		0x7 << FSMC_BCR2_CPSIZE_Pos               ;/*!< 0x00070000 */
FSMC_BCR2_CPSIZE             EQU		FSMC_BCR2_CPSIZE_Msk                      ;/*!<CRAM page size */
FSMC_BCR2_CPSIZE_0           EQU		0x1 << FSMC_BCR2_CPSIZE_Pos               ;/*!< 0x00010000 */
FSMC_BCR2_CPSIZE_1           EQU		0x2 << FSMC_BCR2_CPSIZE_Pos               ;/*!< 0x00020000 */
FSMC_BCR2_CPSIZE_2           EQU		0x4 << FSMC_BCR2_CPSIZE_Pos               ;/*!< 0x00040000 */
FSMC_BCR2_CBURSTRW_Pos       EQU		19                                     
FSMC_BCR2_CBURSTRW_Msk       EQU		0x1 << FSMC_BCR2_CBURSTRW_Pos             ;/*!< 0x00080000 */
FSMC_BCR2_CBURSTRW           EQU		FSMC_BCR2_CBURSTRW_Msk                    ;/*!<Write burst enable                     */

FSMC_BCR3			         EQU		0x10
;/******************  Bit definition for FSMC_BCR3 register  *******************/
FSMC_BCR3_MBKEN_Pos          EQU		0                                      
FSMC_BCR3_MBKEN_Msk          EQU		0x1 << FSMC_BCR3_MBKEN_Pos                ;/*!< 0x00000001 */
FSMC_BCR3_MBKEN              EQU		FSMC_BCR3_MBKEN_Msk                       ;/*!<Memory bank enable bit                 */
FSMC_BCR3_MUXEN_Pos          EQU		1                                      
FSMC_BCR3_MUXEN_Msk          EQU		0x1 << FSMC_BCR3_MUXEN_Pos                ;/*!< 0x00000002 */
FSMC_BCR3_MUXEN              EQU		FSMC_BCR3_MUXEN_Msk                       ;/*!<Address/data multiplexing enable bit   */

FSMC_BCR3_MTYP_Pos           EQU		2                                      
FSMC_BCR3_MTYP_Msk           EQU		0x3 << FSMC_BCR3_MTYP_Pos                 ;/*!< 0x0000000C */
FSMC_BCR3_MTYP               EQU		FSMC_BCR3_MTYP_Msk                        ;/*!<MTYP[1:0] bits EQU		Memory type              */
FSMC_BCR3_MTYP_0             EQU		0x1 << FSMC_BCR3_MTYP_Pos                 ;/*!< 0x00000004 */
FSMC_BCR3_MTYP_1             EQU		0x2 << FSMC_BCR3_MTYP_Pos                 ;/*!< 0x00000008 */

FSMC_BCR3_MWID_Pos           EQU		4                                      
FSMC_BCR3_MWID_Msk           EQU		0x3 << FSMC_BCR3_MWID_Pos                 ;/*!< 0x00000030 */
FSMC_BCR3_MWID               EQU		FSMC_BCR3_MWID_Msk                        ;/*!<MWID[1:0] bits EQU		Memory data bus width    */
FSMC_BCR3_MWID_0             EQU		0x1 << FSMC_BCR3_MWID_Pos                 ;/*!< 0x00000010 */
FSMC_BCR3_MWID_1             EQU		0x2 << FSMC_BCR3_MWID_Pos                 ;/*!< 0x00000020 */

FSMC_BCR3_FACCEN_Pos         EQU		6                                      
FSMC_BCR3_FACCEN_Msk         EQU		0x1 << FSMC_BCR3_FACCEN_Pos               ;/*!< 0x00000040 */
FSMC_BCR3_FACCEN             EQU		FSMC_BCR3_FACCEN_Msk                      ;/*!<Flash access enable                    */
FSMC_BCR3_BURSTEN_Pos        EQU		8                                      
FSMC_BCR3_BURSTEN_Msk        EQU		0x1 << FSMC_BCR3_BURSTEN_Pos              ;/*!< 0x00000100 */
FSMC_BCR3_BURSTEN            EQU		FSMC_BCR3_BURSTEN_Msk                     ;/*!<Burst enable bit                       */
FSMC_BCR3_WAITPOL_Pos        EQU		9                                      
FSMC_BCR3_WAITPOL_Msk        EQU		0x1 << FSMC_BCR3_WAITPOL_Pos              ;/*!< 0x00000200 */
FSMC_BCR3_WAITPOL            EQU		FSMC_BCR3_WAITPOL_Msk                     ;/*!<Wait signal polarity bit               */
FSMC_BCR3_WRAPMOD_Pos        EQU		10                                     
FSMC_BCR3_WRAPMOD_Msk        EQU		0x1 << FSMC_BCR3_WRAPMOD_Pos              ;/*!< 0x00000400 */
FSMC_BCR3_WRAPMOD            EQU		FSMC_BCR3_WRAPMOD_Msk                     ;/*!<Wrapped burst mode support             */
FSMC_BCR3_WAITCFG_Pos        EQU		11                                     
FSMC_BCR3_WAITCFG_Msk        EQU		0x1 << FSMC_BCR3_WAITCFG_Pos              ;/*!< 0x00000800 */
FSMC_BCR3_WAITCFG            EQU		FSMC_BCR3_WAITCFG_Msk                     ;/*!<Wait timing configuration              */
FSMC_BCR3_WREN_Pos           EQU		12                                     
FSMC_BCR3_WREN_Msk           EQU		0x1 << FSMC_BCR3_WREN_Pos                 ;/*!< 0x00001000 */
FSMC_BCR3_WREN               EQU		FSMC_BCR3_WREN_Msk                        ;/*!<Write enable bit                       */
FSMC_BCR3_WAITEN_Pos         EQU		13                                     
FSMC_BCR3_WAITEN_Msk         EQU		0x1 << FSMC_BCR3_WAITEN_Pos               ;/*!< 0x00002000 */
FSMC_BCR3_WAITEN             EQU		FSMC_BCR3_WAITEN_Msk                      ;/*!<Wait enable bit                        */
FSMC_BCR3_EXTMOD_Pos         EQU		14                                     
FSMC_BCR3_EXTMOD_Msk         EQU		0x1 << FSMC_BCR3_EXTMOD_Pos               ;/*!< 0x00004000 */
FSMC_BCR3_EXTMOD             EQU		FSMC_BCR3_EXTMOD_Msk                      ;/*!<Extended mode enable                   */
FSMC_BCR3_ASYNCWAIT_Pos      EQU		15                                     
FSMC_BCR3_ASYNCWAIT_Msk      EQU		0x1 << FSMC_BCR3_ASYNCWAIT_Pos            ;/*!< 0x00008000 */
FSMC_BCR3_ASYNCWAIT          EQU		FSMC_BCR3_ASYNCWAIT_Msk                   ;/*!<Asynchronous wait                      */
FSMC_BCR3_CPSIZE_Pos         EQU		16                                     
FSMC_BCR3_CPSIZE_Msk         EQU		0x7 << FSMC_BCR3_CPSIZE_Pos               ;/*!< 0x00070000 */
FSMC_BCR3_CPSIZE             EQU		FSMC_BCR3_CPSIZE_Msk                      ;/*!<CRAM page size */
FSMC_BCR3_CPSIZE_0           EQU		0x1 << FSMC_BCR3_CPSIZE_Pos               ;/*!< 0x00010000 */
FSMC_BCR3_CPSIZE_1           EQU		0x2 << FSMC_BCR3_CPSIZE_Pos               ;/*!< 0x00020000 */
FSMC_BCR3_CPSIZE_2           EQU		0x4 << FSMC_BCR3_CPSIZE_Pos               ;/*!< 0x00040000 */
FSMC_BCR3_CBURSTRW_Pos       EQU		19                                     
FSMC_BCR3_CBURSTRW_Msk       EQU		0x1 << FSMC_BCR3_CBURSTRW_Pos             ;/*!< 0x00080000 */
FSMC_BCR3_CBURSTRW           EQU		FSMC_BCR3_CBURSTRW_Msk                    ;/*!<Write burst enable                     */

FSMC_BCR4			         EQU		0x18
;/******************  Bit definition for FSMC_BCR4 register  *******************/
FSMC_BCR4_MBKEN_Pos          EQU		0                                      
FSMC_BCR4_MBKEN_Msk          EQU		0x1 << FSMC_BCR4_MBKEN_Pos                ;/*!< 0x00000001 */
FSMC_BCR4_MBKEN              EQU		FSMC_BCR4_MBKEN_Msk                       ;/*!<Memory bank enable bit */
FSMC_BCR4_MUXEN_Pos          EQU		1                                      
FSMC_BCR4_MUXEN_Msk          EQU		0x1 << FSMC_BCR4_MUXEN_Pos                ;/*!< 0x00000002 */
FSMC_BCR4_MUXEN              EQU		FSMC_BCR4_MUXEN_Msk                       ;/*!<Address/data multiplexing enable bit   */

FSMC_BCR4_MTYP_Pos           EQU		2                                      
FSMC_BCR4_MTYP_Msk           EQU		0x3 << FSMC_BCR4_MTYP_Pos                 ;/*!< 0x0000000C */
FSMC_BCR4_MTYP               EQU		FSMC_BCR4_MTYP_Msk                        ;/*!<MTYP[1:0] bits EQU		Memory type              */
FSMC_BCR4_MTYP_0             EQU		0x1 << FSMC_BCR4_MTYP_Pos                 ;/*!< 0x00000004 */
FSMC_BCR4_MTYP_1             EQU		0x2 << FSMC_BCR4_MTYP_Pos                 ;/*!< 0x00000008 */

FSMC_BCR4_MWID_Pos           EQU		4                                      
FSMC_BCR4_MWID_Msk           EQU		0x3 << FSMC_BCR4_MWID_Pos                 ;/*!< 0x00000030 */
FSMC_BCR4_MWID               EQU		FSMC_BCR4_MWID_Msk                        ;/*!<MWID[1:0] bits EQU		Memory data bus width    */
FSMC_BCR4_MWID_0             EQU		0x1 << FSMC_BCR4_MWID_Pos                 ;/*!< 0x00000010 */
FSMC_BCR4_MWID_1             EQU		0x2 << FSMC_BCR4_MWID_Pos                 ;/*!< 0x00000020 */

FSMC_BCR4_FACCEN_Pos         EQU		6                                      
FSMC_BCR4_FACCEN_Msk         EQU		0x1 << FSMC_BCR4_FACCEN_Pos               ;/*!< 0x00000040 */
FSMC_BCR4_FACCEN             EQU		FSMC_BCR4_FACCEN_Msk                      ;/*!<Flash access enable                    */
FSMC_BCR4_BURSTEN_Pos        EQU		8                                      
FSMC_BCR4_BURSTEN_Msk        EQU		0x1 << FSMC_BCR4_BURSTEN_Pos              ;/*!< 0x00000100 */
FSMC_BCR4_BURSTEN            EQU		FSMC_BCR4_BURSTEN_Msk                     ;/*!<Burst enable bit                       */
FSMC_BCR4_WAITPOL_Pos        EQU		9                                      
FSMC_BCR4_WAITPOL_Msk        EQU		0x1 << FSMC_BCR4_WAITPOL_Pos              ;/*!< 0x00000200 */
FSMC_BCR4_WAITPOL            EQU		FSMC_BCR4_WAITPOL_Msk                     ;/*!<Wait signal polarity bit               */
FSMC_BCR4_WRAPMOD_Pos        EQU		10                                     
FSMC_BCR4_WRAPMOD_Msk        EQU		0x1 << FSMC_BCR4_WRAPMOD_Pos              ;/*!< 0x00000400 */
FSMC_BCR4_WRAPMOD            EQU		FSMC_BCR4_WRAPMOD_Msk                     ;/*!<Wrapped burst mode support             */
FSMC_BCR4_WAITCFG_Pos        EQU		11                                     
FSMC_BCR4_WAITCFG_Msk        EQU		0x1 << FSMC_BCR4_WAITCFG_Pos              ;/*!< 0x00000800 */
FSMC_BCR4_WAITCFG            EQU		FSMC_BCR4_WAITCFG_Msk                     ;/*!<Wait timing configuration              */
FSMC_BCR4_WREN_Pos           EQU		12                                     
FSMC_BCR4_WREN_Msk           EQU		0x1 << FSMC_BCR4_WREN_Pos                 ;/*!< 0x00001000 */
FSMC_BCR4_WREN               EQU		FSMC_BCR4_WREN_Msk                        ;/*!<Write enable bit                       */
FSMC_BCR4_WAITEN_Pos         EQU		13                                     
FSMC_BCR4_WAITEN_Msk         EQU		0x1 << FSMC_BCR4_WAITEN_Pos               ;/*!< 0x00002000 */
FSMC_BCR4_WAITEN             EQU		FSMC_BCR4_WAITEN_Msk                      ;/*!<Wait enable bit                        */
FSMC_BCR4_EXTMOD_Pos         EQU		14                                     
FSMC_BCR4_EXTMOD_Msk         EQU		0x1 << FSMC_BCR4_EXTMOD_Pos               ;/*!< 0x00004000 */
FSMC_BCR4_EXTMOD             EQU		FSMC_BCR4_EXTMOD_Msk                      ;/*!<Extended mode enable                   */
FSMC_BCR4_ASYNCWAIT_Pos      EQU		15                                     
FSMC_BCR4_ASYNCWAIT_Msk      EQU		0x1 << FSMC_BCR4_ASYNCWAIT_Pos            ;/*!< 0x00008000 */
FSMC_BCR4_ASYNCWAIT          EQU		FSMC_BCR4_ASYNCWAIT_Msk                   ;/*!<Asynchronous wait                      */
FSMC_BCR4_CPSIZE_Pos         EQU		16                                     
FSMC_BCR4_CPSIZE_Msk         EQU		0x7 << FSMC_BCR4_CPSIZE_Pos               ;/*!< 0x00070000 */
FSMC_BCR4_CPSIZE             EQU		FSMC_BCR4_CPSIZE_Msk                      ;/*!<CRAM page size */
FSMC_BCR4_CPSIZE_0           EQU		0x1 << FSMC_BCR4_CPSIZE_Pos               ;/*!< 0x00010000 */
FSMC_BCR4_CPSIZE_1           EQU		0x2 << FSMC_BCR4_CPSIZE_Pos               ;/*!< 0x00020000 */
FSMC_BCR4_CPSIZE_2           EQU		0x4 << FSMC_BCR4_CPSIZE_Pos               ;/*!< 0x00040000 */
FSMC_BCR4_CBURSTRW_Pos       EQU		19                                     
FSMC_BCR4_CBURSTRW_Msk       EQU		0x1 << FSMC_BCR4_CBURSTRW_Pos             ;/*!< 0x00080000 */
FSMC_BCR4_CBURSTRW           EQU		FSMC_BCR4_CBURSTRW_Msk                    ;/*!<Write burst enable                     */

FSMC_BTR1			         EQU		0x04
;/******************  Bit definition for FSMC_BTR1 register  ******************/
FSMC_BTR1_ADDSET_Pos         EQU		0                                      
FSMC_BTR1_ADDSET_Msk         EQU		0xF << FSMC_BTR1_ADDSET_Pos               ;/*!< 0x0000000F */
FSMC_BTR1_ADDSET             EQU		FSMC_BTR1_ADDSET_Msk                      ;/*!<ADDSET[3:0] bits EQU		Address setup phase duration    */
FSMC_BTR1_ADDSET_0           EQU		0x1 << FSMC_BTR1_ADDSET_Pos               ;/*!< 0x00000001 */
FSMC_BTR1_ADDSET_1           EQU		0x2 << FSMC_BTR1_ADDSET_Pos               ;/*!< 0x00000002 */
FSMC_BTR1_ADDSET_2           EQU		0x4 << FSMC_BTR1_ADDSET_Pos               ;/*!< 0x00000004 */
FSMC_BTR1_ADDSET_3           EQU		0x8 << FSMC_BTR1_ADDSET_Pos               ;/*!< 0x00000008 */

FSMC_BTR1_ADDHLD_Pos         EQU		4                                      
FSMC_BTR1_ADDHLD_Msk         EQU		0xF << FSMC_BTR1_ADDHLD_Pos               ;/*!< 0x000000F0 */
FSMC_BTR1_ADDHLD             EQU		FSMC_BTR1_ADDHLD_Msk                      ;/*!<ADDHLD[3:0] bits EQU		Address-hold phase duration    */
FSMC_BTR1_ADDHLD_0           EQU		0x1 << FSMC_BTR1_ADDHLD_Pos               ;/*!< 0x00000010 */
FSMC_BTR1_ADDHLD_1           EQU		0x2 << FSMC_BTR1_ADDHLD_Pos               ;/*!< 0x00000020 */
FSMC_BTR1_ADDHLD_2           EQU		0x4 << FSMC_BTR1_ADDHLD_Pos               ;/*!< 0x00000040 */
FSMC_BTR1_ADDHLD_3           EQU		0x8 << FSMC_BTR1_ADDHLD_Pos               ;/*!< 0x00000080 */

FSMC_BTR1_DATAST_Pos         EQU		8                                      
FSMC_BTR1_DATAST_Msk         EQU		0xFF << FSMC_BTR1_DATAST_Pos              ;/*!< 0x0000FF00 */
FSMC_BTR1_DATAST             EQU		FSMC_BTR1_DATAST_Msk                      ;/*!<DATAST [7:0] bits EQU		Data-phase duration    */
FSMC_BTR1_DATAST_0           EQU		0x01 << FSMC_BTR1_DATAST_Pos              ;/*!< 0x00000100 */
FSMC_BTR1_DATAST_1           EQU		0x02 << FSMC_BTR1_DATAST_Pos              ;/*!< 0x00000200 */
FSMC_BTR1_DATAST_2           EQU		0x04 << FSMC_BTR1_DATAST_Pos              ;/*!< 0x00000400 */
FSMC_BTR1_DATAST_3           EQU		0x08 << FSMC_BTR1_DATAST_Pos              ;/*!< 0x00000800 */
FSMC_BTR1_DATAST_4           EQU		0x10 << FSMC_BTR1_DATAST_Pos              ;/*!< 0x00001000 */
FSMC_BTR1_DATAST_5           EQU		0x20 << FSMC_BTR1_DATAST_Pos              ;/*!< 0x00002000 */
FSMC_BTR1_DATAST_6           EQU		0x40 << FSMC_BTR1_DATAST_Pos              ;/*!< 0x00004000 */
FSMC_BTR1_DATAST_7           EQU		0x80 << FSMC_BTR1_DATAST_Pos              ;/*!< 0x00008000 */

FSMC_BTR1_BUSTURN_Pos        EQU		16                                     
FSMC_BTR1_BUSTURN_Msk        EQU		0xF << FSMC_BTR1_BUSTURN_Pos              ;/*!< 0x000F0000 */
FSMC_BTR1_BUSTURN            EQU		FSMC_BTR1_BUSTURN_Msk                     ;/*!<BUSTURN[3:0] bits EQU		Bus turnaround phase duration    */
FSMC_BTR1_BUSTURN_0          EQU		0x1 << FSMC_BTR1_BUSTURN_Pos              ;/*!< 0x00010000 */
FSMC_BTR1_BUSTURN_1          EQU		0x2 << FSMC_BTR1_BUSTURN_Pos              ;/*!< 0x00020000 */
FSMC_BTR1_BUSTURN_2          EQU		0x4 << FSMC_BTR1_BUSTURN_Pos              ;/*!< 0x00040000 */
FSMC_BTR1_BUSTURN_3          EQU		0x8 << FSMC_BTR1_BUSTURN_Pos              ;/*!< 0x00080000 */

FSMC_BTR1_CLKDIV_Pos         EQU		20                                     
FSMC_BTR1_CLKDIV_Msk         EQU		0xF << FSMC_BTR1_CLKDIV_Pos               ;/*!< 0x00F00000 */
FSMC_BTR1_CLKDIV             EQU		FSMC_BTR1_CLKDIV_Msk                      ;/*!<CLKDIV[3:0] bits EQU		Clock divide ratio    */
FSMC_BTR1_CLKDIV_0           EQU		0x1 << FSMC_BTR1_CLKDIV_Pos               ;/*!< 0x00100000 */
FSMC_BTR1_CLKDIV_1           EQU		0x2 << FSMC_BTR1_CLKDIV_Pos               ;/*!< 0x00200000 */
FSMC_BTR1_CLKDIV_2           EQU		0x4 << FSMC_BTR1_CLKDIV_Pos               ;/*!< 0x00400000 */
FSMC_BTR1_CLKDIV_3           EQU		0x8 << FSMC_BTR1_CLKDIV_Pos               ;/*!< 0x00800000 */

FSMC_BTR1_DATLAT_Pos         EQU		24                                     
FSMC_BTR1_DATLAT_Msk         EQU		0xF << FSMC_BTR1_DATLAT_Pos               ;/*!< 0x0F000000 */
FSMC_BTR1_DATLAT             EQU		FSMC_BTR1_DATLAT_Msk                      ;/*!<DATLA[3:0] bits EQU		Data latency    */
FSMC_BTR1_DATLAT_0           EQU		0x1 << FSMC_BTR1_DATLAT_Pos               ;/*!< 0x01000000 */
FSMC_BTR1_DATLAT_1           EQU		0x2 << FSMC_BTR1_DATLAT_Pos               ;/*!< 0x02000000 */
FSMC_BTR1_DATLAT_2           EQU		0x4 << FSMC_BTR1_DATLAT_Pos               ;/*!< 0x04000000 */
FSMC_BTR1_DATLAT_3           EQU		0x8 << FSMC_BTR1_DATLAT_Pos               ;/*!< 0x08000000 */

FSMC_BTR1_ACCMOD_Pos         EQU		28                                     
FSMC_BTR1_ACCMOD_Msk         EQU		0x3 << FSMC_BTR1_ACCMOD_Pos               ;/*!< 0x30000000 */
FSMC_BTR1_ACCMOD             EQU		FSMC_BTR1_ACCMOD_Msk                      ;/*!<ACCMOD[1:0] bits EQU		Access mode    */
FSMC_BTR1_ACCMOD_0           EQU		0x1 << FSMC_BTR1_ACCMOD_Pos               ;/*!< 0x10000000 */
FSMC_BTR1_ACCMOD_1           EQU		0x2 << FSMC_BTR1_ACCMOD_Pos               ;/*!< 0x20000000 */

FSMC_BTR2			         EQU		0x0C
;/******************  Bit definition for FSMC_BTR2 register  *******************/
FSMC_BTR2_ADDSET_Pos         EQU		0                                      
FSMC_BTR2_ADDSET_Msk         EQU		0xF << FSMC_BTR2_ADDSET_Pos               ;/*!< 0x0000000F */
FSMC_BTR2_ADDSET             EQU		FSMC_BTR2_ADDSET_Msk                      ;/*!<ADDSET[3:0] bits EQU		Address setup phase duration    */
FSMC_BTR2_ADDSET_0           EQU		0x1 << FSMC_BTR2_ADDSET_Pos               ;/*!< 0x00000001 */
FSMC_BTR2_ADDSET_1           EQU		0x2 << FSMC_BTR2_ADDSET_Pos               ;/*!< 0x00000002 */
FSMC_BTR2_ADDSET_2           EQU		0x4 << FSMC_BTR2_ADDSET_Pos               ;/*!< 0x00000004 */
FSMC_BTR2_ADDSET_3           EQU		0x8 << FSMC_BTR2_ADDSET_Pos               ;/*!< 0x00000008 */

FSMC_BTR2_ADDHLD_Pos         EQU		4                                      
FSMC_BTR2_ADDHLD_Msk         EQU		0xF << FSMC_BTR2_ADDHLD_Pos               ;/*!< 0x000000F0 */
FSMC_BTR2_ADDHLD             EQU		FSMC_BTR2_ADDHLD_Msk                      ;/*!<ADDHLD[3:0] bits EQU		Address-hold phase duration    */
FSMC_BTR2_ADDHLD_0           EQU		0x1 << FSMC_BTR2_ADDHLD_Pos               ;/*!< 0x00000010 */
FSMC_BTR2_ADDHLD_1           EQU		0x2 << FSMC_BTR2_ADDHLD_Pos               ;/*!< 0x00000020 */
FSMC_BTR2_ADDHLD_2           EQU		0x4 << FSMC_BTR2_ADDHLD_Pos               ;/*!< 0x00000040 */
FSMC_BTR2_ADDHLD_3           EQU		0x8 << FSMC_BTR2_ADDHLD_Pos               ;/*!< 0x00000080 */

FSMC_BTR2_DATAST_Pos         EQU		8                                      
FSMC_BTR2_DATAST_Msk         EQU		0xFF << FSMC_BTR2_DATAST_Pos              ;/*!< 0x0000FF00 */
FSMC_BTR2_DATAST             EQU		FSMC_BTR2_DATAST_Msk                      ;/*!<DATAST [7:0] bits EQU		Data-phase duration    */
FSMC_BTR2_DATAST_0           EQU		0x01 << FSMC_BTR2_DATAST_Pos              ;/*!< 0x00000100 */
FSMC_BTR2_DATAST_1           EQU		0x02 << FSMC_BTR2_DATAST_Pos              ;/*!< 0x00000200 */
FSMC_BTR2_DATAST_2           EQU		0x04 << FSMC_BTR2_DATAST_Pos              ;/*!< 0x00000400 */
FSMC_BTR2_DATAST_3           EQU		0x08 << FSMC_BTR2_DATAST_Pos              ;/*!< 0x00000800 */
FSMC_BTR2_DATAST_4           EQU		0x10 << FSMC_BTR2_DATAST_Pos              ;/*!< 0x00001000 */
FSMC_BTR2_DATAST_5           EQU		0x20 << FSMC_BTR2_DATAST_Pos              ;/*!< 0x00002000 */
FSMC_BTR2_DATAST_6           EQU		0x40 << FSMC_BTR2_DATAST_Pos              ;/*!< 0x00004000 */
FSMC_BTR2_DATAST_7           EQU		0x80 << FSMC_BTR2_DATAST_Pos              ;/*!< 0x00008000 */

FSMC_BTR2_BUSTURN_Pos        EQU		16                                     
FSMC_BTR2_BUSTURN_Msk        EQU		0xF << FSMC_BTR2_BUSTURN_Pos              ;/*!< 0x000F0000 */
FSMC_BTR2_BUSTURN            EQU		FSMC_BTR2_BUSTURN_Msk                     ;/*!<BUSTURN[3:0] bits EQU		Bus turnaround phase duration    */
FSMC_BTR2_BUSTURN_0          EQU		0x1 << FSMC_BTR2_BUSTURN_Pos              ;/*!< 0x00010000 */
FSMC_BTR2_BUSTURN_1          EQU		0x2 << FSMC_BTR2_BUSTURN_Pos              ;/*!< 0x00020000 */
FSMC_BTR2_BUSTURN_2          EQU		0x4 << FSMC_BTR2_BUSTURN_Pos              ;/*!< 0x00040000 */
FSMC_BTR2_BUSTURN_3          EQU		0x8 << FSMC_BTR2_BUSTURN_Pos              ;/*!< 0x00080000 */

FSMC_BTR2_CLKDIV_Pos         EQU		20                                     
FSMC_BTR2_CLKDIV_Msk         EQU		0xF << FSMC_BTR2_CLKDIV_Pos               ;/*!< 0x00F00000 */
FSMC_BTR2_CLKDIV             EQU		FSMC_BTR2_CLKDIV_Msk                      ;/*!<CLKDIV[3:0] bits EQU		Clock divide ratio    */
FSMC_BTR2_CLKDIV_0           EQU		0x1 << FSMC_BTR2_CLKDIV_Pos               ;/*!< 0x00100000 */
FSMC_BTR2_CLKDIV_1           EQU		0x2 << FSMC_BTR2_CLKDIV_Pos               ;/*!< 0x00200000 */
FSMC_BTR2_CLKDIV_2           EQU		0x4 << FSMC_BTR2_CLKDIV_Pos               ;/*!< 0x00400000 */
FSMC_BTR2_CLKDIV_3           EQU		0x8 << FSMC_BTR2_CLKDIV_Pos               ;/*!< 0x00800000 */

FSMC_BTR2_DATLAT_Pos         EQU		24                                     
FSMC_BTR2_DATLAT_Msk         EQU		0xF << FSMC_BTR2_DATLAT_Pos               ;/*!< 0x0F000000 */
FSMC_BTR2_DATLAT             EQU		FSMC_BTR2_DATLAT_Msk                      ;/*!<DATLA[3:0] bits EQU		Data latency    */
FSMC_BTR2_DATLAT_0           EQU		0x1 << FSMC_BTR2_DATLAT_Pos               ;/*!< 0x01000000 */
FSMC_BTR2_DATLAT_1           EQU		0x2 << FSMC_BTR2_DATLAT_Pos               ;/*!< 0x02000000 */
FSMC_BTR2_DATLAT_2           EQU		0x4 << FSMC_BTR2_DATLAT_Pos               ;/*!< 0x04000000 */
FSMC_BTR2_DATLAT_3           EQU		0x8 << FSMC_BTR2_DATLAT_Pos               ;/*!< 0x08000000 */

FSMC_BTR2_ACCMOD_Pos         EQU		28                                     
FSMC_BTR2_ACCMOD_Msk         EQU		0x3 << FSMC_BTR2_ACCMOD_Pos               ;/*!< 0x30000000 */
FSMC_BTR2_ACCMOD             EQU		FSMC_BTR2_ACCMOD_Msk                      ;/*!<ACCMOD[1:0] bits EQU		Access mode    */
FSMC_BTR2_ACCMOD_0           EQU		0x1 << FSMC_BTR2_ACCMOD_Pos               ;/*!< 0x10000000 */
FSMC_BTR2_ACCMOD_1           EQU		0x2 << FSMC_BTR2_ACCMOD_Pos               ;/*!< 0x20000000 */

FSMC_BTR3			         EQU		0x14
;/*******************  Bit definition for FSMC_BTR3 register  *******************/
FSMC_BTR3_ADDSET_Pos         EQU		0                                      
FSMC_BTR3_ADDSET_Msk         EQU		0xF << FSMC_BTR3_ADDSET_Pos               ;/*!< 0x0000000F */
FSMC_BTR3_ADDSET             EQU		FSMC_BTR3_ADDSET_Msk                      ;/*!<ADDSET[3:0] bits EQU		Address setup phase duration    */
FSMC_BTR3_ADDSET_0           EQU		0x1 << FSMC_BTR3_ADDSET_Pos               ;/*!< 0x00000001 */
FSMC_BTR3_ADDSET_1           EQU		0x2 << FSMC_BTR3_ADDSET_Pos               ;/*!< 0x00000002 */
FSMC_BTR3_ADDSET_2           EQU		0x4 << FSMC_BTR3_ADDSET_Pos               ;/*!< 0x00000004 */
FSMC_BTR3_ADDSET_3           EQU		0x8 << FSMC_BTR3_ADDSET_Pos               ;/*!< 0x00000008 */

FSMC_BTR3_ADDHLD_Pos         EQU		4                                      
FSMC_BTR3_ADDHLD_Msk         EQU		0xF << FSMC_BTR3_ADDHLD_Pos               ;/*!< 0x000000F0 */
FSMC_BTR3_ADDHLD             EQU		FSMC_BTR3_ADDHLD_Msk                      ;/*!<ADDHLD[3:0] bits EQU		Address-hold phase duration    */
FSMC_BTR3_ADDHLD_0           EQU		0x1 << FSMC_BTR3_ADDHLD_Pos               ;/*!< 0x00000010 */
FSMC_BTR3_ADDHLD_1           EQU		0x2 << FSMC_BTR3_ADDHLD_Pos               ;/*!< 0x00000020 */
FSMC_BTR3_ADDHLD_2           EQU		0x4 << FSMC_BTR3_ADDHLD_Pos               ;/*!< 0x00000040 */
FSMC_BTR3_ADDHLD_3           EQU		0x8 << FSMC_BTR3_ADDHLD_Pos               ;/*!< 0x00000080 */

FSMC_BTR3_DATAST_Pos         EQU		8                                      
FSMC_BTR3_DATAST_Msk         EQU		0xFF << FSMC_BTR3_DATAST_Pos              ;/*!< 0x0000FF00 */
FSMC_BTR3_DATAST             EQU		FSMC_BTR3_DATAST_Msk                      ;/*!<DATAST [7:0] bits EQU		Data-phase duration    */
FSMC_BTR3_DATAST_0           EQU		0x01 << FSMC_BTR3_DATAST_Pos              ;/*!< 0x00000100 */
FSMC_BTR3_DATAST_1           EQU		0x02 << FSMC_BTR3_DATAST_Pos              ;/*!< 0x00000200 */
FSMC_BTR3_DATAST_2           EQU		0x04 << FSMC_BTR3_DATAST_Pos              ;/*!< 0x00000400 */
FSMC_BTR3_DATAST_3           EQU		0x08 << FSMC_BTR3_DATAST_Pos              ;/*!< 0x00000800 */
FSMC_BTR3_DATAST_4           EQU		0x10 << FSMC_BTR3_DATAST_Pos              ;/*!< 0x00001000 */
FSMC_BTR3_DATAST_5           EQU		0x20 << FSMC_BTR3_DATAST_Pos              ;/*!< 0x00002000 */
FSMC_BTR3_DATAST_6           EQU		0x40 << FSMC_BTR3_DATAST_Pos              ;/*!< 0x00004000 */
FSMC_BTR3_DATAST_7           EQU		0x80 << FSMC_BTR3_DATAST_Pos              ;/*!< 0x00008000 */

FSMC_BTR3_BUSTURN_Pos        EQU		16                                     
FSMC_BTR3_BUSTURN_Msk        EQU		0xF << FSMC_BTR3_BUSTURN_Pos              ;/*!< 0x000F0000 */
FSMC_BTR3_BUSTURN            EQU		FSMC_BTR3_BUSTURN_Msk                     ;/*!<BUSTURN[3:0] bits EQU		Bus turnaround phase duration    */
FSMC_BTR3_BUSTURN_0          EQU		0x1 << FSMC_BTR3_BUSTURN_Pos              ;/*!< 0x00010000 */
FSMC_BTR3_BUSTURN_1          EQU		0x2 << FSMC_BTR3_BUSTURN_Pos              ;/*!< 0x00020000 */
FSMC_BTR3_BUSTURN_2          EQU		0x4 << FSMC_BTR3_BUSTURN_Pos              ;/*!< 0x00040000 */
FSMC_BTR3_BUSTURN_3          EQU		0x8 << FSMC_BTR3_BUSTURN_Pos              ;/*!< 0x00080000 */

FSMC_BTR3_CLKDIV_Pos         EQU		20                                     
FSMC_BTR3_CLKDIV_Msk         EQU		0xF << FSMC_BTR3_CLKDIV_Pos               ;/*!< 0x00F00000 */
FSMC_BTR3_CLKDIV             EQU		FSMC_BTR3_CLKDIV_Msk                      ;/*!<CLKDIV[3:0] bits EQU		Clock divide ratio    */
FSMC_BTR3_CLKDIV_0           EQU		0x1 << FSMC_BTR3_CLKDIV_Pos               ;/*!< 0x00100000 */
FSMC_BTR3_CLKDIV_1           EQU		0x2 << FSMC_BTR3_CLKDIV_Pos               ;/*!< 0x00200000 */
FSMC_BTR3_CLKDIV_2           EQU		0x4 << FSMC_BTR3_CLKDIV_Pos               ;/*!< 0x00400000 */
FSMC_BTR3_CLKDIV_3           EQU		0x8 << FSMC_BTR3_CLKDIV_Pos               ;/*!< 0x00800000 */

FSMC_BTR3_DATLAT_Pos         EQU		24                                     
FSMC_BTR3_DATLAT_Msk         EQU		0xF << FSMC_BTR3_DATLAT_Pos               ;/*!< 0x0F000000 */
FSMC_BTR3_DATLAT             EQU		FSMC_BTR3_DATLAT_Msk                      ;/*!<DATLA[3:0] bits EQU		Data latency    */
FSMC_BTR3_DATLAT_0           EQU		0x1 << FSMC_BTR3_DATLAT_Pos               ;/*!< 0x01000000 */
FSMC_BTR3_DATLAT_1           EQU		0x2 << FSMC_BTR3_DATLAT_Pos               ;/*!< 0x02000000 */
FSMC_BTR3_DATLAT_2           EQU		0x4 << FSMC_BTR3_DATLAT_Pos               ;/*!< 0x04000000 */
FSMC_BTR3_DATLAT_3           EQU		0x8 << FSMC_BTR3_DATLAT_Pos               ;/*!< 0x08000000 */

FSMC_BTR3_ACCMOD_Pos         EQU		28                                     
FSMC_BTR3_ACCMOD_Msk         EQU		0x3 << FSMC_BTR3_ACCMOD_Pos               ;/*!< 0x30000000 */
FSMC_BTR3_ACCMOD             EQU		FSMC_BTR3_ACCMOD_Msk                      ;/*!<ACCMOD[1:0] bits EQU		Access mode    */
FSMC_BTR3_ACCMOD_0           EQU		0x1 << FSMC_BTR3_ACCMOD_Pos               ;/*!< 0x10000000 */
FSMC_BTR3_ACCMOD_1           EQU		0x2 << FSMC_BTR3_ACCMOD_Pos               ;/*!< 0x20000000 */

FSMC_BTR4			         EQU		0x1C
;/******************  Bit definition for FSMC_BTR4 register  *******************/
FSMC_BTR4_ADDSET_Pos         EQU		0                                      
FSMC_BTR4_ADDSET_Msk         EQU		0xF << FSMC_BTR4_ADDSET_Pos               ;/*!< 0x0000000F */
FSMC_BTR4_ADDSET             EQU		FSMC_BTR4_ADDSET_Msk                      ;/*!<ADDSET[3:0] bits EQU		Address setup phase duration    */
FSMC_BTR4_ADDSET_0           EQU		0x1 << FSMC_BTR4_ADDSET_Pos               ;/*!< 0x00000001 */
FSMC_BTR4_ADDSET_1           EQU		0x2 << FSMC_BTR4_ADDSET_Pos               ;/*!< 0x00000002 */
FSMC_BTR4_ADDSET_2           EQU		0x4 << FSMC_BTR4_ADDSET_Pos               ;/*!< 0x00000004 */
FSMC_BTR4_ADDSET_3           EQU		0x8 << FSMC_BTR4_ADDSET_Pos               ;/*!< 0x00000008 */

FSMC_BTR4_ADDHLD_Pos         EQU		4                                      
FSMC_BTR4_ADDHLD_Msk         EQU		0xF << FSMC_BTR4_ADDHLD_Pos               ;/*!< 0x000000F0 */
FSMC_BTR4_ADDHLD             EQU		FSMC_BTR4_ADDHLD_Msk                      ;/*!<ADDHLD[3:0] bits EQU		Address-hold phase duration    */
FSMC_BTR4_ADDHLD_0           EQU		0x1 << FSMC_BTR4_ADDHLD_Pos               ;/*!< 0x00000010 */
FSMC_BTR4_ADDHLD_1           EQU		0x2 << FSMC_BTR4_ADDHLD_Pos               ;/*!< 0x00000020 */
FSMC_BTR4_ADDHLD_2           EQU		0x4 << FSMC_BTR4_ADDHLD_Pos               ;/*!< 0x00000040 */
FSMC_BTR4_ADDHLD_3           EQU		0x8 << FSMC_BTR4_ADDHLD_Pos               ;/*!< 0x00000080 */

FSMC_BTR4_DATAST_Pos         EQU		8                                      
FSMC_BTR4_DATAST_Msk         EQU		0xFF << FSMC_BTR4_DATAST_Pos              ;/*!< 0x0000FF00 */
FSMC_BTR4_DATAST             EQU		FSMC_BTR4_DATAST_Msk                      ;/*!<DATAST [7:0] bits EQU		Data-phase duration    */
FSMC_BTR4_DATAST_0           EQU		0x01 << FSMC_BTR4_DATAST_Pos              ;/*!< 0x00000100 */
FSMC_BTR4_DATAST_1           EQU		0x02 << FSMC_BTR4_DATAST_Pos              ;/*!< 0x00000200 */
FSMC_BTR4_DATAST_2           EQU		0x04 << FSMC_BTR4_DATAST_Pos              ;/*!< 0x00000400 */
FSMC_BTR4_DATAST_3           EQU		0x08 << FSMC_BTR4_DATAST_Pos              ;/*!< 0x00000800 */
FSMC_BTR4_DATAST_4           EQU		0x10 << FSMC_BTR4_DATAST_Pos              ;/*!< 0x00001000 */
FSMC_BTR4_DATAST_5           EQU		0x20 << FSMC_BTR4_DATAST_Pos              ;/*!< 0x00002000 */
FSMC_BTR4_DATAST_6           EQU		0x40 << FSMC_BTR4_DATAST_Pos              ;/*!< 0x00004000 */
FSMC_BTR4_DATAST_7           EQU		0x80 << FSMC_BTR4_DATAST_Pos              ;/*!< 0x00008000 */

FSMC_BTR4_BUSTURN_Pos        EQU		16                                     
FSMC_BTR4_BUSTURN_Msk        EQU		0xF << FSMC_BTR4_BUSTURN_Pos              ;/*!< 0x000F0000 */
FSMC_BTR4_BUSTURN            EQU		FSMC_BTR4_BUSTURN_Msk                     ;/*!<BUSTURN[3:0] bits EQU		Bus turnaround phase duration    */
FSMC_BTR4_BUSTURN_0          EQU		0x1 << FSMC_BTR4_BUSTURN_Pos              ;/*!< 0x00010000 */
FSMC_BTR4_BUSTURN_1          EQU		0x2 << FSMC_BTR4_BUSTURN_Pos              ;/*!< 0x00020000 */
FSMC_BTR4_BUSTURN_2          EQU		0x4 << FSMC_BTR4_BUSTURN_Pos              ;/*!< 0x00040000 */
FSMC_BTR4_BUSTURN_3          EQU		0x8 << FSMC_BTR4_BUSTURN_Pos              ;/*!< 0x00080000 */

FSMC_BTR4_CLKDIV_Pos         EQU		20                                     
FSMC_BTR4_CLKDIV_Msk         EQU		0xF << FSMC_BTR4_CLKDIV_Pos               ;/*!< 0x00F00000 */
FSMC_BTR4_CLKDIV             EQU		FSMC_BTR4_CLKDIV_Msk                      ;/*!<CLKDIV[3:0] bits EQU		Clock divide ratio    */
FSMC_BTR4_CLKDIV_0           EQU		0x1 << FSMC_BTR4_CLKDIV_Pos               ;/*!< 0x00100000 */
FSMC_BTR4_CLKDIV_1           EQU		0x2 << FSMC_BTR4_CLKDIV_Pos               ;/*!< 0x00200000 */
FSMC_BTR4_CLKDIV_2           EQU		0x4 << FSMC_BTR4_CLKDIV_Pos               ;/*!< 0x00400000 */
FSMC_BTR4_CLKDIV_3           EQU		0x8 << FSMC_BTR4_CLKDIV_Pos               ;/*!< 0x00800000 */

FSMC_BTR4_DATLAT_Pos         EQU		24                                     
FSMC_BTR4_DATLAT_Msk         EQU		0xF << FSMC_BTR4_DATLAT_Pos               ;/*!< 0x0F000000 */
FSMC_BTR4_DATLAT             EQU		FSMC_BTR4_DATLAT_Msk                      ;/*!<DATLA[3:0] bits EQU		Data latency    */
FSMC_BTR4_DATLAT_0           EQU		0x1 << FSMC_BTR4_DATLAT_Pos               ;/*!< 0x01000000 */
FSMC_BTR4_DATLAT_1           EQU		0x2 << FSMC_BTR4_DATLAT_Pos               ;/*!< 0x02000000 */
FSMC_BTR4_DATLAT_2           EQU		0x4 << FSMC_BTR4_DATLAT_Pos               ;/*!< 0x04000000 */
FSMC_BTR4_DATLAT_3           EQU		0x8 << FSMC_BTR4_DATLAT_Pos               ;/*!< 0x08000000 */

FSMC_BTR4_ACCMOD_Pos         EQU		28                                     
FSMC_BTR4_ACCMOD_Msk         EQU		0x3 << FSMC_BTR4_ACCMOD_Pos               ;/*!< 0x30000000 */
FSMC_BTR4_ACCMOD             EQU		FSMC_BTR4_ACCMOD_Msk                      ;/*!<ACCMOD[1:0] bits EQU		Access mode    */
FSMC_BTR4_ACCMOD_0           EQU		0x1 << FSMC_BTR4_ACCMOD_Pos               ;/*!< 0x10000000 */
FSMC_BTR4_ACCMOD_1           EQU		0x2 << FSMC_BTR4_ACCMOD_Pos               ;/*!< 0x20000000 */

FSMC_BWTR1			         EQU		0x104
;/******************  Bit definition for FSMC_BWTR1 register  ******************/
FSMC_BWTR1_ADDSET_Pos        EQU		0                                      
FSMC_BWTR1_ADDSET_Msk        EQU		0xF << FSMC_BWTR1_ADDSET_Pos              ;/*!< 0x0000000F */
FSMC_BWTR1_ADDSET            EQU		FSMC_BWTR1_ADDSET_Msk                     ;/*!<ADDSET[3:0] bits EQU		Address setup phase duration    */
FSMC_BWTR1_ADDSET_0          EQU		0x1 << FSMC_BWTR1_ADDSET_Pos              ;/*!< 0x00000001 */
FSMC_BWTR1_ADDSET_1          EQU		0x2 << FSMC_BWTR1_ADDSET_Pos              ;/*!< 0x00000002 */
FSMC_BWTR1_ADDSET_2          EQU		0x4 << FSMC_BWTR1_ADDSET_Pos              ;/*!< 0x00000004 */
FSMC_BWTR1_ADDSET_3          EQU		0x8 << FSMC_BWTR1_ADDSET_Pos              ;/*!< 0x00000008 */

FSMC_BWTR1_ADDHLD_Pos        EQU		4                                      
FSMC_BWTR1_ADDHLD_Msk        EQU		0xF << FSMC_BWTR1_ADDHLD_Pos              ;/*!< 0x000000F0 */
FSMC_BWTR1_ADDHLD            EQU		FSMC_BWTR1_ADDHLD_Msk                     ;/*!<ADDHLD[3:0] bits EQU		Address-hold phase duration    */
FSMC_BWTR1_ADDHLD_0          EQU		0x1 << FSMC_BWTR1_ADDHLD_Pos              ;/*!< 0x00000010 */
FSMC_BWTR1_ADDHLD_1          EQU		0x2 << FSMC_BWTR1_ADDHLD_Pos              ;/*!< 0x00000020 */
FSMC_BWTR1_ADDHLD_2          EQU		0x4 << FSMC_BWTR1_ADDHLD_Pos              ;/*!< 0x00000040 */
FSMC_BWTR1_ADDHLD_3          EQU		0x8 << FSMC_BWTR1_ADDHLD_Pos              ;/*!< 0x00000080 */

FSMC_BWTR1_DATAST_Pos        EQU		8                                      
FSMC_BWTR1_DATAST_Msk        EQU		0xFF << FSMC_BWTR1_DATAST_Pos             ;/*!< 0x0000FF00 */
FSMC_BWTR1_DATAST            EQU		FSMC_BWTR1_DATAST_Msk                     ;/*!<DATAST [7:0] bits EQU		Data-phase duration    */
FSMC_BWTR1_DATAST_0          EQU		0x01 << FSMC_BWTR1_DATAST_Pos             ;/*!< 0x00000100 */
FSMC_BWTR1_DATAST_1          EQU		0x02 << FSMC_BWTR1_DATAST_Pos             ;/*!< 0x00000200 */
FSMC_BWTR1_DATAST_2          EQU		0x04 << FSMC_BWTR1_DATAST_Pos             ;/*!< 0x00000400 */
FSMC_BWTR1_DATAST_3          EQU		0x08 << FSMC_BWTR1_DATAST_Pos             ;/*!< 0x00000800 */
FSMC_BWTR1_DATAST_4          EQU		0x10 << FSMC_BWTR1_DATAST_Pos             ;/*!< 0x00001000 */
FSMC_BWTR1_DATAST_5          EQU		0x20 << FSMC_BWTR1_DATAST_Pos             ;/*!< 0x00002000 */
FSMC_BWTR1_DATAST_6          EQU		0x40 << FSMC_BWTR1_DATAST_Pos             ;/*!< 0x00004000 */
FSMC_BWTR1_DATAST_7          EQU		0x80 << FSMC_BWTR1_DATAST_Pos             ;/*!< 0x00008000 */

FSMC_BWTR1_BUSTURN_Pos       EQU		16                                     
FSMC_BWTR1_BUSTURN_Msk       EQU		0xF << FSMC_BWTR1_BUSTURN_Pos             ;/*!< 0x000F0000 */
FSMC_BWTR1_BUSTURN           EQU		FSMC_BWTR1_BUSTURN_Msk                    ;/*!<BUSTURN[3:0] bits EQU		Bus turnaround duration    */
FSMC_BWTR1_BUSTURN_0         EQU		0x1 << FSMC_BWTR1_BUSTURN_Pos             ;/*!< 0x00010000 */
FSMC_BWTR1_BUSTURN_1         EQU		0x2 << FSMC_BWTR1_BUSTURN_Pos             ;/*!< 0x00020000 */
FSMC_BWTR1_BUSTURN_2         EQU		0x4 << FSMC_BWTR1_BUSTURN_Pos             ;/*!< 0x00040000 */
FSMC_BWTR1_BUSTURN_3         EQU		0x8 << FSMC_BWTR1_BUSTURN_Pos             ;/*!< 0x00080000 */

FSMC_BWTR1_ACCMOD_Pos        EQU		28                                     
FSMC_BWTR1_ACCMOD_Msk        EQU		0x3 << FSMC_BWTR1_ACCMOD_Pos              ;/*!< 0x30000000 */
FSMC_BWTR1_ACCMOD            EQU		FSMC_BWTR1_ACCMOD_Msk                     ;/*!<ACCMOD[1:0] bits EQU		Access mode    */
FSMC_BWTR1_ACCMOD_0          EQU		0x1 << FSMC_BWTR1_ACCMOD_Pos              ;/*!< 0x10000000 */
FSMC_BWTR1_ACCMOD_1          EQU		0x2 << FSMC_BWTR1_ACCMOD_Pos              ;/*!< 0x20000000 */

FSMC_BWTR2			         EQU		0x10C
;/******************  Bit definition for FSMC_BWTR2 register  ******************/
FSMC_BWTR2_ADDSET_Pos        EQU		0                                      
FSMC_BWTR2_ADDSET_Msk        EQU		0xF << FSMC_BWTR2_ADDSET_Pos              ;/*!< 0x0000000F */
FSMC_BWTR2_ADDSET            EQU		FSMC_BWTR2_ADDSET_Msk                     ;/*!<ADDSET[3:0] bits EQU		Address setup phase duration    */
FSMC_BWTR2_ADDSET_0          EQU		0x1 << FSMC_BWTR2_ADDSET_Pos              ;/*!< 0x00000001 */
FSMC_BWTR2_ADDSET_1          EQU		0x2 << FSMC_BWTR2_ADDSET_Pos              ;/*!< 0x00000002 */
FSMC_BWTR2_ADDSET_2          EQU		0x4 << FSMC_BWTR2_ADDSET_Pos              ;/*!< 0x00000004 */
FSMC_BWTR2_ADDSET_3          EQU		0x8 << FSMC_BWTR2_ADDSET_Pos              ;/*!< 0x00000008 */

FSMC_BWTR2_ADDHLD_Pos        EQU		4                                      
FSMC_BWTR2_ADDHLD_Msk        EQU		0xF << FSMC_BWTR2_ADDHLD_Pos              ;/*!< 0x000000F0 */
FSMC_BWTR2_ADDHLD            EQU		FSMC_BWTR2_ADDHLD_Msk                     ;/*!<ADDHLD[3:0] bits EQU		Address-hold phase duration    */
FSMC_BWTR2_ADDHLD_0          EQU		0x1 << FSMC_BWTR2_ADDHLD_Pos              ;/*!< 0x00000010 */
FSMC_BWTR2_ADDHLD_1          EQU		0x2 << FSMC_BWTR2_ADDHLD_Pos              ;/*!< 0x00000020 */
FSMC_BWTR2_ADDHLD_2          EQU		0x4 << FSMC_BWTR2_ADDHLD_Pos              ;/*!< 0x00000040 */
FSMC_BWTR2_ADDHLD_3          EQU		0x8 << FSMC_BWTR2_ADDHLD_Pos              ;/*!< 0x00000080 */

FSMC_BWTR2_DATAST_Pos        EQU		8                                      
FSMC_BWTR2_DATAST_Msk        EQU		0xFF << FSMC_BWTR2_DATAST_Pos             ;/*!< 0x0000FF00 */
FSMC_BWTR2_DATAST            EQU		FSMC_BWTR2_DATAST_Msk                     ;/*!<DATAST [7:0] bits EQU		Data-phase duration    */
FSMC_BWTR2_DATAST_0          EQU		0x01 << FSMC_BWTR2_DATAST_Pos             ;/*!< 0x00000100 */
FSMC_BWTR2_DATAST_1          EQU		0x02 << FSMC_BWTR2_DATAST_Pos             ;/*!< 0x00000200 */
FSMC_BWTR2_DATAST_2          EQU		0x04 << FSMC_BWTR2_DATAST_Pos             ;/*!< 0x00000400 */
FSMC_BWTR2_DATAST_3          EQU		0x08 << FSMC_BWTR2_DATAST_Pos             ;/*!< 0x00000800 */
FSMC_BWTR2_DATAST_4          EQU		0x10 << FSMC_BWTR2_DATAST_Pos             ;/*!< 0x00001000 */
FSMC_BWTR2_DATAST_5          EQU		0x20 << FSMC_BWTR2_DATAST_Pos             ;/*!< 0x00002000 */
FSMC_BWTR2_DATAST_6          EQU		0x40 << FSMC_BWTR2_DATAST_Pos             ;/*!< 0x00004000 */
FSMC_BWTR2_DATAST_7          EQU		0x80 << FSMC_BWTR2_DATAST_Pos             ;/*!< 0x00008000 */

FSMC_BWTR2_BUSTURN_Pos       EQU		16                                     
FSMC_BWTR2_BUSTURN_Msk       EQU		0xF << FSMC_BWTR2_BUSTURN_Pos             ;/*!< 0x000F0000 */
FSMC_BWTR2_BUSTURN           EQU		FSMC_BWTR2_BUSTURN_Msk                    ;/*!<BUSTURN[3:0] bits EQU		Bus turnaround duration    */
FSMC_BWTR2_BUSTURN_0         EQU		0x1 << FSMC_BWTR2_BUSTURN_Pos             ;/*!< 0x00010000 */
FSMC_BWTR2_BUSTURN_1         EQU		0x2 << FSMC_BWTR2_BUSTURN_Pos             ;/*!< 0x00020000 */
FSMC_BWTR2_BUSTURN_2         EQU		0x4 << FSMC_BWTR2_BUSTURN_Pos             ;/*!< 0x00040000 */
FSMC_BWTR2_BUSTURN_3         EQU		0x8 << FSMC_BWTR2_BUSTURN_Pos             ;/*!< 0x00080000 */

FSMC_BWTR2_ACCMOD_Pos        EQU		28                                     
FSMC_BWTR2_ACCMOD_Msk        EQU		0x3 << FSMC_BWTR2_ACCMOD_Pos              ;/*!< 0x30000000 */
FSMC_BWTR2_ACCMOD            EQU		FSMC_BWTR2_ACCMOD_Msk                     ;/*!<ACCMOD[1:0] bits EQU		Access mode    */
FSMC_BWTR2_ACCMOD_0          EQU		0x1 << FSMC_BWTR2_ACCMOD_Pos              ;/*!< 0x10000000 */
FSMC_BWTR2_ACCMOD_1          EQU		0x2 << FSMC_BWTR2_ACCMOD_Pos              ;/*!< 0x20000000 */

FSMC_BWTR3			         EQU		0x114
;/******************  Bit definition for FSMC_BWTR3 register  ******************/
FSMC_BWTR3_ADDSET_Pos        EQU		0                                      
FSMC_BWTR3_ADDSET_Msk        EQU		0xF << FSMC_BWTR3_ADDSET_Pos              ;/*!< 0x0000000F */
FSMC_BWTR3_ADDSET            EQU		FSMC_BWTR3_ADDSET_Msk                     ;/*!<ADDSET[3:0] bits EQU		Address setup phase duration    */
FSMC_BWTR3_ADDSET_0          EQU		0x1 << FSMC_BWTR3_ADDSET_Pos              ;/*!< 0x00000001 */
FSMC_BWTR3_ADDSET_1          EQU		0x2 << FSMC_BWTR3_ADDSET_Pos              ;/*!< 0x00000002 */
FSMC_BWTR3_ADDSET_2          EQU		0x4 << FSMC_BWTR3_ADDSET_Pos              ;/*!< 0x00000004 */
FSMC_BWTR3_ADDSET_3          EQU		0x8 << FSMC_BWTR3_ADDSET_Pos              ;/*!< 0x00000008 */

FSMC_BWTR3_ADDHLD_Pos        EQU		4                                      
FSMC_BWTR3_ADDHLD_Msk        EQU		0xF << FSMC_BWTR3_ADDHLD_Pos              ;/*!< 0x000000F0 */
FSMC_BWTR3_ADDHLD            EQU		FSMC_BWTR3_ADDHLD_Msk                     ;/*!<ADDHLD[3:0] bits EQU		Address-hold phase duration    */
FSMC_BWTR3_ADDHLD_0          EQU		0x1 << FSMC_BWTR3_ADDHLD_Pos              ;/*!< 0x00000010 */
FSMC_BWTR3_ADDHLD_1          EQU		0x2 << FSMC_BWTR3_ADDHLD_Pos              ;/*!< 0x00000020 */
FSMC_BWTR3_ADDHLD_2          EQU		0x4 << FSMC_BWTR3_ADDHLD_Pos              ;/*!< 0x00000040 */
FSMC_BWTR3_ADDHLD_3          EQU		0x8 << FSMC_BWTR3_ADDHLD_Pos              ;/*!< 0x00000080 */

FSMC_BWTR3_DATAST_Pos        EQU		8                                      
FSMC_BWTR3_DATAST_Msk        EQU		0xFF << FSMC_BWTR3_DATAST_Pos             ;/*!< 0x0000FF00 */
FSMC_BWTR3_DATAST            EQU		FSMC_BWTR3_DATAST_Msk                     ;/*!<DATAST [7:0] bits EQU		Data-phase duration    */
FSMC_BWTR3_DATAST_0          EQU		0x01 << FSMC_BWTR3_DATAST_Pos             ;/*!< 0x00000100 */
FSMC_BWTR3_DATAST_1          EQU		0x02 << FSMC_BWTR3_DATAST_Pos             ;/*!< 0x00000200 */
FSMC_BWTR3_DATAST_2          EQU		0x04 << FSMC_BWTR3_DATAST_Pos             ;/*!< 0x00000400 */
FSMC_BWTR3_DATAST_3          EQU		0x08 << FSMC_BWTR3_DATAST_Pos             ;/*!< 0x00000800 */
FSMC_BWTR3_DATAST_4          EQU		0x10 << FSMC_BWTR3_DATAST_Pos             ;/*!< 0x00001000 */
FSMC_BWTR3_DATAST_5          EQU		0x20 << FSMC_BWTR3_DATAST_Pos             ;/*!< 0x00002000 */
FSMC_BWTR3_DATAST_6          EQU		0x40 << FSMC_BWTR3_DATAST_Pos             ;/*!< 0x00004000 */
FSMC_BWTR3_DATAST_7          EQU		0x80 << FSMC_BWTR3_DATAST_Pos             ;/*!< 0x00008000 */

FSMC_BWTR3_BUSTURN_Pos       EQU		16                                     
FSMC_BWTR3_BUSTURN_Msk       EQU		0xF << FSMC_BWTR3_BUSTURN_Pos             ;/*!< 0x000F0000 */
FSMC_BWTR3_BUSTURN           EQU		FSMC_BWTR3_BUSTURN_Msk                    ;/*!<BUSTURN[3:0] bits EQU		Bus turnaround duration    */
FSMC_BWTR3_BUSTURN_0         EQU		0x1 << FSMC_BWTR3_BUSTURN_Pos             ;/*!< 0x00010000 */
FSMC_BWTR3_BUSTURN_1         EQU		0x2 << FSMC_BWTR3_BUSTURN_Pos             ;/*!< 0x00020000 */
FSMC_BWTR3_BUSTURN_2         EQU		0x4 << FSMC_BWTR3_BUSTURN_Pos             ;/*!< 0x00040000 */
FSMC_BWTR3_BUSTURN_3         EQU		0x8 << FSMC_BWTR3_BUSTURN_Pos             ;/*!< 0x00080000 */

FSMC_BWTR3_ACCMOD_Pos        EQU		28                                     
FSMC_BWTR3_ACCMOD_Msk        EQU		0x3 << FSMC_BWTR3_ACCMOD_Pos              ;/*!< 0x30000000 */
FSMC_BWTR3_ACCMOD            EQU		FSMC_BWTR3_ACCMOD_Msk                     ;/*!<ACCMOD[1:0] bits EQU		Access mode    */
FSMC_BWTR3_ACCMOD_0          EQU		0x1 << FSMC_BWTR3_ACCMOD_Pos              ;/*!< 0x10000000 */
FSMC_BWTR3_ACCMOD_1          EQU		0x2 << FSMC_BWTR3_ACCMOD_Pos              ;/*!< 0x20000000 */

FSMC_BWTR4			         EQU		0x11C
;/******************  Bit definition for FSMC_BWTR4 register  ******************/
FSMC_BWTR4_ADDSET_Pos        EQU		0                                      
FSMC_BWTR4_ADDSET_Msk        EQU		0xF << FSMC_BWTR4_ADDSET_Pos              ;/*!< 0x0000000F */
FSMC_BWTR4_ADDSET            EQU		FSMC_BWTR4_ADDSET_Msk                     ;/*!<ADDSET[3:0] bits EQU		Address setup phase duration    */
FSMC_BWTR4_ADDSET_0          EQU		0x1 << FSMC_BWTR4_ADDSET_Pos              ;/*!< 0x00000001 */
FSMC_BWTR4_ADDSET_1          EQU		0x2 << FSMC_BWTR4_ADDSET_Pos              ;/*!< 0x00000002 */
FSMC_BWTR4_ADDSET_2          EQU		0x4 << FSMC_BWTR4_ADDSET_Pos              ;/*!< 0x00000004 */
FSMC_BWTR4_ADDSET_3          EQU		0x8 << FSMC_BWTR4_ADDSET_Pos              ;/*!< 0x00000008 */

FSMC_BWTR4_ADDHLD_Pos        EQU		4                                      
FSMC_BWTR4_ADDHLD_Msk        EQU		0xF << FSMC_BWTR4_ADDHLD_Pos              ;/*!< 0x000000F0 */
FSMC_BWTR4_ADDHLD            EQU		FSMC_BWTR4_ADDHLD_Msk                     ;/*!<ADDHLD[3:0] bits EQU		Address-hold phase duration    */
FSMC_BWTR4_ADDHLD_0          EQU		0x1 << FSMC_BWTR4_ADDHLD_Pos              ;/*!< 0x00000010 */
FSMC_BWTR4_ADDHLD_1          EQU		0x2 << FSMC_BWTR4_ADDHLD_Pos              ;/*!< 0x00000020 */
FSMC_BWTR4_ADDHLD_2          EQU		0x4 << FSMC_BWTR4_ADDHLD_Pos              ;/*!< 0x00000040 */
FSMC_BWTR4_ADDHLD_3          EQU		0x8 << FSMC_BWTR4_ADDHLD_Pos              ;/*!< 0x00000080 */

FSMC_BWTR4_DATAST_Pos        EQU		8                                      
FSMC_BWTR4_DATAST_Msk        EQU		0xFF << FSMC_BWTR4_DATAST_Pos             ;/*!< 0x0000FF00 */
FSMC_BWTR4_DATAST            EQU		FSMC_BWTR4_DATAST_Msk                     ;/*!<DATAST [3:0] bits EQU		Data-phase duration    */
FSMC_BWTR4_DATAST_0          EQU		0x00000100                                ;/*!<Bit 0 */
FSMC_BWTR4_DATAST_1          EQU		0x00000200                                ;/*!<Bit 1 */
FSMC_BWTR4_DATAST_2          EQU		0x00000400                                ;/*!<Bit 2 */
FSMC_BWTR4_DATAST_3          EQU		0x00000800                                ;/*!<Bit 3 */
FSMC_BWTR4_DATAST_4          EQU		0x00001000                                ;/*!<Bit 4 */
FSMC_BWTR4_DATAST_5          EQU		0x00002000                                ;/*!<Bit 5 */
FSMC_BWTR4_DATAST_6          EQU		0x00004000                                ;/*!<Bit 6 */
FSMC_BWTR4_DATAST_7          EQU		0x00008000                                ;/*!<Bit 7 */

FSMC_BWTR4_BUSTURN_Pos       EQU		16                                     
FSMC_BWTR4_BUSTURN_Msk       EQU		0xF << FSMC_BWTR4_BUSTURN_Pos             ;/*!< 0x000F0000 */
FSMC_BWTR4_BUSTURN           EQU		FSMC_BWTR4_BUSTURN_Msk                    ;/*!<BUSTURN[3:0] bits EQU		Bus turnaround duration    */
FSMC_BWTR4_BUSTURN_0         EQU		0x1 << FSMC_BWTR4_BUSTURN_Pos             ;/*!< 0x00010000 */
FSMC_BWTR4_BUSTURN_1         EQU		0x2 << FSMC_BWTR4_BUSTURN_Pos             ;/*!< 0x00020000 */
FSMC_BWTR4_BUSTURN_2         EQU		0x4 << FSMC_BWTR4_BUSTURN_Pos             ;/*!< 0x00040000 */
FSMC_BWTR4_BUSTURN_3         EQU		0x8 << FSMC_BWTR4_BUSTURN_Pos             ;/*!< 0x00080000 */

FSMC_BWTR4_ACCMOD_Pos        EQU		28                                     
FSMC_BWTR4_ACCMOD_Msk        EQU		0x3 << FSMC_BWTR4_ACCMOD_Pos              ;/*!< 0x30000000 */
FSMC_BWTR4_ACCMOD            EQU		FSMC_BWTR4_ACCMOD_Msk                     ;/*!<ACCMOD[1:0] bits EQU		Access mode    */
FSMC_BWTR4_ACCMOD_0          EQU		0x1 << FSMC_BWTR4_ACCMOD_Pos              ;/*!< 0x10000000 */
FSMC_BWTR4_ACCMOD_1          EQU		0x2 << FSMC_BWTR4_ACCMOD_Pos              ;/*!< 0x20000000 */

FSMC_PCR2			         EQU		0xA0000060
;/******************  Bit definition for FSMC_PCR2 register  *******************/
FSMC_PCR2_PWAITEN_Pos        EQU		1                                      
FSMC_PCR2_PWAITEN_Msk        EQU		0x1 << FSMC_PCR2_PWAITEN_Pos              ;/*!< 0x00000002 */
FSMC_PCR2_PWAITEN            EQU		FSMC_PCR2_PWAITEN_Msk                     ;/*!<Wait feature enable bit */
FSMC_PCR2_PBKEN_Pos          EQU		2                                      
FSMC_PCR2_PBKEN_Msk          EQU		0x1 << FSMC_PCR2_PBKEN_Pos                ;/*!< 0x00000004 */
FSMC_PCR2_PBKEN              EQU		FSMC_PCR2_PBKEN_Msk                       ;/*!<PC Card/NAND Flash memory bank enable bit */
FSMC_PCR2_PTYP_Pos           EQU		3                                      
FSMC_PCR2_PTYP_Msk           EQU		0x1 << FSMC_PCR2_PTYP_Pos                 ;/*!< 0x00000008 */
FSMC_PCR2_PTYP               EQU		FSMC_PCR2_PTYP_Msk                        ;/*!<Memory type */

FSMC_PCR2_PWID_Pos           EQU		4                                      
FSMC_PCR2_PWID_Msk           EQU		0x3 << FSMC_PCR2_PWID_Pos                 ;/*!< 0x00000030 */
FSMC_PCR2_PWID               EQU		FSMC_PCR2_PWID_Msk                        ;/*!<PWID[1:0] bits EQU		NAND Flash databus width    */
FSMC_PCR2_PWID_0             EQU		0x1 << FSMC_PCR2_PWID_Pos                 ;/*!< 0x00000010 */
FSMC_PCR2_PWID_1             EQU		0x2 << FSMC_PCR2_PWID_Pos                 ;/*!< 0x00000020 */

FSMC_PCR2_ECCEN_Pos          EQU		6                                      
FSMC_PCR2_ECCEN_Msk          EQU		0x1 << FSMC_PCR2_ECCEN_Pos                ;/*!< 0x00000040 */
FSMC_PCR2_ECCEN              EQU		FSMC_PCR2_ECCEN_Msk                       ;/*!<ECC computation logic enable bit */

FSMC_PCR2_TCLR_Pos           EQU		9                                      
FSMC_PCR2_TCLR_Msk           EQU		0xF << FSMC_PCR2_TCLR_Pos                 ;/*!< 0x00001E00 */
FSMC_PCR2_TCLR               EQU		FSMC_PCR2_TCLR_Msk                        ;/*!<TCLR[3:0] bits EQU		CLE to RE delay    */
FSMC_PCR2_TCLR_0             EQU		0x1 << FSMC_PCR2_TCLR_Pos                 ;/*!< 0x00000200 */
FSMC_PCR2_TCLR_1             EQU		0x2 << FSMC_PCR2_TCLR_Pos                 ;/*!< 0x00000400 */
FSMC_PCR2_TCLR_2             EQU		0x4 << FSMC_PCR2_TCLR_Pos                 ;/*!< 0x00000800 */
FSMC_PCR2_TCLR_3             EQU		0x8 << FSMC_PCR2_TCLR_Pos                 ;/*!< 0x00001000 */

FSMC_PCR2_TAR_Pos            EQU		13                                     
FSMC_PCR2_TAR_Msk            EQU		0xF << FSMC_PCR2_TAR_Pos                  ;/*!< 0x0001E000 */
FSMC_PCR2_TAR                EQU		FSMC_PCR2_TAR_Msk                         ;/*!<TAR[3:0] bits EQU		ALE to RE delay    */
FSMC_PCR2_TAR_0              EQU		0x1 << FSMC_PCR2_TAR_Pos                  ;/*!< 0x00002000 */
FSMC_PCR2_TAR_1              EQU		0x2 << FSMC_PCR2_TAR_Pos                  ;/*!< 0x00004000 */
FSMC_PCR2_TAR_2              EQU		0x4 << FSMC_PCR2_TAR_Pos                  ;/*!< 0x00008000 */
FSMC_PCR2_TAR_3              EQU		0x8 << FSMC_PCR2_TAR_Pos                  ;/*!< 0x00010000 */

FSMC_PCR2_ECCPS_Pos          EQU		17                                     
FSMC_PCR2_ECCPS_Msk          EQU		0x7 << FSMC_PCR2_ECCPS_Pos                ;/*!< 0x000E0000 */
FSMC_PCR2_ECCPS              EQU		FSMC_PCR2_ECCPS_Msk                       ;/*!<ECCPS[1:0] bits EQU		ECC page size    */
FSMC_PCR2_ECCPS_0            EQU		0x1 << FSMC_PCR2_ECCPS_Pos                ;/*!< 0x00020000 */
FSMC_PCR2_ECCPS_1            EQU		0x2 << FSMC_PCR2_ECCPS_Pos                ;/*!< 0x00040000 */
FSMC_PCR2_ECCPS_2            EQU		0x4 << FSMC_PCR2_ECCPS_Pos                ;/*!< 0x00080000 */

FSMC_PCR3			         EQU		0xA0000080
;/******************  Bit definition for FSMC_PCR3 register  *******************/
FSMC_PCR3_PWAITEN_Pos        EQU		1                                      
FSMC_PCR3_PWAITEN_Msk        EQU		0x1 << FSMC_PCR3_PWAITEN_Pos              ;/*!< 0x00000002 */
FSMC_PCR3_PWAITEN            EQU		FSMC_PCR3_PWAITEN_Msk                     ;/*!<Wait feature enable bit */
FSMC_PCR3_PBKEN_Pos          EQU		2                                      
FSMC_PCR3_PBKEN_Msk          EQU		0x1 << FSMC_PCR3_PBKEN_Pos                ;/*!< 0x00000004 */
FSMC_PCR3_PBKEN              EQU		FSMC_PCR3_PBKEN_Msk                       ;/*!<PC Card/NAND Flash memory bank enable bit */
FSMC_PCR3_PTYP_Pos           EQU		3                                      
FSMC_PCR3_PTYP_Msk           EQU		0x1 << FSMC_PCR3_PTYP_Pos                 ;/*!< 0x00000008 */
FSMC_PCR3_PTYP               EQU		FSMC_PCR3_PTYP_Msk                        ;/*!<Memory type */

FSMC_PCR3_PWID_Pos           EQU		4                                      
FSMC_PCR3_PWID_Msk           EQU		0x3 << FSMC_PCR3_PWID_Pos                 ;/*!< 0x00000030 */
FSMC_PCR3_PWID               EQU		FSMC_PCR3_PWID_Msk                        ;/*!<PWID[1:0] bits EQU		NAND Flash databus width    */
FSMC_PCR3_PWID_0             EQU		0x1 << FSMC_PCR3_PWID_Pos                 ;/*!< 0x00000010 */
FSMC_PCR3_PWID_1             EQU		0x2 << FSMC_PCR3_PWID_Pos                 ;/*!< 0x00000020 */

FSMC_PCR3_ECCEN_Pos          EQU		6                                      
FSMC_PCR3_ECCEN_Msk          EQU		0x1 << FSMC_PCR3_ECCEN_Pos                ;/*!< 0x00000040 */
FSMC_PCR3_ECCEN              EQU		FSMC_PCR3_ECCEN_Msk                       ;/*!<ECC computation logic enable bit */

FSMC_PCR3_TCLR_Pos           EQU		9                                      
FSMC_PCR3_TCLR_Msk           EQU		0xF << FSMC_PCR3_TCLR_Pos                 ;/*!< 0x00001E00 */
FSMC_PCR3_TCLR               EQU		FSMC_PCR3_TCLR_Msk                        ;/*!<TCLR[3:0] bits EQU		CLE to RE delay    */
FSMC_PCR3_TCLR_0             EQU		0x1 << FSMC_PCR3_TCLR_Pos                 ;/*!< 0x00000200 */
FSMC_PCR3_TCLR_1             EQU		0x2 << FSMC_PCR3_TCLR_Pos                 ;/*!< 0x00000400 */
FSMC_PCR3_TCLR_2             EQU		0x4 << FSMC_PCR3_TCLR_Pos                 ;/*!< 0x00000800 */
FSMC_PCR3_TCLR_3             EQU		0x8 << FSMC_PCR3_TCLR_Pos                 ;/*!< 0x00001000 */

FSMC_PCR3_TAR_Pos            EQU		13                                     
FSMC_PCR3_TAR_Msk            EQU		0xF << FSMC_PCR3_TAR_Pos                  ;/*!< 0x0001E000 */
FSMC_PCR3_TAR                EQU		FSMC_PCR3_TAR_Msk                         ;/*!<TAR[3:0] bits EQU		ALE to RE delay    */
FSMC_PCR3_TAR_0              EQU		0x1 << FSMC_PCR3_TAR_Pos                  ;/*!< 0x00002000 */
FSMC_PCR3_TAR_1              EQU		0x2 << FSMC_PCR3_TAR_Pos                  ;/*!< 0x00004000 */
FSMC_PCR3_TAR_2              EQU		0x4 << FSMC_PCR3_TAR_Pos                  ;/*!< 0x00008000 */
FSMC_PCR3_TAR_3              EQU		0x8 << FSMC_PCR3_TAR_Pos                  ;/*!< 0x00010000 */

FSMC_PCR3_ECCPS_Pos          EQU		17                                     
FSMC_PCR3_ECCPS_Msk          EQU		0x7 << FSMC_PCR3_ECCPS_Pos                ;/*!< 0x000E0000 */
FSMC_PCR3_ECCPS              EQU		FSMC_PCR3_ECCPS_Msk                       ;/*!<ECCPS[2:0] bits EQU		ECC page size    */
FSMC_PCR3_ECCPS_0            EQU		0x1 << FSMC_PCR3_ECCPS_Pos                ;/*!< 0x00020000 */
FSMC_PCR3_ECCPS_1            EQU		0x2 << FSMC_PCR3_ECCPS_Pos                ;/*!< 0x00040000 */
FSMC_PCR3_ECCPS_2            EQU		0x4 << FSMC_PCR3_ECCPS_Pos                ;/*!< 0x00080000 */

FSMC_PCR4				     EQU		0xA00000A0
;/******************  Bit definition for FSMC_PCR4 register  *******************/
FSMC_PCR4_PWAITEN_Pos        EQU		1                                      
FSMC_PCR4_PWAITEN_Msk        EQU		0x1 << FSMC_PCR4_PWAITEN_Pos              ;/*!< 0x00000002 */
FSMC_PCR4_PWAITEN            EQU		FSMC_PCR4_PWAITEN_Msk                     ;/*!<Wait feature enable bit */
FSMC_PCR4_PBKEN_Pos          EQU		2                                      
FSMC_PCR4_PBKEN_Msk          EQU		0x1 << FSMC_PCR4_PBKEN_Pos                ;/*!< 0x00000004 */
FSMC_PCR4_PBKEN              EQU		FSMC_PCR4_PBKEN_Msk                       ;/*!<PC Card/NAND Flash memory bank enable bit */
FSMC_PCR4_PTYP_Pos           EQU		3                                      
FSMC_PCR4_PTYP_Msk           EQU		0x1 << FSMC_PCR4_PTYP_Pos                 ;/*!< 0x00000008 */
FSMC_PCR4_PTYP               EQU		FSMC_PCR4_PTYP_Msk                        ;/*!<Memory type */

FSMC_PCR4_PWID_Pos           EQU		4                                      
FSMC_PCR4_PWID_Msk           EQU		0x3 << FSMC_PCR4_PWID_Pos                 ;/*!< 0x00000030 */
FSMC_PCR4_PWID               EQU		FSMC_PCR4_PWID_Msk                        ;/*!<PWID[1:0] bits EQU		NAND Flash databus width    */
FSMC_PCR4_PWID_0             EQU		0x1 << FSMC_PCR4_PWID_Pos                 ;/*!< 0x00000010 */
FSMC_PCR4_PWID_1             EQU		0x2 << FSMC_PCR4_PWID_Pos                 ;/*!< 0x00000020 */

FSMC_PCR4_ECCEN_Pos          EQU		6                                      
FSMC_PCR4_ECCEN_Msk          EQU		0x1 << FSMC_PCR4_ECCEN_Pos                ;/*!< 0x00000040 */
FSMC_PCR4_ECCEN              EQU		FSMC_PCR4_ECCEN_Msk                       ;/*!<ECC computation logic enable bit */

FSMC_PCR4_TCLR_Pos           EQU		9                                      
FSMC_PCR4_TCLR_Msk           EQU		0xF << FSMC_PCR4_TCLR_Pos                 ;/*!< 0x00001E00 */
FSMC_PCR4_TCLR               EQU		FSMC_PCR4_TCLR_Msk                        ;/*!<TCLR[3:0] bits EQU		CLE to RE delay    */
FSMC_PCR4_TCLR_0             EQU		0x1 << FSMC_PCR4_TCLR_Pos                 ;/*!< 0x00000200 */
FSMC_PCR4_TCLR_1             EQU		0x2 << FSMC_PCR4_TCLR_Pos                 ;/*!< 0x00000400 */
FSMC_PCR4_TCLR_2             EQU		0x4 << FSMC_PCR4_TCLR_Pos                 ;/*!< 0x00000800 */
FSMC_PCR4_TCLR_3             EQU		0x8 << FSMC_PCR4_TCLR_Pos                 ;/*!< 0x00001000 */

FSMC_PCR4_TAR_Pos            EQU		13                                     
FSMC_PCR4_TAR_Msk            EQU		0xF << FSMC_PCR4_TAR_Pos                  ;/*!< 0x0001E000 */
FSMC_PCR4_TAR                EQU		FSMC_PCR4_TAR_Msk                         ;/*!<TAR[3:0] bits EQU		ALE to RE delay    */
FSMC_PCR4_TAR_0              EQU		0x1 << FSMC_PCR4_TAR_Pos                  ;/*!< 0x00002000 */
FSMC_PCR4_TAR_1              EQU		0x2 << FSMC_PCR4_TAR_Pos                  ;/*!< 0x00004000 */
FSMC_PCR4_TAR_2              EQU		0x4 << FSMC_PCR4_TAR_Pos                  ;/*!< 0x00008000 */
FSMC_PCR4_TAR_3              EQU		0x8 << FSMC_PCR4_TAR_Pos                  ;/*!< 0x00010000 */

FSMC_PCR4_ECCPS_Pos          EQU		17                                     
FSMC_PCR4_ECCPS_Msk          EQU		0x7 << FSMC_PCR4_ECCPS_Pos                ;/*!< 0x000E0000 */
FSMC_PCR4_ECCPS              EQU		FSMC_PCR4_ECCPS_Msk                       ;/*!<ECCPS[2:0] bits EQU		ECC page size    */
FSMC_PCR4_ECCPS_0            EQU		0x1 << FSMC_PCR4_ECCPS_Pos                ;/*!< 0x00020000 */
FSMC_PCR4_ECCPS_1            EQU		0x2 << FSMC_PCR4_ECCPS_Pos                ;/*!< 0x00040000 */
FSMC_PCR4_ECCPS_2            EQU		0x4 << FSMC_PCR4_ECCPS_Pos                ;/*!< 0x00080000 */

FSMC_SR2			         EQU		0xA0000064
;/*******************  Bit definition for FSMC_SR2 register  *******************/
FSMC_SR2_IRS_Pos             EQU		0                                      
FSMC_SR2_IRS_Msk             EQU		0x1 << FSMC_SR2_IRS_Pos                   ;/*!< 0x00000001 */
FSMC_SR2_IRS                 EQU		FSMC_SR2_IRS_Msk                          ;/*!<Interrupt Rising Edge status                */
FSMC_SR2_ILS_Pos             EQU		1                                      
FSMC_SR2_ILS_Msk             EQU		0x1 << FSMC_SR2_ILS_Pos                   ;/*!< 0x00000002 */
FSMC_SR2_ILS                 EQU		FSMC_SR2_ILS_Msk                          ;/*!<Interrupt Level status                      */
FSMC_SR2_IFS_Pos             EQU		2                                      
FSMC_SR2_IFS_Msk             EQU		0x1 << FSMC_SR2_IFS_Pos                   ;/*!< 0x00000004 */
FSMC_SR2_IFS                 EQU		FSMC_SR2_IFS_Msk                          ;/*!<Interrupt Falling Edge status               */
FSMC_SR2_IREN_Pos            EQU		3                                      
FSMC_SR2_IREN_Msk            EQU		0x1 << FSMC_SR2_IREN_Pos                  ;/*!< 0x00000008 */
FSMC_SR2_IREN                EQU		FSMC_SR2_IREN_Msk                         ;/*!<Interrupt Rising Edge detection Enable bit  */
FSMC_SR2_ILEN_Pos            EQU		4                                      
FSMC_SR2_ILEN_Msk            EQU		0x1 << FSMC_SR2_ILEN_Pos                  ;/*!< 0x00000010 */
FSMC_SR2_ILEN                EQU		FSMC_SR2_ILEN_Msk                         ;/*!<Interrupt Level detection Enable bit        */
FSMC_SR2_IFEN_Pos            EQU		5                                      
FSMC_SR2_IFEN_Msk            EQU		0x1 << FSMC_SR2_IFEN_Pos                  ;/*!< 0x00000020 */
FSMC_SR2_IFEN                EQU		FSMC_SR2_IFEN_Msk                         ;/*!<Interrupt Falling Edge detection Enable bit */
FSMC_SR2_FEMPT_Pos           EQU		6                                      
FSMC_SR2_FEMPT_Msk           EQU		0x1 << FSMC_SR2_FEMPT_Pos                 ;/*!< 0x00000040 */
FSMC_SR2_FEMPT               EQU		FSMC_SR2_FEMPT_Msk                        ;/*!<FIFO empty */

FSMC_SR3			         EQU		0xA0000084
;/*******************  Bit definition for FSMC_SR3 register  *******************/
FSMC_SR3_IRS_Pos             EQU		0                                      
FSMC_SR3_IRS_Msk             EQU		0x1 << FSMC_SR3_IRS_Pos                   ;/*!< 0x00000001 */
FSMC_SR3_IRS                 EQU		FSMC_SR3_IRS_Msk                          ;/*!<Interrupt Rising Edge status                */
FSMC_SR3_ILS_Pos             EQU		1                                      
FSMC_SR3_ILS_Msk             EQU		0x1 << FSMC_SR3_ILS_Pos                   ;/*!< 0x00000002 */
FSMC_SR3_ILS                 EQU		FSMC_SR3_ILS_Msk                          ;/*!<Interrupt Level status                      */
FSMC_SR3_IFS_Pos             EQU		2                                      
FSMC_SR3_IFS_Msk             EQU		0x1 << FSMC_SR3_IFS_Pos                   ;/*!< 0x00000004 */
FSMC_SR3_IFS                 EQU		FSMC_SR3_IFS_Msk                          ;/*!<Interrupt Falling Edge status               */
FSMC_SR3_IREN_Pos            EQU		3                                      
FSMC_SR3_IREN_Msk            EQU		0x1 << FSMC_SR3_IREN_Pos                  ;/*!< 0x00000008 */
FSMC_SR3_IREN                EQU		FSMC_SR3_IREN_Msk                         ;/*!<Interrupt Rising Edge detection Enable bit  */
FSMC_SR3_ILEN_Pos            EQU		4                                      
FSMC_SR3_ILEN_Msk            EQU		0x1 << FSMC_SR3_ILEN_Pos                  ;/*!< 0x00000010 */
FSMC_SR3_ILEN                EQU		FSMC_SR3_ILEN_Msk                         ;/*!<Interrupt Level detection Enable bit        */
FSMC_SR3_IFEN_Pos            EQU		5                                      
FSMC_SR3_IFEN_Msk            EQU		0x1 << FSMC_SR3_IFEN_Pos                  ;/*!< 0x00000020 */
FSMC_SR3_IFEN                EQU		FSMC_SR3_IFEN_Msk                         ;/*!<Interrupt Falling Edge detection Enable bit */
FSMC_SR3_FEMPT_Pos           EQU		6                                      
FSMC_SR3_FEMPT_Msk           EQU		0x1 << FSMC_SR3_FEMPT_Pos                 ;/*!< 0x00000040 */
FSMC_SR3_FEMPT               EQU		FSMC_SR3_FEMPT_Msk                        ;/*!<FIFO empty */

FSMC_SR4		             EQU		0xA00000A4
;/*******************  Bit definition for FSMC_SR4 register  *******************/
FSMC_SR4_IRS_Pos             EQU		0                                      
FSMC_SR4_IRS_Msk             EQU		0x1 << FSMC_SR4_IRS_Pos                   ;/*!< 0x00000001 */
FSMC_SR4_IRS                 EQU		FSMC_SR4_IRS_Msk                          ;/*!<Interrupt Rising Edge status                 */
FSMC_SR4_ILS_Pos             EQU		1                                      
FSMC_SR4_ILS_Msk             EQU		0x1 << FSMC_SR4_ILS_Pos                   ;/*!< 0x00000002 */
FSMC_SR4_ILS                 EQU		FSMC_SR4_ILS_Msk                          ;/*!<Interrupt Level status                       */
FSMC_SR4_IFS_Pos             EQU		2                                      
FSMC_SR4_IFS_Msk             EQU		0x1 << FSMC_SR4_IFS_Pos                   ;/*!< 0x00000004 */
FSMC_SR4_IFS                 EQU		FSMC_SR4_IFS_Msk                          ;/*!<Interrupt Falling Edge status                */
FSMC_SR4_IREN_Pos            EQU		3                                      
FSMC_SR4_IREN_Msk            EQU		0x1 << FSMC_SR4_IREN_Pos                  ;/*!< 0x00000008 */
FSMC_SR4_IREN                EQU		FSMC_SR4_IREN_Msk                         ;/*!<Interrupt Rising Edge detection Enable bit   */
FSMC_SR4_ILEN_Pos            EQU		4                                      
FSMC_SR4_ILEN_Msk            EQU		0x1 << FSMC_SR4_ILEN_Pos                  ;/*!< 0x00000010 */
FSMC_SR4_ILEN                EQU		FSMC_SR4_ILEN_Msk                         ;/*!<Interrupt Level detection Enable bit         */
FSMC_SR4_IFEN_Pos            EQU		5                                      
FSMC_SR4_IFEN_Msk            EQU		0x1 << FSMC_SR4_IFEN_Pos                  ;/*!< 0x00000020 */
FSMC_SR4_IFEN                EQU		FSMC_SR4_IFEN_Msk                         ;/*!<Interrupt Falling Edge detection Enable bit  */
FSMC_SR4_FEMPT_Pos           EQU		6                                      
FSMC_SR4_FEMPT_Msk           EQU		0x1 << FSMC_SR4_FEMPT_Pos                 ;/*!< 0x00000040 */
FSMC_SR4_FEMPT               EQU		FSMC_SR4_FEMPT_Msk                        ;/*!<FIFO empty */

FSMC_PMEM2			         EQU		0xA0000068
;/******************  Bit definition for FSMC_PMEM2 register  ******************/
FSMC_PMEM2_MEMSET2_Pos       EQU		0                                      
FSMC_PMEM2_MEMSET2_Msk       EQU		0xFF << FSMC_PMEM2_MEMSET2_Pos            ;/*!< 0x000000FF */
FSMC_PMEM2_MEMSET2           EQU		FSMC_PMEM2_MEMSET2_Msk                    ;/*!<MEMSET2[7:0] bits EQU		Common memory 2 setup time    */
FSMC_PMEM2_MEMSET2_0         EQU		0x01 << FSMC_PMEM2_MEMSET2_Pos            ;/*!< 0x00000001 */
FSMC_PMEM2_MEMSET2_1         EQU		0x02 << FSMC_PMEM2_MEMSET2_Pos            ;/*!< 0x00000002 */
FSMC_PMEM2_MEMSET2_2         EQU		0x04 << FSMC_PMEM2_MEMSET2_Pos            ;/*!< 0x00000004 */
FSMC_PMEM2_MEMSET2_3         EQU		0x08 << FSMC_PMEM2_MEMSET2_Pos            ;/*!< 0x00000008 */
FSMC_PMEM2_MEMSET2_4         EQU		0x10 << FSMC_PMEM2_MEMSET2_Pos            ;/*!< 0x00000010 */
FSMC_PMEM2_MEMSET2_5         EQU		0x20 << FSMC_PMEM2_MEMSET2_Pos            ;/*!< 0x00000020 */
FSMC_PMEM2_MEMSET2_6         EQU		0x40 << FSMC_PMEM2_MEMSET2_Pos            ;/*!< 0x00000040 */
FSMC_PMEM2_MEMSET2_7         EQU		0x80 << FSMC_PMEM2_MEMSET2_Pos            ;/*!< 0x00000080 */

FSMC_PMEM2_MEMWAIT2_Pos      EQU		8                                      
FSMC_PMEM2_MEMWAIT2_Msk      EQU		0xFF << FSMC_PMEM2_MEMWAIT2_Pos           ;/*!< 0x0000FF00 */
FSMC_PMEM2_MEMWAIT2          EQU		FSMC_PMEM2_MEMWAIT2_Msk                   ;/*!<MEMWAIT2[7:0] bits EQU		Common memory 2 wait time    */
FSMC_PMEM2_MEMWAIT2_0        EQU		0x01 << FSMC_PMEM2_MEMWAIT2_Pos           ;/*!< 0x00000100 */
FSMC_PMEM2_MEMWAIT2_1        EQU		0x02 << FSMC_PMEM2_MEMWAIT2_Pos           ;/*!< 0x00000200 */
FSMC_PMEM2_MEMWAIT2_2        EQU		0x04 << FSMC_PMEM2_MEMWAIT2_Pos           ;/*!< 0x00000400 */
FSMC_PMEM2_MEMWAIT2_3        EQU		0x08 << FSMC_PMEM2_MEMWAIT2_Pos           ;/*!< 0x00000800 */
FSMC_PMEM2_MEMWAIT2_4        EQU		0x10 << FSMC_PMEM2_MEMWAIT2_Pos           ;/*!< 0x00001000 */
FSMC_PMEM2_MEMWAIT2_5        EQU		0x20 << FSMC_PMEM2_MEMWAIT2_Pos           ;/*!< 0x00002000 */
FSMC_PMEM2_MEMWAIT2_6        EQU		0x40 << FSMC_PMEM2_MEMWAIT2_Pos           ;/*!< 0x00004000 */
FSMC_PMEM2_MEMWAIT2_7        EQU		0x80 << FSMC_PMEM2_MEMWAIT2_Pos           ;/*!< 0x00008000 */

FSMC_PMEM2_MEMHOLD2_Pos      EQU		16                                     
FSMC_PMEM2_MEMHOLD2_Msk      EQU		0xFF << FSMC_PMEM2_MEMHOLD2_Pos           ;/*!< 0x00FF0000 */
FSMC_PMEM2_MEMHOLD2          EQU		FSMC_PMEM2_MEMHOLD2_Msk                   ;/*!<MEMHOLD2[7:0] bits EQU		Common memory 2 hold time    */
FSMC_PMEM2_MEMHOLD2_0        EQU		0x01 << FSMC_PMEM2_MEMHOLD2_Pos           ;/*!< 0x00010000 */
FSMC_PMEM2_MEMHOLD2_1        EQU		0x02 << FSMC_PMEM2_MEMHOLD2_Pos           ;/*!< 0x00020000 */
FSMC_PMEM2_MEMHOLD2_2        EQU		0x04 << FSMC_PMEM2_MEMHOLD2_Pos           ;/*!< 0x00040000 */
FSMC_PMEM2_MEMHOLD2_3        EQU		0x08 << FSMC_PMEM2_MEMHOLD2_Pos           ;/*!< 0x00080000 */
FSMC_PMEM2_MEMHOLD2_4        EQU		0x10 << FSMC_PMEM2_MEMHOLD2_Pos           ;/*!< 0x00100000 */
FSMC_PMEM2_MEMHOLD2_5        EQU		0x20 << FSMC_PMEM2_MEMHOLD2_Pos           ;/*!< 0x00200000 */
FSMC_PMEM2_MEMHOLD2_6        EQU		0x40 << FSMC_PMEM2_MEMHOLD2_Pos           ;/*!< 0x00400000 */
FSMC_PMEM2_MEMHOLD2_7        EQU		0x80 << FSMC_PMEM2_MEMHOLD2_Pos           ;/*!< 0x00800000 */

FSMC_PMEM2_MEMHIZ2_Pos       EQU		24                                     
FSMC_PMEM2_MEMHIZ2_Msk       EQU		0xFF << FSMC_PMEM2_MEMHIZ2_Pos            ;/*!< 0xFF000000 */
FSMC_PMEM2_MEMHIZ2           EQU		FSMC_PMEM2_MEMHIZ2_Msk                    ;/*!<MEMHIZ2[7:0] bits EQU		Common memory 2 databus HiZ time    */
FSMC_PMEM2_MEMHIZ2_0         EQU		0x01 << FSMC_PMEM2_MEMHIZ2_Pos            ;/*!< 0x01000000 */
FSMC_PMEM2_MEMHIZ2_1         EQU		0x02 << FSMC_PMEM2_MEMHIZ2_Pos            ;/*!< 0x02000000 */
FSMC_PMEM2_MEMHIZ2_2         EQU		0x04 << FSMC_PMEM2_MEMHIZ2_Pos            ;/*!< 0x04000000 */
FSMC_PMEM2_MEMHIZ2_3         EQU		0x08 << FSMC_PMEM2_MEMHIZ2_Pos            ;/*!< 0x08000000 */
FSMC_PMEM2_MEMHIZ2_4         EQU		0x10 << FSMC_PMEM2_MEMHIZ2_Pos            ;/*!< 0x10000000 */
FSMC_PMEM2_MEMHIZ2_5         EQU		0x20 << FSMC_PMEM2_MEMHIZ2_Pos            ;/*!< 0x20000000 */
FSMC_PMEM2_MEMHIZ2_6         EQU		0x40 << FSMC_PMEM2_MEMHIZ2_Pos            ;/*!< 0x40000000 */
FSMC_PMEM2_MEMHIZ2_7         EQU		0x80 << FSMC_PMEM2_MEMHIZ2_Pos            ;/*!< 0x80000000 */

FSMC_PMEM3				     EQU		0xA0000088
;/******************  Bit definition for FSMC_PMEM3 register  ******************/
FSMC_PMEM3_MEMSET3_Pos       EQU		0                                      
FSMC_PMEM3_MEMSET3_Msk       EQU		0xFF << FSMC_PMEM3_MEMSET3_Pos            ;/*!< 0x000000FF */
FSMC_PMEM3_MEMSET3           EQU		FSMC_PMEM3_MEMSET3_Msk                    ;/*!<MEMSET3[7:0] bits EQU		Common memory 3 setup time    */
FSMC_PMEM3_MEMSET3_0         EQU		0x01 << FSMC_PMEM3_MEMSET3_Pos            ;/*!< 0x00000001 */
FSMC_PMEM3_MEMSET3_1         EQU		0x02 << FSMC_PMEM3_MEMSET3_Pos            ;/*!< 0x00000002 */
FSMC_PMEM3_MEMSET3_2         EQU		0x04 << FSMC_PMEM3_MEMSET3_Pos            ;/*!< 0x00000004 */
FSMC_PMEM3_MEMSET3_3         EQU		0x08 << FSMC_PMEM3_MEMSET3_Pos            ;/*!< 0x00000008 */
FSMC_PMEM3_MEMSET3_4         EQU		0x10 << FSMC_PMEM3_MEMSET3_Pos            ;/*!< 0x00000010 */
FSMC_PMEM3_MEMSET3_5         EQU		0x20 << FSMC_PMEM3_MEMSET3_Pos            ;/*!< 0x00000020 */
FSMC_PMEM3_MEMSET3_6         EQU		0x40 << FSMC_PMEM3_MEMSET3_Pos            ;/*!< 0x00000040 */
FSMC_PMEM3_MEMSET3_7         EQU		0x80 << FSMC_PMEM3_MEMSET3_Pos            ;/*!< 0x00000080 */

FSMC_PMEM3_MEMWAIT3_Pos      EQU		8                                      
FSMC_PMEM3_MEMWAIT3_Msk      EQU		0xFF << FSMC_PMEM3_MEMWAIT3_Pos           ;/*!< 0x0000FF00 */
FSMC_PMEM3_MEMWAIT3          EQU		FSMC_PMEM3_MEMWAIT3_Msk                   ;/*!<MEMWAIT3[7:0] bits EQU		Common memory 3 wait time    */
FSMC_PMEM3_MEMWAIT3_0        EQU		0x01 << FSMC_PMEM3_MEMWAIT3_Pos           ;/*!< 0x00000100 */
FSMC_PMEM3_MEMWAIT3_1        EQU		0x02 << FSMC_PMEM3_MEMWAIT3_Pos           ;/*!< 0x00000200 */
FSMC_PMEM3_MEMWAIT3_2        EQU		0x04 << FSMC_PMEM3_MEMWAIT3_Pos           ;/*!< 0x00000400 */
FSMC_PMEM3_MEMWAIT3_3        EQU		0x08 << FSMC_PMEM3_MEMWAIT3_Pos           ;/*!< 0x00000800 */
FSMC_PMEM3_MEMWAIT3_4        EQU		0x10 << FSMC_PMEM3_MEMWAIT3_Pos           ;/*!< 0x00001000 */
FSMC_PMEM3_MEMWAIT3_5        EQU		0x20 << FSMC_PMEM3_MEMWAIT3_Pos           ;/*!< 0x00002000 */
FSMC_PMEM3_MEMWAIT3_6        EQU		0x40 << FSMC_PMEM3_MEMWAIT3_Pos           ;/*!< 0x00004000 */
FSMC_PMEM3_MEMWAIT3_7        EQU		0x80 << FSMC_PMEM3_MEMWAIT3_Pos           ;/*!< 0x00008000 */

FSMC_PMEM3_MEMHOLD3_Pos      EQU		16                                     
FSMC_PMEM3_MEMHOLD3_Msk      EQU		0xFF << FSMC_PMEM3_MEMHOLD3_Pos           ;/*!< 0x00FF0000 */
FSMC_PMEM3_MEMHOLD3          EQU		FSMC_PMEM3_MEMHOLD3_Msk                   ;/*!<MEMHOLD3[7:0] bits EQU		Common memory 3 hold time    */
FSMC_PMEM3_MEMHOLD3_0        EQU		0x01 << FSMC_PMEM3_MEMHOLD3_Pos           ;/*!< 0x00010000 */
FSMC_PMEM3_MEMHOLD3_1        EQU		0x02 << FSMC_PMEM3_MEMHOLD3_Pos           ;/*!< 0x00020000 */
FSMC_PMEM3_MEMHOLD3_2        EQU		0x04 << FSMC_PMEM3_MEMHOLD3_Pos           ;/*!< 0x00040000 */
FSMC_PMEM3_MEMHOLD3_3        EQU		0x08 << FSMC_PMEM3_MEMHOLD3_Pos           ;/*!< 0x00080000 */
FSMC_PMEM3_MEMHOLD3_4        EQU		0x10 << FSMC_PMEM3_MEMHOLD3_Pos           ;/*!< 0x00100000 */
FSMC_PMEM3_MEMHOLD3_5        EQU		0x20 << FSMC_PMEM3_MEMHOLD3_Pos           ;/*!< 0x00200000 */
FSMC_PMEM3_MEMHOLD3_6        EQU		0x40 << FSMC_PMEM3_MEMHOLD3_Pos           ;/*!< 0x00400000 */
FSMC_PMEM3_MEMHOLD3_7        EQU		0x80 << FSMC_PMEM3_MEMHOLD3_Pos           ;/*!< 0x00800000 */

FSMC_PMEM3_MEMHIZ3_Pos       EQU		24                                     
FSMC_PMEM3_MEMHIZ3_Msk       EQU		0xFF << FSMC_PMEM3_MEMHIZ3_Pos            ;/*!< 0xFF000000 */
FSMC_PMEM3_MEMHIZ3           EQU		FSMC_PMEM3_MEMHIZ3_Msk                    ;/*!<MEMHIZ3[7:0] bits EQU		Common memory 3 databus HiZ time    */
FSMC_PMEM3_MEMHIZ3_0         EQU		0x01 << FSMC_PMEM3_MEMHIZ3_Pos            ;/*!< 0x01000000 */
FSMC_PMEM3_MEMHIZ3_1         EQU		0x02 << FSMC_PMEM3_MEMHIZ3_Pos            ;/*!< 0x02000000 */
FSMC_PMEM3_MEMHIZ3_2         EQU		0x04 << FSMC_PMEM3_MEMHIZ3_Pos            ;/*!< 0x04000000 */
FSMC_PMEM3_MEMHIZ3_3         EQU		0x08 << FSMC_PMEM3_MEMHIZ3_Pos            ;/*!< 0x08000000 */
FSMC_PMEM3_MEMHIZ3_4         EQU		0x10 << FSMC_PMEM3_MEMHIZ3_Pos            ;/*!< 0x10000000 */
FSMC_PMEM3_MEMHIZ3_5         EQU		0x20 << FSMC_PMEM3_MEMHIZ3_Pos            ;/*!< 0x20000000 */
FSMC_PMEM3_MEMHIZ3_6         EQU		0x40 << FSMC_PMEM3_MEMHIZ3_Pos            ;/*!< 0x40000000 */
FSMC_PMEM3_MEMHIZ3_7         EQU		0x80 << FSMC_PMEM3_MEMHIZ3_Pos            ;/*!< 0x80000000 */

FSMC_PMEM4			         EQU		0xA00000A8
;/******************  Bit definition for FSMC_PMEM4 register  ******************/
FSMC_PMEM4_MEMSET4_Pos       EQU		0                                      
FSMC_PMEM4_MEMSET4_Msk       EQU		0xFF << FSMC_PMEM4_MEMSET4_Pos            ;/*!< 0x000000FF */
FSMC_PMEM4_MEMSET4           EQU		FSMC_PMEM4_MEMSET4_Msk                    ;/*!<MEMSET4[7:0] bits EQU		Common memory 4 setup time    */
FSMC_PMEM4_MEMSET4_0         EQU		0x01 << FSMC_PMEM4_MEMSET4_Pos            ;/*!< 0x00000001 */
FSMC_PMEM4_MEMSET4_1         EQU		0x02 << FSMC_PMEM4_MEMSET4_Pos            ;/*!< 0x00000002 */
FSMC_PMEM4_MEMSET4_2         EQU		0x04 << FSMC_PMEM4_MEMSET4_Pos            ;/*!< 0x00000004 */
FSMC_PMEM4_MEMSET4_3         EQU		0x08 << FSMC_PMEM4_MEMSET4_Pos            ;/*!< 0x00000008 */
FSMC_PMEM4_MEMSET4_4         EQU		0x10 << FSMC_PMEM4_MEMSET4_Pos            ;/*!< 0x00000010 */
FSMC_PMEM4_MEMSET4_5         EQU		0x20 << FSMC_PMEM4_MEMSET4_Pos            ;/*!< 0x00000020 */
FSMC_PMEM4_MEMSET4_6         EQU		0x40 << FSMC_PMEM4_MEMSET4_Pos            ;/*!< 0x00000040 */
FSMC_PMEM4_MEMSET4_7         EQU		0x80 << FSMC_PMEM4_MEMSET4_Pos            ;/*!< 0x00000080 */

FSMC_PMEM4_MEMWAIT4_Pos      EQU		8                                      
FSMC_PMEM4_MEMWAIT4_Msk      EQU		0xFF << FSMC_PMEM4_MEMWAIT4_Pos           ;/*!< 0x0000FF00 */
FSMC_PMEM4_MEMWAIT4          EQU		FSMC_PMEM4_MEMWAIT4_Msk                   ;/*!<MEMWAIT4[7:0] bits EQU		Common memory 4 wait time    */
FSMC_PMEM4_MEMWAIT4_0        EQU		0x01 << FSMC_PMEM4_MEMWAIT4_Pos           ;/*!< 0x00000100 */
FSMC_PMEM4_MEMWAIT4_1        EQU		0x02 << FSMC_PMEM4_MEMWAIT4_Pos           ;/*!< 0x00000200 */
FSMC_PMEM4_MEMWAIT4_2        EQU		0x04 << FSMC_PMEM4_MEMWAIT4_Pos           ;/*!< 0x00000400 */
FSMC_PMEM4_MEMWAIT4_3        EQU		0x08 << FSMC_PMEM4_MEMWAIT4_Pos           ;/*!< 0x00000800 */
FSMC_PMEM4_MEMWAIT4_4        EQU		0x10 << FSMC_PMEM4_MEMWAIT4_Pos           ;/*!< 0x00001000 */
FSMC_PMEM4_MEMWAIT4_5        EQU		0x20 << FSMC_PMEM4_MEMWAIT4_Pos           ;/*!< 0x00002000 */
FSMC_PMEM4_MEMWAIT4_6        EQU		0x40 << FSMC_PMEM4_MEMWAIT4_Pos           ;/*!< 0x00004000 */
FSMC_PMEM4_MEMWAIT4_7        EQU		0x80 << FSMC_PMEM4_MEMWAIT4_Pos           ;/*!< 0x00008000 */

FSMC_PMEM4_MEMHOLD4_Pos      EQU		16                                     
FSMC_PMEM4_MEMHOLD4_Msk      EQU		0xFF << FSMC_PMEM4_MEMHOLD4_Pos           ;/*!< 0x00FF0000 */
FSMC_PMEM4_MEMHOLD4          EQU		FSMC_PMEM4_MEMHOLD4_Msk                   ;/*!<MEMHOLD4[7:0] bits EQU		Common memory 4 hold time    */
FSMC_PMEM4_MEMHOLD4_0        EQU		0x01 << FSMC_PMEM4_MEMHOLD4_Pos           ;/*!< 0x00010000 */
FSMC_PMEM4_MEMHOLD4_1        EQU		0x02 << FSMC_PMEM4_MEMHOLD4_Pos           ;/*!< 0x00020000 */
FSMC_PMEM4_MEMHOLD4_2        EQU		0x04 << FSMC_PMEM4_MEMHOLD4_Pos           ;/*!< 0x00040000 */
FSMC_PMEM4_MEMHOLD4_3        EQU		0x08 << FSMC_PMEM4_MEMHOLD4_Pos           ;/*!< 0x00080000 */
FSMC_PMEM4_MEMHOLD4_4        EQU		0x10 << FSMC_PMEM4_MEMHOLD4_Pos           ;/*!< 0x00100000 */
FSMC_PMEM4_MEMHOLD4_5        EQU		0x20 << FSMC_PMEM4_MEMHOLD4_Pos           ;/*!< 0x00200000 */
FSMC_PMEM4_MEMHOLD4_6        EQU		0x40 << FSMC_PMEM4_MEMHOLD4_Pos           ;/*!< 0x00400000 */
FSMC_PMEM4_MEMHOLD4_7        EQU		0x80 << FSMC_PMEM4_MEMHOLD4_Pos           ;/*!< 0x00800000 */

FSMC_PMEM4_MEMHIZ4_Pos       EQU		24                                     
FSMC_PMEM4_MEMHIZ4_Msk       EQU		0xFF << FSMC_PMEM4_MEMHIZ4_Pos            ;/*!< 0xFF000000 */
FSMC_PMEM4_MEMHIZ4           EQU		FSMC_PMEM4_MEMHIZ4_Msk                    ;/*!<MEMHIZ4[7:0] bits EQU		Common memory 4 databus HiZ time    */
FSMC_PMEM4_MEMHIZ4_0         EQU		0x01 << FSMC_PMEM4_MEMHIZ4_Pos            ;/*!< 0x01000000 */
FSMC_PMEM4_MEMHIZ4_1         EQU		0x02 << FSMC_PMEM4_MEMHIZ4_Pos            ;/*!< 0x02000000 */
FSMC_PMEM4_MEMHIZ4_2         EQU		0x04 << FSMC_PMEM4_MEMHIZ4_Pos            ;/*!< 0x04000000 */
FSMC_PMEM4_MEMHIZ4_3         EQU		0x08 << FSMC_PMEM4_MEMHIZ4_Pos            ;/*!< 0x08000000 */
FSMC_PMEM4_MEMHIZ4_4         EQU		0x10 << FSMC_PMEM4_MEMHIZ4_Pos            ;/*!< 0x10000000 */
FSMC_PMEM4_MEMHIZ4_5         EQU		0x20 << FSMC_PMEM4_MEMHIZ4_Pos            ;/*!< 0x20000000 */
FSMC_PMEM4_MEMHIZ4_6         EQU		0x40 << FSMC_PMEM4_MEMHIZ4_Pos            ;/*!< 0x40000000 */
FSMC_PMEM4_MEMHIZ4_7         EQU		0x80 << FSMC_PMEM4_MEMHIZ4_Pos            ;/*!< 0x80000000 */

FSMC_PATT2				     EQU		0xA000006C
;/******************  Bit definition for FSMC_PATT2 register  ******************/
FSMC_PATT2_ATTSET2_Pos       EQU		0                                      
FSMC_PATT2_ATTSET2_Msk       EQU		0xFF << FSMC_PATT2_ATTSET2_Pos            ;/*!< 0x000000FF */
FSMC_PATT2_ATTSET2           EQU		FSMC_PATT2_ATTSET2_Msk                    ;/*!<ATTSET2[7:0] bits EQU		Attribute memory 2 setup time    */
FSMC_PATT2_ATTSET2_0         EQU		0x01 << FSMC_PATT2_ATTSET2_Pos            ;/*!< 0x00000001 */
FSMC_PATT2_ATTSET2_1         EQU		0x02 << FSMC_PATT2_ATTSET2_Pos            ;/*!< 0x00000002 */
FSMC_PATT2_ATTSET2_2         EQU		0x04 << FSMC_PATT2_ATTSET2_Pos            ;/*!< 0x00000004 */
FSMC_PATT2_ATTSET2_3         EQU		0x08 << FSMC_PATT2_ATTSET2_Pos            ;/*!< 0x00000008 */
FSMC_PATT2_ATTSET2_4         EQU		0x10 << FSMC_PATT2_ATTSET2_Pos            ;/*!< 0x00000010 */
FSMC_PATT2_ATTSET2_5         EQU		0x20 << FSMC_PATT2_ATTSET2_Pos            ;/*!< 0x00000020 */
FSMC_PATT2_ATTSET2_6         EQU		0x40 << FSMC_PATT2_ATTSET2_Pos            ;/*!< 0x00000040 */
FSMC_PATT2_ATTSET2_7         EQU		0x80 << FSMC_PATT2_ATTSET2_Pos            ;/*!< 0x00000080 */

FSMC_PATT2_ATTWAIT2_Pos      EQU		8                                      
FSMC_PATT2_ATTWAIT2_Msk      EQU		0xFF << FSMC_PATT2_ATTWAIT2_Pos           ;/*!< 0x0000FF00 */
FSMC_PATT2_ATTWAIT2          EQU		FSMC_PATT2_ATTWAIT2_Msk                   ;/*!<ATTWAIT2[7:0] bits EQU		Attribute memory 2 wait time    */
FSMC_PATT2_ATTWAIT2_0        EQU		0x01 << FSMC_PATT2_ATTWAIT2_Pos           ;/*!< 0x00000100 */
FSMC_PATT2_ATTWAIT2_1        EQU		0x02 << FSMC_PATT2_ATTWAIT2_Pos           ;/*!< 0x00000200 */
FSMC_PATT2_ATTWAIT2_2        EQU		0x04 << FSMC_PATT2_ATTWAIT2_Pos           ;/*!< 0x00000400 */
FSMC_PATT2_ATTWAIT2_3        EQU		0x08 << FSMC_PATT2_ATTWAIT2_Pos           ;/*!< 0x00000800 */
FSMC_PATT2_ATTWAIT2_4        EQU		0x10 << FSMC_PATT2_ATTWAIT2_Pos           ;/*!< 0x00001000 */
FSMC_PATT2_ATTWAIT2_5        EQU		0x20 << FSMC_PATT2_ATTWAIT2_Pos           ;/*!< 0x00002000 */
FSMC_PATT2_ATTWAIT2_6        EQU		0x40 << FSMC_PATT2_ATTWAIT2_Pos           ;/*!< 0x00004000 */
FSMC_PATT2_ATTWAIT2_7        EQU		0x80 << FSMC_PATT2_ATTWAIT2_Pos           ;/*!< 0x00008000 */

FSMC_PATT2_ATTHOLD2_Pos      EQU		16                                     
FSMC_PATT2_ATTHOLD2_Msk      EQU		0xFF << FSMC_PATT2_ATTHOLD2_Pos           ;/*!< 0x00FF0000 */
FSMC_PATT2_ATTHOLD2          EQU		FSMC_PATT2_ATTHOLD2_Msk                   ;/*!<ATTHOLD2[7:0] bits EQU		Attribute memory 2 hold time    */
FSMC_PATT2_ATTHOLD2_0        EQU		0x01 << FSMC_PATT2_ATTHOLD2_Pos           ;/*!< 0x00010000 */
FSMC_PATT2_ATTHOLD2_1        EQU		0x02 << FSMC_PATT2_ATTHOLD2_Pos           ;/*!< 0x00020000 */
FSMC_PATT2_ATTHOLD2_2        EQU		0x04 << FSMC_PATT2_ATTHOLD2_Pos           ;/*!< 0x00040000 */
FSMC_PATT2_ATTHOLD2_3        EQU		0x08 << FSMC_PATT2_ATTHOLD2_Pos           ;/*!< 0x00080000 */
FSMC_PATT2_ATTHOLD2_4        EQU		0x10 << FSMC_PATT2_ATTHOLD2_Pos           ;/*!< 0x00100000 */
FSMC_PATT2_ATTHOLD2_5        EQU		0x20 << FSMC_PATT2_ATTHOLD2_Pos           ;/*!< 0x00200000 */
FSMC_PATT2_ATTHOLD2_6        EQU		0x40 << FSMC_PATT2_ATTHOLD2_Pos           ;/*!< 0x00400000 */
FSMC_PATT2_ATTHOLD2_7        EQU		0x80 << FSMC_PATT2_ATTHOLD2_Pos           ;/*!< 0x00800000 */

FSMC_PATT2_ATTHIZ2_Pos       EQU		24                                     
FSMC_PATT2_ATTHIZ2_Msk       EQU		0xFF << FSMC_PATT2_ATTHIZ2_Pos            ;/*!< 0xFF000000 */
FSMC_PATT2_ATTHIZ2           EQU		FSMC_PATT2_ATTHIZ2_Msk                    ;/*!<ATTHIZ2[7:0] bits EQU		Attribute memory 2 databus HiZ time    */
FSMC_PATT2_ATTHIZ2_0         EQU		0x01 << FSMC_PATT2_ATTHIZ2_Pos            ;/*!< 0x01000000 */
FSMC_PATT2_ATTHIZ2_1         EQU		0x02 << FSMC_PATT2_ATTHIZ2_Pos            ;/*!< 0x02000000 */
FSMC_PATT2_ATTHIZ2_2         EQU		0x04 << FSMC_PATT2_ATTHIZ2_Pos            ;/*!< 0x04000000 */
FSMC_PATT2_ATTHIZ2_3         EQU		0x08 << FSMC_PATT2_ATTHIZ2_Pos            ;/*!< 0x08000000 */
FSMC_PATT2_ATTHIZ2_4         EQU		0x10 << FSMC_PATT2_ATTHIZ2_Pos            ;/*!< 0x10000000 */
FSMC_PATT2_ATTHIZ2_5         EQU		0x20 << FSMC_PATT2_ATTHIZ2_Pos            ;/*!< 0x20000000 */
FSMC_PATT2_ATTHIZ2_6         EQU		0x40 << FSMC_PATT2_ATTHIZ2_Pos            ;/*!< 0x40000000 */
FSMC_PATT2_ATTHIZ2_7         EQU		0x80 << FSMC_PATT2_ATTHIZ2_Pos            ;/*!< 0x80000000 */

FSMC_PATT3			         EQU		0xA000008C
;/******************  Bit definition for FSMC_PATT3 register  ******************/
FSMC_PATT3_ATTSET3_Pos       EQU		0                                      
FSMC_PATT3_ATTSET3_Msk       EQU		0xFF << FSMC_PATT3_ATTSET3_Pos            ;/*!< 0x000000FF */
FSMC_PATT3_ATTSET3           EQU		FSMC_PATT3_ATTSET3_Msk                    ;/*!<ATTSET3[7:0] bits EQU		Attribute memory 3 setup time    */
FSMC_PATT3_ATTSET3_0         EQU		0x01 << FSMC_PATT3_ATTSET3_Pos            ;/*!< 0x00000001 */
FSMC_PATT3_ATTSET3_1         EQU		0x02 << FSMC_PATT3_ATTSET3_Pos            ;/*!< 0x00000002 */
FSMC_PATT3_ATTSET3_2         EQU		0x04 << FSMC_PATT3_ATTSET3_Pos            ;/*!< 0x00000004 */
FSMC_PATT3_ATTSET3_3         EQU		0x08 << FSMC_PATT3_ATTSET3_Pos            ;/*!< 0x00000008 */
FSMC_PATT3_ATTSET3_4         EQU		0x10 << FSMC_PATT3_ATTSET3_Pos            ;/*!< 0x00000010 */
FSMC_PATT3_ATTSET3_5         EQU		0x20 << FSMC_PATT3_ATTSET3_Pos            ;/*!< 0x00000020 */
FSMC_PATT3_ATTSET3_6         EQU		0x40 << FSMC_PATT3_ATTSET3_Pos            ;/*!< 0x00000040 */
FSMC_PATT3_ATTSET3_7         EQU		0x80 << FSMC_PATT3_ATTSET3_Pos            ;/*!< 0x00000080 */

FSMC_PATT3_ATTWAIT3_Pos      EQU		8                                      
FSMC_PATT3_ATTWAIT3_Msk      EQU		0xFF << FSMC_PATT3_ATTWAIT3_Pos           ;/*!< 0x0000FF00 */
FSMC_PATT3_ATTWAIT3          EQU		FSMC_PATT3_ATTWAIT3_Msk                   ;/*!<ATTWAIT3[7:0] bits EQU		Attribute memory 3 wait time    */
FSMC_PATT3_ATTWAIT3_0        EQU		0x01 << FSMC_PATT3_ATTWAIT3_Pos           ;/*!< 0x00000100 */
FSMC_PATT3_ATTWAIT3_1        EQU		0x02 << FSMC_PATT3_ATTWAIT3_Pos           ;/*!< 0x00000200 */
FSMC_PATT3_ATTWAIT3_2        EQU		0x04 << FSMC_PATT3_ATTWAIT3_Pos           ;/*!< 0x00000400 */
FSMC_PATT3_ATTWAIT3_3        EQU		0x08 << FSMC_PATT3_ATTWAIT3_Pos           ;/*!< 0x00000800 */
FSMC_PATT3_ATTWAIT3_4        EQU		0x10 << FSMC_PATT3_ATTWAIT3_Pos           ;/*!< 0x00001000 */
FSMC_PATT3_ATTWAIT3_5        EQU		0x20 << FSMC_PATT3_ATTWAIT3_Pos           ;/*!< 0x00002000 */
FSMC_PATT3_ATTWAIT3_6        EQU		0x40 << FSMC_PATT3_ATTWAIT3_Pos           ;/*!< 0x00004000 */
FSMC_PATT3_ATTWAIT3_7        EQU		0x80 << FSMC_PATT3_ATTWAIT3_Pos           ;/*!< 0x00008000 */

FSMC_PATT3_ATTHOLD3_Pos      EQU		16                                     
FSMC_PATT3_ATTHOLD3_Msk      EQU		0xFF << FSMC_PATT3_ATTHOLD3_Pos           ;/*!< 0x00FF0000 */
FSMC_PATT3_ATTHOLD3          EQU		FSMC_PATT3_ATTHOLD3_Msk                   ;/*!<ATTHOLD3[7:0] bits EQU		Attribute memory 3 hold time    */
FSMC_PATT3_ATTHOLD3_0        EQU		0x01 << FSMC_PATT3_ATTHOLD3_Pos           ;/*!< 0x00010000 */
FSMC_PATT3_ATTHOLD3_1        EQU		0x02 << FSMC_PATT3_ATTHOLD3_Pos           ;/*!< 0x00020000 */
FSMC_PATT3_ATTHOLD3_2        EQU		0x04 << FSMC_PATT3_ATTHOLD3_Pos           ;/*!< 0x00040000 */
FSMC_PATT3_ATTHOLD3_3        EQU		0x08 << FSMC_PATT3_ATTHOLD3_Pos           ;/*!< 0x00080000 */
FSMC_PATT3_ATTHOLD3_4        EQU		0x10 << FSMC_PATT3_ATTHOLD3_Pos           ;/*!< 0x00100000 */
FSMC_PATT3_ATTHOLD3_5        EQU		0x20 << FSMC_PATT3_ATTHOLD3_Pos           ;/*!< 0x00200000 */
FSMC_PATT3_ATTHOLD3_6        EQU		0x40 << FSMC_PATT3_ATTHOLD3_Pos           ;/*!< 0x00400000 */
FSMC_PATT3_ATTHOLD3_7        EQU		0x80 << FSMC_PATT3_ATTHOLD3_Pos           ;/*!< 0x00800000 */

FSMC_PATT3_ATTHIZ3_Pos       EQU		24                                     
FSMC_PATT3_ATTHIZ3_Msk       EQU		0xFF << FSMC_PATT3_ATTHIZ3_Pos            ;/*!< 0xFF000000 */
FSMC_PATT3_ATTHIZ3           EQU		FSMC_PATT3_ATTHIZ3_Msk                    ;/*!<ATTHIZ3[7:0] bits EQU		Attribute memory 3 databus HiZ time    */
FSMC_PATT3_ATTHIZ3_0         EQU		0x01 << FSMC_PATT3_ATTHIZ3_Pos            ;/*!< 0x01000000 */
FSMC_PATT3_ATTHIZ3_1         EQU		0x02 << FSMC_PATT3_ATTHIZ3_Pos            ;/*!< 0x02000000 */
FSMC_PATT3_ATTHIZ3_2         EQU		0x04 << FSMC_PATT3_ATTHIZ3_Pos            ;/*!< 0x04000000 */
FSMC_PATT3_ATTHIZ3_3         EQU		0x08 << FSMC_PATT3_ATTHIZ3_Pos            ;/*!< 0x08000000 */
FSMC_PATT3_ATTHIZ3_4         EQU		0x10 << FSMC_PATT3_ATTHIZ3_Pos            ;/*!< 0x10000000 */
FSMC_PATT3_ATTHIZ3_5         EQU		0x20 << FSMC_PATT3_ATTHIZ3_Pos            ;/*!< 0x20000000 */
FSMC_PATT3_ATTHIZ3_6         EQU		0x40 << FSMC_PATT3_ATTHIZ3_Pos            ;/*!< 0x40000000 */
FSMC_PATT3_ATTHIZ3_7         EQU		0x80 << FSMC_PATT3_ATTHIZ3_Pos            ;/*!< 0x80000000 */

FSMC_PATT4			         EQU		0xA00000AC
;/******************  Bit definition for FSMC_PATT4 register  ******************/
FSMC_PATT4_ATTSET4_Pos       EQU		0                                      
FSMC_PATT4_ATTSET4_Msk       EQU		0xFF << FSMC_PATT4_ATTSET4_Pos            ;/*!< 0x000000FF */
FSMC_PATT4_ATTSET4           EQU		FSMC_PATT4_ATTSET4_Msk                    ;/*!<ATTSET4[7:0] bits EQU		Attribute memory 4 setup time    */
FSMC_PATT4_ATTSET4_0         EQU		0x01 << FSMC_PATT4_ATTSET4_Pos            ;/*!< 0x00000001 */
FSMC_PATT4_ATTSET4_1         EQU		0x02 << FSMC_PATT4_ATTSET4_Pos            ;/*!< 0x00000002 */
FSMC_PATT4_ATTSET4_2         EQU		0x04 << FSMC_PATT4_ATTSET4_Pos            ;/*!< 0x00000004 */
FSMC_PATT4_ATTSET4_3         EQU		0x08 << FSMC_PATT4_ATTSET4_Pos            ;/*!< 0x00000008 */
FSMC_PATT4_ATTSET4_4         EQU		0x10 << FSMC_PATT4_ATTSET4_Pos            ;/*!< 0x00000010 */
FSMC_PATT4_ATTSET4_5         EQU		0x20 << FSMC_PATT4_ATTSET4_Pos            ;/*!< 0x00000020 */
FSMC_PATT4_ATTSET4_6         EQU		0x40 << FSMC_PATT4_ATTSET4_Pos            ;/*!< 0x00000040 */
FSMC_PATT4_ATTSET4_7         EQU		0x80 << FSMC_PATT4_ATTSET4_Pos            ;/*!< 0x00000080 */

FSMC_PATT4_ATTWAIT4_Pos      EQU		8                                      
FSMC_PATT4_ATTWAIT4_Msk      EQU		0xFF << FSMC_PATT4_ATTWAIT4_Pos           ;/*!< 0x0000FF00 */
FSMC_PATT4_ATTWAIT4          EQU		FSMC_PATT4_ATTWAIT4_Msk                   ;/*!<ATTWAIT4[7:0] bits EQU		Attribute memory 4 wait time    */
FSMC_PATT4_ATTWAIT4_0        EQU		0x01 << FSMC_PATT4_ATTWAIT4_Pos           ;/*!< 0x00000100 */
FSMC_PATT4_ATTWAIT4_1        EQU		0x02 << FSMC_PATT4_ATTWAIT4_Pos           ;/*!< 0x00000200 */
FSMC_PATT4_ATTWAIT4_2        EQU		0x04 << FSMC_PATT4_ATTWAIT4_Pos           ;/*!< 0x00000400 */
FSMC_PATT4_ATTWAIT4_3        EQU		0x08 << FSMC_PATT4_ATTWAIT4_Pos           ;/*!< 0x00000800 */
FSMC_PATT4_ATTWAIT4_4        EQU		0x10 << FSMC_PATT4_ATTWAIT4_Pos           ;/*!< 0x00001000 */
FSMC_PATT4_ATTWAIT4_5        EQU		0x20 << FSMC_PATT4_ATTWAIT4_Pos           ;/*!< 0x00002000 */
FSMC_PATT4_ATTWAIT4_6        EQU		0x40 << FSMC_PATT4_ATTWAIT4_Pos           ;/*!< 0x00004000 */
FSMC_PATT4_ATTWAIT4_7        EQU		0x80 << FSMC_PATT4_ATTWAIT4_Pos           ;/*!< 0x00008000 */

FSMC_PATT4_ATTHOLD4_Pos      EQU		16                                     
FSMC_PATT4_ATTHOLD4_Msk      EQU		0xFF << FSMC_PATT4_ATTHOLD4_Pos           ;/*!< 0x00FF0000 */
FSMC_PATT4_ATTHOLD4          EQU		FSMC_PATT4_ATTHOLD4_Msk                   ;/*!<ATTHOLD4[7:0] bits EQU		Attribute memory 4 hold time    */
FSMC_PATT4_ATTHOLD4_0        EQU		0x01 << FSMC_PATT4_ATTHOLD4_Pos           ;/*!< 0x00010000 */
FSMC_PATT4_ATTHOLD4_1        EQU		0x02 << FSMC_PATT4_ATTHOLD4_Pos           ;/*!< 0x00020000 */
FSMC_PATT4_ATTHOLD4_2        EQU		0x04 << FSMC_PATT4_ATTHOLD4_Pos           ;/*!< 0x00040000 */
FSMC_PATT4_ATTHOLD4_3        EQU		0x08 << FSMC_PATT4_ATTHOLD4_Pos           ;/*!< 0x00080000 */
FSMC_PATT4_ATTHOLD4_4        EQU		0x10 << FSMC_PATT4_ATTHOLD4_Pos           ;/*!< 0x00100000 */
FSMC_PATT4_ATTHOLD4_5        EQU		0x20 << FSMC_PATT4_ATTHOLD4_Pos           ;/*!< 0x00200000 */
FSMC_PATT4_ATTHOLD4_6        EQU		0x40 << FSMC_PATT4_ATTHOLD4_Pos           ;/*!< 0x00400000 */
FSMC_PATT4_ATTHOLD4_7        EQU		0x80 << FSMC_PATT4_ATTHOLD4_Pos           ;/*!< 0x00800000 */

FSMC_PATT4_ATTHIZ4_Pos       EQU		24                                     
FSMC_PATT4_ATTHIZ4_Msk       EQU		0xFF << FSMC_PATT4_ATTHIZ4_Pos            ;/*!< 0xFF000000 */
FSMC_PATT4_ATTHIZ4           EQU		FSMC_PATT4_ATTHIZ4_Msk                    ;/*!<ATTHIZ4[7:0] bits EQU		Attribute memory 4 databus HiZ time    */
FSMC_PATT4_ATTHIZ4_0         EQU		0x01 << FSMC_PATT4_ATTHIZ4_Pos            ;/*!< 0x01000000 */
FSMC_PATT4_ATTHIZ4_1         EQU		0x02 << FSMC_PATT4_ATTHIZ4_Pos            ;/*!< 0x02000000 */
FSMC_PATT4_ATTHIZ4_2         EQU		0x04 << FSMC_PATT4_ATTHIZ4_Pos            ;/*!< 0x04000000 */
FSMC_PATT4_ATTHIZ4_3         EQU		0x08 << FSMC_PATT4_ATTHIZ4_Pos            ;/*!< 0x08000000 */
FSMC_PATT4_ATTHIZ4_4         EQU		0x10 << FSMC_PATT4_ATTHIZ4_Pos            ;/*!< 0x10000000 */
FSMC_PATT4_ATTHIZ4_5         EQU		0x20 << FSMC_PATT4_ATTHIZ4_Pos            ;/*!< 0x20000000 */
FSMC_PATT4_ATTHIZ4_6         EQU		0x40 << FSMC_PATT4_ATTHIZ4_Pos            ;/*!< 0x40000000 */
FSMC_PATT4_ATTHIZ4_7         EQU		0x80 << FSMC_PATT4_ATTHIZ4_Pos            ;/*!< 0x80000000 */

FSMC_PIO4			         EQU		0xA00000B0
;/******************  Bit definition for FSMC_PIO4 register  *******************/
FSMC_PIO4_IOSET4_Pos         EQU		0                                      
FSMC_PIO4_IOSET4_Msk         EQU		0xFF << FSMC_PIO4_IOSET4_Pos              ;/*!< 0x000000FF */
FSMC_PIO4_IOSET4             EQU		FSMC_PIO4_IOSET4_Msk                      ;/*!<IOSET4[7:0] bits EQU		I/O 4 setup time    */
FSMC_PIO4_IOSET4_0           EQU		0x01 << FSMC_PIO4_IOSET4_Pos              ;/*!< 0x00000001 */
FSMC_PIO4_IOSET4_1           EQU		0x02 << FSMC_PIO4_IOSET4_Pos              ;/*!< 0x00000002 */
FSMC_PIO4_IOSET4_2           EQU		0x04 << FSMC_PIO4_IOSET4_Pos              ;/*!< 0x00000004 */
FSMC_PIO4_IOSET4_3           EQU		0x08 << FSMC_PIO4_IOSET4_Pos              ;/*!< 0x00000008 */
FSMC_PIO4_IOSET4_4           EQU		0x10 << FSMC_PIO4_IOSET4_Pos              ;/*!< 0x00000010 */
FSMC_PIO4_IOSET4_5           EQU		0x20 << FSMC_PIO4_IOSET4_Pos              ;/*!< 0x00000020 */
FSMC_PIO4_IOSET4_6           EQU		0x40 << FSMC_PIO4_IOSET4_Pos              ;/*!< 0x00000040 */
FSMC_PIO4_IOSET4_7           EQU		0x80 << FSMC_PIO4_IOSET4_Pos              ;/*!< 0x00000080 */

FSMC_PIO4_IOWAIT4_Pos        EQU		8                                      
FSMC_PIO4_IOWAIT4_Msk        EQU		0xFF << FSMC_PIO4_IOWAIT4_Pos             ;/*!< 0x0000FF00 */
FSMC_PIO4_IOWAIT4            EQU		FSMC_PIO4_IOWAIT4_Msk                     ;/*!<IOWAIT4[7:0] bits EQU		I/O 4 wait time    */
FSMC_PIO4_IOWAIT4_0          EQU		0x01 << FSMC_PIO4_IOWAIT4_Pos             ;/*!< 0x00000100 */
FSMC_PIO4_IOWAIT4_1          EQU		0x02 << FSMC_PIO4_IOWAIT4_Pos             ;/*!< 0x00000200 */
FSMC_PIO4_IOWAIT4_2          EQU		0x04 << FSMC_PIO4_IOWAIT4_Pos             ;/*!< 0x00000400 */
FSMC_PIO4_IOWAIT4_3          EQU		0x08 << FSMC_PIO4_IOWAIT4_Pos             ;/*!< 0x00000800 */
FSMC_PIO4_IOWAIT4_4          EQU		0x10 << FSMC_PIO4_IOWAIT4_Pos             ;/*!< 0x00001000 */
FSMC_PIO4_IOWAIT4_5          EQU		0x20 << FSMC_PIO4_IOWAIT4_Pos             ;/*!< 0x00002000 */
FSMC_PIO4_IOWAIT4_6          EQU		0x40 << FSMC_PIO4_IOWAIT4_Pos             ;/*!< 0x00004000 */
FSMC_PIO4_IOWAIT4_7          EQU		0x80 << FSMC_PIO4_IOWAIT4_Pos             ;/*!< 0x00008000 */

FSMC_PIO4_IOHOLD4_Pos        EQU		16                                     
FSMC_PIO4_IOHOLD4_Msk        EQU		0xFF << FSMC_PIO4_IOHOLD4_Pos             ;/*!< 0x00FF0000 */
FSMC_PIO4_IOHOLD4            EQU		FSMC_PIO4_IOHOLD4_Msk                     ;/*!<IOHOLD4[7:0] bits EQU		I/O 4 hold time    */
FSMC_PIO4_IOHOLD4_0          EQU		0x01 << FSMC_PIO4_IOHOLD4_Pos             ;/*!< 0x00010000 */
FSMC_PIO4_IOHOLD4_1          EQU		0x02 << FSMC_PIO4_IOHOLD4_Pos             ;/*!< 0x00020000 */
FSMC_PIO4_IOHOLD4_2          EQU		0x04 << FSMC_PIO4_IOHOLD4_Pos             ;/*!< 0x00040000 */
FSMC_PIO4_IOHOLD4_3          EQU		0x08 << FSMC_PIO4_IOHOLD4_Pos             ;/*!< 0x00080000 */
FSMC_PIO4_IOHOLD4_4          EQU		0x10 << FSMC_PIO4_IOHOLD4_Pos             ;/*!< 0x00100000 */
FSMC_PIO4_IOHOLD4_5          EQU		0x20 << FSMC_PIO4_IOHOLD4_Pos             ;/*!< 0x00200000 */
FSMC_PIO4_IOHOLD4_6          EQU		0x40 << FSMC_PIO4_IOHOLD4_Pos             ;/*!< 0x00400000 */
FSMC_PIO4_IOHOLD4_7          EQU		0x80 << FSMC_PIO4_IOHOLD4_Pos             ;/*!< 0x00800000 */

FSMC_PIO4_IOHIZ4_Pos         EQU		24                                     
FSMC_PIO4_IOHIZ4_Msk         EQU		0xFF << FSMC_PIO4_IOHIZ4_Pos              ;/*!< 0xFF000000 */
FSMC_PIO4_IOHIZ4             EQU		FSMC_PIO4_IOHIZ4_Msk                      ;/*!<IOHIZ4[7:0] bits EQU		I/O 4 databus HiZ time    */
FSMC_PIO4_IOHIZ4_0           EQU		0x01 << FSMC_PIO4_IOHIZ4_Pos              ;/*!< 0x01000000 */
FSMC_PIO4_IOHIZ4_1           EQU		0x02 << FSMC_PIO4_IOHIZ4_Pos              ;/*!< 0x02000000 */
FSMC_PIO4_IOHIZ4_2           EQU		0x04 << FSMC_PIO4_IOHIZ4_Pos              ;/*!< 0x04000000 */
FSMC_PIO4_IOHIZ4_3           EQU		0x08 << FSMC_PIO4_IOHIZ4_Pos              ;/*!< 0x08000000 */
FSMC_PIO4_IOHIZ4_4           EQU		0x10 << FSMC_PIO4_IOHIZ4_Pos              ;/*!< 0x10000000 */
FSMC_PIO4_IOHIZ4_5           EQU		0x20 << FSMC_PIO4_IOHIZ4_Pos              ;/*!< 0x20000000 */
FSMC_PIO4_IOHIZ4_6           EQU		0x40 << FSMC_PIO4_IOHIZ4_Pos              ;/*!< 0x40000000 */
FSMC_PIO4_IOHIZ4_7           EQU		0x80 << FSMC_PIO4_IOHIZ4_Pos              ;/*!< 0x80000000 */

FSMC_ECCR2			          EQU		0xA0000074
;/******************  Bit definition for FSMC_ECCR2 register  ******************/
FSMC_ECCR2_ECC2_Pos          EQU		0                                      
FSMC_ECCR2_ECC2_Msk          EQU		0xFFFFFFFF << FSMC_ECCR2_ECC2_Pos         ;/*!< 0xFFFFFFFF */
FSMC_ECCR2_ECC2              EQU		FSMC_ECCR2_ECC2_Msk                       ;/*!<ECC result */

FSMC_ECCR3			         EQU		0xA0000094
;/******************  Bit definition for FSMC_ECCR3 register  ******************/
FSMC_ECCR3_ECC3_Pos          EQU		0                                      
FSMC_ECCR3_ECC3_Msk          EQU		0xFFFFFFFF << FSMC_ECCR3_ECC3_Pos         ;/*!< 0xFFFFFFFF */
FSMC_ECCR3_ECC3              EQU		FSMC_ECCR3_ECC3_Msk                       ;/*!<ECC result */

;/******************************************************************************/
;/*                                                                            */
;/*                            General Purpose I/O                             */
;/*                                                                            */
;/******************************************************************************/

GPIO_MODER						 EQU		0x00
;/******************  Bits definition for GPIO_MODER register  *****************/
GPIO_MODER_MODE0_Pos             EQU		0                                  
GPIO_MODER_MODE0_Msk             EQU		0x3 << GPIO_MODER_MODE0_Pos           ;/*!< 0x00000003 */
GPIO_MODER_MODE0                 EQU		GPIO_MODER_MODE0_Msk                  
GPIO_MODER_MODE0_0               EQU		0x1 << GPIO_MODER_MODE0_Pos           ;/*!< 0x00000001 */
GPIO_MODER_MODE0_1               EQU		0x2 << GPIO_MODER_MODE0_Pos           ;/*!< 0x00000002 */
GPIO_MODER_MODE1_Pos             EQU		2                                  
GPIO_MODER_MODE1_Msk             EQU		0x3 << GPIO_MODER_MODE1_Pos           ;/*!< 0x0000000C */
GPIO_MODER_MODE1                 EQU		GPIO_MODER_MODE1_Msk                  
GPIO_MODER_MODE1_0               EQU		0x1 << GPIO_MODER_MODE1_Pos           ;/*!< 0x00000004 */
GPIO_MODER_MODE1_1               EQU		0x2 << GPIO_MODER_MODE1_Pos           ;/*!< 0x00000008 */
GPIO_MODER_MODE2_Pos             EQU		4                                  
GPIO_MODER_MODE2_Msk             EQU		0x3 << GPIO_MODER_MODE2_Pos           ;/*!< 0x00000030 */
GPIO_MODER_MODE2                 EQU		GPIO_MODER_MODE2_Msk                  
GPIO_MODER_MODE2_0               EQU		0x1 << GPIO_MODER_MODE2_Pos           ;/*!< 0x00000010 */
GPIO_MODER_MODE2_1               EQU		0x2 << GPIO_MODER_MODE2_Pos           ;/*!< 0x00000020 */
GPIO_MODER_MODE3_Pos             EQU		6                                  
GPIO_MODER_MODE3_Msk             EQU		0x3 << GPIO_MODER_MODE3_Pos           ;/*!< 0x000000C0 */
GPIO_MODER_MODE3                 EQU		GPIO_MODER_MODE3_Msk                  
GPIO_MODER_MODE3_0               EQU		0x1 << GPIO_MODER_MODE3_Pos           ;/*!< 0x00000040 */
GPIO_MODER_MODE3_1               EQU		0x2 << GPIO_MODER_MODE3_Pos           ;/*!< 0x00000080 */
GPIO_MODER_MODE4_Pos             EQU		8                                  
GPIO_MODER_MODE4_Msk             EQU		0x3 << GPIO_MODER_MODE4_Pos           ;/*!< 0x00000300 */
GPIO_MODER_MODE4                 EQU		GPIO_MODER_MODE4_Msk                  
GPIO_MODER_MODE4_0               EQU		0x1 << GPIO_MODER_MODE4_Pos           ;/*!< 0x00000100 */
GPIO_MODER_MODE4_1               EQU		0x2 << GPIO_MODER_MODE4_Pos           ;/*!< 0x00000200 */
GPIO_MODER_MODE5_Pos             EQU		10                                 
GPIO_MODER_MODE5_Msk             EQU		0x3 << GPIO_MODER_MODE5_Pos           ;/*!< 0x00000C00 */
GPIO_MODER_MODE5                 EQU		GPIO_MODER_MODE5_Msk                  
GPIO_MODER_MODE5_0               EQU		0x1 << GPIO_MODER_MODE5_Pos           ;/*!< 0x00000400 */
GPIO_MODER_MODE5_1               EQU		0x2 << GPIO_MODER_MODE5_Pos           ;/*!< 0x00000800 */
GPIO_MODER_MODE6_Pos             EQU		12                                 
GPIO_MODER_MODE6_Msk             EQU		0x3 << GPIO_MODER_MODE6_Pos           ;/*!< 0x00003000 */
GPIO_MODER_MODE6                 EQU		GPIO_MODER_MODE6_Msk                  
GPIO_MODER_MODE6_0               EQU		0x1 << GPIO_MODER_MODE6_Pos           ;/*!< 0x00001000 */
GPIO_MODER_MODE6_1               EQU		0x2 << GPIO_MODER_MODE6_Pos           ;/*!< 0x00002000 */
GPIO_MODER_MODE7_Pos             EQU		14                                 
GPIO_MODER_MODE7_Msk             EQU		0x3 << GPIO_MODER_MODE7_Pos           ;/*!< 0x0000C000 */
GPIO_MODER_MODE7                 EQU		GPIO_MODER_MODE7_Msk                  
GPIO_MODER_MODE7_0               EQU		0x1 << GPIO_MODER_MODE7_Pos           ;/*!< 0x00004000 */
GPIO_MODER_MODE7_1               EQU		0x2 << GPIO_MODER_MODE7_Pos           ;/*!< 0x00008000 */
GPIO_MODER_MODE8_Pos             EQU		16                                 
GPIO_MODER_MODE8_Msk             EQU		0x3 << GPIO_MODER_MODE8_Pos           ;/*!< 0x00030000 */
GPIO_MODER_MODE8                 EQU		GPIO_MODER_MODE8_Msk                  
GPIO_MODER_MODE8_0               EQU		0x1 << GPIO_MODER_MODE8_Pos           ;/*!< 0x00010000 */
GPIO_MODER_MODE8_1               EQU		0x2 << GPIO_MODER_MODE8_Pos           ;/*!< 0x00020000 */
GPIO_MODER_MODE9_Pos             EQU		18                                 
GPIO_MODER_MODE9_Msk             EQU		0x3 << GPIO_MODER_MODE9_Pos           ;/*!< 0x000C0000 */
GPIO_MODER_MODE9                 EQU		GPIO_MODER_MODE9_Msk                  
GPIO_MODER_MODE9_0               EQU		0x1 << GPIO_MODER_MODE9_Pos           ;/*!< 0x00040000 */
GPIO_MODER_MODE9_1               EQU		0x2 << GPIO_MODER_MODE9_Pos           ;/*!< 0x00080000 */
GPIO_MODER_MODE10_Pos            EQU		20                                 
GPIO_MODER_MODE10_Msk            EQU		0x3 << GPIO_MODER_MODE10_Pos          ;/*!< 0x00300000 */
GPIO_MODER_MODE10                EQU		GPIO_MODER_MODE10_Msk                 
GPIO_MODER_MODE10_0              EQU		0x1 << GPIO_MODER_MODE10_Pos          ;/*!< 0x00100000 */
GPIO_MODER_MODE10_1              EQU		0x2 << GPIO_MODER_MODE10_Pos          ;/*!< 0x00200000 */
GPIO_MODER_MODE11_Pos            EQU		22                                 
GPIO_MODER_MODE11_Msk            EQU		0x3 << GPIO_MODER_MODE11_Pos          ;/*!< 0x00C00000 */
GPIO_MODER_MODE11                EQU		GPIO_MODER_MODE11_Msk                 
GPIO_MODER_MODE11_0              EQU		0x1 << GPIO_MODER_MODE11_Pos          ;/*!< 0x00400000 */
GPIO_MODER_MODE11_1              EQU		0x2 << GPIO_MODER_MODE11_Pos          ;/*!< 0x00800000 */
GPIO_MODER_MODE12_Pos            EQU		24                                 
GPIO_MODER_MODE12_Msk            EQU		0x3 << GPIO_MODER_MODE12_Pos          ;/*!< 0x03000000 */
GPIO_MODER_MODE12                EQU		GPIO_MODER_MODE12_Msk                 
GPIO_MODER_MODE12_0              EQU		0x1 << GPIO_MODER_MODE12_Pos          ;/*!< 0x01000000 */
GPIO_MODER_MODE12_1              EQU		0x2 << GPIO_MODER_MODE12_Pos          ;/*!< 0x02000000 */
GPIO_MODER_MODE13_Pos            EQU		26                                 
GPIO_MODER_MODE13_Msk            EQU		0x3 << GPIO_MODER_MODE13_Pos          ;/*!< 0x0C000000 */
GPIO_MODER_MODE13                EQU		GPIO_MODER_MODE13_Msk                 
GPIO_MODER_MODE13_0              EQU		0x1 << GPIO_MODER_MODE13_Pos          ;/*!< 0x04000000 */
GPIO_MODER_MODE13_1              EQU		0x2 << GPIO_MODER_MODE13_Pos          ;/*!< 0x08000000 */
GPIO_MODER_MODE14_Pos            EQU		28                                 
GPIO_MODER_MODE14_Msk            EQU		0x3 << GPIO_MODER_MODE14_Pos          ;/*!< 0x30000000 */
GPIO_MODER_MODE14                EQU		GPIO_MODER_MODE14_Msk                 
GPIO_MODER_MODE14_0              EQU		0x1 << GPIO_MODER_MODE14_Pos          ;/*!< 0x10000000 */
GPIO_MODER_MODE14_1              EQU		0x2 << GPIO_MODER_MODE14_Pos          ;/*!< 0x20000000 */
GPIO_MODER_MODE15_Pos            EQU		30                                 
GPIO_MODER_MODE15_Msk            EQU		0x3 << GPIO_MODER_MODE15_Pos          ;/*!< 0xC0000000 */
GPIO_MODER_MODE15                EQU		GPIO_MODER_MODE15_Msk                 
GPIO_MODER_MODE15_0              EQU		0x1 << GPIO_MODER_MODE15_Pos          ;/*!< 0x40000000 */
GPIO_MODER_MODE15_1              EQU		0x2 << GPIO_MODER_MODE15_Pos          ;/*!< 0x80000000 */

;/* Legacy defines */
GPIO_MODER_MODER0_Pos            EQU		0                                  
GPIO_MODER_MODER0_Msk            EQU		0x3 << GPIO_MODER_MODER0_Pos          ;/*!< 0x00000003 */
GPIO_MODER_MODER0                EQU		GPIO_MODER_MODER0_Msk                 
GPIO_MODER_MODER0_0              EQU		0x1 << GPIO_MODER_MODER0_Pos          ;/*!< 0x00000001 */
GPIO_MODER_MODER0_1              EQU		0x2 << GPIO_MODER_MODER0_Pos          ;/*!< 0x00000002 */
GPIO_MODER_MODER1_Pos            EQU		2                                  
GPIO_MODER_MODER1_Msk            EQU		0x3 << GPIO_MODER_MODER1_Pos          ;/*!< 0x0000000C */
GPIO_MODER_MODER1                EQU		GPIO_MODER_MODER1_Msk                 
GPIO_MODER_MODER1_0              EQU		0x1 << GPIO_MODER_MODER1_Pos          ;/*!< 0x00000004 */
GPIO_MODER_MODER1_1              EQU		0x2 << GPIO_MODER_MODER1_Pos          ;/*!< 0x00000008 */
GPIO_MODER_MODER2_Pos            EQU		4                                  
GPIO_MODER_MODER2_Msk            EQU		0x3 << GPIO_MODER_MODER2_Pos          ;/*!< 0x00000030 */
GPIO_MODER_MODER2                EQU		GPIO_MODER_MODER2_Msk                 
GPIO_MODER_MODER2_0              EQU		0x1 << GPIO_MODER_MODER2_Pos          ;/*!< 0x00000010 */
GPIO_MODER_MODER2_1              EQU		0x2 << GPIO_MODER_MODER2_Pos          ;/*!< 0x00000020 */
GPIO_MODER_MODER3_Pos            EQU		6                                  
GPIO_MODER_MODER3_Msk            EQU		0x3 << GPIO_MODER_MODER3_Pos          ;/*!< 0x000000C0 */
GPIO_MODER_MODER3                EQU		GPIO_MODER_MODER3_Msk                 
GPIO_MODER_MODER3_0              EQU		0x1 << GPIO_MODER_MODER3_Pos          ;/*!< 0x00000040 */
GPIO_MODER_MODER3_1              EQU		0x2 << GPIO_MODER_MODER3_Pos          ;/*!< 0x00000080 */
GPIO_MODER_MODER4_Pos            EQU		8                                  
GPIO_MODER_MODER4_Msk            EQU		0x3 << GPIO_MODER_MODER4_Pos          ;/*!< 0x00000300 */
GPIO_MODER_MODER4                EQU		GPIO_MODER_MODER4_Msk                 
GPIO_MODER_MODER4_0              EQU		0x1 << GPIO_MODER_MODER4_Pos          ;/*!< 0x00000100 */
GPIO_MODER_MODER4_1              EQU		0x2 << GPIO_MODER_MODER4_Pos          ;/*!< 0x00000200 */
GPIO_MODER_MODER5_Pos            EQU		10                                 
GPIO_MODER_MODER5_Msk            EQU		0x3 << GPIO_MODER_MODER5_Pos          ;/*!< 0x00000C00 */
GPIO_MODER_MODER5                EQU		GPIO_MODER_MODER5_Msk                 
GPIO_MODER_MODER5_0              EQU		0x1 << GPIO_MODER_MODER5_Pos          ;/*!< 0x00000400 */
GPIO_MODER_MODER5_1              EQU		0x2 << GPIO_MODER_MODER5_Pos          ;/*!< 0x00000800 */
GPIO_MODER_MODER6_Pos            EQU		12                                 
GPIO_MODER_MODER6_Msk            EQU		0x3 << GPIO_MODER_MODER6_Pos          ;/*!< 0x00003000 */
GPIO_MODER_MODER6                EQU		GPIO_MODER_MODER6_Msk                 
GPIO_MODER_MODER6_0              EQU		0x1 << GPIO_MODER_MODER6_Pos          ;/*!< 0x00001000 */
GPIO_MODER_MODER6_1              EQU		0x2 << GPIO_MODER_MODER6_Pos          ;/*!< 0x00002000 */
GPIO_MODER_MODER7_Pos            EQU		14                                 
GPIO_MODER_MODER7_Msk            EQU		0x3 << GPIO_MODER_MODER7_Pos          ;/*!< 0x0000C000 */
GPIO_MODER_MODER7                EQU		GPIO_MODER_MODER7_Msk                 
GPIO_MODER_MODER7_0              EQU		0x1 << GPIO_MODER_MODER7_Pos          ;/*!< 0x00004000 */
GPIO_MODER_MODER7_1              EQU		0x2 << GPIO_MODER_MODER7_Pos          ;/*!< 0x00008000 */
GPIO_MODER_MODER8_Pos            EQU		16                                 
GPIO_MODER_MODER8_Msk            EQU		0x3 << GPIO_MODER_MODER8_Pos          ;/*!< 0x00030000 */
GPIO_MODER_MODER8                EQU		GPIO_MODER_MODER8_Msk                 
GPIO_MODER_MODER8_0              EQU		0x1 << GPIO_MODER_MODER8_Pos          ;/*!< 0x00010000 */
GPIO_MODER_MODER8_1              EQU		0x2 << GPIO_MODER_MODER8_Pos          ;/*!< 0x00020000 */
GPIO_MODER_MODER9_Pos            EQU		18                                 
GPIO_MODER_MODER9_Msk            EQU		0x3 << GPIO_MODER_MODER9_Pos          ;/*!< 0x000C0000 */
GPIO_MODER_MODER9                EQU		GPIO_MODER_MODER9_Msk                 
GPIO_MODER_MODER9_0              EQU		0x1 << GPIO_MODER_MODER9_Pos          ;/*!< 0x00040000 */
GPIO_MODER_MODER9_1              EQU		0x2 << GPIO_MODER_MODER9_Pos          ;/*!< 0x00080000 */
GPIO_MODER_MODER10_Pos           EQU		20                                 
GPIO_MODER_MODER10_Msk           EQU		0x3 << GPIO_MODER_MODER10_Pos         ;/*!< 0x00300000 */
GPIO_MODER_MODER10               EQU		GPIO_MODER_MODER10_Msk                
GPIO_MODER_MODER10_0             EQU		0x1 << GPIO_MODER_MODER10_Pos         ;/*!< 0x00100000 */
GPIO_MODER_MODER10_1             EQU		0x2 << GPIO_MODER_MODER10_Pos         ;/*!< 0x00200000 */
GPIO_MODER_MODER11_Pos           EQU		22                                 
GPIO_MODER_MODER11_Msk           EQU		0x3 << GPIO_MODER_MODER11_Pos         ;/*!< 0x00C00000 */
GPIO_MODER_MODER11               EQU		GPIO_MODER_MODER11_Msk                
GPIO_MODER_MODER11_0             EQU		0x1 << GPIO_MODER_MODER11_Pos         ;/*!< 0x00400000 */
GPIO_MODER_MODER11_1             EQU		0x2 << GPIO_MODER_MODER11_Pos         ;/*!< 0x00800000 */
GPIO_MODER_MODER12_Pos           EQU		24                                 
GPIO_MODER_MODER12_Msk           EQU		0x3 << GPIO_MODER_MODER12_Pos         ;/*!< 0x03000000 */
GPIO_MODER_MODER12               EQU		GPIO_MODER_MODER12_Msk                
GPIO_MODER_MODER12_0             EQU		0x1 << GPIO_MODER_MODER12_Pos         ;/*!< 0x01000000 */
GPIO_MODER_MODER12_1             EQU		0x2 << GPIO_MODER_MODER12_Pos         ;/*!< 0x02000000 */
GPIO_MODER_MODER13_Pos           EQU		26                                 
GPIO_MODER_MODER13_Msk           EQU		0x3 << GPIO_MODER_MODER13_Pos         ;/*!< 0x0C000000 */
GPIO_MODER_MODER13               EQU		GPIO_MODER_MODER13_Msk                
GPIO_MODER_MODER13_0             EQU		0x1 << GPIO_MODER_MODER13_Pos         ;/*!< 0x04000000 */
GPIO_MODER_MODER13_1             EQU		0x2 << GPIO_MODER_MODER13_Pos         ;/*!< 0x08000000 */
GPIO_MODER_MODER14_Pos           EQU		28                                 
GPIO_MODER_MODER14_Msk           EQU		0x3 << GPIO_MODER_MODER14_Pos         ;/*!< 0x30000000 */
GPIO_MODER_MODER14               EQU		GPIO_MODER_MODER14_Msk                
GPIO_MODER_MODER14_0             EQU		0x1 << GPIO_MODER_MODER14_Pos         ;/*!< 0x10000000 */
GPIO_MODER_MODER14_1             EQU		0x2 << GPIO_MODER_MODER14_Pos         ;/*!< 0x20000000 */
GPIO_MODER_MODER15_Pos           EQU		30                                 
GPIO_MODER_MODER15_Msk           EQU		0x3 << GPIO_MODER_MODER15_Pos         ;/*!< 0xC0000000 */
GPIO_MODER_MODER15               EQU		GPIO_MODER_MODER15_Msk                
GPIO_MODER_MODER15_0             EQU		0x1 << GPIO_MODER_MODER15_Pos         ;/*!< 0x40000000 */
GPIO_MODER_MODER15_1             EQU		0x2 << GPIO_MODER_MODER15_Pos         ;/*!< 0x80000000 */

GPIO_OTYPER			             EQU		0x04
;/******************  Bits definition for GPIO_OTYPER register  ****************/
GPIO_OTYPER_OT0_Pos              EQU		0                                  
GPIO_OTYPER_OT0_Msk              EQU		0x1 << GPIO_OTYPER_OT0_Pos            ;/*!< 0x00000001 */
GPIO_OTYPER_OT0                  EQU		GPIO_OTYPER_OT0_Msk                   
GPIO_OTYPER_OT1_Pos              EQU		1                                  
GPIO_OTYPER_OT1_Msk              EQU		0x1 << GPIO_OTYPER_OT1_Pos            ;/*!< 0x00000002 */
GPIO_OTYPER_OT1                  EQU		GPIO_OTYPER_OT1_Msk                   
GPIO_OTYPER_OT2_Pos              EQU		2                                  
GPIO_OTYPER_OT2_Msk              EQU		0x1 << GPIO_OTYPER_OT2_Pos            ;/*!< 0x00000004 */
GPIO_OTYPER_OT2                  EQU		GPIO_OTYPER_OT2_Msk                   
GPIO_OTYPER_OT3_Pos              EQU		3                                  
GPIO_OTYPER_OT3_Msk              EQU		0x1 << GPIO_OTYPER_OT3_Pos            ;/*!< 0x00000008 */
GPIO_OTYPER_OT3                  EQU		GPIO_OTYPER_OT3_Msk                   
GPIO_OTYPER_OT4_Pos              EQU		4                                  
GPIO_OTYPER_OT4_Msk              EQU		0x1 << GPIO_OTYPER_OT4_Pos            ;/*!< 0x00000010 */
GPIO_OTYPER_OT4                  EQU		GPIO_OTYPER_OT4_Msk                   
GPIO_OTYPER_OT5_Pos              EQU		5                                  
GPIO_OTYPER_OT5_Msk              EQU		0x1 << GPIO_OTYPER_OT5_Pos            ;/*!< 0x00000020 */
GPIO_OTYPER_OT5                  EQU		GPIO_OTYPER_OT5_Msk                   
GPIO_OTYPER_OT6_Pos              EQU		6                                  
GPIO_OTYPER_OT6_Msk              EQU		0x1 << GPIO_OTYPER_OT6_Pos            ;/*!< 0x00000040 */
GPIO_OTYPER_OT6                  EQU		GPIO_OTYPER_OT6_Msk                   
GPIO_OTYPER_OT7_Pos              EQU		7                                  
GPIO_OTYPER_OT7_Msk              EQU		0x1 << GPIO_OTYPER_OT7_Pos            ;/*!< 0x00000080 */
GPIO_OTYPER_OT7                  EQU		GPIO_OTYPER_OT7_Msk                   
GPIO_OTYPER_OT8_Pos              EQU		8                                  
GPIO_OTYPER_OT8_Msk              EQU		0x1 << GPIO_OTYPER_OT8_Pos            ;/*!< 0x00000100 */
GPIO_OTYPER_OT8                  EQU		GPIO_OTYPER_OT8_Msk                   
GPIO_OTYPER_OT9_Pos              EQU		9                                  
GPIO_OTYPER_OT9_Msk              EQU		0x1 << GPIO_OTYPER_OT9_Pos            ;/*!< 0x00000200 */
GPIO_OTYPER_OT9                  EQU		GPIO_OTYPER_OT9_Msk                   
GPIO_OTYPER_OT10_Pos             EQU		10                                 
GPIO_OTYPER_OT10_Msk             EQU		0x1 << GPIO_OTYPER_OT10_Pos           ;/*!< 0x00000400 */
GPIO_OTYPER_OT10                 EQU		GPIO_OTYPER_OT10_Msk                  
GPIO_OTYPER_OT11_Pos             EQU		11                                 
GPIO_OTYPER_OT11_Msk             EQU		0x1 << GPIO_OTYPER_OT11_Pos           ;/*!< 0x00000800 */
GPIO_OTYPER_OT11                 EQU		GPIO_OTYPER_OT11_Msk                  
GPIO_OTYPER_OT12_Pos             EQU		12                                 
GPIO_OTYPER_OT12_Msk             EQU		0x1 << GPIO_OTYPER_OT12_Pos           ;/*!< 0x00001000 */
GPIO_OTYPER_OT12                 EQU		GPIO_OTYPER_OT12_Msk                  
GPIO_OTYPER_OT13_Pos             EQU		13                                 
GPIO_OTYPER_OT13_Msk             EQU		0x1 << GPIO_OTYPER_OT13_Pos           ;/*!< 0x00002000 */
GPIO_OTYPER_OT13                 EQU		GPIO_OTYPER_OT13_Msk                  
GPIO_OTYPER_OT14_Pos             EQU		14                                 
GPIO_OTYPER_OT14_Msk             EQU		0x1 << GPIO_OTYPER_OT14_Pos           ;/*!< 0x00004000 */
GPIO_OTYPER_OT14                 EQU		GPIO_OTYPER_OT14_Msk                  
GPIO_OTYPER_OT15_Pos             EQU		15                                 
GPIO_OTYPER_OT15_Msk             EQU		0x1 << GPIO_OTYPER_OT15_Pos           ;/*!< 0x00008000 */
GPIO_OTYPER_OT15                 EQU		GPIO_OTYPER_OT15_Msk                  

;/* Legacy defines */
GPIO_OTYPER_OT_0                 EQU		GPIO_OTYPER_OT0
GPIO_OTYPER_OT_1                 EQU		GPIO_OTYPER_OT1
GPIO_OTYPER_OT_2                 EQU		GPIO_OTYPER_OT2
GPIO_OTYPER_OT_3                 EQU		GPIO_OTYPER_OT3
GPIO_OTYPER_OT_4                 EQU		GPIO_OTYPER_OT4
GPIO_OTYPER_OT_5                 EQU		GPIO_OTYPER_OT5
GPIO_OTYPER_OT_6                 EQU		GPIO_OTYPER_OT6
GPIO_OTYPER_OT_7                 EQU		GPIO_OTYPER_OT7
GPIO_OTYPER_OT_8                 EQU		GPIO_OTYPER_OT8
GPIO_OTYPER_OT_9                 EQU		GPIO_OTYPER_OT9
GPIO_OTYPER_OT_10                EQU		GPIO_OTYPER_OT10
GPIO_OTYPER_OT_11                EQU		GPIO_OTYPER_OT11
GPIO_OTYPER_OT_12                EQU		GPIO_OTYPER_OT12
GPIO_OTYPER_OT_13                EQU		GPIO_OTYPER_OT13
GPIO_OTYPER_OT_14                EQU		GPIO_OTYPER_OT14
GPIO_OTYPER_OT_15                EQU		GPIO_OTYPER_OT15

GPIO_OSPEEDR			         EQU		0x08
;/******************  Bits definition for GPIO_OSPEEDR register  ***************/
GPIO_OSPEEDR_OSPEED0_Pos         EQU		0                                  
GPIO_OSPEEDR_OSPEED0_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED0_Pos       ;/*!< 0x00000003 */
GPIO_OSPEEDR_OSPEED0             EQU		GPIO_OSPEEDR_OSPEED0_Msk              
GPIO_OSPEEDR_OSPEED0_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED0_Pos       ;/*!< 0x00000001 */
GPIO_OSPEEDR_OSPEED0_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED0_Pos       ;/*!< 0x00000002 */
GPIO_OSPEEDR_OSPEED1_Pos         EQU		2                                  
GPIO_OSPEEDR_OSPEED1_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED1_Pos       ;/*!< 0x0000000C */
GPIO_OSPEEDR_OSPEED1             EQU		GPIO_OSPEEDR_OSPEED1_Msk              
GPIO_OSPEEDR_OSPEED1_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED1_Pos       ;/*!< 0x00000004 */
GPIO_OSPEEDR_OSPEED1_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED1_Pos       ;/*!< 0x00000008 */
GPIO_OSPEEDR_OSPEED2_Pos         EQU		4                                  
GPIO_OSPEEDR_OSPEED2_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED2_Pos       ;/*!< 0x00000030 */
GPIO_OSPEEDR_OSPEED2             EQU		GPIO_OSPEEDR_OSPEED2_Msk              
GPIO_OSPEEDR_OSPEED2_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED2_Pos       ;/*!< 0x00000010 */
GPIO_OSPEEDR_OSPEED2_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED2_Pos       ;/*!< 0x00000020 */
GPIO_OSPEEDR_OSPEED3_Pos         EQU		6                                  
GPIO_OSPEEDR_OSPEED3_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED3_Pos       ;/*!< 0x000000C0 */
GPIO_OSPEEDR_OSPEED3             EQU		GPIO_OSPEEDR_OSPEED3_Msk              
GPIO_OSPEEDR_OSPEED3_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED3_Pos       ;/*!< 0x00000040 */
GPIO_OSPEEDR_OSPEED3_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED3_Pos       ;/*!< 0x00000080 */
GPIO_OSPEEDR_OSPEED4_Pos         EQU		8                                  
GPIO_OSPEEDR_OSPEED4_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED4_Pos       ;/*!< 0x00000300 */
GPIO_OSPEEDR_OSPEED4             EQU		GPIO_OSPEEDR_OSPEED4_Msk              
GPIO_OSPEEDR_OSPEED4_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED4_Pos       ;/*!< 0x00000100 */
GPIO_OSPEEDR_OSPEED4_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED4_Pos       ;/*!< 0x00000200 */
GPIO_OSPEEDR_OSPEED5_Pos         EQU		10                                 
GPIO_OSPEEDR_OSPEED5_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED5_Pos       ;/*!< 0x00000C00 */
GPIO_OSPEEDR_OSPEED5             EQU		GPIO_OSPEEDR_OSPEED5_Msk              
GPIO_OSPEEDR_OSPEED5_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED5_Pos       ;/*!< 0x00000400 */
GPIO_OSPEEDR_OSPEED5_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED5_Pos       ;/*!< 0x00000800 */
GPIO_OSPEEDR_OSPEED6_Pos         EQU		12                                 
GPIO_OSPEEDR_OSPEED6_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED6_Pos       ;/*!< 0x00003000 */
GPIO_OSPEEDR_OSPEED6             EQU		GPIO_OSPEEDR_OSPEED6_Msk              
GPIO_OSPEEDR_OSPEED6_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED6_Pos       ;/*!< 0x00001000 */
GPIO_OSPEEDR_OSPEED6_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED6_Pos       ;/*!< 0x00002000 */
GPIO_OSPEEDR_OSPEED7_Pos         EQU		14                                 
GPIO_OSPEEDR_OSPEED7_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED7_Pos       ;/*!< 0x0000C000 */
GPIO_OSPEEDR_OSPEED7             EQU		GPIO_OSPEEDR_OSPEED7_Msk              
GPIO_OSPEEDR_OSPEED7_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED7_Pos       ;/*!< 0x00004000 */
GPIO_OSPEEDR_OSPEED7_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED7_Pos       ;/*!< 0x00008000 */
GPIO_OSPEEDR_OSPEED8_Pos         EQU		16                                 
GPIO_OSPEEDR_OSPEED8_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED8_Pos       ;/*!< 0x00030000 */
GPIO_OSPEEDR_OSPEED8             EQU		GPIO_OSPEEDR_OSPEED8_Msk              
GPIO_OSPEEDR_OSPEED8_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED8_Pos       ;/*!< 0x00010000 */
GPIO_OSPEEDR_OSPEED8_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED8_Pos       ;/*!< 0x00020000 */
GPIO_OSPEEDR_OSPEED9_Pos         EQU		18                                 
GPIO_OSPEEDR_OSPEED9_Msk         EQU		0x3 << GPIO_OSPEEDR_OSPEED9_Pos       ;/*!< 0x000C0000 */
GPIO_OSPEEDR_OSPEED9             EQU		GPIO_OSPEEDR_OSPEED9_Msk              
GPIO_OSPEEDR_OSPEED9_0           EQU		0x1 << GPIO_OSPEEDR_OSPEED9_Pos       ;/*!< 0x00040000 */
GPIO_OSPEEDR_OSPEED9_1           EQU		0x2 << GPIO_OSPEEDR_OSPEED9_Pos       ;/*!< 0x00080000 */
GPIO_OSPEEDR_OSPEED10_Pos        EQU		20                                 
GPIO_OSPEEDR_OSPEED10_Msk        EQU		0x3 << GPIO_OSPEEDR_OSPEED10_Pos      ;/*!< 0x00300000 */
GPIO_OSPEEDR_OSPEED10            EQU		GPIO_OSPEEDR_OSPEED10_Msk             
GPIO_OSPEEDR_OSPEED10_0          EQU		0x1 << GPIO_OSPEEDR_OSPEED10_Pos      ;/*!< 0x00100000 */
GPIO_OSPEEDR_OSPEED10_1          EQU		0x2 << GPIO_OSPEEDR_OSPEED10_Pos      ;/*!< 0x00200000 */
GPIO_OSPEEDR_OSPEED11_Pos        EQU		22                                 
GPIO_OSPEEDR_OSPEED11_Msk        EQU		0x3 << GPIO_OSPEEDR_OSPEED11_Pos      ;/*!< 0x00C00000 */
GPIO_OSPEEDR_OSPEED11            EQU		GPIO_OSPEEDR_OSPEED11_Msk             
GPIO_OSPEEDR_OSPEED11_0          EQU		0x1 << GPIO_OSPEEDR_OSPEED11_Pos      ;/*!< 0x00400000 */
GPIO_OSPEEDR_OSPEED11_1          EQU		0x2 << GPIO_OSPEEDR_OSPEED11_Pos      ;/*!< 0x00800000 */
GPIO_OSPEEDR_OSPEED12_Pos        EQU		24                                 
GPIO_OSPEEDR_OSPEED12_Msk        EQU		0x3 << GPIO_OSPEEDR_OSPEED12_Pos      ;/*!< 0x03000000 */
GPIO_OSPEEDR_OSPEED12            EQU		GPIO_OSPEEDR_OSPEED12_Msk             
GPIO_OSPEEDR_OSPEED12_0          EQU		0x1 << GPIO_OSPEEDR_OSPEED12_Pos      ;/*!< 0x01000000 */
GPIO_OSPEEDR_OSPEED12_1          EQU		0x2 << GPIO_OSPEEDR_OSPEED12_Pos      ;/*!< 0x02000000 */
GPIO_OSPEEDR_OSPEED13_Pos        EQU		26                                 
GPIO_OSPEEDR_OSPEED13_Msk        EQU		0x3 << GPIO_OSPEEDR_OSPEED13_Pos      ;/*!< 0x0C000000 */
GPIO_OSPEEDR_OSPEED13            EQU		GPIO_OSPEEDR_OSPEED13_Msk             
GPIO_OSPEEDR_OSPEED13_0          EQU		0x1 << GPIO_OSPEEDR_OSPEED13_Pos      ;/*!< 0x04000000 */
GPIO_OSPEEDR_OSPEED13_1          EQU		0x2 << GPIO_OSPEEDR_OSPEED13_Pos      ;/*!< 0x08000000 */
GPIO_OSPEEDR_OSPEED14_Pos        EQU		28                                 
GPIO_OSPEEDR_OSPEED14_Msk        EQU		0x3 << GPIO_OSPEEDR_OSPEED14_Pos      ;/*!< 0x30000000 */
GPIO_OSPEEDR_OSPEED14            EQU		GPIO_OSPEEDR_OSPEED14_Msk             
GPIO_OSPEEDR_OSPEED14_0          EQU		0x1 << GPIO_OSPEEDR_OSPEED14_Pos      ;/*!< 0x10000000 */
GPIO_OSPEEDR_OSPEED14_1          EQU		0x2 << GPIO_OSPEEDR_OSPEED14_Pos      ;/*!< 0x20000000 */
GPIO_OSPEEDR_OSPEED15_Pos        EQU		30                                 
GPIO_OSPEEDR_OSPEED15_Msk        EQU		0x3 << GPIO_OSPEEDR_OSPEED15_Pos      ;/*!< 0xC0000000 */
GPIO_OSPEEDR_OSPEED15            EQU		GPIO_OSPEEDR_OSPEED15_Msk             
GPIO_OSPEEDR_OSPEED15_0          EQU		0x1 << GPIO_OSPEEDR_OSPEED15_Pos      ;/*!< 0x40000000 */
GPIO_OSPEEDR_OSPEED15_1          EQU		0x2 << GPIO_OSPEEDR_OSPEED15_Pos      ;/*!< 0x80000000 */

;/* Legacy defines */
GPIO_OSPEEDER_OSPEEDR0           EQU		GPIO_OSPEEDR_OSPEED0
GPIO_OSPEEDER_OSPEEDR0_0         EQU		GPIO_OSPEEDR_OSPEED0_0
GPIO_OSPEEDER_OSPEEDR0_1         EQU		GPIO_OSPEEDR_OSPEED0_1
GPIO_OSPEEDER_OSPEEDR1           EQU		GPIO_OSPEEDR_OSPEED1
GPIO_OSPEEDER_OSPEEDR1_0         EQU		GPIO_OSPEEDR_OSPEED1_0
GPIO_OSPEEDER_OSPEEDR1_1         EQU		GPIO_OSPEEDR_OSPEED1_1
GPIO_OSPEEDER_OSPEEDR2           EQU		GPIO_OSPEEDR_OSPEED2
GPIO_OSPEEDER_OSPEEDR2_0         EQU		GPIO_OSPEEDR_OSPEED2_0
GPIO_OSPEEDER_OSPEEDR2_1         EQU		GPIO_OSPEEDR_OSPEED2_1
GPIO_OSPEEDER_OSPEEDR3           EQU		GPIO_OSPEEDR_OSPEED3
GPIO_OSPEEDER_OSPEEDR3_0         EQU		GPIO_OSPEEDR_OSPEED3_0
GPIO_OSPEEDER_OSPEEDR3_1         EQU		GPIO_OSPEEDR_OSPEED3_1
GPIO_OSPEEDER_OSPEEDR4           EQU		GPIO_OSPEEDR_OSPEED4
GPIO_OSPEEDER_OSPEEDR4_0         EQU		GPIO_OSPEEDR_OSPEED4_0
GPIO_OSPEEDER_OSPEEDR4_1         EQU		GPIO_OSPEEDR_OSPEED4_1
GPIO_OSPEEDER_OSPEEDR5           EQU		GPIO_OSPEEDR_OSPEED5
GPIO_OSPEEDER_OSPEEDR5_0         EQU		GPIO_OSPEEDR_OSPEED5_0
GPIO_OSPEEDER_OSPEEDR5_1         EQU		GPIO_OSPEEDR_OSPEED5_1
GPIO_OSPEEDER_OSPEEDR6           EQU		GPIO_OSPEEDR_OSPEED6
GPIO_OSPEEDER_OSPEEDR6_0         EQU		GPIO_OSPEEDR_OSPEED6_0
GPIO_OSPEEDER_OSPEEDR6_1         EQU		GPIO_OSPEEDR_OSPEED6_1
GPIO_OSPEEDER_OSPEEDR7           EQU		GPIO_OSPEEDR_OSPEED7
GPIO_OSPEEDER_OSPEEDR7_0         EQU		GPIO_OSPEEDR_OSPEED7_0
GPIO_OSPEEDER_OSPEEDR7_1         EQU		GPIO_OSPEEDR_OSPEED7_1
GPIO_OSPEEDER_OSPEEDR8           EQU		GPIO_OSPEEDR_OSPEED8
GPIO_OSPEEDER_OSPEEDR8_0         EQU		GPIO_OSPEEDR_OSPEED8_0
GPIO_OSPEEDER_OSPEEDR8_1         EQU		GPIO_OSPEEDR_OSPEED8_1
GPIO_OSPEEDER_OSPEEDR9           EQU		GPIO_OSPEEDR_OSPEED9
GPIO_OSPEEDER_OSPEEDR9_0         EQU		GPIO_OSPEEDR_OSPEED9_0
GPIO_OSPEEDER_OSPEEDR9_1         EQU		GPIO_OSPEEDR_OSPEED9_1
GPIO_OSPEEDER_OSPEEDR10          EQU		GPIO_OSPEEDR_OSPEED10
GPIO_OSPEEDER_OSPEEDR10_0        EQU		GPIO_OSPEEDR_OSPEED10_0
GPIO_OSPEEDER_OSPEEDR10_1        EQU		GPIO_OSPEEDR_OSPEED10_1
GPIO_OSPEEDER_OSPEEDR11          EQU		GPIO_OSPEEDR_OSPEED11
GPIO_OSPEEDER_OSPEEDR11_0        EQU		GPIO_OSPEEDR_OSPEED11_0
GPIO_OSPEEDER_OSPEEDR11_1        EQU		GPIO_OSPEEDR_OSPEED11_1
GPIO_OSPEEDER_OSPEEDR12          EQU		GPIO_OSPEEDR_OSPEED12
GPIO_OSPEEDER_OSPEEDR12_0        EQU		GPIO_OSPEEDR_OSPEED12_0
GPIO_OSPEEDER_OSPEEDR12_1        EQU		GPIO_OSPEEDR_OSPEED12_1
GPIO_OSPEEDER_OSPEEDR13          EQU		GPIO_OSPEEDR_OSPEED13
GPIO_OSPEEDER_OSPEEDR13_0        EQU		GPIO_OSPEEDR_OSPEED13_0
GPIO_OSPEEDER_OSPEEDR13_1        EQU		GPIO_OSPEEDR_OSPEED13_1
GPIO_OSPEEDER_OSPEEDR14          EQU		GPIO_OSPEEDR_OSPEED14
GPIO_OSPEEDER_OSPEEDR14_0        EQU		GPIO_OSPEEDR_OSPEED14_0
GPIO_OSPEEDER_OSPEEDR14_1        EQU		GPIO_OSPEEDR_OSPEED14_1
GPIO_OSPEEDER_OSPEEDR15          EQU		GPIO_OSPEEDR_OSPEED15
GPIO_OSPEEDER_OSPEEDR15_0        EQU		GPIO_OSPEEDR_OSPEED15_0
GPIO_OSPEEDER_OSPEEDR15_1        EQU		GPIO_OSPEEDR_OSPEED15_1

GPIO_PUPDR			             EQU		0x0C
;/******************  Bits definition for GPIO_PUPDR register  *****************/
GPIO_PUPDR_PUPD0_Pos             EQU		0                                  
GPIO_PUPDR_PUPD0_Msk             EQU		0x3 << GPIO_PUPDR_PUPD0_Pos           ;/*!< 0x00000003 */
GPIO_PUPDR_PUPD0                 EQU		GPIO_PUPDR_PUPD0_Msk                  
GPIO_PUPDR_PUPD0_0               EQU		0x1 << GPIO_PUPDR_PUPD0_Pos           ;/*!< 0x00000001 */
GPIO_PUPDR_PUPD0_1               EQU		0x2 << GPIO_PUPDR_PUPD0_Pos           ;/*!< 0x00000002 */
GPIO_PUPDR_PUPD1_Pos             EQU		2                                  
GPIO_PUPDR_PUPD1_Msk             EQU		0x3 << GPIO_PUPDR_PUPD1_Pos           ;/*!< 0x0000000C */
GPIO_PUPDR_PUPD1                 EQU		GPIO_PUPDR_PUPD1_Msk                  
GPIO_PUPDR_PUPD1_0               EQU		0x1 << GPIO_PUPDR_PUPD1_Pos           ;/*!< 0x00000004 */
GPIO_PUPDR_PUPD1_1               EQU		0x2 << GPIO_PUPDR_PUPD1_Pos           ;/*!< 0x00000008 */
GPIO_PUPDR_PUPD2_Pos             EQU		4                                  
GPIO_PUPDR_PUPD2_Msk             EQU		0x3 << GPIO_PUPDR_PUPD2_Pos           ;/*!< 0x00000030 */
GPIO_PUPDR_PUPD2                 EQU		GPIO_PUPDR_PUPD2_Msk                  
GPIO_PUPDR_PUPD2_0               EQU		0x1 << GPIO_PUPDR_PUPD2_Pos           ;/*!< 0x00000010 */
GPIO_PUPDR_PUPD2_1               EQU		0x2 << GPIO_PUPDR_PUPD2_Pos           ;/*!< 0x00000020 */
GPIO_PUPDR_PUPD3_Pos             EQU		6                                  
GPIO_PUPDR_PUPD3_Msk             EQU		0x3 << GPIO_PUPDR_PUPD3_Pos           ;/*!< 0x000000C0 */
GPIO_PUPDR_PUPD3                 EQU		GPIO_PUPDR_PUPD3_Msk                  
GPIO_PUPDR_PUPD3_0               EQU		0x1 << GPIO_PUPDR_PUPD3_Pos           ;/*!< 0x00000040 */
GPIO_PUPDR_PUPD3_1               EQU		0x2 << GPIO_PUPDR_PUPD3_Pos           ;/*!< 0x00000080 */
GPIO_PUPDR_PUPD4_Pos             EQU		8                                  
GPIO_PUPDR_PUPD4_Msk             EQU		0x3 << GPIO_PUPDR_PUPD4_Pos           ;/*!< 0x00000300 */
GPIO_PUPDR_PUPD4                 EQU		GPIO_PUPDR_PUPD4_Msk                  
GPIO_PUPDR_PUPD4_0               EQU		0x1 << GPIO_PUPDR_PUPD4_Pos           ;/*!< 0x00000100 */
GPIO_PUPDR_PUPD4_1               EQU		0x2 << GPIO_PUPDR_PUPD4_Pos           ;/*!< 0x00000200 */
GPIO_PUPDR_PUPD5_Pos             EQU		10                                 
GPIO_PUPDR_PUPD5_Msk             EQU		0x3 << GPIO_PUPDR_PUPD5_Pos           ;/*!< 0x00000C00 */
GPIO_PUPDR_PUPD5                 EQU		GPIO_PUPDR_PUPD5_Msk                  
GPIO_PUPDR_PUPD5_0               EQU		0x1 << GPIO_PUPDR_PUPD5_Pos           ;/*!< 0x00000400 */
GPIO_PUPDR_PUPD5_1               EQU		0x2 << GPIO_PUPDR_PUPD5_Pos           ;/*!< 0x00000800 */
GPIO_PUPDR_PUPD6_Pos             EQU		12                                 
GPIO_PUPDR_PUPD6_Msk             EQU		0x3 << GPIO_PUPDR_PUPD6_Pos           ;/*!< 0x00003000 */
GPIO_PUPDR_PUPD6                 EQU		GPIO_PUPDR_PUPD6_Msk                  
GPIO_PUPDR_PUPD6_0               EQU		0x1 << GPIO_PUPDR_PUPD6_Pos           ;/*!< 0x00001000 */
GPIO_PUPDR_PUPD6_1               EQU		0x2 << GPIO_PUPDR_PUPD6_Pos           ;/*!< 0x00002000 */
GPIO_PUPDR_PUPD7_Pos             EQU		14                                 
GPIO_PUPDR_PUPD7_Msk             EQU		0x3 << GPIO_PUPDR_PUPD7_Pos           ;/*!< 0x0000C000 */
GPIO_PUPDR_PUPD7                 EQU		GPIO_PUPDR_PUPD7_Msk                  
GPIO_PUPDR_PUPD7_0               EQU		0x1 << GPIO_PUPDR_PUPD7_Pos           ;/*!< 0x00004000 */
GPIO_PUPDR_PUPD7_1               EQU		0x2 << GPIO_PUPDR_PUPD7_Pos           ;/*!< 0x00008000 */
GPIO_PUPDR_PUPD8_Pos             EQU		16                                 
GPIO_PUPDR_PUPD8_Msk             EQU		0x3 << GPIO_PUPDR_PUPD8_Pos           ;/*!< 0x00030000 */
GPIO_PUPDR_PUPD8                 EQU		GPIO_PUPDR_PUPD8_Msk                  
GPIO_PUPDR_PUPD8_0               EQU		0x1 << GPIO_PUPDR_PUPD8_Pos           ;/*!< 0x00010000 */
GPIO_PUPDR_PUPD8_1               EQU		0x2 << GPIO_PUPDR_PUPD8_Pos           ;/*!< 0x00020000 */
GPIO_PUPDR_PUPD9_Pos             EQU		18                                 
GPIO_PUPDR_PUPD9_Msk             EQU		0x3 << GPIO_PUPDR_PUPD9_Pos           ;/*!< 0x000C0000 */
GPIO_PUPDR_PUPD9                 EQU		GPIO_PUPDR_PUPD9_Msk                  
GPIO_PUPDR_PUPD9_0               EQU		0x1 << GPIO_PUPDR_PUPD9_Pos           ;/*!< 0x00040000 */
GPIO_PUPDR_PUPD9_1               EQU		0x2 << GPIO_PUPDR_PUPD9_Pos           ;/*!< 0x00080000 */
GPIO_PUPDR_PUPD10_Pos            EQU		20                                 
GPIO_PUPDR_PUPD10_Msk            EQU		0x3 << GPIO_PUPDR_PUPD10_Pos          ;/*!< 0x00300000 */
GPIO_PUPDR_PUPD10                EQU		GPIO_PUPDR_PUPD10_Msk                 
GPIO_PUPDR_PUPD10_0              EQU		0x1 << GPIO_PUPDR_PUPD10_Pos          ;/*!< 0x00100000 */
GPIO_PUPDR_PUPD10_1              EQU		0x2 << GPIO_PUPDR_PUPD10_Pos          ;/*!< 0x00200000 */
GPIO_PUPDR_PUPD11_Pos            EQU		22                                 
GPIO_PUPDR_PUPD11_Msk            EQU		0x3 << GPIO_PUPDR_PUPD11_Pos          ;/*!< 0x00C00000 */
GPIO_PUPDR_PUPD11                EQU		GPIO_PUPDR_PUPD11_Msk                 
GPIO_PUPDR_PUPD11_0              EQU		0x1 << GPIO_PUPDR_PUPD11_Pos          ;/*!< 0x00400000 */
GPIO_PUPDR_PUPD11_1              EQU		0x2 << GPIO_PUPDR_PUPD11_Pos          ;/*!< 0x00800000 */
GPIO_PUPDR_PUPD12_Pos            EQU		24                                 
GPIO_PUPDR_PUPD12_Msk            EQU		0x3 << GPIO_PUPDR_PUPD12_Pos          ;/*!< 0x03000000 */
GPIO_PUPDR_PUPD12                EQU		GPIO_PUPDR_PUPD12_Msk                 
GPIO_PUPDR_PUPD12_0              EQU		0x1 << GPIO_PUPDR_PUPD12_Pos          ;/*!< 0x01000000 */
GPIO_PUPDR_PUPD12_1              EQU		0x2 << GPIO_PUPDR_PUPD12_Pos          ;/*!< 0x02000000 */
GPIO_PUPDR_PUPD13_Pos            EQU		26                                 
GPIO_PUPDR_PUPD13_Msk            EQU		0x3 << GPIO_PUPDR_PUPD13_Pos          ;/*!< 0x0C000000 */
GPIO_PUPDR_PUPD13                EQU		GPIO_PUPDR_PUPD13_Msk                 
GPIO_PUPDR_PUPD13_0              EQU		0x1 << GPIO_PUPDR_PUPD13_Pos          ;/*!< 0x04000000 */
GPIO_PUPDR_PUPD13_1              EQU		0x2 << GPIO_PUPDR_PUPD13_Pos          ;/*!< 0x08000000 */
GPIO_PUPDR_PUPD14_Pos            EQU		28                                 
GPIO_PUPDR_PUPD14_Msk            EQU		0x3 << GPIO_PUPDR_PUPD14_Pos          ;/*!< 0x30000000 */
GPIO_PUPDR_PUPD14                EQU		GPIO_PUPDR_PUPD14_Msk                 
GPIO_PUPDR_PUPD14_0              EQU		0x1 << GPIO_PUPDR_PUPD14_Pos          ;/*!< 0x10000000 */
GPIO_PUPDR_PUPD14_1              EQU		0x2 << GPIO_PUPDR_PUPD14_Pos          ;/*!< 0x20000000 */
GPIO_PUPDR_PUPD15_Pos            EQU		30                                 
GPIO_PUPDR_PUPD15_Msk            EQU		0x3 << GPIO_PUPDR_PUPD15_Pos          ;/*!< 0xC0000000 */
GPIO_PUPDR_PUPD15                EQU		GPIO_PUPDR_PUPD15_Msk                 
GPIO_PUPDR_PUPD15_0              EQU		0x1 << GPIO_PUPDR_PUPD15_Pos          ;/*!< 0x40000000 */
GPIO_PUPDR_PUPD15_1              EQU		0x2 << GPIO_PUPDR_PUPD15_Pos          ;/*!< 0x80000000 */

;/* Legacy defines */
GPIO_PUPDR_PUPDR0                EQU		GPIO_PUPDR_PUPD0
GPIO_PUPDR_PUPDR0_0              EQU		GPIO_PUPDR_PUPD0_0
GPIO_PUPDR_PUPDR0_1              EQU		GPIO_PUPDR_PUPD0_1
GPIO_PUPDR_PUPDR1                EQU		GPIO_PUPDR_PUPD1
GPIO_PUPDR_PUPDR1_0              EQU		GPIO_PUPDR_PUPD1_0
GPIO_PUPDR_PUPDR1_1              EQU		GPIO_PUPDR_PUPD1_1
GPIO_PUPDR_PUPDR2                EQU		GPIO_PUPDR_PUPD2
GPIO_PUPDR_PUPDR2_0              EQU		GPIO_PUPDR_PUPD2_0
GPIO_PUPDR_PUPDR2_1              EQU		GPIO_PUPDR_PUPD2_1
GPIO_PUPDR_PUPDR3                EQU		GPIO_PUPDR_PUPD3
GPIO_PUPDR_PUPDR3_0              EQU		GPIO_PUPDR_PUPD3_0
GPIO_PUPDR_PUPDR3_1              EQU		GPIO_PUPDR_PUPD3_1
GPIO_PUPDR_PUPDR4                EQU		GPIO_PUPDR_PUPD4
GPIO_PUPDR_PUPDR4_0              EQU		GPIO_PUPDR_PUPD4_0
GPIO_PUPDR_PUPDR4_1              EQU		GPIO_PUPDR_PUPD4_1
GPIO_PUPDR_PUPDR5                EQU		GPIO_PUPDR_PUPD5
GPIO_PUPDR_PUPDR5_0              EQU		GPIO_PUPDR_PUPD5_0
GPIO_PUPDR_PUPDR5_1              EQU		GPIO_PUPDR_PUPD5_1
GPIO_PUPDR_PUPDR6                EQU		GPIO_PUPDR_PUPD6
GPIO_PUPDR_PUPDR6_0              EQU		GPIO_PUPDR_PUPD6_0
GPIO_PUPDR_PUPDR6_1              EQU		GPIO_PUPDR_PUPD6_1
GPIO_PUPDR_PUPDR7                EQU		GPIO_PUPDR_PUPD7
GPIO_PUPDR_PUPDR7_0              EQU		GPIO_PUPDR_PUPD7_0
GPIO_PUPDR_PUPDR7_1              EQU		GPIO_PUPDR_PUPD7_1
GPIO_PUPDR_PUPDR8                EQU		GPIO_PUPDR_PUPD8
GPIO_PUPDR_PUPDR8_0              EQU		GPIO_PUPDR_PUPD8_0
GPIO_PUPDR_PUPDR8_1              EQU		GPIO_PUPDR_PUPD8_1
GPIO_PUPDR_PUPDR9                EQU		GPIO_PUPDR_PUPD9
GPIO_PUPDR_PUPDR9_0              EQU		GPIO_PUPDR_PUPD9_0
GPIO_PUPDR_PUPDR9_1              EQU		GPIO_PUPDR_PUPD9_1
GPIO_PUPDR_PUPDR10               EQU		GPIO_PUPDR_PUPD10
GPIO_PUPDR_PUPDR10_0             EQU		GPIO_PUPDR_PUPD10_0
GPIO_PUPDR_PUPDR10_1             EQU		GPIO_PUPDR_PUPD10_1
GPIO_PUPDR_PUPDR11               EQU		GPIO_PUPDR_PUPD11
GPIO_PUPDR_PUPDR11_0             EQU		GPIO_PUPDR_PUPD11_0
GPIO_PUPDR_PUPDR11_1             EQU		GPIO_PUPDR_PUPD11_1
GPIO_PUPDR_PUPDR12               EQU		GPIO_PUPDR_PUPD12
GPIO_PUPDR_PUPDR12_0             EQU		GPIO_PUPDR_PUPD12_0
GPIO_PUPDR_PUPDR12_1             EQU		GPIO_PUPDR_PUPD12_1
GPIO_PUPDR_PUPDR13               EQU		GPIO_PUPDR_PUPD13
GPIO_PUPDR_PUPDR13_0             EQU		GPIO_PUPDR_PUPD13_0
GPIO_PUPDR_PUPDR13_1             EQU		GPIO_PUPDR_PUPD13_1
GPIO_PUPDR_PUPDR14               EQU		GPIO_PUPDR_PUPD14
GPIO_PUPDR_PUPDR14_0             EQU		GPIO_PUPDR_PUPD14_0
GPIO_PUPDR_PUPDR14_1             EQU		GPIO_PUPDR_PUPD14_1
GPIO_PUPDR_PUPDR15               EQU		GPIO_PUPDR_PUPD15
GPIO_PUPDR_PUPDR15_0             EQU		GPIO_PUPDR_PUPD15_0
GPIO_PUPDR_PUPDR15_1             EQU		GPIO_PUPDR_PUPD15_1

GPIO_IDR		                 EQU		0x10
;/******************  Bits definition for GPIO_IDR register  *******************/
GPIO_IDR_ID0_Pos                 EQU		0                                  
GPIO_IDR_ID0_Msk                 EQU		0x1 << GPIO_IDR_ID0_Pos               ;/*!< 0x00000001 */
GPIO_IDR_ID0                     EQU		GPIO_IDR_ID0_Msk                      
GPIO_IDR_ID1_Pos                 EQU		1                                  
GPIO_IDR_ID1_Msk                 EQU		0x1 << GPIO_IDR_ID1_Pos               ;/*!< 0x00000002 */
GPIO_IDR_ID1                     EQU		GPIO_IDR_ID1_Msk                      
GPIO_IDR_ID2_Pos                 EQU		2                                  
GPIO_IDR_ID2_Msk                 EQU		0x1 << GPIO_IDR_ID2_Pos               ;/*!< 0x00000004 */
GPIO_IDR_ID2                     EQU		GPIO_IDR_ID2_Msk                      
GPIO_IDR_ID3_Pos                 EQU		3                                  
GPIO_IDR_ID3_Msk                 EQU		0x1 << GPIO_IDR_ID3_Pos               ;/*!< 0x00000008 */
GPIO_IDR_ID3                     EQU		GPIO_IDR_ID3_Msk                      
GPIO_IDR_ID4_Pos                 EQU		4                                  
GPIO_IDR_ID4_Msk                 EQU		0x1 << GPIO_IDR_ID4_Pos               ;/*!< 0x00000010 */
GPIO_IDR_ID4                     EQU		GPIO_IDR_ID4_Msk                      
GPIO_IDR_ID5_Pos                 EQU		5                                  
GPIO_IDR_ID5_Msk                 EQU		0x1 << GPIO_IDR_ID5_Pos               ;/*!< 0x00000020 */
GPIO_IDR_ID5                     EQU		GPIO_IDR_ID5_Msk                      
GPIO_IDR_ID6_Pos                 EQU		6                                  
GPIO_IDR_ID6_Msk                 EQU		0x1 << GPIO_IDR_ID6_Pos               ;/*!< 0x00000040 */
GPIO_IDR_ID6                     EQU		GPIO_IDR_ID6_Msk                      
GPIO_IDR_ID7_Pos                 EQU		7                                  
GPIO_IDR_ID7_Msk                 EQU		0x1 << GPIO_IDR_ID7_Pos               ;/*!< 0x00000080 */
GPIO_IDR_ID7                     EQU		GPIO_IDR_ID7_Msk                      
GPIO_IDR_ID8_Pos                 EQU		8                                  
GPIO_IDR_ID8_Msk                 EQU		0x1 << GPIO_IDR_ID8_Pos               ;/*!< 0x00000100 */
GPIO_IDR_ID8                     EQU		GPIO_IDR_ID8_Msk                      
GPIO_IDR_ID9_Pos                 EQU		9                                  
GPIO_IDR_ID9_Msk                 EQU		0x1 << GPIO_IDR_ID9_Pos               ;/*!< 0x00000200 */
GPIO_IDR_ID9                     EQU		GPIO_IDR_ID9_Msk                      
GPIO_IDR_ID10_Pos                EQU		10                                 
GPIO_IDR_ID10_Msk                EQU		0x1 << GPIO_IDR_ID10_Pos              ;/*!< 0x00000400 */
GPIO_IDR_ID10                    EQU		GPIO_IDR_ID10_Msk                     
GPIO_IDR_ID11_Pos                EQU		11                                 
GPIO_IDR_ID11_Msk                EQU		0x1 << GPIO_IDR_ID11_Pos              ;/*!< 0x00000800 */
GPIO_IDR_ID11                    EQU		GPIO_IDR_ID11_Msk                     
GPIO_IDR_ID12_Pos                EQU		12                                 
GPIO_IDR_ID12_Msk                EQU		0x1 << GPIO_IDR_ID12_Pos              ;/*!< 0x00001000 */
GPIO_IDR_ID12                    EQU		GPIO_IDR_ID12_Msk                     
GPIO_IDR_ID13_Pos                EQU		13                                 
GPIO_IDR_ID13_Msk                EQU		0x1 << GPIO_IDR_ID13_Pos              ;/*!< 0x00002000 */
GPIO_IDR_ID13                    EQU		GPIO_IDR_ID13_Msk                     
GPIO_IDR_ID14_Pos                EQU		14                                 
GPIO_IDR_ID14_Msk                EQU		0x1 << GPIO_IDR_ID14_Pos              ;/*!< 0x00004000 */
GPIO_IDR_ID14                    EQU		GPIO_IDR_ID14_Msk                     
GPIO_IDR_ID15_Pos                EQU		15                                 
GPIO_IDR_ID15_Msk                EQU		0x1 << GPIO_IDR_ID15_Pos              ;/*!< 0x00008000 */
GPIO_IDR_ID15                    EQU		GPIO_IDR_ID15_Msk                     

;/* Legacy defines */
GPIO_IDR_IDR_0                   EQU		GPIO_IDR_ID0
GPIO_IDR_IDR_1                   EQU		GPIO_IDR_ID1
GPIO_IDR_IDR_2                   EQU		GPIO_IDR_ID2
GPIO_IDR_IDR_3                   EQU		GPIO_IDR_ID3
GPIO_IDR_IDR_4                   EQU		GPIO_IDR_ID4
GPIO_IDR_IDR_5                   EQU		GPIO_IDR_ID5
GPIO_IDR_IDR_6                   EQU		GPIO_IDR_ID6
GPIO_IDR_IDR_7                   EQU		GPIO_IDR_ID7
GPIO_IDR_IDR_8                   EQU		GPIO_IDR_ID8
GPIO_IDR_IDR_9                   EQU		GPIO_IDR_ID9
GPIO_IDR_IDR_10                  EQU		GPIO_IDR_ID10
GPIO_IDR_IDR_11                  EQU		GPIO_IDR_ID11
GPIO_IDR_IDR_12                  EQU		GPIO_IDR_ID12
GPIO_IDR_IDR_13                  EQU		GPIO_IDR_ID13
GPIO_IDR_IDR_14                  EQU		GPIO_IDR_ID14
GPIO_IDR_IDR_15                  EQU		GPIO_IDR_ID15

GPIO_ODR		                 EQU		0x14
;/******************  Bits definition for GPIO_ODR register  *******************/
GPIO_ODR_OD0_Pos                 EQU		0                                  
GPIO_ODR_OD0_Msk                 EQU		0x1 << GPIO_ODR_OD0_Pos               ;/*!< 0x00000001 */
GPIO_ODR_OD0                     EQU		GPIO_ODR_OD0_Msk                      
GPIO_ODR_OD1_Pos                 EQU		1                                  
GPIO_ODR_OD1_Msk                 EQU		0x1 << GPIO_ODR_OD1_Pos               ;/*!< 0x00000002 */
GPIO_ODR_OD1                     EQU		GPIO_ODR_OD1_Msk                      
GPIO_ODR_OD2_Pos                 EQU		2                                  
GPIO_ODR_OD2_Msk                 EQU		0x1 << GPIO_ODR_OD2_Pos               ;/*!< 0x00000004 */
GPIO_ODR_OD2                     EQU		GPIO_ODR_OD2_Msk                      
GPIO_ODR_OD3_Pos                 EQU		3                                  
GPIO_ODR_OD3_Msk                 EQU		0x1 << GPIO_ODR_OD3_Pos               ;/*!< 0x00000008 */
GPIO_ODR_OD3                     EQU		GPIO_ODR_OD3_Msk                      
GPIO_ODR_OD4_Pos                 EQU		4                                  
GPIO_ODR_OD4_Msk                 EQU		0x1 << GPIO_ODR_OD4_Pos               ;/*!< 0x00000010 */
GPIO_ODR_OD4                     EQU		GPIO_ODR_OD4_Msk                      
GPIO_ODR_OD5_Pos                 EQU		5                                  
GPIO_ODR_OD5_Msk                 EQU		0x1 << GPIO_ODR_OD5_Pos               ;/*!< 0x00000020 */
GPIO_ODR_OD5                     EQU		GPIO_ODR_OD5_Msk                      
GPIO_ODR_OD6_Pos                 EQU		6                                  
GPIO_ODR_OD6_Msk                 EQU		0x1 << GPIO_ODR_OD6_Pos               ;/*!< 0x00000040 */
GPIO_ODR_OD6                     EQU		GPIO_ODR_OD6_Msk                      
GPIO_ODR_OD7_Pos                 EQU		7                                  
GPIO_ODR_OD7_Msk                 EQU		0x1 << GPIO_ODR_OD7_Pos               ;/*!< 0x00000080 */
GPIO_ODR_OD7                     EQU		GPIO_ODR_OD7_Msk                      
GPIO_ODR_OD8_Pos                 EQU		8                                  
GPIO_ODR_OD8_Msk                 EQU		0x1 << GPIO_ODR_OD8_Pos               ;/*!< 0x00000100 */
GPIO_ODR_OD8                     EQU		GPIO_ODR_OD8_Msk                      
GPIO_ODR_OD9_Pos                 EQU		9                                  
GPIO_ODR_OD9_Msk                 EQU		0x1 << GPIO_ODR_OD9_Pos               ;/*!< 0x00000200 */
GPIO_ODR_OD9                     EQU		GPIO_ODR_OD9_Msk                      
GPIO_ODR_OD10_Pos                EQU		10                                 
GPIO_ODR_OD10_Msk                EQU		0x1 << GPIO_ODR_OD10_Pos              ;/*!< 0x00000400 */
GPIO_ODR_OD10                    EQU		GPIO_ODR_OD10_Msk                     
GPIO_ODR_OD11_Pos                EQU		11                                 
GPIO_ODR_OD11_Msk                EQU		0x1 << GPIO_ODR_OD11_Pos              ;/*!< 0x00000800 */
GPIO_ODR_OD11                    EQU		GPIO_ODR_OD11_Msk                     
GPIO_ODR_OD12_Pos                EQU		12                                 
GPIO_ODR_OD12_Msk                EQU		0x1 << GPIO_ODR_OD12_Pos              ;/*!< 0x00001000 */
GPIO_ODR_OD12                    EQU		GPIO_ODR_OD12_Msk                     
GPIO_ODR_OD13_Pos                EQU		13                                 
GPIO_ODR_OD13_Msk                EQU		0x1 << GPIO_ODR_OD13_Pos              ;/*!< 0x00002000 */
GPIO_ODR_OD13                    EQU		GPIO_ODR_OD13_Msk                     
GPIO_ODR_OD14_Pos                EQU		14                                 
GPIO_ODR_OD14_Msk                EQU		0x1 << GPIO_ODR_OD14_Pos              ;/*!< 0x00004000 */
GPIO_ODR_OD14                    EQU		GPIO_ODR_OD14_Msk                     
GPIO_ODR_OD15_Pos                EQU		15                                 
GPIO_ODR_OD15_Msk                EQU		0x1 << GPIO_ODR_OD15_Pos              ;/*!< 0x00008000 */
GPIO_ODR_OD15                    EQU		GPIO_ODR_OD15_Msk          

;/* Legacy defines */
GPIO_ODR_ODR_0                   EQU		GPIO_ODR_OD0
GPIO_ODR_ODR_1                   EQU		GPIO_ODR_OD1
GPIO_ODR_ODR_2                   EQU		GPIO_ODR_OD2
GPIO_ODR_ODR_3                   EQU		GPIO_ODR_OD3
GPIO_ODR_ODR_4                   EQU		GPIO_ODR_OD4
GPIO_ODR_ODR_5                   EQU		GPIO_ODR_OD5
GPIO_ODR_ODR_6                   EQU		GPIO_ODR_OD6
GPIO_ODR_ODR_7                   EQU		GPIO_ODR_OD7
GPIO_ODR_ODR_8                   EQU		GPIO_ODR_OD8
GPIO_ODR_ODR_9                   EQU		GPIO_ODR_OD9
GPIO_ODR_ODR_10                  EQU		GPIO_ODR_OD10
GPIO_ODR_ODR_11                  EQU		GPIO_ODR_OD11
GPIO_ODR_ODR_12                  EQU		GPIO_ODR_OD12
GPIO_ODR_ODR_13                  EQU		GPIO_ODR_OD13
GPIO_ODR_ODR_14                  EQU		GPIO_ODR_OD14
GPIO_ODR_ODR_15                  EQU		GPIO_ODR_OD15

GPIO_BSRR		                 EQU		0x18
;/******************  Bits definition for GPIO_BSRR register  ******************/
GPIO_BSRR_BS0_Pos                EQU		0                                  
GPIO_BSRR_BS0_Msk                EQU		0x1 << GPIO_BSRR_BS0_Pos              ;/*!< 0x00000001 */
GPIO_BSRR_BS0                    EQU		GPIO_BSRR_BS0_Msk                     
GPIO_BSRR_BS1_Pos                EQU		1                                  
GPIO_BSRR_BS1_Msk                EQU		0x1 << GPIO_BSRR_BS1_Pos              ;/*!< 0x00000002 */
GPIO_BSRR_BS1                    EQU		GPIO_BSRR_BS1_Msk                     
GPIO_BSRR_BS2_Pos                EQU		2                                  
GPIO_BSRR_BS2_Msk                EQU		0x1 << GPIO_BSRR_BS2_Pos              ;/*!< 0x00000004 */
GPIO_BSRR_BS2                    EQU		GPIO_BSRR_BS2_Msk                     
GPIO_BSRR_BS3_Pos                EQU		3                                  
GPIO_BSRR_BS3_Msk                EQU		0x1 << GPIO_BSRR_BS3_Pos              ;/*!< 0x00000008 */
GPIO_BSRR_BS3                    EQU		GPIO_BSRR_BS3_Msk                     
GPIO_BSRR_BS4_Pos                EQU		4                                  
GPIO_BSRR_BS4_Msk                EQU		0x1 << GPIO_BSRR_BS4_Pos              ;/*!< 0x00000010 */
GPIO_BSRR_BS4                    EQU		GPIO_BSRR_BS4_Msk                     
GPIO_BSRR_BS5_Pos                EQU		5                                  
GPIO_BSRR_BS5_Msk                EQU		0x1 << GPIO_BSRR_BS5_Pos              ;/*!< 0x00000020 */
GPIO_BSRR_BS5                    EQU		GPIO_BSRR_BS5_Msk                     
GPIO_BSRR_BS6_Pos                EQU		6                                  
GPIO_BSRR_BS6_Msk                EQU		0x1 << GPIO_BSRR_BS6_Pos              ;/*!< 0x00000040 */
GPIO_BSRR_BS6                    EQU		GPIO_BSRR_BS6_Msk                     
GPIO_BSRR_BS7_Pos                EQU		7                                  
GPIO_BSRR_BS7_Msk                EQU		0x1 << GPIO_BSRR_BS7_Pos              ;/*!< 0x00000080 */
GPIO_BSRR_BS7                    EQU		GPIO_BSRR_BS7_Msk                     
GPIO_BSRR_BS8_Pos                EQU		8                                  
GPIO_BSRR_BS8_Msk                EQU		0x1 << GPIO_BSRR_BS8_Pos              ;/*!< 0x00000100 */
GPIO_BSRR_BS8                    EQU		GPIO_BSRR_BS8_Msk                     
GPIO_BSRR_BS9_Pos                EQU		9                                  
GPIO_BSRR_BS9_Msk                EQU		0x1 << GPIO_BSRR_BS9_Pos              ;/*!< 0x00000200 */
GPIO_BSRR_BS9                    EQU		GPIO_BSRR_BS9_Msk                     
GPIO_BSRR_BS10_Pos               EQU		10                                 
GPIO_BSRR_BS10_Msk               EQU		0x1 << GPIO_BSRR_BS10_Pos             ;/*!< 0x00000400 */
GPIO_BSRR_BS10                   EQU		GPIO_BSRR_BS10_Msk                    
GPIO_BSRR_BS11_Pos               EQU		11                                 
GPIO_BSRR_BS11_Msk               EQU		0x1 << GPIO_BSRR_BS11_Pos             ;/*!< 0x00000800 */
GPIO_BSRR_BS11                   EQU		GPIO_BSRR_BS11_Msk                    
GPIO_BSRR_BS12_Pos               EQU		12                                 
GPIO_BSRR_BS12_Msk               EQU		0x1 << GPIO_BSRR_BS12_Pos             ;/*!< 0x00001000 */
GPIO_BSRR_BS12                   EQU		GPIO_BSRR_BS12_Msk                    
GPIO_BSRR_BS13_Pos               EQU		13                                 
GPIO_BSRR_BS13_Msk               EQU		0x1 << GPIO_BSRR_BS13_Pos             ;/*!< 0x00002000 */
GPIO_BSRR_BS13                   EQU		GPIO_BSRR_BS13_Msk                    
GPIO_BSRR_BS14_Pos               EQU		14                                 
GPIO_BSRR_BS14_Msk               EQU		0x1 << GPIO_BSRR_BS14_Pos             ;/*!< 0x00004000 */
GPIO_BSRR_BS14                   EQU		GPIO_BSRR_BS14_Msk                    
GPIO_BSRR_BS15_Pos               EQU		15                                 
GPIO_BSRR_BS15_Msk               EQU		0x1 << GPIO_BSRR_BS15_Pos             ;/*!< 0x00008000 */
GPIO_BSRR_BS15                   EQU		GPIO_BSRR_BS15_Msk                    
GPIO_BSRR_BR0_Pos                EQU		16                                 
GPIO_BSRR_BR0_Msk                EQU		0x1 << GPIO_BSRR_BR0_Pos              ;/*!< 0x00010000 */
GPIO_BSRR_BR0                    EQU		GPIO_BSRR_BR0_Msk                     
GPIO_BSRR_BR1_Pos                EQU		17                                 
GPIO_BSRR_BR1_Msk                EQU		0x1 << GPIO_BSRR_BR1_Pos              ;/*!< 0x00020000 */
GPIO_BSRR_BR1                    EQU		GPIO_BSRR_BR1_Msk                     
GPIO_BSRR_BR2_Pos                EQU		18                                 
GPIO_BSRR_BR2_Msk                EQU		0x1 << GPIO_BSRR_BR2_Pos              ;/*!< 0x00040000 */
GPIO_BSRR_BR2                    EQU		GPIO_BSRR_BR2_Msk                     
GPIO_BSRR_BR3_Pos                EQU		19                                 
GPIO_BSRR_BR3_Msk                EQU		0x1 << GPIO_BSRR_BR3_Pos              ;/*!< 0x00080000 */
GPIO_BSRR_BR3                    EQU		GPIO_BSRR_BR3_Msk                     
GPIO_BSRR_BR4_Pos                EQU		20                                 
GPIO_BSRR_BR4_Msk                EQU		0x1 << GPIO_BSRR_BR4_Pos              ;/*!< 0x00100000 */
GPIO_BSRR_BR4                    EQU		GPIO_BSRR_BR4_Msk                     
GPIO_BSRR_BR5_Pos                EQU		21                                 
GPIO_BSRR_BR5_Msk                EQU		0x1 << GPIO_BSRR_BR5_Pos              ;/*!< 0x00200000 */
GPIO_BSRR_BR5                    EQU		GPIO_BSRR_BR5_Msk                     
GPIO_BSRR_BR6_Pos                EQU		22                                 
GPIO_BSRR_BR6_Msk                EQU		0x1 << GPIO_BSRR_BR6_Pos              ;/*!< 0x00400000 */
GPIO_BSRR_BR6                    EQU		GPIO_BSRR_BR6_Msk                     
GPIO_BSRR_BR7_Pos                EQU		23                                 
GPIO_BSRR_BR7_Msk                EQU		0x1 << GPIO_BSRR_BR7_Pos              ;/*!< 0x00800000 */
GPIO_BSRR_BR7                    EQU		GPIO_BSRR_BR7_Msk                     
GPIO_BSRR_BR8_Pos                EQU		24                                 
GPIO_BSRR_BR8_Msk                EQU		0x1 << GPIO_BSRR_BR8_Pos              ;/*!< 0x01000000 */
GPIO_BSRR_BR8                    EQU		GPIO_BSRR_BR8_Msk                     
GPIO_BSRR_BR9_Pos                EQU		25                                 
GPIO_BSRR_BR9_Msk                EQU		0x1 << GPIO_BSRR_BR9_Pos              ;/*!< 0x02000000 */
GPIO_BSRR_BR9                    EQU		GPIO_BSRR_BR9_Msk                     
GPIO_BSRR_BR10_Pos               EQU		26                                 
GPIO_BSRR_BR10_Msk               EQU		0x1 << GPIO_BSRR_BR10_Pos             ;/*!< 0x04000000 */
GPIO_BSRR_BR10                   EQU		GPIO_BSRR_BR10_Msk                    
GPIO_BSRR_BR11_Pos               EQU		27                                 
GPIO_BSRR_BR11_Msk               EQU		0x1 << GPIO_BSRR_BR11_Pos             ;/*!< 0x08000000 */
GPIO_BSRR_BR11                   EQU		GPIO_BSRR_BR11_Msk                    
GPIO_BSRR_BR12_Pos               EQU		28                                 
GPIO_BSRR_BR12_Msk               EQU		0x1 << GPIO_BSRR_BR12_Pos             ;/*!< 0x10000000 */
GPIO_BSRR_BR12                   EQU		GPIO_BSRR_BR12_Msk                    
GPIO_BSRR_BR13_Pos               EQU		29                                 
GPIO_BSRR_BR13_Msk               EQU		0x1 << GPIO_BSRR_BR13_Pos             ;/*!< 0x20000000 */
GPIO_BSRR_BR13                   EQU		GPIO_BSRR_BR13_Msk                    
GPIO_BSRR_BR14_Pos               EQU		30                                 
GPIO_BSRR_BR14_Msk               EQU		0x1 << GPIO_BSRR_BR14_Pos             ;/*!< 0x40000000 */
GPIO_BSRR_BR14                   EQU		GPIO_BSRR_BR14_Msk                    
GPIO_BSRR_BR15_Pos               EQU		31                                 
GPIO_BSRR_BR15_Msk               EQU		0x1 << GPIO_BSRR_BR15_Pos             ;/*!< 0x80000000 */
GPIO_BSRR_BR15                   EQU		GPIO_BSRR_BR15_Msk                    

;/* Legacy defines */
GPIO_BSRR_BS_0                   EQU		GPIO_BSRR_BS0
GPIO_BSRR_BS_1                   EQU		GPIO_BSRR_BS1
GPIO_BSRR_BS_2                   EQU		GPIO_BSRR_BS2
GPIO_BSRR_BS_3                   EQU		GPIO_BSRR_BS3
GPIO_BSRR_BS_4                   EQU		GPIO_BSRR_BS4
GPIO_BSRR_BS_5                   EQU		GPIO_BSRR_BS5
GPIO_BSRR_BS_6                   EQU		GPIO_BSRR_BS6
GPIO_BSRR_BS_7                   EQU		GPIO_BSRR_BS7
GPIO_BSRR_BS_8                   EQU		GPIO_BSRR_BS8
GPIO_BSRR_BS_9                   EQU		GPIO_BSRR_BS9
GPIO_BSRR_BS_10                  EQU		GPIO_BSRR_BS10
GPIO_BSRR_BS_11                  EQU		GPIO_BSRR_BS11
GPIO_BSRR_BS_12                  EQU		GPIO_BSRR_BS12
GPIO_BSRR_BS_13                  EQU		GPIO_BSRR_BS13
GPIO_BSRR_BS_14                  EQU		GPIO_BSRR_BS14
GPIO_BSRR_BS_15                  EQU		GPIO_BSRR_BS15
GPIO_BSRR_BR_0                   EQU		GPIO_BSRR_BR0
GPIO_BSRR_BR_1                   EQU		GPIO_BSRR_BR1
GPIO_BSRR_BR_2                   EQU		GPIO_BSRR_BR2
GPIO_BSRR_BR_3                   EQU		GPIO_BSRR_BR3
GPIO_BSRR_BR_4                   EQU		GPIO_BSRR_BR4
GPIO_BSRR_BR_5                   EQU		GPIO_BSRR_BR5
GPIO_BSRR_BR_6                   EQU		GPIO_BSRR_BR6
GPIO_BSRR_BR_7                   EQU		GPIO_BSRR_BR7
GPIO_BSRR_BR_8                   EQU		GPIO_BSRR_BR8
GPIO_BSRR_BR_9                   EQU		GPIO_BSRR_BR9
GPIO_BSRR_BR_10                  EQU		GPIO_BSRR_BR10
GPIO_BSRR_BR_11                  EQU		GPIO_BSRR_BR11
GPIO_BSRR_BR_12                  EQU		GPIO_BSRR_BR12
GPIO_BSRR_BR_13                  EQU		GPIO_BSRR_BR13
GPIO_BSRR_BR_14                  EQU		GPIO_BSRR_BR14
GPIO_BSRR_BR_15                  EQU		GPIO_BSRR_BR15

GPIO_LCKR			             EQU		0x1C
;/****************** Bit definition for GPIO_LCKR register *********************/
GPIO_LCKR_LCK0_Pos               EQU		0                                  
GPIO_LCKR_LCK0_Msk               EQU		0x1 << GPIO_LCKR_LCK0_Pos             ;/*!< 0x00000001 */
GPIO_LCKR_LCK0                   EQU		GPIO_LCKR_LCK0_Msk                    
GPIO_LCKR_LCK1_Pos               EQU		1                                  
GPIO_LCKR_LCK1_Msk               EQU		0x1 << GPIO_LCKR_LCK1_Pos             ;/*!< 0x00000002 */
GPIO_LCKR_LCK1                   EQU		GPIO_LCKR_LCK1_Msk                    
GPIO_LCKR_LCK2_Pos               EQU		2                                  
GPIO_LCKR_LCK2_Msk               EQU		0x1 << GPIO_LCKR_LCK2_Pos             ;/*!< 0x00000004 */
GPIO_LCKR_LCK2                   EQU		GPIO_LCKR_LCK2_Msk                    
GPIO_LCKR_LCK3_Pos               EQU		3                                  
GPIO_LCKR_LCK3_Msk               EQU		0x1 << GPIO_LCKR_LCK3_Pos             ;/*!< 0x00000008 */
GPIO_LCKR_LCK3                   EQU		GPIO_LCKR_LCK3_Msk                    
GPIO_LCKR_LCK4_Pos               EQU		4                                  
GPIO_LCKR_LCK4_Msk               EQU		0x1 << GPIO_LCKR_LCK4_Pos             ;/*!< 0x00000010 */
GPIO_LCKR_LCK4                   EQU		GPIO_LCKR_LCK4_Msk                    
GPIO_LCKR_LCK5_Pos               EQU		5                                  
GPIO_LCKR_LCK5_Msk               EQU		0x1 << GPIO_LCKR_LCK5_Pos             ;/*!< 0x00000020 */
GPIO_LCKR_LCK5                   EQU		GPIO_LCKR_LCK5_Msk                    
GPIO_LCKR_LCK6_Pos               EQU		6                                  
GPIO_LCKR_LCK6_Msk               EQU		0x1 << GPIO_LCKR_LCK6_Pos             ;/*!< 0x00000040 */
GPIO_LCKR_LCK6                   EQU		GPIO_LCKR_LCK6_Msk                    
GPIO_LCKR_LCK7_Pos               EQU		7                                  
GPIO_LCKR_LCK7_Msk               EQU		0x1 << GPIO_LCKR_LCK7_Pos             ;/*!< 0x00000080 */
GPIO_LCKR_LCK7                   EQU		GPIO_LCKR_LCK7_Msk                    
GPIO_LCKR_LCK8_Pos               EQU		8                                  
GPIO_LCKR_LCK8_Msk               EQU		0x1 << GPIO_LCKR_LCK8_Pos             ;/*!< 0x00000100 */
GPIO_LCKR_LCK8                   EQU		GPIO_LCKR_LCK8_Msk                    
GPIO_LCKR_LCK9_Pos               EQU		9                                  
GPIO_LCKR_LCK9_Msk               EQU		0x1 << GPIO_LCKR_LCK9_Pos             ;/*!< 0x00000200 */
GPIO_LCKR_LCK9                   EQU		GPIO_LCKR_LCK9_Msk                    
GPIO_LCKR_LCK10_Pos              EQU		10                                 
GPIO_LCKR_LCK10_Msk              EQU		0x1 << GPIO_LCKR_LCK10_Pos            ;/*!< 0x00000400 */
GPIO_LCKR_LCK10                  EQU		GPIO_LCKR_LCK10_Msk                   
GPIO_LCKR_LCK11_Pos              EQU		11                                 
GPIO_LCKR_LCK11_Msk              EQU		0x1 << GPIO_LCKR_LCK11_Pos            ;/*!< 0x00000800 */
GPIO_LCKR_LCK11                  EQU		GPIO_LCKR_LCK11_Msk                   
GPIO_LCKR_LCK12_Pos              EQU		12                                 
GPIO_LCKR_LCK12_Msk              EQU		0x1 << GPIO_LCKR_LCK12_Pos            ;/*!< 0x00001000 */
GPIO_LCKR_LCK12                  EQU		GPIO_LCKR_LCK12_Msk                   
GPIO_LCKR_LCK13_Pos              EQU		13                                 
GPIO_LCKR_LCK13_Msk              EQU		0x1 << GPIO_LCKR_LCK13_Pos            ;/*!< 0x00002000 */
GPIO_LCKR_LCK13                  EQU		GPIO_LCKR_LCK13_Msk                   
GPIO_LCKR_LCK14_Pos              EQU		14                                 
GPIO_LCKR_LCK14_Msk              EQU		0x1 << GPIO_LCKR_LCK14_Pos            ;/*!< 0x00004000 */
GPIO_LCKR_LCK14                  EQU		GPIO_LCKR_LCK14_Msk                   
GPIO_LCKR_LCK15_Pos              EQU		15                                 
GPIO_LCKR_LCK15_Msk              EQU		0x1 << GPIO_LCKR_LCK15_Pos            ;/*!< 0x00008000 */
GPIO_LCKR_LCK15                  EQU		GPIO_LCKR_LCK15_Msk                   
GPIO_LCKR_LCKK_Pos               EQU		16                                 
GPIO_LCKR_LCKK_Msk               EQU		0x1 << GPIO_LCKR_LCKK_Pos             ;/*!< 0x00010000 */
GPIO_LCKR_LCKK                   EQU		GPIO_LCKR_LCKK_Msk         

GPIO_AFRL			             EQU		0x20
;/****************** Bit definition for GPIO_AFRL register *********************/
GPIO_AFRL_AFSEL0_Pos             EQU		0                                  
GPIO_AFRL_AFSEL0_Msk             EQU		0xF << GPIO_AFRL_AFSEL0_Pos           ;/*!< 0x0000000F */
GPIO_AFRL_AFSEL0                 EQU		GPIO_AFRL_AFSEL0_Msk                  
GPIO_AFRL_AFSEL0_0               EQU		0x1 << GPIO_AFRL_AFSEL0_Pos           ;/*!< 0x00000001 */
GPIO_AFRL_AFSEL0_1               EQU		0x2 << GPIO_AFRL_AFSEL0_Pos           ;/*!< 0x00000002 */
GPIO_AFRL_AFSEL0_2               EQU		0x4 << GPIO_AFRL_AFSEL0_Pos           ;/*!< 0x00000004 */
GPIO_AFRL_AFSEL0_3               EQU		0x8 << GPIO_AFRL_AFSEL0_Pos           ;/*!< 0x00000008 */
GPIO_AFRL_AFSEL1_Pos             EQU		4                                  
GPIO_AFRL_AFSEL1_Msk             EQU		0xF << GPIO_AFRL_AFSEL1_Pos           ;/*!< 0x000000F0 */
GPIO_AFRL_AFSEL1                 EQU		GPIO_AFRL_AFSEL1_Msk                  
GPIO_AFRL_AFSEL1_0               EQU		0x1 << GPIO_AFRL_AFSEL1_Pos           ;/*!< 0x00000010 */
GPIO_AFRL_AFSEL1_1               EQU		0x2 << GPIO_AFRL_AFSEL1_Pos           ;/*!< 0x00000020 */
GPIO_AFRL_AFSEL1_2               EQU		0x4 << GPIO_AFRL_AFSEL1_Pos           ;/*!< 0x00000040 */
GPIO_AFRL_AFSEL1_3               EQU		0x8 << GPIO_AFRL_AFSEL1_Pos           ;/*!< 0x00000080 */
GPIO_AFRL_AFSEL2_Pos             EQU		8                                  
GPIO_AFRL_AFSEL2_Msk             EQU		0xF << GPIO_AFRL_AFSEL2_Pos           ;/*!< 0x00000F00 */
GPIO_AFRL_AFSEL2                 EQU		GPIO_AFRL_AFSEL2_Msk                  
GPIO_AFRL_AFSEL2_0               EQU		0x1 << GPIO_AFRL_AFSEL2_Pos           ;/*!< 0x00000100 */
GPIO_AFRL_AFSEL2_1               EQU		0x2 << GPIO_AFRL_AFSEL2_Pos           ;/*!< 0x00000200 */
GPIO_AFRL_AFSEL2_2               EQU		0x4 << GPIO_AFRL_AFSEL2_Pos           ;/*!< 0x00000400 */
GPIO_AFRL_AFSEL2_3               EQU		0x8 << GPIO_AFRL_AFSEL2_Pos           ;/*!< 0x00000800 */
GPIO_AFRL_AFSEL3_Pos             EQU		12                                 
GPIO_AFRL_AFSEL3_Msk             EQU		0xF << GPIO_AFRL_AFSEL3_Pos           ;/*!< 0x0000F000 */
GPIO_AFRL_AFSEL3                 EQU		GPIO_AFRL_AFSEL3_Msk                  
GPIO_AFRL_AFSEL3_0               EQU		0x1 << GPIO_AFRL_AFSEL3_Pos           ;/*!< 0x00001000 */
GPIO_AFRL_AFSEL3_1               EQU		0x2 << GPIO_AFRL_AFSEL3_Pos           ;/*!< 0x00002000 */
GPIO_AFRL_AFSEL3_2               EQU		0x4 << GPIO_AFRL_AFSEL3_Pos           ;/*!< 0x00004000 */
GPIO_AFRL_AFSEL3_3               EQU		0x8 << GPIO_AFRL_AFSEL3_Pos           ;/*!< 0x00008000 */
GPIO_AFRL_AFSEL4_Pos             EQU		16                                 
GPIO_AFRL_AFSEL4_Msk             EQU		0xF << GPIO_AFRL_AFSEL4_Pos           ;/*!< 0x000F0000 */
GPIO_AFRL_AFSEL4                 EQU		GPIO_AFRL_AFSEL4_Msk                  
GPIO_AFRL_AFSEL4_0               EQU		0x1 << GPIO_AFRL_AFSEL4_Pos           ;/*!< 0x00010000 */
GPIO_AFRL_AFSEL4_1               EQU		0x2 << GPIO_AFRL_AFSEL4_Pos           ;/*!< 0x00020000 */
GPIO_AFRL_AFSEL4_2               EQU		0x4 << GPIO_AFRL_AFSEL4_Pos           ;/*!< 0x00040000 */
GPIO_AFRL_AFSEL4_3               EQU		0x8 << GPIO_AFRL_AFSEL4_Pos           ;/*!< 0x00080000 */
GPIO_AFRL_AFSEL5_Pos             EQU		20                                 
GPIO_AFRL_AFSEL5_Msk             EQU		0xF << GPIO_AFRL_AFSEL5_Pos           ;/*!< 0x00F00000 */
GPIO_AFRL_AFSEL5                 EQU		GPIO_AFRL_AFSEL5_Msk                  
GPIO_AFRL_AFSEL5_0               EQU		0x1 << GPIO_AFRL_AFSEL5_Pos           ;/*!< 0x00100000 */
GPIO_AFRL_AFSEL5_1               EQU		0x2 << GPIO_AFRL_AFSEL5_Pos           ;/*!< 0x00200000 */
GPIO_AFRL_AFSEL5_2               EQU		0x4 << GPIO_AFRL_AFSEL5_Pos           ;/*!< 0x00400000 */
GPIO_AFRL_AFSEL5_3               EQU		0x8 << GPIO_AFRL_AFSEL5_Pos           ;/*!< 0x00800000 */
GPIO_AFRL_AFSEL6_Pos             EQU		24                                 
GPIO_AFRL_AFSEL6_Msk             EQU		0xF << GPIO_AFRL_AFSEL6_Pos           ;/*!< 0x0F000000 */
GPIO_AFRL_AFSEL6                 EQU		GPIO_AFRL_AFSEL6_Msk                  
GPIO_AFRL_AFSEL6_0               EQU		0x1 << GPIO_AFRL_AFSEL6_Pos           ;/*!< 0x01000000 */
GPIO_AFRL_AFSEL6_1               EQU		0x2 << GPIO_AFRL_AFSEL6_Pos           ;/*!< 0x02000000 */
GPIO_AFRL_AFSEL6_2               EQU		0x4 << GPIO_AFRL_AFSEL6_Pos           ;/*!< 0x04000000 */
GPIO_AFRL_AFSEL6_3               EQU		0x8 << GPIO_AFRL_AFSEL6_Pos           ;/*!< 0x08000000 */
GPIO_AFRL_AFSEL7_Pos             EQU		28                                 
GPIO_AFRL_AFSEL7_Msk             EQU		0xF << GPIO_AFRL_AFSEL7_Pos           ;/*!< 0xF0000000 */
GPIO_AFRL_AFSEL7                 EQU		GPIO_AFRL_AFSEL7_Msk                  
GPIO_AFRL_AFSEL7_0               EQU		0x1 << GPIO_AFRL_AFSEL7_Pos           ;/*!< 0x10000000 */
GPIO_AFRL_AFSEL7_1               EQU		0x2 << GPIO_AFRL_AFSEL7_Pos           ;/*!< 0x20000000 */
GPIO_AFRL_AFSEL7_2               EQU		0x4 << GPIO_AFRL_AFSEL7_Pos           ;/*!< 0x40000000 */
GPIO_AFRL_AFSEL7_3               EQU		0x8 << GPIO_AFRL_AFSEL7_Pos           ;/*!< 0x80000000 */

;/* Legacy defines */
GPIO_AFRL_AFRL0                  EQU		GPIO_AFRL_AFSEL0
GPIO_AFRL_AFRL0_0                EQU		GPIO_AFRL_AFSEL0_0
GPIO_AFRL_AFRL0_1                EQU		GPIO_AFRL_AFSEL0_1
GPIO_AFRL_AFRL0_2                EQU		GPIO_AFRL_AFSEL0_2
GPIO_AFRL_AFRL0_3                EQU		GPIO_AFRL_AFSEL0_3
GPIO_AFRL_AFRL1                  EQU		GPIO_AFRL_AFSEL1
GPIO_AFRL_AFRL1_0                EQU		GPIO_AFRL_AFSEL1_0
GPIO_AFRL_AFRL1_1                EQU		GPIO_AFRL_AFSEL1_1
GPIO_AFRL_AFRL1_2                EQU		GPIO_AFRL_AFSEL1_2
GPIO_AFRL_AFRL1_3                EQU		GPIO_AFRL_AFSEL1_3
GPIO_AFRL_AFRL2                  EQU		GPIO_AFRL_AFSEL2
GPIO_AFRL_AFRL2_0                EQU		GPIO_AFRL_AFSEL2_0
GPIO_AFRL_AFRL2_1                EQU		GPIO_AFRL_AFSEL2_1
GPIO_AFRL_AFRL2_2                EQU		GPIO_AFRL_AFSEL2_2
GPIO_AFRL_AFRL2_3                EQU		GPIO_AFRL_AFSEL2_3
GPIO_AFRL_AFRL3                  EQU		GPIO_AFRL_AFSEL3
GPIO_AFRL_AFRL3_0                EQU		GPIO_AFRL_AFSEL3_0
GPIO_AFRL_AFRL3_1                EQU		GPIO_AFRL_AFSEL3_1
GPIO_AFRL_AFRL3_2                EQU		GPIO_AFRL_AFSEL3_2
GPIO_AFRL_AFRL3_3                EQU		GPIO_AFRL_AFSEL3_3
GPIO_AFRL_AFRL4                  EQU		GPIO_AFRL_AFSEL4
GPIO_AFRL_AFRL4_0                EQU		GPIO_AFRL_AFSEL4_0
GPIO_AFRL_AFRL4_1                EQU		GPIO_AFRL_AFSEL4_1
GPIO_AFRL_AFRL4_2                EQU		GPIO_AFRL_AFSEL4_2
GPIO_AFRL_AFRL4_3                EQU		GPIO_AFRL_AFSEL4_3
GPIO_AFRL_AFRL5                  EQU		GPIO_AFRL_AFSEL5
GPIO_AFRL_AFRL5_0                EQU		GPIO_AFRL_AFSEL5_0
GPIO_AFRL_AFRL5_1                EQU		GPIO_AFRL_AFSEL5_1
GPIO_AFRL_AFRL5_2                EQU		GPIO_AFRL_AFSEL5_2
GPIO_AFRL_AFRL5_3                EQU		GPIO_AFRL_AFSEL5_3
GPIO_AFRL_AFRL6                  EQU		GPIO_AFRL_AFSEL6
GPIO_AFRL_AFRL6_0                EQU		GPIO_AFRL_AFSEL6_0
GPIO_AFRL_AFRL6_1                EQU		GPIO_AFRL_AFSEL6_1
GPIO_AFRL_AFRL6_2                EQU		GPIO_AFRL_AFSEL6_2
GPIO_AFRL_AFRL6_3                EQU		GPIO_AFRL_AFSEL6_3
GPIO_AFRL_AFRL7                  EQU		GPIO_AFRL_AFSEL7
GPIO_AFRL_AFRL7_0                EQU		GPIO_AFRL_AFSEL7_0
GPIO_AFRL_AFRL7_1                EQU		GPIO_AFRL_AFSEL7_1
GPIO_AFRL_AFRL7_2                EQU		GPIO_AFRL_AFSEL7_2
GPIO_AFRL_AFRL7_3                EQU		GPIO_AFRL_AFSEL7_3

GPIO_AFRH			             EQU		0x24
;/****************** Bit definition for GPIO_AFRH register *********************/
GPIO_AFRH_AFSEL8_Pos             EQU		0                                  
GPIO_AFRH_AFSEL8_Msk             EQU		0xF << GPIO_AFRH_AFSEL8_Pos           ;/*!< 0x0000000F */
GPIO_AFRH_AFSEL8                 EQU		GPIO_AFRH_AFSEL8_Msk                  
GPIO_AFRH_AFSEL8_0               EQU		0x1 << GPIO_AFRH_AFSEL8_Pos           ;/*!< 0x00000001 */
GPIO_AFRH_AFSEL8_1               EQU		0x2 << GPIO_AFRH_AFSEL8_Pos           ;/*!< 0x00000002 */
GPIO_AFRH_AFSEL8_2               EQU		0x4 << GPIO_AFRH_AFSEL8_Pos           ;/*!< 0x00000004 */
GPIO_AFRH_AFSEL8_3               EQU		0x8 << GPIO_AFRH_AFSEL8_Pos           ;/*!< 0x00000008 */
GPIO_AFRH_AFSEL9_Pos             EQU		4                                  
GPIO_AFRH_AFSEL9_Msk             EQU		0xF << GPIO_AFRH_AFSEL9_Pos           ;/*!< 0x000000F0 */
GPIO_AFRH_AFSEL9                 EQU		GPIO_AFRH_AFSEL9_Msk                  
GPIO_AFRH_AFSEL9_0               EQU		0x1 << GPIO_AFRH_AFSEL9_Pos           ;/*!< 0x00000010 */
GPIO_AFRH_AFSEL9_1               EQU		0x2 << GPIO_AFRH_AFSEL9_Pos           ;/*!< 0x00000020 */
GPIO_AFRH_AFSEL9_2               EQU		0x4 << GPIO_AFRH_AFSEL9_Pos           ;/*!< 0x00000040 */
GPIO_AFRH_AFSEL9_3               EQU		0x8 << GPIO_AFRH_AFSEL9_Pos           ;/*!< 0x00000080 */
GPIO_AFRH_AFSEL10_Pos            EQU		8                                  
GPIO_AFRH_AFSEL10_Msk            EQU		0xF << GPIO_AFRH_AFSEL10_Pos          ;/*!< 0x00000F00 */
GPIO_AFRH_AFSEL10                EQU		GPIO_AFRH_AFSEL10_Msk                 
GPIO_AFRH_AFSEL10_0              EQU		0x1 << GPIO_AFRH_AFSEL10_Pos          ;/*!< 0x00000100 */
GPIO_AFRH_AFSEL10_1              EQU		0x2 << GPIO_AFRH_AFSEL10_Pos          ;/*!< 0x00000200 */
GPIO_AFRH_AFSEL10_2              EQU		0x4 << GPIO_AFRH_AFSEL10_Pos          ;/*!< 0x00000400 */
GPIO_AFRH_AFSEL10_3              EQU		0x8 << GPIO_AFRH_AFSEL10_Pos          ;/*!< 0x00000800 */
GPIO_AFRH_AFSEL11_Pos            EQU		12                                 
GPIO_AFRH_AFSEL11_Msk            EQU		0xF << GPIO_AFRH_AFSEL11_Pos          ;/*!< 0x0000F000 */
GPIO_AFRH_AFSEL11                EQU		GPIO_AFRH_AFSEL11_Msk                 
GPIO_AFRH_AFSEL11_0              EQU		0x1 << GPIO_AFRH_AFSEL11_Pos          ;/*!< 0x00001000 */
GPIO_AFRH_AFSEL11_1              EQU		0x2 << GPIO_AFRH_AFSEL11_Pos          ;/*!< 0x00002000 */
GPIO_AFRH_AFSEL11_2              EQU		0x4 << GPIO_AFRH_AFSEL11_Pos          ;/*!< 0x00004000 */
GPIO_AFRH_AFSEL11_3              EQU		0x8 << GPIO_AFRH_AFSEL11_Pos          ;/*!< 0x00008000 */
GPIO_AFRH_AFSEL12_Pos            EQU		16                                 
GPIO_AFRH_AFSEL12_Msk            EQU		0xF << GPIO_AFRH_AFSEL12_Pos          ;/*!< 0x000F0000 */
GPIO_AFRH_AFSEL12                EQU		GPIO_AFRH_AFSEL12_Msk                 
GPIO_AFRH_AFSEL12_0              EQU		0x1 << GPIO_AFRH_AFSEL12_Pos          ;/*!< 0x00010000 */
GPIO_AFRH_AFSEL12_1              EQU		0x2 << GPIO_AFRH_AFSEL12_Pos          ;/*!< 0x00020000 */
GPIO_AFRH_AFSEL12_2              EQU		0x4 << GPIO_AFRH_AFSEL12_Pos          ;/*!< 0x00040000 */
GPIO_AFRH_AFSEL12_3              EQU		0x8 << GPIO_AFRH_AFSEL12_Pos          ;/*!< 0x00080000 */
GPIO_AFRH_AFSEL13_Pos            EQU		20                                 
GPIO_AFRH_AFSEL13_Msk            EQU		0xF << GPIO_AFRH_AFSEL13_Pos          ;/*!< 0x00F00000 */
GPIO_AFRH_AFSEL13                EQU		GPIO_AFRH_AFSEL13_Msk                 
GPIO_AFRH_AFSEL13_0              EQU		0x1 << GPIO_AFRH_AFSEL13_Pos          ;/*!< 0x00100000 */
GPIO_AFRH_AFSEL13_1              EQU		0x2 << GPIO_AFRH_AFSEL13_Pos          ;/*!< 0x00200000 */
GPIO_AFRH_AFSEL13_2              EQU		0x4 << GPIO_AFRH_AFSEL13_Pos          ;/*!< 0x00400000 */
GPIO_AFRH_AFSEL13_3              EQU		0x8 << GPIO_AFRH_AFSEL13_Pos          ;/*!< 0x00800000 */
GPIO_AFRH_AFSEL14_Pos            EQU		24                                 
GPIO_AFRH_AFSEL14_Msk            EQU		0xF << GPIO_AFRH_AFSEL14_Pos          ;/*!< 0x0F000000 */
GPIO_AFRH_AFSEL14                EQU		GPIO_AFRH_AFSEL14_Msk                 
GPIO_AFRH_AFSEL14_0              EQU		0x1 << GPIO_AFRH_AFSEL14_Pos          ;/*!< 0x01000000 */
GPIO_AFRH_AFSEL14_1              EQU		0x2 << GPIO_AFRH_AFSEL14_Pos          ;/*!< 0x02000000 */
GPIO_AFRH_AFSEL14_2              EQU		0x4 << GPIO_AFRH_AFSEL14_Pos          ;/*!< 0x04000000 */
GPIO_AFRH_AFSEL14_3              EQU		0x8 << GPIO_AFRH_AFSEL14_Pos          ;/*!< 0x08000000 */
GPIO_AFRH_AFSEL15_Pos            EQU		28                                 
GPIO_AFRH_AFSEL15_Msk            EQU		0xF << GPIO_AFRH_AFSEL15_Pos          ;/*!< 0xF0000000 */
GPIO_AFRH_AFSEL15                EQU		GPIO_AFRH_AFSEL15_Msk                 
GPIO_AFRH_AFSEL15_0              EQU		0x1 << GPIO_AFRH_AFSEL15_Pos          ;/*!< 0x10000000 */
GPIO_AFRH_AFSEL15_1              EQU		0x2 << GPIO_AFRH_AFSEL15_Pos          ;/*!< 0x20000000 */
GPIO_AFRH_AFSEL15_2              EQU		0x4 << GPIO_AFRH_AFSEL15_Pos          ;/*!< 0x40000000 */
GPIO_AFRH_AFSEL15_3              EQU		0x8 << GPIO_AFRH_AFSEL15_Pos          ;/*!< 0x80000000 */

;/* Legacy defines */
GPIO_AFRH_AFRH0                  EQU		GPIO_AFRH_AFSEL8
GPIO_AFRH_AFRH0_0                EQU		GPIO_AFRH_AFSEL8_0
GPIO_AFRH_AFRH0_1                EQU		GPIO_AFRH_AFSEL8_1
GPIO_AFRH_AFRH0_2                EQU		GPIO_AFRH_AFSEL8_2
GPIO_AFRH_AFRH0_3                EQU		GPIO_AFRH_AFSEL8_3
GPIO_AFRH_AFRH1                  EQU		GPIO_AFRH_AFSEL9
GPIO_AFRH_AFRH1_0                EQU		GPIO_AFRH_AFSEL9_0
GPIO_AFRH_AFRH1_1                EQU		GPIO_AFRH_AFSEL9_1
GPIO_AFRH_AFRH1_2                EQU		GPIO_AFRH_AFSEL9_2
GPIO_AFRH_AFRH1_3                EQU		GPIO_AFRH_AFSEL9_3
GPIO_AFRH_AFRH2                  EQU		GPIO_AFRH_AFSEL10
GPIO_AFRH_AFRH2_0                EQU		GPIO_AFRH_AFSEL10_0
GPIO_AFRH_AFRH2_1                EQU		GPIO_AFRH_AFSEL10_1
GPIO_AFRH_AFRH2_2                EQU		GPIO_AFRH_AFSEL10_2
GPIO_AFRH_AFRH2_3                EQU		GPIO_AFRH_AFSEL10_3
GPIO_AFRH_AFRH3                  EQU		GPIO_AFRH_AFSEL11
GPIO_AFRH_AFRH3_0                EQU		GPIO_AFRH_AFSEL11_0
GPIO_AFRH_AFRH3_1                EQU		GPIO_AFRH_AFSEL11_1
GPIO_AFRH_AFRH3_2                EQU		GPIO_AFRH_AFSEL11_2
GPIO_AFRH_AFRH3_3                EQU		GPIO_AFRH_AFSEL11_3
GPIO_AFRH_AFRH4                  EQU		GPIO_AFRH_AFSEL12
GPIO_AFRH_AFRH4_0                EQU		GPIO_AFRH_AFSEL12_0
GPIO_AFRH_AFRH4_1                EQU		GPIO_AFRH_AFSEL12_1
GPIO_AFRH_AFRH4_2                EQU		GPIO_AFRH_AFSEL12_2
GPIO_AFRH_AFRH4_3                EQU		GPIO_AFRH_AFSEL12_3
GPIO_AFRH_AFRH5                  EQU		GPIO_AFRH_AFSEL13
GPIO_AFRH_AFRH5_0                EQU		GPIO_AFRH_AFSEL13_0
GPIO_AFRH_AFRH5_1                EQU		GPIO_AFRH_AFSEL13_1
GPIO_AFRH_AFRH5_2                EQU		GPIO_AFRH_AFSEL13_2
GPIO_AFRH_AFRH5_3                EQU		GPIO_AFRH_AFSEL13_3
GPIO_AFRH_AFRH6                  EQU		GPIO_AFRH_AFSEL14
GPIO_AFRH_AFRH6_0                EQU		GPIO_AFRH_AFSEL14_0
GPIO_AFRH_AFRH6_1                EQU		GPIO_AFRH_AFSEL14_1
GPIO_AFRH_AFRH6_2                EQU		GPIO_AFRH_AFSEL14_2
GPIO_AFRH_AFRH6_3                EQU		GPIO_AFRH_AFSEL14_3
GPIO_AFRH_AFRH7                  EQU		GPIO_AFRH_AFSEL15
GPIO_AFRH_AFRH7_0                EQU		GPIO_AFRH_AFSEL15_0
GPIO_AFRH_AFRH7_1                EQU		GPIO_AFRH_AFSEL15_1
GPIO_AFRH_AFRH7_2                EQU		GPIO_AFRH_AFSEL15_2
GPIO_AFRH_AFRH7_3                EQU		GPIO_AFRH_AFSEL15_3

;/******************************************************************************/
;/*                                                                            */
;/*                      Inter-integrated Circuit Interface                    */
;/*                                                                            */
;/******************************************************************************/

I2C_CR1			          EQU		0x00
;/*******************  Bit definition for I2C_CR1 register  ********************/
I2C_CR1_PE_Pos            EQU		0                                         
I2C_CR1_PE_Msk            EQU		0x1 << I2C_CR1_PE_Pos                        ;/*!< 0x00000001 */
I2C_CR1_PE                EQU		I2C_CR1_PE_Msk                               ;/*!<Peripheral Enable                             */
I2C_CR1_SMBUS_Pos         EQU		1                                         
I2C_CR1_SMBUS_Msk         EQU		0x1 << I2C_CR1_SMBUS_Pos                     ;/*!< 0x00000002 */
I2C_CR1_SMBUS             EQU		I2C_CR1_SMBUS_Msk                            ;/*!<SMBus Mode                                    */
I2C_CR1_SMBTYPE_Pos       EQU		3                                         
I2C_CR1_SMBTYPE_Msk       EQU		0x1 << I2C_CR1_SMBTYPE_Pos                   ;/*!< 0x00000008 */
I2C_CR1_SMBTYPE           EQU		I2C_CR1_SMBTYPE_Msk                          ;/*!<SMBus Type                                    */
I2C_CR1_ENARP_Pos         EQU		4                                         
I2C_CR1_ENARP_Msk         EQU		0x1 << I2C_CR1_ENARP_Pos                     ;/*!< 0x00000010 */
I2C_CR1_ENARP             EQU		I2C_CR1_ENARP_Msk                            ;/*!<ARP Enable                                    */
I2C_CR1_ENPEC_Pos         EQU		5                                         
I2C_CR1_ENPEC_Msk         EQU		0x1 << I2C_CR1_ENPEC_Pos                     ;/*!< 0x00000020 */
I2C_CR1_ENPEC             EQU		I2C_CR1_ENPEC_Msk                            ;/*!<PEC Enable                                    */
I2C_CR1_ENGC_Pos          EQU		6                                         
I2C_CR1_ENGC_Msk          EQU		0x1 << I2C_CR1_ENGC_Pos                      ;/*!< 0x00000040 */
I2C_CR1_ENGC              EQU		I2C_CR1_ENGC_Msk                             ;/*!<General Call Enable                           */
I2C_CR1_NOSTRETCH_Pos     EQU		7                                         
I2C_CR1_NOSTRETCH_Msk     EQU		0x1 << I2C_CR1_NOSTRETCH_Pos                 ;/*!< 0x00000080 */
I2C_CR1_NOSTRETCH         EQU		I2C_CR1_NOSTRETCH_Msk                        ;/*!<Clock Stretching Disable EQU		Slave mode            */
I2C_CR1_START_Pos         EQU		8                                         
I2C_CR1_START_Msk         EQU		0x1 << I2C_CR1_START_Pos                     ;/*!< 0x00000100 */
I2C_CR1_START             EQU		I2C_CR1_START_Msk                            ;/*!<Start Generation                              */
I2C_CR1_STOP_Pos          EQU		9                                         
I2C_CR1_STOP_Msk          EQU		0x1 << I2C_CR1_STOP_Pos                      ;/*!< 0x00000200 */
I2C_CR1_STOP              EQU		I2C_CR1_STOP_Msk                             ;/*!<Stop Generation                               */
I2C_CR1_ACK_Pos           EQU		10                                        
I2C_CR1_ACK_Msk           EQU		0x1 << I2C_CR1_ACK_Pos                       ;/*!< 0x00000400 */
I2C_CR1_ACK               EQU		I2C_CR1_ACK_Msk                              ;/*!<Acknowledge Enable                            */
I2C_CR1_POS_Pos           EQU		11                                        
I2C_CR1_POS_Msk           EQU		0x1 << I2C_CR1_POS_Pos                       ;/*!< 0x00000800 */
I2C_CR1_POS               EQU		I2C_CR1_POS_Msk                              ;/*!<Acknowledge/PEC Position EQU		for data reception    */
I2C_CR1_PEC_Pos           EQU		12                                        
I2C_CR1_PEC_Msk           EQU		0x1 << I2C_CR1_PEC_Pos                       ;/*!< 0x00001000 */
I2C_CR1_PEC               EQU		I2C_CR1_PEC_Msk                              ;/*!<Packet Error Checking                         */
I2C_CR1_ALERT_Pos         EQU		13                                        
I2C_CR1_ALERT_Msk         EQU		0x1 << I2C_CR1_ALERT_Pos                     ;/*!< 0x00002000 */
I2C_CR1_ALERT             EQU		I2C_CR1_ALERT_Msk                            ;/*!<SMBus Alert                                   */
I2C_CR1_SWRST_Pos         EQU		15                                        
I2C_CR1_SWRST_Msk         EQU		0x1 << I2C_CR1_SWRST_Pos                     ;/*!< 0x00008000 */
I2C_CR1_SWRST             EQU		I2C_CR1_SWRST_Msk                            ;/*!<Software Reset                                */

I2C_CR2			          EQU		0x04
;/*******************  Bit definition for I2C_CR2 register  ********************/
I2C_CR2_FREQ_Pos          EQU		0                                         
I2C_CR2_FREQ_Msk          EQU		0x3F << I2C_CR2_FREQ_Pos                     ;/*!< 0x0000003F */
I2C_CR2_FREQ              EQU		I2C_CR2_FREQ_Msk                             ;/*!<FREQ[5:0] bits EQU		Peripheral Clock Frequency      */
I2C_CR2_FREQ_0            EQU		0x01 << I2C_CR2_FREQ_Pos                     ;/*!< 0x00000001 */
I2C_CR2_FREQ_1            EQU		0x02 << I2C_CR2_FREQ_Pos                     ;/*!< 0x00000002 */
I2C_CR2_FREQ_2            EQU		0x04 << I2C_CR2_FREQ_Pos                     ;/*!< 0x00000004 */
I2C_CR2_FREQ_3            EQU		0x08 << I2C_CR2_FREQ_Pos                     ;/*!< 0x00000008 */
I2C_CR2_FREQ_4            EQU		0x10 << I2C_CR2_FREQ_Pos                     ;/*!< 0x00000010 */
I2C_CR2_FREQ_5            EQU		0x20 << I2C_CR2_FREQ_Pos                     ;/*!< 0x00000020 */

I2C_CR2_ITERREN_Pos       EQU		8                                         
I2C_CR2_ITERREN_Msk       EQU		0x1 << I2C_CR2_ITERREN_Pos                   ;/*!< 0x00000100 */
I2C_CR2_ITERREN           EQU		I2C_CR2_ITERREN_Msk                          ;/*!<Error Interrupt Enable  */
I2C_CR2_ITEVTEN_Pos       EQU		9                                         
I2C_CR2_ITEVTEN_Msk       EQU		0x1 << I2C_CR2_ITEVTEN_Pos                   ;/*!< 0x00000200 */
I2C_CR2_ITEVTEN           EQU		I2C_CR2_ITEVTEN_Msk                          ;/*!<Event Interrupt Enable  */
I2C_CR2_ITBUFEN_Pos       EQU		10                                        
I2C_CR2_ITBUFEN_Msk       EQU		0x1 << I2C_CR2_ITBUFEN_Pos                   ;/*!< 0x00000400 */
I2C_CR2_ITBUFEN           EQU		I2C_CR2_ITBUFEN_Msk                          ;/*!<Buffer Interrupt Enable */
I2C_CR2_DMAEN_Pos         EQU		11                                        
I2C_CR2_DMAEN_Msk         EQU		0x1 << I2C_CR2_DMAEN_Pos                     ;/*!< 0x00000800 */
I2C_CR2_DMAEN             EQU		I2C_CR2_DMAEN_Msk                            ;/*!<DMA Requests Enable     */
I2C_CR2_LAST_Pos          EQU		12                                        
I2C_CR2_LAST_Msk          EQU		0x1 << I2C_CR2_LAST_Pos                      ;/*!< 0x00001000 */
I2C_CR2_LAST              EQU		I2C_CR2_LAST_Msk                             ;/*!<DMA Last Transfer       */

I2C_OAR1		          EQU		0x08
;/*******************  Bit definition for I2C_OAR1 register  *******************/
I2C_OAR1_ADD1_7           EQU		0x000000FE                                   ;/*!<Interface Address */
I2C_OAR1_ADD8_9           EQU		0x00000300                                   ;/*!<Interface Address */

I2C_OAR1_ADD0_Pos         EQU		0                                         
I2C_OAR1_ADD0_Msk         EQU		0x1 << I2C_OAR1_ADD0_Pos                     ;/*!< 0x00000001 */
I2C_OAR1_ADD0             EQU		I2C_OAR1_ADD0_Msk                            ;/*!<Bit 0 */
I2C_OAR1_ADD1_Pos         EQU		1                                         
I2C_OAR1_ADD1_Msk         EQU		0x1 << I2C_OAR1_ADD1_Pos                     ;/*!< 0x00000002 */
I2C_OAR1_ADD1             EQU		I2C_OAR1_ADD1_Msk                            ;/*!<Bit 1 */
I2C_OAR1_ADD2_Pos         EQU		2                                         
I2C_OAR1_ADD2_Msk         EQU		0x1 << I2C_OAR1_ADD2_Pos                     ;/*!< 0x00000004 */
I2C_OAR1_ADD2             EQU		I2C_OAR1_ADD2_Msk                            ;/*!<Bit 2 */
I2C_OAR1_ADD3_Pos         EQU		3                                         
I2C_OAR1_ADD3_Msk         EQU		0x1 << I2C_OAR1_ADD3_Pos                     ;/*!< 0x00000008 */
I2C_OAR1_ADD3             EQU		I2C_OAR1_ADD3_Msk                            ;/*!<Bit 3 */
I2C_OAR1_ADD4_Pos         EQU		4                                         
I2C_OAR1_ADD4_Msk         EQU		0x1 << I2C_OAR1_ADD4_Pos                     ;/*!< 0x00000010 */
I2C_OAR1_ADD4             EQU		I2C_OAR1_ADD4_Msk                            ;/*!<Bit 4 */
I2C_OAR1_ADD5_Pos         EQU		5                                         
I2C_OAR1_ADD5_Msk         EQU		0x1 << I2C_OAR1_ADD5_Pos                     ;/*!< 0x00000020 */
I2C_OAR1_ADD5             EQU		I2C_OAR1_ADD5_Msk                            ;/*!<Bit 5 */
I2C_OAR1_ADD6_Pos         EQU		6                                         
I2C_OAR1_ADD6_Msk         EQU		0x1 << I2C_OAR1_ADD6_Pos                     ;/*!< 0x00000040 */
I2C_OAR1_ADD6             EQU		I2C_OAR1_ADD6_Msk                            ;/*!<Bit 6 */
I2C_OAR1_ADD7_Pos         EQU		7                                         
I2C_OAR1_ADD7_Msk         EQU		0x1 << I2C_OAR1_ADD7_Pos                     ;/*!< 0x00000080 */
I2C_OAR1_ADD7             EQU		I2C_OAR1_ADD7_Msk                            ;/*!<Bit 7 */
I2C_OAR1_ADD8_Pos         EQU		8                                         
I2C_OAR1_ADD8_Msk         EQU		0x1 << I2C_OAR1_ADD8_Pos                     ;/*!< 0x00000100 */
I2C_OAR1_ADD8             EQU		I2C_OAR1_ADD8_Msk                            ;/*!<Bit 8 */
I2C_OAR1_ADD9_Pos         EQU		9                                         
I2C_OAR1_ADD9_Msk         EQU		0x1 << I2C_OAR1_ADD9_Pos                     ;/*!< 0x00000200 */
I2C_OAR1_ADD9             EQU		I2C_OAR1_ADD9_Msk                            ;/*!<Bit 9 */

I2C_OAR1_ADDMODE_Pos      EQU		15                                        
I2C_OAR1_ADDMODE_Msk      EQU		0x1 << I2C_OAR1_ADDMODE_Pos                  ;/*!< 0x00008000 */
I2C_OAR1_ADDMODE          EQU		I2C_OAR1_ADDMODE_Msk                         ;/*!<Addressing Mode EQU		Slave mode    */

I2C_OAR2			      EQU		0x0C
;/*******************  Bit definition for I2C_OAR2 register  *******************/
I2C_OAR2_ENDUAL_Pos       EQU		0                                         
I2C_OAR2_ENDUAL_Msk       EQU		0x1 << I2C_OAR2_ENDUAL_Pos                   ;/*!< 0x00000001 */
I2C_OAR2_ENDUAL           EQU		I2C_OAR2_ENDUAL_Msk                          ;/*!<Dual addressing mode enable */
I2C_OAR2_ADD2_Pos         EQU		1                                         
I2C_OAR2_ADD2_Msk         EQU		0x7F << I2C_OAR2_ADD2_Pos                    ;/*!< 0x000000FE */
I2C_OAR2_ADD2             EQU		I2C_OAR2_ADD2_Msk                            ;/*!<Interface address           */

I2C_DR		              EQU		0x10
;/********************  Bit definition for I2C_DR register  ********************/
I2C_DR_DR_Pos             EQU		0                                         
I2C_DR_DR_Msk             EQU		0xFF << I2C_DR_DR_Pos                        ;/*!< 0x000000FF */
I2C_DR_DR                 EQU		I2C_DR_DR_Msk                                ;/*!<8-bit Data Register         */

I2C_SR1		              EQU		0x14
;/*******************  Bit definition for I2C_SR1 register  ********************/
I2C_SR1_SB_Pos            EQU		0                                         
I2C_SR1_SB_Msk            EQU		0x1 << I2C_SR1_SB_Pos                        ;/*!< 0x00000001 */
I2C_SR1_SB                EQU		I2C_SR1_SB_Msk                               ;/*!<Start Bit EQU		Master mode                            */
I2C_SR1_ADDR_Pos          EQU		1                                         
I2C_SR1_ADDR_Msk          EQU		0x1 << I2C_SR1_ADDR_Pos                      ;/*!< 0x00000002 */
I2C_SR1_ADDR              EQU		I2C_SR1_ADDR_Msk                             ;/*!<Address sent EQU		master mode   /matched EQU		slave mode    */
I2C_SR1_BTF_Pos           EQU		2                                         
I2C_SR1_BTF_Msk           EQU		0x1 << I2C_SR1_BTF_Pos                       ;/*!< 0x00000004 */
I2C_SR1_BTF               EQU		I2C_SR1_BTF_Msk                              ;/*!<Byte Transfer Finished                          */
I2C_SR1_ADD10_Pos         EQU		3                                         
I2C_SR1_ADD10_Msk         EQU		0x1 << I2C_SR1_ADD10_Pos                     ;/*!< 0x00000008 */
I2C_SR1_ADD10             EQU		I2C_SR1_ADD10_Msk                            ;/*!<10-bit header sent EQU		Master mode                   */
I2C_SR1_STOPF_Pos         EQU		4                                         
I2C_SR1_STOPF_Msk         EQU		0x1 << I2C_SR1_STOPF_Pos                     ;/*!< 0x00000010 */
I2C_SR1_STOPF             EQU		I2C_SR1_STOPF_Msk                            ;/*!<Stop detection EQU		Slave mode                        */
I2C_SR1_RXNE_Pos          EQU		6                                         
I2C_SR1_RXNE_Msk          EQU		0x1 << I2C_SR1_RXNE_Pos                      ;/*!< 0x00000040 */
I2C_SR1_RXNE              EQU		I2C_SR1_RXNE_Msk                             ;/*!<Data Register not Empty EQU		receivers                */
I2C_SR1_TXE_Pos           EQU		7                                         
I2C_SR1_TXE_Msk           EQU		0x1 << I2C_SR1_TXE_Pos                       ;/*!< 0x00000080 */
I2C_SR1_TXE               EQU		I2C_SR1_TXE_Msk                              ;/*!<Data Register Empty EQU		transmitters                 */
I2C_SR1_BERR_Pos          EQU		8                                         
I2C_SR1_BERR_Msk          EQU		0x1 << I2C_SR1_BERR_Pos                      ;/*!< 0x00000100 */
I2C_SR1_BERR              EQU		I2C_SR1_BERR_Msk                             ;/*!<Bus Error                                       */
I2C_SR1_ARLO_Pos          EQU		9                                         
I2C_SR1_ARLO_Msk          EQU		0x1 << I2C_SR1_ARLO_Pos                      ;/*!< 0x00000200 */
I2C_SR1_ARLO              EQU		I2C_SR1_ARLO_Msk                             ;/*!<Arbitration Lost EQU		master mode                     */
I2C_SR1_AF_Pos            EQU		10                                        
I2C_SR1_AF_Msk            EQU		0x1 << I2C_SR1_AF_Pos                        ;/*!< 0x00000400 */
I2C_SR1_AF                EQU		I2C_SR1_AF_Msk                               ;/*!<Acknowledge Failure                             */
I2C_SR1_OVR_Pos           EQU		11                                        
I2C_SR1_OVR_Msk           EQU		0x1 << I2C_SR1_OVR_Pos                       ;/*!< 0x00000800 */
I2C_SR1_OVR               EQU		I2C_SR1_OVR_Msk                              ;/*!<Overrun/Underrun                                */
I2C_SR1_PECERR_Pos        EQU		12                                        
I2C_SR1_PECERR_Msk        EQU		0x1 << I2C_SR1_PECERR_Pos                    ;/*!< 0x00001000 */
I2C_SR1_PECERR            EQU		I2C_SR1_PECERR_Msk                           ;/*!<PEC Error in reception                          */
I2C_SR1_TIMEOUT_Pos       EQU		14                                        
I2C_SR1_TIMEOUT_Msk       EQU		0x1 << I2C_SR1_TIMEOUT_Pos                   ;/*!< 0x00004000 */
I2C_SR1_TIMEOUT           EQU		I2C_SR1_TIMEOUT_Msk                          ;/*!<Timeout or Tlow Error                           */
I2C_SR1_SMBALERT_Pos      EQU		15                                        
I2C_SR1_SMBALERT_Msk      EQU		0x1 << I2C_SR1_SMBALERT_Pos                  ;/*!< 0x00008000 */
I2C_SR1_SMBALERT          EQU		I2C_SR1_SMBALERT_Msk                         ;/*!<SMBus Alert                                     */

I2C_SR2			          EQU		0x18
;/*******************  Bit definition for I2C_SR2 register  ********************/
I2C_SR2_MSL_Pos           EQU		0                                         
I2C_SR2_MSL_Msk           EQU		0x1 << I2C_SR2_MSL_Pos                       ;/*!< 0x00000001 */
I2C_SR2_MSL               EQU		I2C_SR2_MSL_Msk                              ;/*!<Master/Slave                                    */
I2C_SR2_BUSY_Pos          EQU		1                                         
I2C_SR2_BUSY_Msk          EQU		0x1 << I2C_SR2_BUSY_Pos                      ;/*!< 0x00000002 */
I2C_SR2_BUSY              EQU		I2C_SR2_BUSY_Msk                             ;/*!<Bus Busy                                        */
I2C_SR2_TRA_Pos           EQU		2                                         
I2C_SR2_TRA_Msk           EQU		0x1 << I2C_SR2_TRA_Pos                       ;/*!< 0x00000004 */
I2C_SR2_TRA               EQU		I2C_SR2_TRA_Msk                              ;/*!<Transmitter/Receiver                            */
I2C_SR2_GENCALL_Pos       EQU		4                                         
I2C_SR2_GENCALL_Msk       EQU		0x1 << I2C_SR2_GENCALL_Pos                   ;/*!< 0x00000010 */
I2C_SR2_GENCALL           EQU		I2C_SR2_GENCALL_Msk                          ;/*!<General Call Address EQU		Slave mode                  */
I2C_SR2_SMBDEFAULT_Pos    EQU		5                                         
I2C_SR2_SMBDEFAULT_Msk    EQU		0x1 << I2C_SR2_SMBDEFAULT_Pos                ;/*!< 0x00000020 */
I2C_SR2_SMBDEFAULT        EQU		I2C_SR2_SMBDEFAULT_Msk                       ;/*!<SMBus Device Default Address EQU		Slave mode          */
I2C_SR2_SMBHOST_Pos       EQU		6                                         
I2C_SR2_SMBHOST_Msk       EQU		0x1 << I2C_SR2_SMBHOST_Pos                   ;/*!< 0x00000040 */
I2C_SR2_SMBHOST           EQU		I2C_SR2_SMBHOST_Msk                          ;/*!<SMBus Host Header EQU		Slave mode                     */
I2C_SR2_DUALF_Pos         EQU		7                                         
I2C_SR2_DUALF_Msk         EQU		0x1 << I2C_SR2_DUALF_Pos                     ;/*!< 0x00000080 */
I2C_SR2_DUALF             EQU		I2C_SR2_DUALF_Msk                            ;/*!<Dual Flag EQU		Slave mode                             */
I2C_SR2_PEC_Pos           EQU		8                                         
I2C_SR2_PEC_Msk           EQU		0xFF << I2C_SR2_PEC_Pos                      ;/*!< 0x0000FF00 */
I2C_SR2_PEC               EQU		I2C_SR2_PEC_Msk                              ;/*!<Packet Error Checking Register                  */

I2C_CCR			          EQU		0x1C
;/*******************  Bit definition for I2C_CCR register  ********************/
I2C_CCR_CCR_Pos           EQU		0                                         
I2C_CCR_CCR_Msk           EQU		0xFFF << I2C_CCR_CCR_Pos                     ;/*!< 0x00000FFF */
I2C_CCR_CCR               EQU		I2C_CCR_CCR_Msk                              ;/*!<Clock Control Register in Fast/Standard mode EQU		Master mode    */
I2C_CCR_DUTY_Pos          EQU		14                                        
I2C_CCR_DUTY_Msk          EQU		0x1 << I2C_CCR_DUTY_Pos                      ;/*!< 0x00004000 */
I2C_CCR_DUTY              EQU		I2C_CCR_DUTY_Msk                             ;/*!<Fast Mode Duty Cycle                                       */
I2C_CCR_FS_Pos            EQU		15                                        
I2C_CCR_FS_Msk            EQU		0x1 << I2C_CCR_FS_Pos                        ;/*!< 0x00008000 */
I2C_CCR_FS                EQU		I2C_CCR_FS_Msk                               ;/*!<I2C Master Mode Selection                                  */

I2C_TRISE			      EQU		0x20
;/******************  Bit definition for I2C_TRISE register  *******************/
I2C_TRISE_TRISE_Pos       EQU		0                                         
I2C_TRISE_TRISE_Msk       EQU		0x3F << I2C_TRISE_TRISE_Pos                  ;/*!< 0x0000003F */
I2C_TRISE_TRISE           EQU		I2C_TRISE_TRISE_Msk                          ;/*!<Maximum Rise Time in Fast/Standard mode EQU		Master mode    */


;/******************************************************************************/
;/*                                                                            */
;/*                           Independent WATCHDOG                             */
;/*                                                                            */
;/******************************************************************************/

IWDG_KR			    EQU		0x00
;/*******************  Bit definition for IWDG_KR register  ********************/
IWDG_KR_KEY_Pos     EQU		0                                               
IWDG_KR_KEY_Msk     EQU		0xFFFF << IWDG_KR_KEY_Pos                          ;/*!< 0x0000FFFF */
IWDG_KR_KEY         EQU		IWDG_KR_KEY_Msk                                    ;/*!<Key value EQU		write only, read 0000h     */

IWDG_PR		        EQU		0x04
;/*******************  Bit definition for IWDG_PR register  ********************/
IWDG_PR_PR_Pos      EQU		0                                               
IWDG_PR_PR_Msk      EQU		0x7 << IWDG_PR_PR_Pos                              ;/*!< 0x00000007 */
IWDG_PR_PR          EQU		IWDG_PR_PR_Msk                                     ;/*!<PR[2:0] EQU		Prescaler divider            */
IWDG_PR_PR_0        EQU		0x1 << IWDG_PR_PR_Pos                              ;/*!< 0x01 */
IWDG_PR_PR_1        EQU		0x2 << IWDG_PR_PR_Pos                              ;/*!< 0x02 */
IWDG_PR_PR_2        EQU		0x4 << IWDG_PR_PR_Pos                              ;/*!< 0x04 */

IWDG_RLR		    EQU		0x08
;/*******************  Bit definition for IWDG_RLR register  *******************/
IWDG_RLR_RL_Pos     EQU		0                                               
IWDG_RLR_RL_Msk     EQU		0xFFF << IWDG_RLR_RL_Pos                           ;/*!< 0x00000FFF */
IWDG_RLR_RL         EQU		IWDG_RLR_RL_Msk                                    ;/*!<Watchdog counter reload value        */

IWDG_SR		        EQU		0x0C
;/*******************  Bit definition for IWDG_SR register  ********************/
IWDG_SR_PVU_Pos     EQU		0                                               
IWDG_SR_PVU_Msk     EQU		0x1 << IWDG_SR_PVU_Pos                             ;/*!< 0x00000001 */
IWDG_SR_PVU         EQU		IWDG_SR_PVU_Msk                                    ;/*!<Watchdog prescaler value update      */
IWDG_SR_RVU_Pos     EQU		1                                               
IWDG_SR_RVU_Msk     EQU		0x1 << IWDG_SR_RVU_Pos                             ;/*!< 0x00000002 */
IWDG_SR_RVU         EQU		IWDG_SR_RVU_Msk                                    ;/*!<Watchdog counter reload value update */

;/******************************************************************************/
;/*                                                                            */
;/*                             Power Control                                  */
;/*                                                                            */
;/******************************************************************************/

PWR_CR			       EQU		0x00
;/********************  Bit definition for PWR_CR register  ********************/
PWR_CR_LPDS_Pos        EQU		0                                            
PWR_CR_LPDS_Msk        EQU		0x1 << PWR_CR_LPDS_Pos                          ;/*!< 0x00000001 */
PWR_CR_LPDS            EQU		PWR_CR_LPDS_Msk                                 ;/*!< Low-Power Deepsleep                 */
PWR_CR_PDDS_Pos        EQU		1                                            
PWR_CR_PDDS_Msk        EQU		0x1 << PWR_CR_PDDS_Pos                          ;/*!< 0x00000002 */
PWR_CR_PDDS            EQU		PWR_CR_PDDS_Msk                                 ;/*!< Power Down Deepsleep                */
PWR_CR_CWUF_Pos        EQU		2                                            
PWR_CR_CWUF_Msk        EQU		0x1 << PWR_CR_CWUF_Pos                          ;/*!< 0x00000004 */
PWR_CR_CWUF            EQU		PWR_CR_CWUF_Msk                                 ;/*!< Clear Wakeup Flag                   */
PWR_CR_CSBF_Pos        EQU		3                                            
PWR_CR_CSBF_Msk        EQU		0x1 << PWR_CR_CSBF_Pos                          ;/*!< 0x00000008 */
PWR_CR_CSBF            EQU		PWR_CR_CSBF_Msk                                 ;/*!< Clear Standby Flag                  */
PWR_CR_PVDE_Pos        EQU		4                                            
PWR_CR_PVDE_Msk        EQU		0x1 << PWR_CR_PVDE_Pos                          ;/*!< 0x00000010 */
PWR_CR_PVDE            EQU		PWR_CR_PVDE_Msk                                 ;/*!< Power Voltage Detector Enable       */

PWR_CR_PLS_Pos         EQU		5                                            
PWR_CR_PLS_Msk         EQU		0x7 << PWR_CR_PLS_Pos                           ;/*!< 0x000000E0 */
PWR_CR_PLS             EQU		PWR_CR_PLS_Msk                                  ;/*!< PLS[2:0] bits EQU		PVD Level Selection    */
PWR_CR_PLS_0           EQU		0x1 << PWR_CR_PLS_Pos                           ;/*!< 0x00000020 */
PWR_CR_PLS_1           EQU		0x2 << PWR_CR_PLS_Pos                           ;/*!< 0x00000040 */
PWR_CR_PLS_2           EQU		0x4 << PWR_CR_PLS_Pos                           ;/*!< 0x00000080 */

;/*!< PVD level configuration */
PWR_CR_PLS_LEV0        EQU		0x00000000                                      ;/*!< PVD level 0 */
PWR_CR_PLS_LEV1        EQU		0x00000020                                      ;/*!< PVD level 1 */
PWR_CR_PLS_LEV2        EQU		0x00000040                                      ;/*!< PVD level 2 */
PWR_CR_PLS_LEV3        EQU		0x00000060                                      ;/*!< PVD level 3 */
PWR_CR_PLS_LEV4        EQU		0x00000080                                      ;/*!< PVD level 4 */
PWR_CR_PLS_LEV5        EQU		0x000000A0                                      ;/*!< PVD level 5 */
PWR_CR_PLS_LEV6        EQU		0x000000C0                                      ;/*!< PVD level 6 */
PWR_CR_PLS_LEV7        EQU		0x000000E0                                      ;/*!< PVD level 7 */
PWR_CR_DBP_Pos         EQU		8                                            
PWR_CR_DBP_Msk         EQU		0x1 << PWR_CR_DBP_Pos                           ;/*!< 0x00000100 */
PWR_CR_DBP             EQU		PWR_CR_DBP_Msk                                  ;/*!< Disable Backup Domain write protection                     */
PWR_CR_FPDS_Pos        EQU		9                                            
PWR_CR_FPDS_Msk        EQU		0x1 << PWR_CR_FPDS_Pos                          ;/*!< 0x00000200 */
PWR_CR_FPDS            EQU		PWR_CR_FPDS_Msk                                 ;/*!< Flash power down in Stop mode                              */
PWR_CR_VOS_Pos         EQU		14                                           
PWR_CR_VOS_Msk         EQU		0x1 << PWR_CR_VOS_Pos                           ;/*!< 0x00004000 */
PWR_CR_VOS             EQU		PWR_CR_VOS_Msk                                  ;/*!< VOS bit EQU		Regulator voltage scaling output selection    */

;/* Legacy define */
PWR_CR_PMODE           EQU		PWR_CR_VOS

PWR_CSR			       EQU		0x04
;/*******************  Bit definition for PWR_CSR register  ********************/
PWR_CSR_WUF_Pos        EQU		0                                            
PWR_CSR_WUF_Msk        EQU		0x1 << PWR_CSR_WUF_Pos                          ;/*!< 0x00000001 */
PWR_CSR_WUF            EQU		PWR_CSR_WUF_Msk                                 ;/*!< Wakeup Flag                                      */
PWR_CSR_SBF_Pos        EQU		1                                            
PWR_CSR_SBF_Msk        EQU		0x1 << PWR_CSR_SBF_Pos                          ;/*!< 0x00000002 */
PWR_CSR_SBF            EQU		PWR_CSR_SBF_Msk                                 ;/*!< Standby Flag                                     */
PWR_CSR_PVDO_Pos       EQU		2                                            
PWR_CSR_PVDO_Msk       EQU		0x1 << PWR_CSR_PVDO_Pos                         ;/*!< 0x00000004 */
PWR_CSR_PVDO           EQU		PWR_CSR_PVDO_Msk                                ;/*!< PVD Output                                       */
PWR_CSR_BRR_Pos        EQU		3                                            
PWR_CSR_BRR_Msk        EQU		0x1 << PWR_CSR_BRR_Pos                          ;/*!< 0x00000008 */
PWR_CSR_BRR            EQU		PWR_CSR_BRR_Msk                                 ;/*!< Backup regulator ready                           */
PWR_CSR_EWUP_Pos       EQU		8                                            
PWR_CSR_EWUP_Msk       EQU		0x1 << PWR_CSR_EWUP_Pos                         ;/*!< 0x00000100 */
PWR_CSR_EWUP           EQU		PWR_CSR_EWUP_Msk                                ;/*!< Enable WKUP pin                                  */
PWR_CSR_BRE_Pos        EQU		9                                            
PWR_CSR_BRE_Msk        EQU		0x1 << PWR_CSR_BRE_Pos                          ;/*!< 0x00000200 */
PWR_CSR_BRE            EQU		PWR_CSR_BRE_Msk                                 ;/*!< Backup regulator enable                          */
PWR_CSR_VOSRDY_Pos     EQU		14                                           
PWR_CSR_VOSRDY_Msk     EQU		0x1 << PWR_CSR_VOSRDY_Pos                       ;/*!< 0x00004000 */
PWR_CSR_VOSRDY         EQU		PWR_CSR_VOSRDY_Msk                              ;/*!< Regulator voltage scaling output selection ready */

;/* Legacy define */
PWR_CSR_REGRDY         EQU		PWR_CSR_VOSRDY

;/******************************************************************************/
;/*                                                                            */
;/*                         Reset and Clock Control                            */
;/*                                                                            */
;/******************************************************************************/

RCC_CR			                   EQU		0x00
;/********************  Bit definition for RCC_CR register  ********************/
RCC_CR_HSION_Pos                   EQU		0                                
RCC_CR_HSION_Msk                   EQU		0x1 << RCC_CR_HSION_Pos             ;/*!< 0x00000001 */
RCC_CR_HSION                       EQU		RCC_CR_HSION_Msk                    
RCC_CR_HSIRDY_Pos                  EQU		1                                
RCC_CR_HSIRDY_Msk                  EQU		0x1 << RCC_CR_HSIRDY_Pos            ;/*!< 0x00000002 */
RCC_CR_HSIRDY                      EQU		RCC_CR_HSIRDY_Msk                   

RCC_CR_HSITRIM_Pos                 EQU		3                                
RCC_CR_HSITRIM_Msk                 EQU		0x1F << RCC_CR_HSITRIM_Pos          ;/*!< 0x000000F8 */
RCC_CR_HSITRIM                     EQU		RCC_CR_HSITRIM_Msk                  
RCC_CR_HSITRIM_0                   EQU		0x01 << RCC_CR_HSITRIM_Pos          ;/*!< 0x00000008 */
RCC_CR_HSITRIM_1                   EQU		0x02 << RCC_CR_HSITRIM_Pos          ;/*!< 0x00000010 */
RCC_CR_HSITRIM_2                   EQU		0x04 << RCC_CR_HSITRIM_Pos          ;/*!< 0x00000020 */
RCC_CR_HSITRIM_3                   EQU		0x08 << RCC_CR_HSITRIM_Pos          ;/*!< 0x00000040 */
RCC_CR_HSITRIM_4                   EQU		0x10 << RCC_CR_HSITRIM_Pos          ;/*!< 0x00000080 */

RCC_CR_HSICAL_Pos                  EQU		8                                
RCC_CR_HSICAL_Msk                  EQU		0xFF << RCC_CR_HSICAL_Pos           ;/*!< 0x0000FF00 */
RCC_CR_HSICAL                      EQU		RCC_CR_HSICAL_Msk                   
RCC_CR_HSICAL_0                    EQU		0x01 << RCC_CR_HSICAL_Pos           ;/*!< 0x00000100 */
RCC_CR_HSICAL_1                    EQU		0x02 << RCC_CR_HSICAL_Pos           ;/*!< 0x00000200 */
RCC_CR_HSICAL_2                    EQU		0x04 << RCC_CR_HSICAL_Pos           ;/*!< 0x00000400 */
RCC_CR_HSICAL_3                    EQU		0x08 << RCC_CR_HSICAL_Pos           ;/*!< 0x00000800 */
RCC_CR_HSICAL_4                    EQU		0x10 << RCC_CR_HSICAL_Pos           ;/*!< 0x00001000 */
RCC_CR_HSICAL_5                    EQU		0x20 << RCC_CR_HSICAL_Pos           ;/*!< 0x00002000 */
RCC_CR_HSICAL_6                    EQU		0x40 << RCC_CR_HSICAL_Pos           ;/*!< 0x00004000 */
RCC_CR_HSICAL_7                    EQU		0x80 << RCC_CR_HSICAL_Pos           ;/*!< 0x00008000 */

RCC_CR_HSEON_Pos                   EQU		16                               
RCC_CR_HSEON_Msk                   EQU		0x1 << RCC_CR_HSEON_Pos             ;/*!< 0x00010000 */
RCC_CR_HSEON                       EQU		RCC_CR_HSEON_Msk                    
RCC_CR_HSERDY_Pos                  EQU		17                               
RCC_CR_HSERDY_Msk                  EQU		0x1 << RCC_CR_HSERDY_Pos            ;/*!< 0x00020000 */
RCC_CR_HSERDY                      EQU		RCC_CR_HSERDY_Msk                   
RCC_CR_HSEBYP_Pos                  EQU		18                               
RCC_CR_HSEBYP_Msk                  EQU		0x1 << RCC_CR_HSEBYP_Pos            ;/*!< 0x00040000 */
RCC_CR_HSEBYP                      EQU		RCC_CR_HSEBYP_Msk                   
RCC_CR_CSSON_Pos                   EQU		19                               
RCC_CR_CSSON_Msk                   EQU		0x1 << RCC_CR_CSSON_Pos             ;/*!< 0x00080000 */
RCC_CR_CSSON                       EQU		RCC_CR_CSSON_Msk                    
RCC_CR_PLLON_Pos                   EQU		24                               
RCC_CR_PLLON_Msk                   EQU		0x1 << RCC_CR_PLLON_Pos             ;/*!< 0x01000000 */
RCC_CR_PLLON                       EQU		RCC_CR_PLLON_Msk                    
RCC_CR_PLLRDY_Pos                  EQU		25                               
RCC_CR_PLLRDY_Msk                  EQU		0x1 << RCC_CR_PLLRDY_Pos            ;/*!< 0x02000000 */
RCC_CR_PLLRDY                      EQU		RCC_CR_PLLRDY_Msk                   

RCC_CR_PLLI2SON_Pos                EQU		26                               
RCC_CR_PLLI2SON_Msk                EQU		0x1 << RCC_CR_PLLI2SON_Pos          ;/*!< 0x04000000 */
RCC_CR_PLLI2SON                    EQU		RCC_CR_PLLI2SON_Msk                 
RCC_CR_PLLI2SRDY_Pos               EQU		27                               
RCC_CR_PLLI2SRDY_Msk               EQU		0x1 << RCC_CR_PLLI2SRDY_Pos         ;/*!< 0x08000000 */
RCC_CR_PLLI2SRDY                   EQU		RCC_CR_PLLI2SRDY_Msk                

RCC_PLLCFGR			               EQU		0x04
;/********************  Bit definition for RCC_PLLCFGR register  ***************/
RCC_PLLCFGR_PLLM_Pos               EQU		0                                
RCC_PLLCFGR_PLLM_Msk               EQU		0x3F << RCC_PLLCFGR_PLLM_Pos        ;/*!< 0x0000003F */
RCC_PLLCFGR_PLLM                   EQU		RCC_PLLCFGR_PLLM_Msk                
RCC_PLLCFGR_PLLM_0                 EQU		0x01 << RCC_PLLCFGR_PLLM_Pos        ;/*!< 0x00000001 */
RCC_PLLCFGR_PLLM_1                 EQU		0x02 << RCC_PLLCFGR_PLLM_Pos        ;/*!< 0x00000002 */
RCC_PLLCFGR_PLLM_2                 EQU		0x04 << RCC_PLLCFGR_PLLM_Pos        ;/*!< 0x00000004 */
RCC_PLLCFGR_PLLM_3                 EQU		0x08 << RCC_PLLCFGR_PLLM_Pos        ;/*!< 0x00000008 */
RCC_PLLCFGR_PLLM_4                 EQU		0x10 << RCC_PLLCFGR_PLLM_Pos        ;/*!< 0x00000010 */
RCC_PLLCFGR_PLLM_5                 EQU		0x20 << RCC_PLLCFGR_PLLM_Pos        ;/*!< 0x00000020 */

RCC_PLLCFGR_PLLN_Pos               EQU		6                                
RCC_PLLCFGR_PLLN_Msk               EQU		0x1FF << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00007FC0 */
RCC_PLLCFGR_PLLN                   EQU		RCC_PLLCFGR_PLLN_Msk                
RCC_PLLCFGR_PLLN_0                 EQU		0x001 << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00000040 */
RCC_PLLCFGR_PLLN_1                 EQU		0x002 << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00000080 */
RCC_PLLCFGR_PLLN_2                 EQU		0x004 << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00000100 */
RCC_PLLCFGR_PLLN_3                 EQU		0x008 << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00000200 */
RCC_PLLCFGR_PLLN_4                 EQU		0x010 << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00000400 */
RCC_PLLCFGR_PLLN_5                 EQU		0x020 << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00000800 */
RCC_PLLCFGR_PLLN_6                 EQU		0x040 << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00001000 */
RCC_PLLCFGR_PLLN_7                 EQU		0x080 << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00002000 */
RCC_PLLCFGR_PLLN_8                 EQU		0x100 << RCC_PLLCFGR_PLLN_Pos       ;/*!< 0x00004000 */

RCC_PLLCFGR_PLLP_Pos               EQU		16                               
RCC_PLLCFGR_PLLP_Msk               EQU		0x3 << RCC_PLLCFGR_PLLP_Pos         ;/*!< 0x00030000 */
RCC_PLLCFGR_PLLP                   EQU		RCC_PLLCFGR_PLLP_Msk                
RCC_PLLCFGR_PLLP_0                 EQU		0x1 << RCC_PLLCFGR_PLLP_Pos         ;/*!< 0x00010000 */
RCC_PLLCFGR_PLLP_1                 EQU		0x2 << RCC_PLLCFGR_PLLP_Pos         ;/*!< 0x00020000 */

RCC_PLLCFGR_PLLSRC_Pos             EQU		22                               
RCC_PLLCFGR_PLLSRC_Msk             EQU		0x1 << RCC_PLLCFGR_PLLSRC_Pos       ;/*!< 0x00400000 */
RCC_PLLCFGR_PLLSRC                 EQU		RCC_PLLCFGR_PLLSRC_Msk              
RCC_PLLCFGR_PLLSRC_HSE_Pos         EQU		22                               
RCC_PLLCFGR_PLLSRC_HSE_Msk         EQU		0x1 << RCC_PLLCFGR_PLLSRC_HSE_Pos    ;/*!< 0x00400000 */
RCC_PLLCFGR_PLLSRC_HSE             EQU		RCC_PLLCFGR_PLLSRC_HSE_Msk          
RCC_PLLCFGR_PLLSRC_HSI             EQU		0x00000000                         

RCC_PLLCFGR_PLLQ_Pos               EQU		24                               
RCC_PLLCFGR_PLLQ_Msk               EQU		0xF << RCC_PLLCFGR_PLLQ_Pos         ;/*!< 0x0F000000 */
RCC_PLLCFGR_PLLQ                   EQU		RCC_PLLCFGR_PLLQ_Msk                
RCC_PLLCFGR_PLLQ_0                 EQU		0x1 << RCC_PLLCFGR_PLLQ_Pos         ;/*!< 0x01000000 */
RCC_PLLCFGR_PLLQ_1                 EQU		0x2 << RCC_PLLCFGR_PLLQ_Pos         ;/*!< 0x02000000 */
RCC_PLLCFGR_PLLQ_2                 EQU		0x4 << RCC_PLLCFGR_PLLQ_Pos         ;/*!< 0x04000000 */
RCC_PLLCFGR_PLLQ_3                 EQU		0x8 << RCC_PLLCFGR_PLLQ_Pos         ;/*!< 0x08000000 */


RCC_CFGR			               EQU		0x08 
;/********************  Bit definition for RCC_CFGR register  ******************/
;/*!< SW configuration */
RCC_CFGR_SW_Pos                    EQU		0                                
RCC_CFGR_SW_Msk                    EQU		0x3 << RCC_CFGR_SW_Pos              ;/*!< 0x00000003 */
RCC_CFGR_SW                        EQU		RCC_CFGR_SW_Msk                     ;/*!< SW[1:0] bits EQU		System clock Switch    */
RCC_CFGR_SW_0                      EQU		0x1 << RCC_CFGR_SW_Pos              ;/*!< 0x00000001 */
RCC_CFGR_SW_1                      EQU		0x2 << RCC_CFGR_SW_Pos              ;/*!< 0x00000002 */

RCC_CFGR_SW_HSI                    EQU		0x00000000                          ;/*!< HSI selected as system clock */
RCC_CFGR_SW_HSE                    EQU		0x00000001                          ;/*!< HSE selected as system clock */
RCC_CFGR_SW_PLL                    EQU		0x00000002                          ;/*!< PLL selected as system clock */

;/*!< SWS configuration */
RCC_CFGR_SWS_Pos                   EQU		2                                
RCC_CFGR_SWS_Msk                   EQU		0x3 << RCC_CFGR_SWS_Pos             ;/*!< 0x0000000C */
RCC_CFGR_SWS                       EQU		RCC_CFGR_SWS_Msk                    ;/*!< SWS[1:0] bits EQU		System Clock Switch Status    */
RCC_CFGR_SWS_0                     EQU		0x1 << RCC_CFGR_SWS_Pos             ;/*!< 0x00000004 */
RCC_CFGR_SWS_1                     EQU		0x2 << RCC_CFGR_SWS_Pos             ;/*!< 0x00000008 */

RCC_CFGR_SWS_HSI                   EQU		0x00000000                          ;/*!< HSI oscillator used as system clock        */
RCC_CFGR_SWS_HSE                   EQU		0x00000004                          ;/*!< HSE oscillator used as system clock        */
RCC_CFGR_SWS_PLL                   EQU		0x00000008                          ;/*!< PLL used as system clock                   */

;/*!< HPRE configuration */
RCC_CFGR_HPRE_Pos                  EQU		4                                
RCC_CFGR_HPRE_Msk                  EQU		0xF << RCC_CFGR_HPRE_Pos            ;/*!< 0x000000F0 */
RCC_CFGR_HPRE                      EQU		RCC_CFGR_HPRE_Msk                   ;/*!< HPRE[3:0] bits EQU		AHB prescaler    */
RCC_CFGR_HPRE_0                    EQU		0x1 << RCC_CFGR_HPRE_Pos            ;/*!< 0x00000010 */
RCC_CFGR_HPRE_1                    EQU		0x2 << RCC_CFGR_HPRE_Pos            ;/*!< 0x00000020 */
RCC_CFGR_HPRE_2                    EQU		0x4 << RCC_CFGR_HPRE_Pos            ;/*!< 0x00000040 */
RCC_CFGR_HPRE_3                    EQU		0x8 << RCC_CFGR_HPRE_Pos            ;/*!< 0x00000080 */

RCC_CFGR_HPRE_DIV1                 EQU		0x00000000                          ;/*!< SYSCLK not divided    */
RCC_CFGR_HPRE_DIV2                 EQU		0x00000080                          ;/*!< SYSCLK divided by 2   */
RCC_CFGR_HPRE_DIV4                 EQU		0x00000090                          ;/*!< SYSCLK divided by 4   */
RCC_CFGR_HPRE_DIV8                 EQU		0x000000A0                          ;/*!< SYSCLK divided by 8   */
RCC_CFGR_HPRE_DIV16                EQU		0x000000B0                          ;/*!< SYSCLK divided by 16  */
RCC_CFGR_HPRE_DIV64                EQU		0x000000C0                          ;/*!< SYSCLK divided by 64  */
RCC_CFGR_HPRE_DIV128               EQU		0x000000D0                          ;/*!< SYSCLK divided by 128 */
RCC_CFGR_HPRE_DIV256               EQU		0x000000E0                          ;/*!< SYSCLK divided by 256 */
RCC_CFGR_HPRE_DIV512               EQU		0x000000F0                          ;/*!< SYSCLK divided by 512 */

;/*!< PPRE1 configuration */
RCC_CFGR_PPRE1_Pos                 EQU		10                               
RCC_CFGR_PPRE1_Msk                 EQU		0x7 << RCC_CFGR_PPRE1_Pos           ;/*!< 0x00001C00 */
RCC_CFGR_PPRE1                     EQU		RCC_CFGR_PPRE1_Msk                  ;/*!< PRE1[2:0] bits EQU		APB1 prescaler    */
RCC_CFGR_PPRE1_0                   EQU		0x1 << RCC_CFGR_PPRE1_Pos           ;/*!< 0x00000400 */
RCC_CFGR_PPRE1_1                   EQU		0x2 << RCC_CFGR_PPRE1_Pos           ;/*!< 0x00000800 */
RCC_CFGR_PPRE1_2                   EQU		0x4 << RCC_CFGR_PPRE1_Pos           ;/*!< 0x00001000 */

RCC_CFGR_PPRE1_DIV1                EQU		0x00000000                          ;/*!< HCLK not divided   */
RCC_CFGR_PPRE1_DIV2                EQU		0x00001000                          ;/*!< HCLK divided by 2  */
RCC_CFGR_PPRE1_DIV4                EQU		0x00001400                          ;/*!< HCLK divided by 4  */
RCC_CFGR_PPRE1_DIV8                EQU		0x00001800                          ;/*!< HCLK divided by 8  */
RCC_CFGR_PPRE1_DIV16               EQU		0x00001C00                          ;/*!< HCLK divided by 16 */

;/*!< PPRE2 configuration */
RCC_CFGR_PPRE2_Pos                 EQU		13                               
RCC_CFGR_PPRE2_Msk                 EQU		0x7 << RCC_CFGR_PPRE2_Pos           ;/*!< 0x0000E000 */
RCC_CFGR_PPRE2                     EQU		RCC_CFGR_PPRE2_Msk                  ;/*!< PRE2[2:0] bits EQU		APB2 prescaler    */
RCC_CFGR_PPRE2_0                   EQU		0x1 << RCC_CFGR_PPRE2_Pos           ;/*!< 0x00002000 */
RCC_CFGR_PPRE2_1                   EQU		0x2 << RCC_CFGR_PPRE2_Pos           ;/*!< 0x00004000 */
RCC_CFGR_PPRE2_2                   EQU		0x4 << RCC_CFGR_PPRE2_Pos           ;/*!< 0x00008000 */

RCC_CFGR_PPRE2_DIV1                EQU		0x00000000                          ;/*!< HCLK not divided   */
RCC_CFGR_PPRE2_DIV2                EQU		0x00008000                          ;/*!< HCLK divided by 2  */
RCC_CFGR_PPRE2_DIV4                EQU		0x0000A000                          ;/*!< HCLK divided by 4  */
RCC_CFGR_PPRE2_DIV8                EQU		0x0000C000                          ;/*!< HCLK divided by 8  */
RCC_CFGR_PPRE2_DIV16               EQU		0x0000E000                          ;/*!< HCLK divided by 16 */

;/*!< RTCPRE configuration */
RCC_CFGR_RTCPRE_Pos                EQU		16                               
RCC_CFGR_RTCPRE_Msk                EQU		0x1F << RCC_CFGR_RTCPRE_Pos         ;/*!< 0x001F0000 */
RCC_CFGR_RTCPRE                    EQU		RCC_CFGR_RTCPRE_Msk                 
RCC_CFGR_RTCPRE_0                  EQU		0x01 << RCC_CFGR_RTCPRE_Pos         ;/*!< 0x00010000 */
RCC_CFGR_RTCPRE_1                  EQU		0x02 << RCC_CFGR_RTCPRE_Pos         ;/*!< 0x00020000 */
RCC_CFGR_RTCPRE_2                  EQU		0x04 << RCC_CFGR_RTCPRE_Pos         ;/*!< 0x00040000 */
RCC_CFGR_RTCPRE_3                  EQU		0x08 << RCC_CFGR_RTCPRE_Pos         ;/*!< 0x00080000 */
RCC_CFGR_RTCPRE_4                  EQU		0x10 << RCC_CFGR_RTCPRE_Pos         ;/*!< 0x00100000 */

;/*!< MCO1 configuration */
RCC_CFGR_MCO1_Pos                  EQU		21                               
RCC_CFGR_MCO1_Msk                  EQU		0x3 << RCC_CFGR_MCO1_Pos            ;/*!< 0x00600000 */
RCC_CFGR_MCO1                      EQU		RCC_CFGR_MCO1_Msk                   
RCC_CFGR_MCO1_0                    EQU		0x1 << RCC_CFGR_MCO1_Pos            ;/*!< 0x00200000 */
RCC_CFGR_MCO1_1                    EQU		0x2 << RCC_CFGR_MCO1_Pos            ;/*!< 0x00400000 */

RCC_CFGR_I2SSRC_Pos                EQU		23                               
RCC_CFGR_I2SSRC_Msk                EQU		0x1 << RCC_CFGR_I2SSRC_Pos          ;/*!< 0x00800000 */
RCC_CFGR_I2SSRC                    EQU		RCC_CFGR_I2SSRC_Msk                 

RCC_CFGR_MCO1PRE_Pos               EQU		24                               
RCC_CFGR_MCO1PRE_Msk               EQU		0x7 << RCC_CFGR_MCO1PRE_Pos         ;/*!< 0x07000000 */
RCC_CFGR_MCO1PRE                   EQU		RCC_CFGR_MCO1PRE_Msk                
RCC_CFGR_MCO1PRE_0                 EQU		0x1 << RCC_CFGR_MCO1PRE_Pos         ;/*!< 0x01000000 */
RCC_CFGR_MCO1PRE_1                 EQU		0x2 << RCC_CFGR_MCO1PRE_Pos         ;/*!< 0x02000000 */
RCC_CFGR_MCO1PRE_2                 EQU		0x4 << RCC_CFGR_MCO1PRE_Pos         ;/*!< 0x04000000 */

RCC_CFGR_MCO2PRE_Pos               EQU		27                               
RCC_CFGR_MCO2PRE_Msk               EQU		0x7 << RCC_CFGR_MCO2PRE_Pos         ;/*!< 0x38000000 */
RCC_CFGR_MCO2PRE                   EQU		RCC_CFGR_MCO2PRE_Msk                
RCC_CFGR_MCO2PRE_0                 EQU		0x1 << RCC_CFGR_MCO2PRE_Pos         ;/*!< 0x08000000 */
RCC_CFGR_MCO2PRE_1                 EQU		0x2 << RCC_CFGR_MCO2PRE_Pos         ;/*!< 0x10000000 */
RCC_CFGR_MCO2PRE_2                 EQU		0x4 << RCC_CFGR_MCO2PRE_Pos         ;/*!< 0x20000000 */

RCC_CFGR_MCO2_Pos                  EQU		30                               
RCC_CFGR_MCO2_Msk                  EQU		0x3 << RCC_CFGR_MCO2_Pos            ;/*!< 0xC0000000 */
RCC_CFGR_MCO2                      EQU		RCC_CFGR_MCO2_Msk                   
RCC_CFGR_MCO2_0                    EQU		0x1 << RCC_CFGR_MCO2_Pos            ;/*!< 0x40000000 */
RCC_CFGR_MCO2_1                    EQU		0x2 << RCC_CFGR_MCO2_Pos            ;/*!< 0x80000000 */

RCC_CIR				               EQU		0x0C
;/********************  Bit definition for RCC_CIR register  *******************/
RCC_CIR_LSIRDYF_Pos                EQU		0                                
RCC_CIR_LSIRDYF_Msk                EQU		0x1 << RCC_CIR_LSIRDYF_Pos          ;/*!< 0x00000001 */
RCC_CIR_LSIRDYF                    EQU		RCC_CIR_LSIRDYF_Msk                 
RCC_CIR_LSERDYF_Pos                EQU		1                                
RCC_CIR_LSERDYF_Msk                EQU		0x1 << RCC_CIR_LSERDYF_Pos          ;/*!< 0x00000002 */
RCC_CIR_LSERDYF                    EQU		RCC_CIR_LSERDYF_Msk                 
RCC_CIR_HSIRDYF_Pos                EQU		2                                
RCC_CIR_HSIRDYF_Msk                EQU		0x1 << RCC_CIR_HSIRDYF_Pos          ;/*!< 0x00000004 */
RCC_CIR_HSIRDYF                    EQU		RCC_CIR_HSIRDYF_Msk                 
RCC_CIR_HSERDYF_Pos                EQU		3                                
RCC_CIR_HSERDYF_Msk                EQU		0x1 << RCC_CIR_HSERDYF_Pos          ;/*!< 0x00000008 */
RCC_CIR_HSERDYF                    EQU		RCC_CIR_HSERDYF_Msk                 
RCC_CIR_PLLRDYF_Pos                EQU		4                                
RCC_CIR_PLLRDYF_Msk                EQU		0x1 << RCC_CIR_PLLRDYF_Pos          ;/*!< 0x00000010 */
RCC_CIR_PLLRDYF                    EQU		RCC_CIR_PLLRDYF_Msk                 
RCC_CIR_PLLI2SRDYF_Pos             EQU		5                                
RCC_CIR_PLLI2SRDYF_Msk             EQU		0x1 << RCC_CIR_PLLI2SRDYF_Pos       ;/*!< 0x00000020 */
RCC_CIR_PLLI2SRDYF                 EQU		RCC_CIR_PLLI2SRDYF_Msk              

RCC_CIR_CSSF_Pos                   EQU		7                                
RCC_CIR_CSSF_Msk                   EQU		0x1 << RCC_CIR_CSSF_Pos             ;/*!< 0x00000080 */
RCC_CIR_CSSF                       EQU		RCC_CIR_CSSF_Msk                    
RCC_CIR_LSIRDYIE_Pos               EQU		8                                
RCC_CIR_LSIRDYIE_Msk               EQU		0x1 << RCC_CIR_LSIRDYIE_Pos         ;/*!< 0x00000100 */
RCC_CIR_LSIRDYIE                   EQU		RCC_CIR_LSIRDYIE_Msk                
RCC_CIR_LSERDYIE_Pos               EQU		9                                
RCC_CIR_LSERDYIE_Msk               EQU		0x1 << RCC_CIR_LSERDYIE_Pos         ;/*!< 0x00000200 */
RCC_CIR_LSERDYIE                   EQU		RCC_CIR_LSERDYIE_Msk                
RCC_CIR_HSIRDYIE_Pos               EQU		10                               
RCC_CIR_HSIRDYIE_Msk               EQU		0x1 << RCC_CIR_HSIRDYIE_Pos         ;/*!< 0x00000400 */
RCC_CIR_HSIRDYIE                   EQU		RCC_CIR_HSIRDYIE_Msk                
RCC_CIR_HSERDYIE_Pos               EQU		11                               
RCC_CIR_HSERDYIE_Msk               EQU		0x1 << RCC_CIR_HSERDYIE_Pos         ;/*!< 0x00000800 */
RCC_CIR_HSERDYIE                   EQU		RCC_CIR_HSERDYIE_Msk                
RCC_CIR_PLLRDYIE_Pos               EQU		12                               
RCC_CIR_PLLRDYIE_Msk               EQU		0x1 << RCC_CIR_PLLRDYIE_Pos         ;/*!< 0x00001000 */
RCC_CIR_PLLRDYIE                   EQU		RCC_CIR_PLLRDYIE_Msk                
RCC_CIR_PLLI2SRDYIE_Pos            EQU		13                               
RCC_CIR_PLLI2SRDYIE_Msk            EQU		0x1 << RCC_CIR_PLLI2SRDYIE_Pos      ;/*!< 0x00002000 */
RCC_CIR_PLLI2SRDYIE                EQU		RCC_CIR_PLLI2SRDYIE_Msk             

RCC_CIR_LSIRDYC_Pos                EQU		16                               
RCC_CIR_LSIRDYC_Msk                EQU		0x1 << RCC_CIR_LSIRDYC_Pos          ;/*!< 0x00010000 */
RCC_CIR_LSIRDYC                    EQU		RCC_CIR_LSIRDYC_Msk                 
RCC_CIR_LSERDYC_Pos                EQU		17                               
RCC_CIR_LSERDYC_Msk                EQU		0x1 << RCC_CIR_LSERDYC_Pos          ;/*!< 0x00020000 */
RCC_CIR_LSERDYC                    EQU		RCC_CIR_LSERDYC_Msk                 
RCC_CIR_HSIRDYC_Pos                EQU		18                               
RCC_CIR_HSIRDYC_Msk                EQU		0x1 << RCC_CIR_HSIRDYC_Pos          ;/*!< 0x00040000 */
RCC_CIR_HSIRDYC                    EQU		RCC_CIR_HSIRDYC_Msk                 
RCC_CIR_HSERDYC_Pos                EQU		19                               
RCC_CIR_HSERDYC_Msk                EQU		0x1 << RCC_CIR_HSERDYC_Pos          ;/*!< 0x00080000 */
RCC_CIR_HSERDYC                    EQU		RCC_CIR_HSERDYC_Msk                 
RCC_CIR_PLLRDYC_Pos                EQU		20                               
RCC_CIR_PLLRDYC_Msk                EQU		0x1 << RCC_CIR_PLLRDYC_Pos          ;/*!< 0x00100000 */
RCC_CIR_PLLRDYC                    EQU		RCC_CIR_PLLRDYC_Msk                 
RCC_CIR_PLLI2SRDYC_Pos             EQU		21                               
RCC_CIR_PLLI2SRDYC_Msk             EQU		0x1 << RCC_CIR_PLLI2SRDYC_Pos       ;/*!< 0x00200000 */
RCC_CIR_PLLI2SRDYC                 EQU		RCC_CIR_PLLI2SRDYC_Msk              

RCC_CIR_CSSC_Pos                   EQU		23                               
RCC_CIR_CSSC_Msk                   EQU		0x1 << RCC_CIR_CSSC_Pos             ;/*!< 0x00800000 */
RCC_CIR_CSSC                       EQU		RCC_CIR_CSSC_Msk                    

RCC_AHB1RSTR			           EQU		0x10
;/********************  Bit definition for RCC_AHB1RSTR register  **************/
RCC_AHB1RSTR_GPIOARST_Pos          EQU		0                                
RCC_AHB1RSTR_GPIOARST_Msk          EQU		0x1 << RCC_AHB1RSTR_GPIOARST_Pos    ;/*!< 0x00000001 */
RCC_AHB1RSTR_GPIOARST              EQU		RCC_AHB1RSTR_GPIOARST_Msk           
RCC_AHB1RSTR_GPIOBRST_Pos          EQU		1                                
RCC_AHB1RSTR_GPIOBRST_Msk          EQU		0x1 << RCC_AHB1RSTR_GPIOBRST_Pos    ;/*!< 0x00000002 */
RCC_AHB1RSTR_GPIOBRST              EQU		RCC_AHB1RSTR_GPIOBRST_Msk           
RCC_AHB1RSTR_GPIOCRST_Pos          EQU		2                                
RCC_AHB1RSTR_GPIOCRST_Msk          EQU		0x1 << RCC_AHB1RSTR_GPIOCRST_Pos    ;/*!< 0x00000004 */
RCC_AHB1RSTR_GPIOCRST              EQU		RCC_AHB1RSTR_GPIOCRST_Msk           
RCC_AHB1RSTR_GPIODRST_Pos          EQU		3                                
RCC_AHB1RSTR_GPIODRST_Msk          EQU		0x1 << RCC_AHB1RSTR_GPIODRST_Pos    ;/*!< 0x00000008 */
RCC_AHB1RSTR_GPIODRST              EQU		RCC_AHB1RSTR_GPIODRST_Msk           
RCC_AHB1RSTR_GPIOERST_Pos          EQU		4                                
RCC_AHB1RSTR_GPIOERST_Msk          EQU		0x1 << RCC_AHB1RSTR_GPIOERST_Pos    ;/*!< 0x00000010 */
RCC_AHB1RSTR_GPIOERST              EQU		RCC_AHB1RSTR_GPIOERST_Msk           
RCC_AHB1RSTR_GPIOFRST_Pos          EQU		5                                
RCC_AHB1RSTR_GPIOFRST_Msk          EQU		0x1 << RCC_AHB1RSTR_GPIOFRST_Pos    ;/*!< 0x00000020 */
RCC_AHB1RSTR_GPIOFRST              EQU		RCC_AHB1RSTR_GPIOFRST_Msk           
RCC_AHB1RSTR_GPIOGRST_Pos          EQU		6                                
RCC_AHB1RSTR_GPIOGRST_Msk          EQU		0x1 << RCC_AHB1RSTR_GPIOGRST_Pos    ;/*!< 0x00000040 */
RCC_AHB1RSTR_GPIOGRST              EQU		RCC_AHB1RSTR_GPIOGRST_Msk           
RCC_AHB1RSTR_GPIOHRST_Pos          EQU		7                                
RCC_AHB1RSTR_GPIOHRST_Msk          EQU		0x1 << RCC_AHB1RSTR_GPIOHRST_Pos    ;/*!< 0x00000080 */
RCC_AHB1RSTR_GPIOHRST              EQU		RCC_AHB1RSTR_GPIOHRST_Msk           
RCC_AHB1RSTR_GPIOIRST_Pos          EQU		8                                
RCC_AHB1RSTR_GPIOIRST_Msk          EQU		0x1 << RCC_AHB1RSTR_GPIOIRST_Pos    ;/*!< 0x00000100 */
RCC_AHB1RSTR_GPIOIRST              EQU		RCC_AHB1RSTR_GPIOIRST_Msk           
RCC_AHB1RSTR_CRCRST_Pos            EQU		12                               
RCC_AHB1RSTR_CRCRST_Msk            EQU		0x1 << RCC_AHB1RSTR_CRCRST_Pos      ;/*!< 0x00001000 */
RCC_AHB1RSTR_CRCRST                EQU		RCC_AHB1RSTR_CRCRST_Msk             
RCC_AHB1RSTR_DMA1RST_Pos           EQU		21                               
RCC_AHB1RSTR_DMA1RST_Msk           EQU		0x1 << RCC_AHB1RSTR_DMA1RST_Pos     ;/*!< 0x00200000 */
RCC_AHB1RSTR_DMA1RST               EQU		RCC_AHB1RSTR_DMA1RST_Msk            
RCC_AHB1RSTR_DMA2RST_Pos           EQU		22                               
RCC_AHB1RSTR_DMA2RST_Msk           EQU		0x1 << RCC_AHB1RSTR_DMA2RST_Pos     ;/*!< 0x00400000 */
RCC_AHB1RSTR_DMA2RST               EQU		RCC_AHB1RSTR_DMA2RST_Msk            
RCC_AHB1RSTR_ETHMACRST_Pos         EQU		25                               
RCC_AHB1RSTR_ETHMACRST_Msk         EQU		0x1 << RCC_AHB1RSTR_ETHMACRST_Pos    ;/*!< 0x02000000 */
RCC_AHB1RSTR_ETHMACRST             EQU		RCC_AHB1RSTR_ETHMACRST_Msk          
RCC_AHB1RSTR_OTGHRST_Pos           EQU		29                               
RCC_AHB1RSTR_OTGHRST_Msk           EQU		0x1 << RCC_AHB1RSTR_OTGHRST_Pos     ;/*!< 0x20000000 */
RCC_AHB1RSTR_OTGHRST               EQU		RCC_AHB1RSTR_OTGHRST_Msk            

RCC_AHB2RSTR			           EQU		0x14
;/********************  Bit definition for RCC_AHB2RSTR register  **************/
RCC_AHB2RSTR_DCMIRST_Pos           EQU		0                                
RCC_AHB2RSTR_DCMIRST_Msk           EQU		0x1 << RCC_AHB2RSTR_DCMIRST_Pos     ;/*!< 0x00000001 */
RCC_AHB2RSTR_DCMIRST               EQU		RCC_AHB2RSTR_DCMIRST_Msk            
RCC_AHB2RSTR_RNGRST_Pos            EQU		6                                
RCC_AHB2RSTR_RNGRST_Msk            EQU		0x1 << RCC_AHB2RSTR_RNGRST_Pos      ;/*!< 0x00000040 */
RCC_AHB2RSTR_RNGRST                EQU		RCC_AHB2RSTR_RNGRST_Msk             
RCC_AHB2RSTR_OTGFSRST_Pos          EQU		7                                
RCC_AHB2RSTR_OTGFSRST_Msk          EQU		0x1 << RCC_AHB2RSTR_OTGFSRST_Pos    ;/*!< 0x00000080 */
RCC_AHB2RSTR_OTGFSRST              EQU		RCC_AHB2RSTR_OTGFSRST_Msk 

RCC_AHB3RSTR			           EQU		0x18
;/********************  Bit definition for RCC_AHB3RSTR register  **************/
RCC_AHB3RSTR_FSMCRST_Pos           EQU		0                                
RCC_AHB3RSTR_FSMCRST_Msk           EQU		0x1 << RCC_AHB3RSTR_FSMCRST_Pos     ;/*!< 0x00000001 */
RCC_AHB3RSTR_FSMCRST               EQU		RCC_AHB3RSTR_FSMCRST_Msk            

RCC_APB1RSTR			           EQU		0x20
;/********************  Bit definition for RCC_APB1RSTR register  **************/
RCC_APB1RSTR_TIM2RST_Pos           EQU		0                                
RCC_APB1RSTR_TIM2RST_Msk           EQU		0x1 << RCC_APB1RSTR_TIM2RST_Pos     ;/*!< 0x00000001 */
RCC_APB1RSTR_TIM2RST               EQU		RCC_APB1RSTR_TIM2RST_Msk            
RCC_APB1RSTR_TIM3RST_Pos           EQU		1                                
RCC_APB1RSTR_TIM3RST_Msk           EQU		0x1 << RCC_APB1RSTR_TIM3RST_Pos     ;/*!< 0x00000002 */
RCC_APB1RSTR_TIM3RST               EQU		RCC_APB1RSTR_TIM3RST_Msk            
RCC_APB1RSTR_TIM4RST_Pos           EQU		2                                
RCC_APB1RSTR_TIM4RST_Msk           EQU		0x1 << RCC_APB1RSTR_TIM4RST_Pos     ;/*!< 0x00000004 */
RCC_APB1RSTR_TIM4RST               EQU		RCC_APB1RSTR_TIM4RST_Msk            
RCC_APB1RSTR_TIM5RST_Pos           EQU		3                                
RCC_APB1RSTR_TIM5RST_Msk           EQU		0x1 << RCC_APB1RSTR_TIM5RST_Pos     ;/*!< 0x00000008 */
RCC_APB1RSTR_TIM5RST               EQU		RCC_APB1RSTR_TIM5RST_Msk            
RCC_APB1RSTR_TIM6RST_Pos           EQU		4                                
RCC_APB1RSTR_TIM6RST_Msk           EQU		0x1 << RCC_APB1RSTR_TIM6RST_Pos     ;/*!< 0x00000010 */
RCC_APB1RSTR_TIM6RST               EQU		RCC_APB1RSTR_TIM6RST_Msk            
RCC_APB1RSTR_TIM7RST_Pos           EQU		5                                
RCC_APB1RSTR_TIM7RST_Msk           EQU		0x1 << RCC_APB1RSTR_TIM7RST_Pos     ;/*!< 0x00000020 */
RCC_APB1RSTR_TIM7RST               EQU		RCC_APB1RSTR_TIM7RST_Msk            
RCC_APB1RSTR_TIM12RST_Pos          EQU		6                                
RCC_APB1RSTR_TIM12RST_Msk          EQU		0x1 << RCC_APB1RSTR_TIM12RST_Pos    ;/*!< 0x00000040 */
RCC_APB1RSTR_TIM12RST              EQU		RCC_APB1RSTR_TIM12RST_Msk           
RCC_APB1RSTR_TIM13RST_Pos          EQU		7                                
RCC_APB1RSTR_TIM13RST_Msk          EQU		0x1 << RCC_APB1RSTR_TIM13RST_Pos    ;/*!< 0x00000080 */
RCC_APB1RSTR_TIM13RST              EQU		RCC_APB1RSTR_TIM13RST_Msk           
RCC_APB1RSTR_TIM14RST_Pos          EQU		8                                
RCC_APB1RSTR_TIM14RST_Msk          EQU		0x1 << RCC_APB1RSTR_TIM14RST_Pos    ;/*!< 0x00000100 */
RCC_APB1RSTR_TIM14RST              EQU		RCC_APB1RSTR_TIM14RST_Msk           
RCC_APB1RSTR_WWDGRST_Pos           EQU		11                               
RCC_APB1RSTR_WWDGRST_Msk           EQU		0x1 << RCC_APB1RSTR_WWDGRST_Pos     ;/*!< 0x00000800 */
RCC_APB1RSTR_WWDGRST               EQU		RCC_APB1RSTR_WWDGRST_Msk            
RCC_APB1RSTR_SPI2RST_Pos           EQU		14                               
RCC_APB1RSTR_SPI2RST_Msk           EQU		0x1 << RCC_APB1RSTR_SPI2RST_Pos     ;/*!< 0x00004000 */
RCC_APB1RSTR_SPI2RST               EQU		RCC_APB1RSTR_SPI2RST_Msk            
RCC_APB1RSTR_SPI3RST_Pos           EQU		15                               
RCC_APB1RSTR_SPI3RST_Msk           EQU		0x1 << RCC_APB1RSTR_SPI3RST_Pos     ;/*!< 0x00008000 */
RCC_APB1RSTR_SPI3RST               EQU		RCC_APB1RSTR_SPI3RST_Msk            
RCC_APB1RSTR_USART2RST_Pos         EQU		17                               
RCC_APB1RSTR_USART2RST_Msk         EQU		0x1 << RCC_APB1RSTR_USART2RST_Pos    ;/*!< 0x00020000 */
RCC_APB1RSTR_USART2RST             EQU		RCC_APB1RSTR_USART2RST_Msk          
RCC_APB1RSTR_USART3RST_Pos         EQU		18                               
RCC_APB1RSTR_USART3RST_Msk         EQU		0x1 << RCC_APB1RSTR_USART3RST_Pos    ;/*!< 0x00040000 */
RCC_APB1RSTR_USART3RST             EQU		RCC_APB1RSTR_USART3RST_Msk          
RCC_APB1RSTR_UART4RST_Pos          EQU		19                               
RCC_APB1RSTR_UART4RST_Msk          EQU		0x1 << RCC_APB1RSTR_UART4RST_Pos    ;/*!< 0x00080000 */
RCC_APB1RSTR_UART4RST              EQU		RCC_APB1RSTR_UART4RST_Msk           
RCC_APB1RSTR_UART5RST_Pos          EQU		20                               
RCC_APB1RSTR_UART5RST_Msk          EQU		0x1 << RCC_APB1RSTR_UART5RST_Pos    ;/*!< 0x00100000 */
RCC_APB1RSTR_UART5RST              EQU		RCC_APB1RSTR_UART5RST_Msk           
RCC_APB1RSTR_I2C1RST_Pos           EQU		21                               
RCC_APB1RSTR_I2C1RST_Msk           EQU		0x1 << RCC_APB1RSTR_I2C1RST_Pos     ;/*!< 0x00200000 */
RCC_APB1RSTR_I2C1RST               EQU		RCC_APB1RSTR_I2C1RST_Msk            
RCC_APB1RSTR_I2C2RST_Pos           EQU		22                               
RCC_APB1RSTR_I2C2RST_Msk           EQU		0x1 << RCC_APB1RSTR_I2C2RST_Pos     ;/*!< 0x00400000 */
RCC_APB1RSTR_I2C2RST               EQU		RCC_APB1RSTR_I2C2RST_Msk            
RCC_APB1RSTR_I2C3RST_Pos           EQU		23                               
RCC_APB1RSTR_I2C3RST_Msk           EQU		0x1 << RCC_APB1RSTR_I2C3RST_Pos     ;/*!< 0x00800000 */
RCC_APB1RSTR_I2C3RST               EQU		RCC_APB1RSTR_I2C3RST_Msk            
RCC_APB1RSTR_CAN1RST_Pos           EQU		25                               
RCC_APB1RSTR_CAN1RST_Msk           EQU		0x1 << RCC_APB1RSTR_CAN1RST_Pos     ;/*!< 0x02000000 */
RCC_APB1RSTR_CAN1RST               EQU		RCC_APB1RSTR_CAN1RST_Msk            
RCC_APB1RSTR_CAN2RST_Pos           EQU		26                               
RCC_APB1RSTR_CAN2RST_Msk           EQU		0x1 << RCC_APB1RSTR_CAN2RST_Pos     ;/*!< 0x04000000 */
RCC_APB1RSTR_CAN2RST               EQU		RCC_APB1RSTR_CAN2RST_Msk            
RCC_APB1RSTR_PWRRST_Pos            EQU		28                               
RCC_APB1RSTR_PWRRST_Msk            EQU		0x1 << RCC_APB1RSTR_PWRRST_Pos      ;/*!< 0x10000000 */
RCC_APB1RSTR_PWRRST                EQU		RCC_APB1RSTR_PWRRST_Msk             
RCC_APB1RSTR_DACRST_Pos            EQU		29                               
RCC_APB1RSTR_DACRST_Msk            EQU		0x1 << RCC_APB1RSTR_DACRST_Pos      ;/*!< 0x20000000 */
RCC_APB1RSTR_DACRST                EQU		RCC_APB1RSTR_DACRST_Msk             

RCC_APB2RSTR			           EQU		0x24
;/********************  Bit definition for RCC_APB2RSTR register  **************/
RCC_APB2RSTR_TIM1RST_Pos           EQU		0                                
RCC_APB2RSTR_TIM1RST_Msk           EQU		0x1 << RCC_APB2RSTR_TIM1RST_Pos     ;/*!< 0x00000001 */
RCC_APB2RSTR_TIM1RST               EQU		RCC_APB2RSTR_TIM1RST_Msk            
RCC_APB2RSTR_TIM8RST_Pos           EQU		1                                
RCC_APB2RSTR_TIM8RST_Msk           EQU		0x1 << RCC_APB2RSTR_TIM8RST_Pos     ;/*!< 0x00000002 */
RCC_APB2RSTR_TIM8RST               EQU		RCC_APB2RSTR_TIM8RST_Msk            
RCC_APB2RSTR_USART1RST_Pos         EQU		4                                
RCC_APB2RSTR_USART1RST_Msk         EQU		0x1 << RCC_APB2RSTR_USART1RST_Pos    ;/*!< 0x00000010 */
RCC_APB2RSTR_USART1RST             EQU		RCC_APB2RSTR_USART1RST_Msk          
RCC_APB2RSTR_USART6RST_Pos         EQU		5                                
RCC_APB2RSTR_USART6RST_Msk         EQU		0x1 << RCC_APB2RSTR_USART6RST_Pos    ;/*!< 0x00000020 */
RCC_APB2RSTR_USART6RST             EQU		RCC_APB2RSTR_USART6RST_Msk          
RCC_APB2RSTR_ADCRST_Pos            EQU		8                                
RCC_APB2RSTR_ADCRST_Msk            EQU		0x1 << RCC_APB2RSTR_ADCRST_Pos      ;/*!< 0x00000100 */
RCC_APB2RSTR_ADCRST                EQU		RCC_APB2RSTR_ADCRST_Msk             
RCC_APB2RSTR_SDIORST_Pos           EQU		11                               
RCC_APB2RSTR_SDIORST_Msk           EQU		0x1 << RCC_APB2RSTR_SDIORST_Pos     ;/*!< 0x00000800 */
RCC_APB2RSTR_SDIORST               EQU		RCC_APB2RSTR_SDIORST_Msk            
RCC_APB2RSTR_SPI1RST_Pos           EQU		12                               
RCC_APB2RSTR_SPI1RST_Msk           EQU		0x1 << RCC_APB2RSTR_SPI1RST_Pos     ;/*!< 0x00001000 */
RCC_APB2RSTR_SPI1RST               EQU		RCC_APB2RSTR_SPI1RST_Msk            
RCC_APB2RSTR_SYSCFGRST_Pos         EQU		14                               
RCC_APB2RSTR_SYSCFGRST_Msk         EQU		0x1 << RCC_APB2RSTR_SYSCFGRST_Pos    ;/*!< 0x00004000 */
RCC_APB2RSTR_SYSCFGRST             EQU		RCC_APB2RSTR_SYSCFGRST_Msk          
RCC_APB2RSTR_TIM9RST_Pos           EQU		16                               
RCC_APB2RSTR_TIM9RST_Msk           EQU		0x1 << RCC_APB2RSTR_TIM9RST_Pos     ;/*!< 0x00010000 */
RCC_APB2RSTR_TIM9RST               EQU		RCC_APB2RSTR_TIM9RST_Msk            
RCC_APB2RSTR_TIM10RST_Pos          EQU		17                               
RCC_APB2RSTR_TIM10RST_Msk          EQU		0x1 << RCC_APB2RSTR_TIM10RST_Pos    ;/*!< 0x00020000 */
RCC_APB2RSTR_TIM10RST              EQU		RCC_APB2RSTR_TIM10RST_Msk           
RCC_APB2RSTR_TIM11RST_Pos          EQU		18                               
RCC_APB2RSTR_TIM11RST_Msk          EQU		0x1 << RCC_APB2RSTR_TIM11RST_Pos    ;/*!< 0x00040000 */
RCC_APB2RSTR_TIM11RST              EQU		RCC_APB2RSTR_TIM11RST_Msk           

;/* Old SPI1RST bit definition, maintained for legacy purpose */
RCC_APB2RSTR_SPI1                  EQU		RCC_APB2RSTR_SPI1RST

RCC_AHB1ENR				           EQU		0x30
;/********************  Bit definition for RCC_AHB1ENR register  ***************/
RCC_AHB1ENR_GPIOAEN_Pos            EQU		0                                
RCC_AHB1ENR_GPIOAEN_Msk            EQU		0x1 << RCC_AHB1ENR_GPIOAEN_Pos      ;/*!< 0x00000001 */
RCC_AHB1ENR_GPIOAEN                EQU		RCC_AHB1ENR_GPIOAEN_Msk             
RCC_AHB1ENR_GPIOBEN_Pos            EQU		1                                
RCC_AHB1ENR_GPIOBEN_Msk            EQU		0x1 << RCC_AHB1ENR_GPIOBEN_Pos      ;/*!< 0x00000002 */
RCC_AHB1ENR_GPIOBEN                EQU		RCC_AHB1ENR_GPIOBEN_Msk             
RCC_AHB1ENR_GPIOCEN_Pos            EQU		2                                
RCC_AHB1ENR_GPIOCEN_Msk            EQU		0x1 << RCC_AHB1ENR_GPIOCEN_Pos      ;/*!< 0x00000004 */
RCC_AHB1ENR_GPIOCEN                EQU		RCC_AHB1ENR_GPIOCEN_Msk             
RCC_AHB1ENR_GPIODEN_Pos            EQU		3                                
RCC_AHB1ENR_GPIODEN_Msk            EQU		0x1 << RCC_AHB1ENR_GPIODEN_Pos      ;/*!< 0x00000008 */
RCC_AHB1ENR_GPIODEN                EQU		RCC_AHB1ENR_GPIODEN_Msk             
RCC_AHB1ENR_GPIOEEN_Pos            EQU		4                                
RCC_AHB1ENR_GPIOEEN_Msk            EQU		0x1 << RCC_AHB1ENR_GPIOEEN_Pos      ;/*!< 0x00000010 */
RCC_AHB1ENR_GPIOEEN                EQU		RCC_AHB1ENR_GPIOEEN_Msk             
RCC_AHB1ENR_GPIOFEN_Pos            EQU		5                                
RCC_AHB1ENR_GPIOFEN_Msk            EQU		0x1 << RCC_AHB1ENR_GPIOFEN_Pos      ;/*!< 0x00000020 */
RCC_AHB1ENR_GPIOFEN                EQU		RCC_AHB1ENR_GPIOFEN_Msk             
RCC_AHB1ENR_GPIOGEN_Pos            EQU		6                                
RCC_AHB1ENR_GPIOGEN_Msk            EQU		0x1 << RCC_AHB1ENR_GPIOGEN_Pos      ;/*!< 0x00000040 */
RCC_AHB1ENR_GPIOGEN                EQU		RCC_AHB1ENR_GPIOGEN_Msk             
RCC_AHB1ENR_GPIOHEN_Pos            EQU		7                                
RCC_AHB1ENR_GPIOHEN_Msk            EQU		0x1 << RCC_AHB1ENR_GPIOHEN_Pos      ;/*!< 0x00000080 */
RCC_AHB1ENR_GPIOHEN                EQU		RCC_AHB1ENR_GPIOHEN_Msk             
RCC_AHB1ENR_GPIOIEN_Pos            EQU		8                                
RCC_AHB1ENR_GPIOIEN_Msk            EQU		0x1 << RCC_AHB1ENR_GPIOIEN_Pos      ;/*!< 0x00000100 */
RCC_AHB1ENR_GPIOIEN                EQU		RCC_AHB1ENR_GPIOIEN_Msk             
RCC_AHB1ENR_CRCEN_Pos              EQU		12                               
RCC_AHB1ENR_CRCEN_Msk              EQU		0x1 << RCC_AHB1ENR_CRCEN_Pos        ;/*!< 0x00001000 */
RCC_AHB1ENR_CRCEN                  EQU		RCC_AHB1ENR_CRCEN_Msk               
RCC_AHB1ENR_BKPSRAMEN_Pos          EQU		18                               
RCC_AHB1ENR_BKPSRAMEN_Msk          EQU		0x1 << RCC_AHB1ENR_BKPSRAMEN_Pos    ;/*!< 0x00040000 */
RCC_AHB1ENR_BKPSRAMEN              EQU		RCC_AHB1ENR_BKPSRAMEN_Msk           
RCC_AHB1ENR_CCMDATARAMEN_Pos       EQU		20                               
RCC_AHB1ENR_CCMDATARAMEN_Msk       EQU		0x1 << RCC_AHB1ENR_CCMDATARAMEN_Pos    ;/*!< 0x00100000 */
RCC_AHB1ENR_CCMDATARAMEN           EQU		RCC_AHB1ENR_CCMDATARAMEN_Msk        
RCC_AHB1ENR_DMA1EN_Pos             EQU		21                               
RCC_AHB1ENR_DMA1EN_Msk             EQU		0x1 << RCC_AHB1ENR_DMA1EN_Pos       ;/*!< 0x00200000 */
RCC_AHB1ENR_DMA1EN                 EQU		RCC_AHB1ENR_DMA1EN_Msk              
RCC_AHB1ENR_DMA2EN_Pos             EQU		22                               
RCC_AHB1ENR_DMA2EN_Msk             EQU		0x1 << RCC_AHB1ENR_DMA2EN_Pos       ;/*!< 0x00400000 */
RCC_AHB1ENR_DMA2EN                 EQU		RCC_AHB1ENR_DMA2EN_Msk              
RCC_AHB1ENR_ETHMACEN_Pos           EQU		25                               
RCC_AHB1ENR_ETHMACEN_Msk           EQU		0x1 << RCC_AHB1ENR_ETHMACEN_Pos     ;/*!< 0x02000000 */
RCC_AHB1ENR_ETHMACEN               EQU		RCC_AHB1ENR_ETHMACEN_Msk            
RCC_AHB1ENR_ETHMACTXEN_Pos         EQU		26                               
RCC_AHB1ENR_ETHMACTXEN_Msk         EQU		0x1 << RCC_AHB1ENR_ETHMACTXEN_Pos    ;/*!< 0x04000000 */
RCC_AHB1ENR_ETHMACTXEN             EQU		RCC_AHB1ENR_ETHMACTXEN_Msk          
RCC_AHB1ENR_ETHMACRXEN_Pos         EQU		27                               
RCC_AHB1ENR_ETHMACRXEN_Msk         EQU		0x1 << RCC_AHB1ENR_ETHMACRXEN_Pos    ;/*!< 0x08000000 */
RCC_AHB1ENR_ETHMACRXEN             EQU		RCC_AHB1ENR_ETHMACRXEN_Msk          
RCC_AHB1ENR_ETHMACPTPEN_Pos        EQU		28                               
RCC_AHB1ENR_ETHMACPTPEN_Msk        EQU		0x1 << RCC_AHB1ENR_ETHMACPTPEN_Pos    ;/*!< 0x10000000 */
RCC_AHB1ENR_ETHMACPTPEN            EQU		RCC_AHB1ENR_ETHMACPTPEN_Msk         
RCC_AHB1ENR_OTGHSEN_Pos            EQU		29                               
RCC_AHB1ENR_OTGHSEN_Msk            EQU		0x1 << RCC_AHB1ENR_OTGHSEN_Pos      ;/*!< 0x20000000 */
RCC_AHB1ENR_OTGHSEN                EQU		RCC_AHB1ENR_OTGHSEN_Msk             
RCC_AHB1ENR_OTGHSULPIEN_Pos        EQU		30                               
RCC_AHB1ENR_OTGHSULPIEN_Msk        EQU		0x1 << RCC_AHB1ENR_OTGHSULPIEN_Pos    ;/*!< 0x40000000 */
RCC_AHB1ENR_OTGHSULPIEN            EQU		RCC_AHB1ENR_OTGHSULPIEN_Msk   

RCC_AHB2ENR				           EQU		0x34  
;/********************  Bit definition for RCC_AHB2ENR register  ***************/
RCC_AHB2ENR_DCMIEN_Pos             EQU		0                                
RCC_AHB2ENR_DCMIEN_Msk             EQU		0x1 << RCC_AHB2ENR_DCMIEN_Pos       ;/*!< 0x00000001 */
RCC_AHB2ENR_DCMIEN                 EQU		RCC_AHB2ENR_DCMIEN_Msk              
RCC_AHB2ENR_RNGEN_Pos              EQU		6                                
RCC_AHB2ENR_RNGEN_Msk              EQU		0x1 << RCC_AHB2ENR_RNGEN_Pos        ;/*!< 0x00000040 */
RCC_AHB2ENR_RNGEN                  EQU		RCC_AHB2ENR_RNGEN_Msk               
RCC_AHB2ENR_OTGFSEN_Pos            EQU		7                                
RCC_AHB2ENR_OTGFSEN_Msk            EQU		0x1 << RCC_AHB2ENR_OTGFSEN_Pos      ;/*!< 0x00000080 */
RCC_AHB2ENR_OTGFSEN                EQU		RCC_AHB2ENR_OTGFSEN_Msk             

RCC_AHB3ENR				           EQU		0x38
;/********************  Bit definition for RCC_AHB3ENR register  ***************/
RCC_AHB3ENR_FSMCEN_Pos             EQU		0                                
RCC_AHB3ENR_FSMCEN_Msk             EQU		0x1 << RCC_AHB3ENR_FSMCEN_Pos       ;/*!< 0x00000001 */
RCC_AHB3ENR_FSMCEN                 EQU		RCC_AHB3ENR_FSMCEN_Msk              

RCC_APB1ENR				           EQU		0x40
;/********************  Bit definition for RCC_APB1ENR register  ***************/
RCC_APB1ENR_TIM2EN_Pos             EQU		0                                
RCC_APB1ENR_TIM2EN_Msk             EQU		0x1 << RCC_APB1ENR_TIM2EN_Pos       ;/*!< 0x00000001 */
RCC_APB1ENR_TIM2EN                 EQU		RCC_APB1ENR_TIM2EN_Msk              
RCC_APB1ENR_TIM3EN_Pos             EQU		1                                
RCC_APB1ENR_TIM3EN_Msk             EQU		0x1 << RCC_APB1ENR_TIM3EN_Pos       ;/*!< 0x00000002 */
RCC_APB1ENR_TIM3EN                 EQU		RCC_APB1ENR_TIM3EN_Msk              
RCC_APB1ENR_TIM4EN_Pos             EQU		2                                
RCC_APB1ENR_TIM4EN_Msk             EQU		0x1 << RCC_APB1ENR_TIM4EN_Pos       ;/*!< 0x00000004 */
RCC_APB1ENR_TIM4EN                 EQU		RCC_APB1ENR_TIM4EN_Msk              
RCC_APB1ENR_TIM5EN_Pos             EQU		3                                
RCC_APB1ENR_TIM5EN_Msk             EQU		0x1 << RCC_APB1ENR_TIM5EN_Pos       ;/*!< 0x00000008 */
RCC_APB1ENR_TIM5EN                 EQU		RCC_APB1ENR_TIM5EN_Msk              
RCC_APB1ENR_TIM6EN_Pos             EQU		4                                
RCC_APB1ENR_TIM6EN_Msk             EQU		0x1 << RCC_APB1ENR_TIM6EN_Pos       ;/*!< 0x00000010 */
RCC_APB1ENR_TIM6EN                 EQU		RCC_APB1ENR_TIM6EN_Msk              
RCC_APB1ENR_TIM7EN_Pos             EQU		5                                
RCC_APB1ENR_TIM7EN_Msk             EQU		0x1 << RCC_APB1ENR_TIM7EN_Pos       ;/*!< 0x00000020 */
RCC_APB1ENR_TIM7EN                 EQU		RCC_APB1ENR_TIM7EN_Msk              
RCC_APB1ENR_TIM12EN_Pos            EQU		6                                
RCC_APB1ENR_TIM12EN_Msk            EQU		0x1 << RCC_APB1ENR_TIM12EN_Pos      ;/*!< 0x00000040 */
RCC_APB1ENR_TIM12EN                EQU		RCC_APB1ENR_TIM12EN_Msk             
RCC_APB1ENR_TIM13EN_Pos            EQU		7                                
RCC_APB1ENR_TIM13EN_Msk            EQU		0x1 << RCC_APB1ENR_TIM13EN_Pos      ;/*!< 0x00000080 */
RCC_APB1ENR_TIM13EN                EQU		RCC_APB1ENR_TIM13EN_Msk             
RCC_APB1ENR_TIM14EN_Pos            EQU		8                                
RCC_APB1ENR_TIM14EN_Msk            EQU		0x1 << RCC_APB1ENR_TIM14EN_Pos      ;/*!< 0x00000100 */
RCC_APB1ENR_TIM14EN                EQU		RCC_APB1ENR_TIM14EN_Msk             
RCC_APB1ENR_WWDGEN_Pos             EQU		11                               
RCC_APB1ENR_WWDGEN_Msk             EQU		0x1 << RCC_APB1ENR_WWDGEN_Pos       ;/*!< 0x00000800 */
RCC_APB1ENR_WWDGEN                 EQU		RCC_APB1ENR_WWDGEN_Msk              
RCC_APB1ENR_SPI2EN_Pos             EQU		14                               
RCC_APB1ENR_SPI2EN_Msk             EQU		0x1 << RCC_APB1ENR_SPI2EN_Pos       ;/*!< 0x00004000 */
RCC_APB1ENR_SPI2EN                 EQU		RCC_APB1ENR_SPI2EN_Msk              
RCC_APB1ENR_SPI3EN_Pos             EQU		15                               
RCC_APB1ENR_SPI3EN_Msk             EQU		0x1 << RCC_APB1ENR_SPI3EN_Pos       ;/*!< 0x00008000 */
RCC_APB1ENR_SPI3EN                 EQU		RCC_APB1ENR_SPI3EN_Msk              
RCC_APB1ENR_USART2EN_Pos           EQU		17                               
RCC_APB1ENR_USART2EN_Msk           EQU		0x1 << RCC_APB1ENR_USART2EN_Pos     ;/*!< 0x00020000 */
RCC_APB1ENR_USART2EN               EQU		RCC_APB1ENR_USART2EN_Msk            
RCC_APB1ENR_USART3EN_Pos           EQU		18                               
RCC_APB1ENR_USART3EN_Msk           EQU		0x1 << RCC_APB1ENR_USART3EN_Pos     ;/*!< 0x00040000 */
RCC_APB1ENR_USART3EN               EQU		RCC_APB1ENR_USART3EN_Msk            
RCC_APB1ENR_UART4EN_Pos            EQU		19                               
RCC_APB1ENR_UART4EN_Msk            EQU		0x1 << RCC_APB1ENR_UART4EN_Pos      ;/*!< 0x00080000 */
RCC_APB1ENR_UART4EN                EQU		RCC_APB1ENR_UART4EN_Msk             
RCC_APB1ENR_UART5EN_Pos            EQU		20                               
RCC_APB1ENR_UART5EN_Msk            EQU		0x1 << RCC_APB1ENR_UART5EN_Pos      ;/*!< 0x00100000 */
RCC_APB1ENR_UART5EN                EQU		RCC_APB1ENR_UART5EN_Msk             
RCC_APB1ENR_I2C1EN_Pos             EQU		21                               
RCC_APB1ENR_I2C1EN_Msk             EQU		0x1 << RCC_APB1ENR_I2C1EN_Pos       ;/*!< 0x00200000 */
RCC_APB1ENR_I2C1EN                 EQU		RCC_APB1ENR_I2C1EN_Msk              
RCC_APB1ENR_I2C2EN_Pos             EQU		22                               
RCC_APB1ENR_I2C2EN_Msk             EQU		0x1 << RCC_APB1ENR_I2C2EN_Pos       ;/*!< 0x00400000 */
RCC_APB1ENR_I2C2EN                 EQU		RCC_APB1ENR_I2C2EN_Msk              
RCC_APB1ENR_I2C3EN_Pos             EQU		23                               
RCC_APB1ENR_I2C3EN_Msk             EQU		0x1 << RCC_APB1ENR_I2C3EN_Pos       ;/*!< 0x00800000 */
RCC_APB1ENR_I2C3EN                 EQU		RCC_APB1ENR_I2C3EN_Msk              
RCC_APB1ENR_CAN1EN_Pos             EQU		25                               
RCC_APB1ENR_CAN1EN_Msk             EQU		0x1 << RCC_APB1ENR_CAN1EN_Pos       ;/*!< 0x02000000 */
RCC_APB1ENR_CAN1EN                 EQU		RCC_APB1ENR_CAN1EN_Msk              
RCC_APB1ENR_CAN2EN_Pos             EQU		26                               
RCC_APB1ENR_CAN2EN_Msk             EQU		0x1 << RCC_APB1ENR_CAN2EN_Pos       ;/*!< 0x04000000 */
RCC_APB1ENR_CAN2EN                 EQU		RCC_APB1ENR_CAN2EN_Msk              
RCC_APB1ENR_PWREN_Pos              EQU		28                               
RCC_APB1ENR_PWREN_Msk              EQU		0x1 << RCC_APB1ENR_PWREN_Pos        ;/*!< 0x10000000 */
RCC_APB1ENR_PWREN                  EQU		RCC_APB1ENR_PWREN_Msk               
RCC_APB1ENR_DACEN_Pos              EQU		29                               
RCC_APB1ENR_DACEN_Msk              EQU		0x1 << RCC_APB1ENR_DACEN_Pos        ;/*!< 0x20000000 */
RCC_APB1ENR_DACEN                  EQU		RCC_APB1ENR_DACEN_Msk               

RCC_APB2ENR			               EQU		0x44
;/********************  Bit definition for RCC_APB2ENR register  ***************/
RCC_APB2ENR_TIM1EN_Pos             EQU		0                                
RCC_APB2ENR_TIM1EN_Msk             EQU		0x1 << RCC_APB2ENR_TIM1EN_Pos       ;/*!< 0x00000001 */
RCC_APB2ENR_TIM1EN                 EQU		RCC_APB2ENR_TIM1EN_Msk              
RCC_APB2ENR_TIM8EN_Pos             EQU		1                                
RCC_APB2ENR_TIM8EN_Msk             EQU		0x1 << RCC_APB2ENR_TIM8EN_Pos       ;/*!< 0x00000002 */
RCC_APB2ENR_TIM8EN                 EQU		RCC_APB2ENR_TIM8EN_Msk              
RCC_APB2ENR_USART1EN_Pos           EQU		4                                
RCC_APB2ENR_USART1EN_Msk           EQU		0x1 << RCC_APB2ENR_USART1EN_Pos     ;/*!< 0x00000010 */
RCC_APB2ENR_USART1EN               EQU		RCC_APB2ENR_USART1EN_Msk            
RCC_APB2ENR_USART6EN_Pos           EQU		5                                
RCC_APB2ENR_USART6EN_Msk           EQU		0x1 << RCC_APB2ENR_USART6EN_Pos     ;/*!< 0x00000020 */
RCC_APB2ENR_USART6EN               EQU		RCC_APB2ENR_USART6EN_Msk            
RCC_APB2ENR_ADC1EN_Pos             EQU		8                                
RCC_APB2ENR_ADC1EN_Msk             EQU		0x1 << RCC_APB2ENR_ADC1EN_Pos       ;/*!< 0x00000100 */
RCC_APB2ENR_ADC1EN                 EQU		RCC_APB2ENR_ADC1EN_Msk              
RCC_APB2ENR_ADC2EN_Pos             EQU		9                                
RCC_APB2ENR_ADC2EN_Msk             EQU		0x1 << RCC_APB2ENR_ADC2EN_Pos       ;/*!< 0x00000200 */
RCC_APB2ENR_ADC2EN                 EQU		RCC_APB2ENR_ADC2EN_Msk              
RCC_APB2ENR_ADC3EN_Pos             EQU		10                               
RCC_APB2ENR_ADC3EN_Msk             EQU		0x1 << RCC_APB2ENR_ADC3EN_Pos       ;/*!< 0x00000400 */
RCC_APB2ENR_ADC3EN                 EQU		RCC_APB2ENR_ADC3EN_Msk              
RCC_APB2ENR_SDIOEN_Pos             EQU		11                               
RCC_APB2ENR_SDIOEN_Msk             EQU		0x1 << RCC_APB2ENR_SDIOEN_Pos       ;/*!< 0x00000800 */
RCC_APB2ENR_SDIOEN                 EQU		RCC_APB2ENR_SDIOEN_Msk              
RCC_APB2ENR_SPI1EN_Pos             EQU		12                               
RCC_APB2ENR_SPI1EN_Msk             EQU		0x1 << RCC_APB2ENR_SPI1EN_Pos       ;/*!< 0x00001000 */
RCC_APB2ENR_SPI1EN                 EQU		RCC_APB2ENR_SPI1EN_Msk              
RCC_APB2ENR_SYSCFGEN_Pos           EQU		14                               
RCC_APB2ENR_SYSCFGEN_Msk           EQU		0x1 << RCC_APB2ENR_SYSCFGEN_Pos     ;/*!< 0x00004000 */
RCC_APB2ENR_SYSCFGEN               EQU		RCC_APB2ENR_SYSCFGEN_Msk            
RCC_APB2ENR_TIM9EN_Pos             EQU		16                               
RCC_APB2ENR_TIM9EN_Msk             EQU		0x1 << RCC_APB2ENR_TIM9EN_Pos       ;/*!< 0x00010000 */
RCC_APB2ENR_TIM9EN                 EQU		RCC_APB2ENR_TIM9EN_Msk              
RCC_APB2ENR_TIM10EN_Pos            EQU		17                               
RCC_APB2ENR_TIM10EN_Msk            EQU		0x1 << RCC_APB2ENR_TIM10EN_Pos      ;/*!< 0x00020000 */
RCC_APB2ENR_TIM10EN                EQU		RCC_APB2ENR_TIM10EN_Msk             
RCC_APB2ENR_TIM11EN_Pos            EQU		18                               
RCC_APB2ENR_TIM11EN_Msk            EQU		0x1 << RCC_APB2ENR_TIM11EN_Pos      ;/*!< 0x00040000 */
RCC_APB2ENR_TIM11EN                EQU		RCC_APB2ENR_TIM11EN_Msk             

RCC_AHB1LPENR			           EQU		0x50
;/********************  Bit definition for RCC_AHB1LPENR register  *************/
RCC_AHB1LPENR_GPIOALPEN_Pos        EQU		0                                
RCC_AHB1LPENR_GPIOALPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_GPIOALPEN_Pos    ;/*!< 0x00000001 */
RCC_AHB1LPENR_GPIOALPEN            EQU		RCC_AHB1LPENR_GPIOALPEN_Msk         
RCC_AHB1LPENR_GPIOBLPEN_Pos        EQU		1                                
RCC_AHB1LPENR_GPIOBLPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_GPIOBLPEN_Pos    ;/*!< 0x00000002 */
RCC_AHB1LPENR_GPIOBLPEN            EQU		RCC_AHB1LPENR_GPIOBLPEN_Msk         
RCC_AHB1LPENR_GPIOCLPEN_Pos        EQU		2                                
RCC_AHB1LPENR_GPIOCLPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_GPIOCLPEN_Pos    ;/*!< 0x00000004 */
RCC_AHB1LPENR_GPIOCLPEN            EQU		RCC_AHB1LPENR_GPIOCLPEN_Msk         
RCC_AHB1LPENR_GPIODLPEN_Pos        EQU		3                                
RCC_AHB1LPENR_GPIODLPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_GPIODLPEN_Pos    ;/*!< 0x00000008 */
RCC_AHB1LPENR_GPIODLPEN            EQU		RCC_AHB1LPENR_GPIODLPEN_Msk         
RCC_AHB1LPENR_GPIOELPEN_Pos        EQU		4                                
RCC_AHB1LPENR_GPIOELPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_GPIOELPEN_Pos    ;/*!< 0x00000010 */
RCC_AHB1LPENR_GPIOELPEN            EQU		RCC_AHB1LPENR_GPIOELPEN_Msk         
RCC_AHB1LPENR_GPIOFLPEN_Pos        EQU		5                                
RCC_AHB1LPENR_GPIOFLPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_GPIOFLPEN_Pos    ;/*!< 0x00000020 */
RCC_AHB1LPENR_GPIOFLPEN            EQU		RCC_AHB1LPENR_GPIOFLPEN_Msk         
RCC_AHB1LPENR_GPIOGLPEN_Pos        EQU		6                                
RCC_AHB1LPENR_GPIOGLPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_GPIOGLPEN_Pos    ;/*!< 0x00000040 */
RCC_AHB1LPENR_GPIOGLPEN            EQU		RCC_AHB1LPENR_GPIOGLPEN_Msk         
RCC_AHB1LPENR_GPIOHLPEN_Pos        EQU		7                                
RCC_AHB1LPENR_GPIOHLPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_GPIOHLPEN_Pos    ;/*!< 0x00000080 */
RCC_AHB1LPENR_GPIOHLPEN            EQU		RCC_AHB1LPENR_GPIOHLPEN_Msk         
RCC_AHB1LPENR_GPIOILPEN_Pos        EQU		8                                
RCC_AHB1LPENR_GPIOILPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_GPIOILPEN_Pos    ;/*!< 0x00000100 */
RCC_AHB1LPENR_GPIOILPEN            EQU		RCC_AHB1LPENR_GPIOILPEN_Msk         
RCC_AHB1LPENR_CRCLPEN_Pos          EQU		12                               
RCC_AHB1LPENR_CRCLPEN_Msk          EQU		0x1 << RCC_AHB1LPENR_CRCLPEN_Pos    ;/*!< 0x00001000 */
RCC_AHB1LPENR_CRCLPEN              EQU		RCC_AHB1LPENR_CRCLPEN_Msk           
RCC_AHB1LPENR_FLITFLPEN_Pos        EQU		15                               
RCC_AHB1LPENR_FLITFLPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_FLITFLPEN_Pos    ;/*!< 0x00008000 */
RCC_AHB1LPENR_FLITFLPEN            EQU		RCC_AHB1LPENR_FLITFLPEN_Msk         
RCC_AHB1LPENR_SRAM1LPEN_Pos        EQU		16                               
RCC_AHB1LPENR_SRAM1LPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_SRAM1LPEN_Pos    ;/*!< 0x00010000 */
RCC_AHB1LPENR_SRAM1LPEN            EQU		RCC_AHB1LPENR_SRAM1LPEN_Msk         
RCC_AHB1LPENR_SRAM2LPEN_Pos        EQU		17                               
RCC_AHB1LPENR_SRAM2LPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_SRAM2LPEN_Pos    ;/*!< 0x00020000 */
RCC_AHB1LPENR_SRAM2LPEN            EQU		RCC_AHB1LPENR_SRAM2LPEN_Msk         
RCC_AHB1LPENR_BKPSRAMLPEN_Pos      EQU		18                               
RCC_AHB1LPENR_BKPSRAMLPEN_Msk      EQU		0x1 << RCC_AHB1LPENR_BKPSRAMLPEN_Pos    ;/*!< 0x00040000 */
RCC_AHB1LPENR_BKPSRAMLPEN          EQU		RCC_AHB1LPENR_BKPSRAMLPEN_Msk       
RCC_AHB1LPENR_DMA1LPEN_Pos         EQU		21                               
RCC_AHB1LPENR_DMA1LPEN_Msk         EQU		0x1 << RCC_AHB1LPENR_DMA1LPEN_Pos    ;/*!< 0x00200000 */
RCC_AHB1LPENR_DMA1LPEN             EQU		RCC_AHB1LPENR_DMA1LPEN_Msk          
RCC_AHB1LPENR_DMA2LPEN_Pos         EQU		22                               
RCC_AHB1LPENR_DMA2LPEN_Msk         EQU		0x1 << RCC_AHB1LPENR_DMA2LPEN_Pos    ;/*!< 0x00400000 */
RCC_AHB1LPENR_DMA2LPEN             EQU		RCC_AHB1LPENR_DMA2LPEN_Msk          

RCC_AHB1LPENR_ETHMACLPEN_Pos       EQU		25                               
RCC_AHB1LPENR_ETHMACLPEN_Msk       EQU		0x1 << RCC_AHB1LPENR_ETHMACLPEN_Pos    ;/*!< 0x02000000 */
RCC_AHB1LPENR_ETHMACLPEN           EQU		RCC_AHB1LPENR_ETHMACLPEN_Msk        
RCC_AHB1LPENR_ETHMACTXLPEN_Pos     EQU		26                               
RCC_AHB1LPENR_ETHMACTXLPEN_Msk     EQU		0x1 << RCC_AHB1LPENR_ETHMACTXLPEN_Pos    ;/*!< 0x04000000 */
RCC_AHB1LPENR_ETHMACTXLPEN         EQU		RCC_AHB1LPENR_ETHMACTXLPEN_Msk      
RCC_AHB1LPENR_ETHMACRXLPEN_Pos     EQU		27                               
RCC_AHB1LPENR_ETHMACRXLPEN_Msk     EQU		0x1 << RCC_AHB1LPENR_ETHMACRXLPEN_Pos    ;/*!< 0x08000000 */
RCC_AHB1LPENR_ETHMACRXLPEN         EQU		RCC_AHB1LPENR_ETHMACRXLPEN_Msk      
RCC_AHB1LPENR_ETHMACPTPLPEN_Pos    EQU		28                               
RCC_AHB1LPENR_ETHMACPTPLPEN_Msk    EQU		0x1 << RCC_AHB1LPENR_ETHMACPTPLPEN_Pos    ;/*!< 0x10000000 */
RCC_AHB1LPENR_ETHMACPTPLPEN        EQU		RCC_AHB1LPENR_ETHMACPTPLPEN_Msk     
RCC_AHB1LPENR_OTGHSLPEN_Pos        EQU		29                               
RCC_AHB1LPENR_OTGHSLPEN_Msk        EQU		0x1 << RCC_AHB1LPENR_OTGHSLPEN_Pos    ;/*!< 0x20000000 */
RCC_AHB1LPENR_OTGHSLPEN            EQU		RCC_AHB1LPENR_OTGHSLPEN_Msk         
RCC_AHB1LPENR_OTGHSULPILPEN_Pos    EQU		30                               
RCC_AHB1LPENR_OTGHSULPILPEN_Msk    EQU		0x1 << RCC_AHB1LPENR_OTGHSULPILPEN_Pos    ;/*!< 0x40000000 */
RCC_AHB1LPENR_OTGHSULPILPEN        EQU		RCC_AHB1LPENR_OTGHSULPILPEN_Msk     

RCC_AHB2LPENR				       EQU		0x54
;/********************  Bit definition for RCC_AHB2LPENR register  *************/
RCC_AHB2LPENR_DCMILPEN_Pos         EQU		0                                
RCC_AHB2LPENR_DCMILPEN_Msk         EQU		0x1 << RCC_AHB2LPENR_DCMILPEN_Pos    ;/*!< 0x00000001 */
RCC_AHB2LPENR_DCMILPEN             EQU		RCC_AHB2LPENR_DCMILPEN_Msk          
RCC_AHB2LPENR_RNGLPEN_Pos          EQU		6                                
RCC_AHB2LPENR_RNGLPEN_Msk          EQU		0x1 << RCC_AHB2LPENR_RNGLPEN_Pos    ;/*!< 0x00000040 */
RCC_AHB2LPENR_RNGLPEN              EQU		RCC_AHB2LPENR_RNGLPEN_Msk           
RCC_AHB2LPENR_OTGFSLPEN_Pos        EQU		7                                
RCC_AHB2LPENR_OTGFSLPEN_Msk        EQU		0x1 << RCC_AHB2LPENR_OTGFSLPEN_Pos    ;/*!< 0x00000080 */
RCC_AHB2LPENR_OTGFSLPEN            EQU		RCC_AHB2LPENR_OTGFSLPEN_Msk         

RCC_AHB3LPENR				       EQU		0x58
;/********************  Bit definition for RCC_AHB3LPENR register  *************/
RCC_AHB3LPENR_FSMCLPEN_Pos         EQU		0                                
RCC_AHB3LPENR_FSMCLPEN_Msk         EQU		0x1 << RCC_AHB3LPENR_FSMCLPEN_Pos    ;/*!< 0x00000001 */
RCC_AHB3LPENR_FSMCLPEN             EQU		RCC_AHB3LPENR_FSMCLPEN_Msk          

RCC_APB1LPENR			           EQU		0x60
;/********************  Bit definition for RCC_APB1LPENR register  *************/
RCC_APB1LPENR_TIM2LPEN_Pos         EQU		0                                
RCC_APB1LPENR_TIM2LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_TIM2LPEN_Pos    ;/*!< 0x00000001 */
RCC_APB1LPENR_TIM2LPEN             EQU		RCC_APB1LPENR_TIM2LPEN_Msk          
RCC_APB1LPENR_TIM3LPEN_Pos         EQU		1                                
RCC_APB1LPENR_TIM3LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_TIM3LPEN_Pos    ;/*!< 0x00000002 */
RCC_APB1LPENR_TIM3LPEN             EQU		RCC_APB1LPENR_TIM3LPEN_Msk          
RCC_APB1LPENR_TIM4LPEN_Pos         EQU		2                                
RCC_APB1LPENR_TIM4LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_TIM4LPEN_Pos    ;/*!< 0x00000004 */
RCC_APB1LPENR_TIM4LPEN             EQU		RCC_APB1LPENR_TIM4LPEN_Msk          
RCC_APB1LPENR_TIM5LPEN_Pos         EQU		3                                
RCC_APB1LPENR_TIM5LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_TIM5LPEN_Pos    ;/*!< 0x00000008 */
RCC_APB1LPENR_TIM5LPEN             EQU		RCC_APB1LPENR_TIM5LPEN_Msk          
RCC_APB1LPENR_TIM6LPEN_Pos         EQU		4                                
RCC_APB1LPENR_TIM6LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_TIM6LPEN_Pos    ;/*!< 0x00000010 */
RCC_APB1LPENR_TIM6LPEN             EQU		RCC_APB1LPENR_TIM6LPEN_Msk          
RCC_APB1LPENR_TIM7LPEN_Pos         EQU		5                                
RCC_APB1LPENR_TIM7LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_TIM7LPEN_Pos    ;/*!< 0x00000020 */
RCC_APB1LPENR_TIM7LPEN             EQU		RCC_APB1LPENR_TIM7LPEN_Msk          
RCC_APB1LPENR_TIM12LPEN_Pos        EQU		6                                
RCC_APB1LPENR_TIM12LPEN_Msk        EQU		0x1 << RCC_APB1LPENR_TIM12LPEN_Pos    ;/*!< 0x00000040 */
RCC_APB1LPENR_TIM12LPEN            EQU		RCC_APB1LPENR_TIM12LPEN_Msk         
RCC_APB1LPENR_TIM13LPEN_Pos        EQU		7                                
RCC_APB1LPENR_TIM13LPEN_Msk        EQU		0x1 << RCC_APB1LPENR_TIM13LPEN_Pos    ;/*!< 0x00000080 */
RCC_APB1LPENR_TIM13LPEN            EQU		RCC_APB1LPENR_TIM13LPEN_Msk         
RCC_APB1LPENR_TIM14LPEN_Pos        EQU		8                                
RCC_APB1LPENR_TIM14LPEN_Msk        EQU		0x1 << RCC_APB1LPENR_TIM14LPEN_Pos    ;/*!< 0x00000100 */
RCC_APB1LPENR_TIM14LPEN            EQU		RCC_APB1LPENR_TIM14LPEN_Msk         
RCC_APB1LPENR_WWDGLPEN_Pos         EQU		11                               
RCC_APB1LPENR_WWDGLPEN_Msk         EQU		0x1 << RCC_APB1LPENR_WWDGLPEN_Pos    ;/*!< 0x00000800 */
RCC_APB1LPENR_WWDGLPEN             EQU		RCC_APB1LPENR_WWDGLPEN_Msk          
RCC_APB1LPENR_SPI2LPEN_Pos         EQU		14                               
RCC_APB1LPENR_SPI2LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_SPI2LPEN_Pos    ;/*!< 0x00004000 */
RCC_APB1LPENR_SPI2LPEN             EQU		RCC_APB1LPENR_SPI2LPEN_Msk          
RCC_APB1LPENR_SPI3LPEN_Pos         EQU		15                               
RCC_APB1LPENR_SPI3LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_SPI3LPEN_Pos    ;/*!< 0x00008000 */
RCC_APB1LPENR_SPI3LPEN             EQU		RCC_APB1LPENR_SPI3LPEN_Msk          
RCC_APB1LPENR_USART2LPEN_Pos       EQU		17                               
RCC_APB1LPENR_USART2LPEN_Msk       EQU		0x1 << RCC_APB1LPENR_USART2LPEN_Pos    ;/*!< 0x00020000 */
RCC_APB1LPENR_USART2LPEN           EQU		RCC_APB1LPENR_USART2LPEN_Msk        
RCC_APB1LPENR_USART3LPEN_Pos       EQU		18                               
RCC_APB1LPENR_USART3LPEN_Msk       EQU		0x1 << RCC_APB1LPENR_USART3LPEN_Pos    ;/*!< 0x00040000 */
RCC_APB1LPENR_USART3LPEN           EQU		RCC_APB1LPENR_USART3LPEN_Msk        
RCC_APB1LPENR_UART4LPEN_Pos        EQU		19                               
RCC_APB1LPENR_UART4LPEN_Msk        EQU		0x1 << RCC_APB1LPENR_UART4LPEN_Pos    ;/*!< 0x00080000 */
RCC_APB1LPENR_UART4LPEN            EQU		RCC_APB1LPENR_UART4LPEN_Msk         
RCC_APB1LPENR_UART5LPEN_Pos        EQU		20                               
RCC_APB1LPENR_UART5LPEN_Msk        EQU		0x1 << RCC_APB1LPENR_UART5LPEN_Pos    ;/*!< 0x00100000 */
RCC_APB1LPENR_UART5LPEN            EQU		RCC_APB1LPENR_UART5LPEN_Msk         
RCC_APB1LPENR_I2C1LPEN_Pos         EQU		21                               
RCC_APB1LPENR_I2C1LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_I2C1LPEN_Pos    ;/*!< 0x00200000 */
RCC_APB1LPENR_I2C1LPEN             EQU		RCC_APB1LPENR_I2C1LPEN_Msk          
RCC_APB1LPENR_I2C2LPEN_Pos         EQU		22                               
RCC_APB1LPENR_I2C2LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_I2C2LPEN_Pos    ;/*!< 0x00400000 */
RCC_APB1LPENR_I2C2LPEN             EQU		RCC_APB1LPENR_I2C2LPEN_Msk          
RCC_APB1LPENR_I2C3LPEN_Pos         EQU		23                               
RCC_APB1LPENR_I2C3LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_I2C3LPEN_Pos    ;/*!< 0x00800000 */
RCC_APB1LPENR_I2C3LPEN             EQU		RCC_APB1LPENR_I2C3LPEN_Msk          
RCC_APB1LPENR_CAN1LPEN_Pos         EQU		25                               
RCC_APB1LPENR_CAN1LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_CAN1LPEN_Pos    ;/*!< 0x02000000 */
RCC_APB1LPENR_CAN1LPEN             EQU		RCC_APB1LPENR_CAN1LPEN_Msk          
RCC_APB1LPENR_CAN2LPEN_Pos         EQU		26                               
RCC_APB1LPENR_CAN2LPEN_Msk         EQU		0x1 << RCC_APB1LPENR_CAN2LPEN_Pos    ;/*!< 0x04000000 */
RCC_APB1LPENR_CAN2LPEN             EQU		RCC_APB1LPENR_CAN2LPEN_Msk          
RCC_APB1LPENR_PWRLPEN_Pos          EQU		28                               
RCC_APB1LPENR_PWRLPEN_Msk          EQU		0x1 << RCC_APB1LPENR_PWRLPEN_Pos    ;/*!< 0x10000000 */
RCC_APB1LPENR_PWRLPEN              EQU		RCC_APB1LPENR_PWRLPEN_Msk           
RCC_APB1LPENR_DACLPEN_Pos          EQU		29                               
RCC_APB1LPENR_DACLPEN_Msk          EQU		0x1 << RCC_APB1LPENR_DACLPEN_Pos    ;/*!< 0x20000000 */
RCC_APB1LPENR_DACLPEN              EQU		RCC_APB1LPENR_DACLPEN_Msk           

RCC_APB2LPENR			           EQU		0x64
;/********************  Bit definition for RCC_APB2LPENR register  *************/
RCC_APB2LPENR_TIM1LPEN_Pos         EQU		0                                
RCC_APB2LPENR_TIM1LPEN_Msk         EQU		0x1 << RCC_APB2LPENR_TIM1LPEN_Pos    ;/*!< 0x00000001 */
RCC_APB2LPENR_TIM1LPEN             EQU		RCC_APB2LPENR_TIM1LPEN_Msk          
RCC_APB2LPENR_TIM8LPEN_Pos         EQU		1                                
RCC_APB2LPENR_TIM8LPEN_Msk         EQU		0x1 << RCC_APB2LPENR_TIM8LPEN_Pos    ;/*!< 0x00000002 */
RCC_APB2LPENR_TIM8LPEN             EQU		RCC_APB2LPENR_TIM8LPEN_Msk          
RCC_APB2LPENR_USART1LPEN_Pos       EQU		4                                
RCC_APB2LPENR_USART1LPEN_Msk       EQU		0x1 << RCC_APB2LPENR_USART1LPEN_Pos    ;/*!< 0x00000010 */
RCC_APB2LPENR_USART1LPEN           EQU		RCC_APB2LPENR_USART1LPEN_Msk        
RCC_APB2LPENR_USART6LPEN_Pos       EQU		5                                
RCC_APB2LPENR_USART6LPEN_Msk       EQU		0x1 << RCC_APB2LPENR_USART6LPEN_Pos    ;/*!< 0x00000020 */
RCC_APB2LPENR_USART6LPEN           EQU		RCC_APB2LPENR_USART6LPEN_Msk        
RCC_APB2LPENR_ADC1LPEN_Pos         EQU		8                                
RCC_APB2LPENR_ADC1LPEN_Msk         EQU		0x1 << RCC_APB2LPENR_ADC1LPEN_Pos    ;/*!< 0x00000100 */
RCC_APB2LPENR_ADC1LPEN             EQU		RCC_APB2LPENR_ADC1LPEN_Msk          
RCC_APB2LPENR_ADC2LPEN_Pos         EQU		9                                
RCC_APB2LPENR_ADC2LPEN_Msk         EQU		0x1 << RCC_APB2LPENR_ADC2LPEN_Pos    ;/*!< 0x00000200 */
RCC_APB2LPENR_ADC2LPEN             EQU		RCC_APB2LPENR_ADC2LPEN_Msk          
RCC_APB2LPENR_ADC3LPEN_Pos         EQU		10                               
RCC_APB2LPENR_ADC3LPEN_Msk         EQU		0x1 << RCC_APB2LPENR_ADC3LPEN_Pos    ;/*!< 0x00000400 */
RCC_APB2LPENR_ADC3LPEN             EQU		RCC_APB2LPENR_ADC3LPEN_Msk          
RCC_APB2LPENR_SDIOLPEN_Pos         EQU		11                               
RCC_APB2LPENR_SDIOLPEN_Msk         EQU		0x1 << RCC_APB2LPENR_SDIOLPEN_Pos    ;/*!< 0x00000800 */
RCC_APB2LPENR_SDIOLPEN             EQU		RCC_APB2LPENR_SDIOLPEN_Msk          
RCC_APB2LPENR_SPI1LPEN_Pos         EQU		12                               
RCC_APB2LPENR_SPI1LPEN_Msk         EQU		0x1 << RCC_APB2LPENR_SPI1LPEN_Pos    ;/*!< 0x00001000 */
RCC_APB2LPENR_SPI1LPEN             EQU		RCC_APB2LPENR_SPI1LPEN_Msk          
RCC_APB2LPENR_SYSCFGLPEN_Pos       EQU		14                               
RCC_APB2LPENR_SYSCFGLPEN_Msk       EQU		0x1 << RCC_APB2LPENR_SYSCFGLPEN_Pos    ;/*!< 0x00004000 */
RCC_APB2LPENR_SYSCFGLPEN           EQU		RCC_APB2LPENR_SYSCFGLPEN_Msk        
RCC_APB2LPENR_TIM9LPEN_Pos         EQU		16                               
RCC_APB2LPENR_TIM9LPEN_Msk         EQU		0x1 << RCC_APB2LPENR_TIM9LPEN_Pos    ;/*!< 0x00010000 */
RCC_APB2LPENR_TIM9LPEN             EQU		RCC_APB2LPENR_TIM9LPEN_Msk          
RCC_APB2LPENR_TIM10LPEN_Pos        EQU		17                               
RCC_APB2LPENR_TIM10LPEN_Msk        EQU		0x1 << RCC_APB2LPENR_TIM10LPEN_Pos    ;/*!< 0x00020000 */
RCC_APB2LPENR_TIM10LPEN            EQU		RCC_APB2LPENR_TIM10LPEN_Msk         
RCC_APB2LPENR_TIM11LPEN_Pos        EQU		18                               
RCC_APB2LPENR_TIM11LPEN_Msk        EQU		0x1 << RCC_APB2LPENR_TIM11LPEN_Pos    ;/*!< 0x00040000 */
RCC_APB2LPENR_TIM11LPEN            EQU		RCC_APB2LPENR_TIM11LPEN_Msk         

RCC_BDCR		                   EQU		0x70
;/********************  Bit definition for RCC_BDCR register  ******************/
RCC_BDCR_LSEON_Pos                 EQU		0                                
RCC_BDCR_LSEON_Msk                 EQU		0x1 << RCC_BDCR_LSEON_Pos           ;/*!< 0x00000001 */
RCC_BDCR_LSEON                     EQU		RCC_BDCR_LSEON_Msk                  
RCC_BDCR_LSERDY_Pos                EQU		1                                
RCC_BDCR_LSERDY_Msk                EQU		0x1 << RCC_BDCR_LSERDY_Pos          ;/*!< 0x00000002 */
RCC_BDCR_LSERDY                    EQU		RCC_BDCR_LSERDY_Msk                 
RCC_BDCR_LSEBYP_Pos                EQU		2                                
RCC_BDCR_LSEBYP_Msk                EQU		0x1 << RCC_BDCR_LSEBYP_Pos          ;/*!< 0x00000004 */
RCC_BDCR_LSEBYP                    EQU		RCC_BDCR_LSEBYP_Msk                 

RCC_BDCR_RTCSEL_Pos                EQU		8                                
RCC_BDCR_RTCSEL_Msk                EQU		0x3 << RCC_BDCR_RTCSEL_Pos          ;/*!< 0x00000300 */
RCC_BDCR_RTCSEL                    EQU		RCC_BDCR_RTCSEL_Msk                 
RCC_BDCR_RTCSEL_0                  EQU		0x1 << RCC_BDCR_RTCSEL_Pos          ;/*!< 0x00000100 */
RCC_BDCR_RTCSEL_1                  EQU		0x2 << RCC_BDCR_RTCSEL_Pos          ;/*!< 0x00000200 */

RCC_BDCR_RTCEN_Pos                 EQU		15                               
RCC_BDCR_RTCEN_Msk                 EQU		0x1 << RCC_BDCR_RTCEN_Pos           ;/*!< 0x00008000 */
RCC_BDCR_RTCEN                     EQU		RCC_BDCR_RTCEN_Msk                  
RCC_BDCR_BDRST_Pos                 EQU		16                               
RCC_BDCR_BDRST_Msk                 EQU		0x1 << RCC_BDCR_BDRST_Pos           ;/*!< 0x00010000 */
RCC_BDCR_BDRST                     EQU		RCC_BDCR_BDRST_Msk                  

RCC_CSR			                   EQU		0x74
;/********************  Bit definition for RCC_CSR register  *******************/
RCC_CSR_LSION_Pos                  EQU		0                                
RCC_CSR_LSION_Msk                  EQU		0x1 << RCC_CSR_LSION_Pos            ;/*!< 0x00000001 */
RCC_CSR_LSION                      EQU		RCC_CSR_LSION_Msk                   
RCC_CSR_LSIRDY_Pos                 EQU		1                                
RCC_CSR_LSIRDY_Msk                 EQU		0x1 << RCC_CSR_LSIRDY_Pos           ;/*!< 0x00000002 */
RCC_CSR_LSIRDY                     EQU		RCC_CSR_LSIRDY_Msk                  
RCC_CSR_RMVF_Pos                   EQU		24                               
RCC_CSR_RMVF_Msk                   EQU		0x1 << RCC_CSR_RMVF_Pos             ;/*!< 0x01000000 */
RCC_CSR_RMVF                       EQU		RCC_CSR_RMVF_Msk                    
RCC_CSR_BORRSTF_Pos                EQU		25                               
RCC_CSR_BORRSTF_Msk                EQU		0x1 << RCC_CSR_BORRSTF_Pos          ;/*!< 0x02000000 */
RCC_CSR_BORRSTF                    EQU		RCC_CSR_BORRSTF_Msk                 
RCC_CSR_PINRSTF_Pos                EQU		26
RCC_CSR_PINRSTF_Msk                EQU		0x1 << RCC_CSR_PINRSTF_Pos          ;/*!< 0x04000000 */
RCC_CSR_PINRSTF                    EQU		RCC_CSR_PINRSTF_Msk
RCC_CSR_PORRSTF_Pos                EQU		27                               
RCC_CSR_PORRSTF_Msk                EQU		0x1 << RCC_CSR_PORRSTF_Pos          ;/*!< 0x08000000 */
RCC_CSR_PORRSTF                    EQU		RCC_CSR_PORRSTF_Msk                 
RCC_CSR_SFTRSTF_Pos                EQU		28                               
RCC_CSR_SFTRSTF_Msk                EQU		0x1 << RCC_CSR_SFTRSTF_Pos          ;/*!< 0x10000000 */
RCC_CSR_SFTRSTF                    EQU		RCC_CSR_SFTRSTF_Msk                 
RCC_CSR_IWDGRSTF_Pos               EQU		29
RCC_CSR_IWDGRSTF_Msk               EQU		0x1 << RCC_CSR_IWDGRSTF_Pos         ;/*!< 0x20000000 */
RCC_CSR_IWDGRSTF                   EQU		RCC_CSR_IWDGRSTF_Msk
RCC_CSR_WWDGRSTF_Pos               EQU		30                               
RCC_CSR_WWDGRSTF_Msk               EQU		0x1 << RCC_CSR_WWDGRSTF_Pos         ;/*!< 0x40000000 */
RCC_CSR_WWDGRSTF                   EQU		RCC_CSR_WWDGRSTF_Msk                
RCC_CSR_LPWRRSTF_Pos               EQU		31                               
RCC_CSR_LPWRRSTF_Msk               EQU		0x1 << RCC_CSR_LPWRRSTF_Pos         ;/*!< 0x80000000 */
RCC_CSR_LPWRRSTF                   EQU		RCC_CSR_LPWRRSTF_Msk

;/* Legacy defines */
RCC_CSR_PADRSTF                    EQU		RCC_CSR_PINRSTF
RCC_CSR_WDGRSTF                    EQU		RCC_CSR_IWDGRSTF

RCC_SSCGR			               EQU		0x80
;/********************  Bit definition for RCC_SSCGR register  *****************/
RCC_SSCGR_MODPER_Pos               EQU		0                                
RCC_SSCGR_MODPER_Msk               EQU		0x1FFF << RCC_SSCGR_MODPER_Pos      ;/*!< 0x00001FFF */
RCC_SSCGR_MODPER                   EQU		RCC_SSCGR_MODPER_Msk                
RCC_SSCGR_INCSTEP_Pos              EQU		13                               
RCC_SSCGR_INCSTEP_Msk              EQU		0x7FFF << RCC_SSCGR_INCSTEP_Pos     ;/*!< 0x0FFFE000 */
RCC_SSCGR_INCSTEP                  EQU		RCC_SSCGR_INCSTEP_Msk               
RCC_SSCGR_SPREADSEL_Pos            EQU		30                               
RCC_SSCGR_SPREADSEL_Msk            EQU		0x1 << RCC_SSCGR_SPREADSEL_Pos      ;/*!< 0x40000000 */
RCC_SSCGR_SPREADSEL                EQU		RCC_SSCGR_SPREADSEL_Msk             
RCC_SSCGR_SSCGEN_Pos               EQU		31                               
RCC_SSCGR_SSCGEN_Msk               EQU		0x1 << RCC_SSCGR_SSCGEN_Pos         ;/*!< 0x80000000 */
RCC_SSCGR_SSCGEN                   EQU		RCC_SSCGR_SSCGEN_Msk                

RCC_PLLI2SCFGR	   		           EQU		0x84
;/********************  Bit definition for RCC_PLLI2SCFGR register  ************/
RCC_PLLI2SCFGR_PLLI2SN_Pos         EQU		6                                
RCC_PLLI2SCFGR_PLLI2SN_Msk         EQU		0x1FF << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00007FC0 */
RCC_PLLI2SCFGR_PLLI2SN             EQU		RCC_PLLI2SCFGR_PLLI2SN_Msk          
RCC_PLLI2SCFGR_PLLI2SN_0           EQU		0x001 << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00000040 */
RCC_PLLI2SCFGR_PLLI2SN_1           EQU		0x002 << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00000080 */
RCC_PLLI2SCFGR_PLLI2SN_2           EQU		0x004 << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00000100 */
RCC_PLLI2SCFGR_PLLI2SN_3           EQU		0x008 << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00000200 */
RCC_PLLI2SCFGR_PLLI2SN_4           EQU		0x010 << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00000400 */
RCC_PLLI2SCFGR_PLLI2SN_5           EQU		0x020 << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00000800 */
RCC_PLLI2SCFGR_PLLI2SN_6           EQU		0x040 << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00001000 */
RCC_PLLI2SCFGR_PLLI2SN_7           EQU		0x080 << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00002000 */
RCC_PLLI2SCFGR_PLLI2SN_8           EQU		0x100 << RCC_PLLI2SCFGR_PLLI2SN_Pos    ;/*!< 0x00004000 */

RCC_PLLI2SCFGR_PLLI2SR_Pos         EQU		28                               
RCC_PLLI2SCFGR_PLLI2SR_Msk         EQU		0x7 << RCC_PLLI2SCFGR_PLLI2SR_Pos    ;/*!< 0x70000000 */
RCC_PLLI2SCFGR_PLLI2SR             EQU		RCC_PLLI2SCFGR_PLLI2SR_Msk          
RCC_PLLI2SCFGR_PLLI2SR_0           EQU		0x1 << RCC_PLLI2SCFGR_PLLI2SR_Pos    ;/*!< 0x10000000 */
RCC_PLLI2SCFGR_PLLI2SR_1           EQU		0x2 << RCC_PLLI2SCFGR_PLLI2SR_Pos    ;/*!< 0x20000000 */
RCC_PLLI2SCFGR_PLLI2SR_2           EQU		0x4 << RCC_PLLI2SCFGR_PLLI2SR_Pos    ;/*!< 0x40000000 */

;/******************************************************************************/
;/*                                                                            */
;/*                                    RNG                                     */
;/*                                                                            */
;/******************************************************************************/

RNG_CR			    EQU		0x00
;/********************  Bits definition for RNG_CR register  *******************/
RNG_CR_RNGEN_Pos    EQU		2                                               
RNG_CR_RNGEN_Msk    EQU		0x1 << RNG_CR_RNGEN_Pos                            ;/*!< 0x00000004 */
RNG_CR_RNGEN        EQU		RNG_CR_RNGEN_Msk                                   
RNG_CR_IE_Pos       EQU		3                                               
RNG_CR_IE_Msk       EQU		0x1 << RNG_CR_IE_Pos                               ;/*!< 0x00000008 */
RNG_CR_IE           EQU		RNG_CR_IE_Msk                                      

RNG_SR			    EQU		0x04
;/********************  Bits definition for RNG_SR register  *******************/
RNG_SR_DRDY_Pos     EQU		0                                               
RNG_SR_DRDY_Msk     EQU		0x1 << RNG_SR_DRDY_Pos                             ;/*!< 0x00000001 */
RNG_SR_DRDY         EQU		RNG_SR_DRDY_Msk                                    
RNG_SR_CECS_Pos     EQU		1                                               
RNG_SR_CECS_Msk     EQU		0x1 << RNG_SR_CECS_Pos                             ;/*!< 0x00000002 */
RNG_SR_CECS         EQU		RNG_SR_CECS_Msk                                    
RNG_SR_SECS_Pos     EQU		2                                               
RNG_SR_SECS_Msk     EQU		0x1 << RNG_SR_SECS_Pos                             ;/*!< 0x00000004 */
RNG_SR_SECS         EQU		RNG_SR_SECS_Msk                                    
RNG_SR_CEIS_Pos     EQU		5                                               
RNG_SR_CEIS_Msk     EQU		0x1 << RNG_SR_CEIS_Pos                             ;/*!< 0x00000020 */
RNG_SR_CEIS         EQU		RNG_SR_CEIS_Msk                                    
RNG_SR_SEIS_Pos     EQU		6                                               
RNG_SR_SEIS_Msk     EQU		0x1 << RNG_SR_SEIS_Pos                             ;/*!< 0x00000040 */
RNG_SR_SEIS         EQU		RNG_SR_SEIS_Msk                                    

RNG_DR			    EQU		0x08

;/******************************************************************************/
;/*                                                                            */
;/*                           Real-Time Clock (RTC)                            */
;/*                                                                            */
;/******************************************************************************/

RTC_TR			              EQU		0x00
;/********************  Bits definition for RTC_TR register  *******************/
RTC_TR_PM_Pos                 EQU		22                                    
RTC_TR_PM_Msk                 EQU		0x1 << RTC_TR_PM_Pos                     ;/*!< 0x00400000 */
RTC_TR_PM                     EQU		RTC_TR_PM_Msk                            
RTC_TR_HT_Pos                 EQU		20                                    
RTC_TR_HT_Msk                 EQU		0x3 << RTC_TR_HT_Pos                     ;/*!< 0x00300000 */
RTC_TR_HT                     EQU		RTC_TR_HT_Msk                            
RTC_TR_HT_0                   EQU		0x1 << RTC_TR_HT_Pos                     ;/*!< 0x00100000 */
RTC_TR_HT_1                   EQU		0x2 << RTC_TR_HT_Pos                     ;/*!< 0x00200000 */
RTC_TR_HU_Pos                 EQU		16                                    
RTC_TR_HU_Msk                 EQU		0xF << RTC_TR_HU_Pos                     ;/*!< 0x000F0000 */
RTC_TR_HU                     EQU		RTC_TR_HU_Msk                            
RTC_TR_HU_0                   EQU		0x1 << RTC_TR_HU_Pos                     ;/*!< 0x00010000 */
RTC_TR_HU_1                   EQU		0x2 << RTC_TR_HU_Pos                     ;/*!< 0x00020000 */
RTC_TR_HU_2                   EQU		0x4 << RTC_TR_HU_Pos                     ;/*!< 0x00040000 */
RTC_TR_HU_3                   EQU		0x8 << RTC_TR_HU_Pos                     ;/*!< 0x00080000 */
RTC_TR_MNT_Pos                EQU		12                                    
RTC_TR_MNT_Msk                EQU		0x7 << RTC_TR_MNT_Pos                    ;/*!< 0x00007000 */
RTC_TR_MNT                    EQU		RTC_TR_MNT_Msk                           
RTC_TR_MNT_0                  EQU		0x1 << RTC_TR_MNT_Pos                    ;/*!< 0x00001000 */
RTC_TR_MNT_1                  EQU		0x2 << RTC_TR_MNT_Pos                    ;/*!< 0x00002000 */
RTC_TR_MNT_2                  EQU		0x4 << RTC_TR_MNT_Pos                    ;/*!< 0x00004000 */
RTC_TR_MNU_Pos                EQU		8                                     
RTC_TR_MNU_Msk                EQU		0xF << RTC_TR_MNU_Pos                    ;/*!< 0x00000F00 */
RTC_TR_MNU                    EQU		RTC_TR_MNU_Msk                           
RTC_TR_MNU_0                  EQU		0x1 << RTC_TR_MNU_Pos                    ;/*!< 0x00000100 */
RTC_TR_MNU_1                  EQU		0x2 << RTC_TR_MNU_Pos                    ;/*!< 0x00000200 */
RTC_TR_MNU_2                  EQU		0x4 << RTC_TR_MNU_Pos                    ;/*!< 0x00000400 */
RTC_TR_MNU_3                  EQU		0x8 << RTC_TR_MNU_Pos                    ;/*!< 0x00000800 */
RTC_TR_ST_Pos                 EQU		4                                     
RTC_TR_ST_Msk                 EQU		0x7 << RTC_TR_ST_Pos                     ;/*!< 0x00000070 */
RTC_TR_ST                     EQU		RTC_TR_ST_Msk                            
RTC_TR_ST_0                   EQU		0x1 << RTC_TR_ST_Pos                     ;/*!< 0x00000010 */
RTC_TR_ST_1                   EQU		0x2 << RTC_TR_ST_Pos                     ;/*!< 0x00000020 */
RTC_TR_ST_2                   EQU		0x4 << RTC_TR_ST_Pos                     ;/*!< 0x00000040 */
RTC_TR_SU_Pos                 EQU		0                                     
RTC_TR_SU_Msk                 EQU		0xF << RTC_TR_SU_Pos                     ;/*!< 0x0000000F */
RTC_TR_SU                     EQU		RTC_TR_SU_Msk                            
RTC_TR_SU_0                   EQU		0x1 << RTC_TR_SU_Pos                     ;/*!< 0x00000001 */
RTC_TR_SU_1                   EQU		0x2 << RTC_TR_SU_Pos                     ;/*!< 0x00000002 */
RTC_TR_SU_2                   EQU		0x4 << RTC_TR_SU_Pos                     ;/*!< 0x00000004 */
RTC_TR_SU_3                   EQU		0x8 << RTC_TR_SU_Pos                     ;/*!< 0x00000008 */

RTC_DR			              EQU		0x04
;/********************  Bits definition for RTC_DR register  *******************/
RTC_DR_YT_Pos                 EQU		20                                    
RTC_DR_YT_Msk                 EQU		0xF << RTC_DR_YT_Pos                     ;/*!< 0x00F00000 */
RTC_DR_YT                     EQU		RTC_DR_YT_Msk                            
RTC_DR_YT_0                   EQU		0x1 << RTC_DR_YT_Pos                     ;/*!< 0x00100000 */
RTC_DR_YT_1                   EQU		0x2 << RTC_DR_YT_Pos                     ;/*!< 0x00200000 */
RTC_DR_YT_2                   EQU		0x4 << RTC_DR_YT_Pos                     ;/*!< 0x00400000 */
RTC_DR_YT_3                   EQU		0x8 << RTC_DR_YT_Pos                     ;/*!< 0x00800000 */
RTC_DR_YU_Pos                 EQU		16                                    
RTC_DR_YU_Msk                 EQU		0xF << RTC_DR_YU_Pos                     ;/*!< 0x000F0000 */
RTC_DR_YU                     EQU		RTC_DR_YU_Msk                            
RTC_DR_YU_0                   EQU		0x1 << RTC_DR_YU_Pos                     ;/*!< 0x00010000 */
RTC_DR_YU_1                   EQU		0x2 << RTC_DR_YU_Pos                     ;/*!< 0x00020000 */
RTC_DR_YU_2                   EQU		0x4 << RTC_DR_YU_Pos                     ;/*!< 0x00040000 */
RTC_DR_YU_3                   EQU		0x8 << RTC_DR_YU_Pos                     ;/*!< 0x00080000 */
RTC_DR_WDU_Pos                EQU		13                                    
RTC_DR_WDU_Msk                EQU		0x7 << RTC_DR_WDU_Pos                    ;/*!< 0x0000E000 */
RTC_DR_WDU                    EQU		RTC_DR_WDU_Msk                           
RTC_DR_WDU_0                  EQU		0x1 << RTC_DR_WDU_Pos                    ;/*!< 0x00002000 */
RTC_DR_WDU_1                  EQU		0x2 << RTC_DR_WDU_Pos                    ;/*!< 0x00004000 */
RTC_DR_WDU_2                  EQU		0x4 << RTC_DR_WDU_Pos                    ;/*!< 0x00008000 */
RTC_DR_MT_Pos                 EQU		12                                    
RTC_DR_MT_Msk                 EQU		0x1 << RTC_DR_MT_Pos                     ;/*!< 0x00001000 */
RTC_DR_MT                     EQU		RTC_DR_MT_Msk                            
RTC_DR_MU_Pos                 EQU		8                                     
RTC_DR_MU_Msk                 EQU		0xF << RTC_DR_MU_Pos                     ;/*!< 0x00000F00 */
RTC_DR_MU                     EQU		RTC_DR_MU_Msk                            
RTC_DR_MU_0                   EQU		0x1 << RTC_DR_MU_Pos                     ;/*!< 0x00000100 */
RTC_DR_MU_1                   EQU		0x2 << RTC_DR_MU_Pos                     ;/*!< 0x00000200 */
RTC_DR_MU_2                   EQU		0x4 << RTC_DR_MU_Pos                     ;/*!< 0x00000400 */
RTC_DR_MU_3                   EQU		0x8 << RTC_DR_MU_Pos                     ;/*!< 0x00000800 */
RTC_DR_DT_Pos                 EQU		4                                     
RTC_DR_DT_Msk                 EQU		0x3 << RTC_DR_DT_Pos                     ;/*!< 0x00000030 */
RTC_DR_DT                     EQU		RTC_DR_DT_Msk                            
RTC_DR_DT_0                   EQU		0x1 << RTC_DR_DT_Pos                     ;/*!< 0x00000010 */
RTC_DR_DT_1                   EQU		0x2 << RTC_DR_DT_Pos                     ;/*!< 0x00000020 */
RTC_DR_DU_Pos                 EQU		0                                     
RTC_DR_DU_Msk                 EQU		0xF << RTC_DR_DU_Pos                     ;/*!< 0x0000000F */
RTC_DR_DU                     EQU		RTC_DR_DU_Msk                            
RTC_DR_DU_0                   EQU		0x1 << RTC_DR_DU_Pos                     ;/*!< 0x00000001 */
RTC_DR_DU_1                   EQU		0x2 << RTC_DR_DU_Pos                     ;/*!< 0x00000002 */
RTC_DR_DU_2                   EQU		0x4 << RTC_DR_DU_Pos                     ;/*!< 0x00000004 */
RTC_DR_DU_3                   EQU		0x8 << RTC_DR_DU_Pos                     ;/*!< 0x00000008 */

RTC_CR			              EQU		0x08
;/********************  Bits definition for RTC_CR register  *******************/
RTC_CR_COE_Pos                EQU		23                                    
RTC_CR_COE_Msk                EQU		0x1 << RTC_CR_COE_Pos                    ;/*!< 0x00800000 */
RTC_CR_COE                    EQU		RTC_CR_COE_Msk                           
RTC_CR_OSEL_Pos               EQU		21                                    
RTC_CR_OSEL_Msk               EQU		0x3 << RTC_CR_OSEL_Pos                   ;/*!< 0x00600000 */
RTC_CR_OSEL                   EQU		RTC_CR_OSEL_Msk                          
RTC_CR_OSEL_0                 EQU		0x1 << RTC_CR_OSEL_Pos                   ;/*!< 0x00200000 */
RTC_CR_OSEL_1                 EQU		0x2 << RTC_CR_OSEL_Pos                   ;/*!< 0x00400000 */
RTC_CR_POL_Pos                EQU		20                                    
RTC_CR_POL_Msk                EQU		0x1 << RTC_CR_POL_Pos                    ;/*!< 0x00100000 */
RTC_CR_POL                    EQU		RTC_CR_POL_Msk                           
RTC_CR_COSEL_Pos              EQU		19                                    
RTC_CR_COSEL_Msk              EQU		0x1 << RTC_CR_COSEL_Pos                  ;/*!< 0x00080000 */
RTC_CR_COSEL                  EQU		RTC_CR_COSEL_Msk                         
RTC_CR_BKP_Pos                EQU		18                                   
RTC_CR_BKP_Msk                EQU		0x1 << RTC_CR_BKP_Pos                    ;/*!< 0x00040000 */
RTC_CR_BKP                    EQU		RTC_CR_BKP_Msk                          
RTC_CR_SUB1H_Pos              EQU		17                                    
RTC_CR_SUB1H_Msk              EQU		0x1 << RTC_CR_SUB1H_Pos                  ;/*!< 0x00020000 */
RTC_CR_SUB1H                  EQU		RTC_CR_SUB1H_Msk                         
RTC_CR_ADD1H_Pos              EQU		16                                    
RTC_CR_ADD1H_Msk              EQU		0x1 << RTC_CR_ADD1H_Pos                  ;/*!< 0x00010000 */
RTC_CR_ADD1H                  EQU		RTC_CR_ADD1H_Msk                         
RTC_CR_TSIE_Pos               EQU		15                                    
RTC_CR_TSIE_Msk               EQU		0x1 << RTC_CR_TSIE_Pos                   ;/*!< 0x00008000 */
RTC_CR_TSIE                   EQU		RTC_CR_TSIE_Msk                          
RTC_CR_WUTIE_Pos              EQU		14                                    
RTC_CR_WUTIE_Msk              EQU		0x1 << RTC_CR_WUTIE_Pos                  ;/*!< 0x00004000 */
RTC_CR_WUTIE                  EQU		RTC_CR_WUTIE_Msk                         
RTC_CR_ALRBIE_Pos             EQU		13                                    
RTC_CR_ALRBIE_Msk             EQU		0x1 << RTC_CR_ALRBIE_Pos                 ;/*!< 0x00002000 */
RTC_CR_ALRBIE                 EQU		RTC_CR_ALRBIE_Msk                        
RTC_CR_ALRAIE_Pos             EQU		12                                    
RTC_CR_ALRAIE_Msk             EQU		0x1 << RTC_CR_ALRAIE_Pos                 ;/*!< 0x00001000 */
RTC_CR_ALRAIE                 EQU		RTC_CR_ALRAIE_Msk                        
RTC_CR_TSE_Pos                EQU		11                                    
RTC_CR_TSE_Msk                EQU		0x1 << RTC_CR_TSE_Pos                    ;/*!< 0x00000800 */
RTC_CR_TSE                    EQU		RTC_CR_TSE_Msk                           
RTC_CR_WUTE_Pos               EQU		10                                    
RTC_CR_WUTE_Msk               EQU		0x1 << RTC_CR_WUTE_Pos                   ;/*!< 0x00000400 */
RTC_CR_WUTE                   EQU		RTC_CR_WUTE_Msk                          
RTC_CR_ALRBE_Pos              EQU		9                                     
RTC_CR_ALRBE_Msk              EQU		0x1 << RTC_CR_ALRBE_Pos                  ;/*!< 0x00000200 */
RTC_CR_ALRBE                  EQU		RTC_CR_ALRBE_Msk                         
RTC_CR_ALRAE_Pos              EQU		8                                     
RTC_CR_ALRAE_Msk              EQU		0x1 << RTC_CR_ALRAE_Pos                  ;/*!< 0x00000100 */
RTC_CR_ALRAE                  EQU		RTC_CR_ALRAE_Msk                         
RTC_CR_DCE_Pos                EQU		7                                     
RTC_CR_DCE_Msk                EQU		0x1 << RTC_CR_DCE_Pos                    ;/*!< 0x00000080 */
RTC_CR_DCE                    EQU		RTC_CR_DCE_Msk                           
RTC_CR_FMT_Pos                EQU		6                                     
RTC_CR_FMT_Msk                EQU		0x1 << RTC_CR_FMT_Pos                    ;/*!< 0x00000040 */
RTC_CR_FMT                    EQU		RTC_CR_FMT_Msk                           
RTC_CR_BYPSHAD_Pos            EQU		5                                     
RTC_CR_BYPSHAD_Msk            EQU		0x1 << RTC_CR_BYPSHAD_Pos                ;/*!< 0x00000020 */
RTC_CR_BYPSHAD                EQU		RTC_CR_BYPSHAD_Msk                       
RTC_CR_REFCKON_Pos            EQU		4                                     
RTC_CR_REFCKON_Msk            EQU		0x1 << RTC_CR_REFCKON_Pos                ;/*!< 0x00000010 */
RTC_CR_REFCKON                EQU		RTC_CR_REFCKON_Msk                       
RTC_CR_TSEDGE_Pos             EQU		3                                     
RTC_CR_TSEDGE_Msk             EQU		0x1 << RTC_CR_TSEDGE_Pos                 ;/*!< 0x00000008 */
RTC_CR_TSEDGE                 EQU		RTC_CR_TSEDGE_Msk                        
RTC_CR_WUCKSEL_Pos            EQU		0                                     
RTC_CR_WUCKSEL_Msk            EQU		0x7 << RTC_CR_WUCKSEL_Pos                ;/*!< 0x00000007 */
RTC_CR_WUCKSEL                EQU		RTC_CR_WUCKSEL_Msk                       
RTC_CR_WUCKSEL_0              EQU		0x1 << RTC_CR_WUCKSEL_Pos                ;/*!< 0x00000001 */
RTC_CR_WUCKSEL_1              EQU		0x2 << RTC_CR_WUCKSEL_Pos                ;/*!< 0x00000002 */
RTC_CR_WUCKSEL_2              EQU		0x4 << RTC_CR_WUCKSEL_Pos                ;/*!< 0x00000004 */

;/* Legacy defines */
RTC_CR_BCK                    EQU		RTC_CR_BKP

RTC_ISR				          EQU		0x0C
;/********************  Bits definition for RTC_ISR register  ******************/
RTC_ISR_RECALPF_Pos           EQU		16                                    
RTC_ISR_RECALPF_Msk           EQU		0x1 << RTC_ISR_RECALPF_Pos               ;/*!< 0x00010000 */
RTC_ISR_RECALPF               EQU		RTC_ISR_RECALPF_Msk                      
RTC_ISR_TAMP1F_Pos            EQU		13                                    
RTC_ISR_TAMP1F_Msk            EQU		0x1 << RTC_ISR_TAMP1F_Pos                ;/*!< 0x00002000 */
RTC_ISR_TAMP1F                EQU		RTC_ISR_TAMP1F_Msk                       
RTC_ISR_TAMP2F_Pos            EQU		14                                    
RTC_ISR_TAMP2F_Msk            EQU		0x1 << RTC_ISR_TAMP2F_Pos                ;/*!< 0x00004000 */
RTC_ISR_TAMP2F                EQU		RTC_ISR_TAMP2F_Msk                       
RTC_ISR_TSOVF_Pos             EQU		12                                    
RTC_ISR_TSOVF_Msk             EQU		0x1 << RTC_ISR_TSOVF_Pos                 ;/*!< 0x00001000 */
RTC_ISR_TSOVF                 EQU		RTC_ISR_TSOVF_Msk                        
RTC_ISR_TSF_Pos               EQU		11                                    
RTC_ISR_TSF_Msk               EQU		0x1 << RTC_ISR_TSF_Pos                   ;/*!< 0x00000800 */
RTC_ISR_TSF                   EQU		RTC_ISR_TSF_Msk                          
RTC_ISR_WUTF_Pos              EQU		10                                    
RTC_ISR_WUTF_Msk              EQU		0x1 << RTC_ISR_WUTF_Pos                  ;/*!< 0x00000400 */
RTC_ISR_WUTF                  EQU		RTC_ISR_WUTF_Msk                         
RTC_ISR_ALRBF_Pos             EQU		9                                     
RTC_ISR_ALRBF_Msk             EQU		0x1 << RTC_ISR_ALRBF_Pos                 ;/*!< 0x00000200 */
RTC_ISR_ALRBF                 EQU		RTC_ISR_ALRBF_Msk                        
RTC_ISR_ALRAF_Pos             EQU		8                                     
RTC_ISR_ALRAF_Msk             EQU		0x1 << RTC_ISR_ALRAF_Pos                 ;/*!< 0x00000100 */
RTC_ISR_ALRAF                 EQU		RTC_ISR_ALRAF_Msk                        
RTC_ISR_INIT_Pos              EQU		7                                     
RTC_ISR_INIT_Msk              EQU		0x1 << RTC_ISR_INIT_Pos                  ;/*!< 0x00000080 */
RTC_ISR_INIT                  EQU		RTC_ISR_INIT_Msk                         
RTC_ISR_INITF_Pos             EQU		6                                     
RTC_ISR_INITF_Msk             EQU		0x1 << RTC_ISR_INITF_Pos                 ;/*!< 0x00000040 */
RTC_ISR_INITF                 EQU		RTC_ISR_INITF_Msk                        
RTC_ISR_RSF_Pos               EQU		5                                     
RTC_ISR_RSF_Msk               EQU		0x1 << RTC_ISR_RSF_Pos                   ;/*!< 0x00000020 */
RTC_ISR_RSF                   EQU		RTC_ISR_RSF_Msk                          
RTC_ISR_INITS_Pos             EQU		4                                     
RTC_ISR_INITS_Msk             EQU		0x1 << RTC_ISR_INITS_Pos                 ;/*!< 0x00000010 */
RTC_ISR_INITS                 EQU		RTC_ISR_INITS_Msk                        
RTC_ISR_SHPF_Pos              EQU		3                                     
RTC_ISR_SHPF_Msk              EQU		0x1 << RTC_ISR_SHPF_Pos                  ;/*!< 0x00000008 */
RTC_ISR_SHPF                  EQU		RTC_ISR_SHPF_Msk                         
RTC_ISR_WUTWF_Pos             EQU		2                                     
RTC_ISR_WUTWF_Msk             EQU		0x1 << RTC_ISR_WUTWF_Pos                 ;/*!< 0x00000004 */
RTC_ISR_WUTWF                 EQU		RTC_ISR_WUTWF_Msk                        
RTC_ISR_ALRBWF_Pos            EQU		1                                     
RTC_ISR_ALRBWF_Msk            EQU		0x1 << RTC_ISR_ALRBWF_Pos                ;/*!< 0x00000002 */
RTC_ISR_ALRBWF                EQU		RTC_ISR_ALRBWF_Msk                       
RTC_ISR_ALRAWF_Pos            EQU		0                                     
RTC_ISR_ALRAWF_Msk            EQU		0x1 << RTC_ISR_ALRAWF_Pos                ;/*!< 0x00000001 */
RTC_ISR_ALRAWF                EQU		RTC_ISR_ALRAWF_Msk                       

RTC_PRER			          EQU		0x10
;/********************  Bits definition for RTC_PRER register  *****************/
RTC_PRER_PREDIV_A_Pos         EQU		16                                    
RTC_PRER_PREDIV_A_Msk         EQU		0x7F << RTC_PRER_PREDIV_A_Pos            ;/*!< 0x007F0000 */
RTC_PRER_PREDIV_A             EQU		RTC_PRER_PREDIV_A_Msk                    
RTC_PRER_PREDIV_S_Pos         EQU		0                                     
RTC_PRER_PREDIV_S_Msk         EQU		0x7FFF << RTC_PRER_PREDIV_S_Pos          ;/*!< 0x00007FFF */
RTC_PRER_PREDIV_S             EQU		RTC_PRER_PREDIV_S_Msk                    

RTC_WUTR			          EQU		0x14
;/********************  Bits definition for RTC_WUTR register  *****************/
RTC_WUTR_WUT_Pos              EQU		0                                     
RTC_WUTR_WUT_Msk              EQU		0xFFFF << RTC_WUTR_WUT_Pos               ;/*!< 0x0000FFFF */
RTC_WUTR_WUT                  EQU		RTC_WUTR_WUT_Msk                         

RTC_CALIBR			          EQU		0x18
;/********************  Bits definition for RTC_CALIBR register  ***************/
RTC_CALIBR_DCS_Pos            EQU		7                                     
RTC_CALIBR_DCS_Msk            EQU		0x1 << RTC_CALIBR_DCS_Pos                ;/*!< 0x00000080 */
RTC_CALIBR_DCS                EQU		RTC_CALIBR_DCS_Msk                       
RTC_CALIBR_DC_Pos             EQU		0                                     
RTC_CALIBR_DC_Msk             EQU		0x1F << RTC_CALIBR_DC_Pos                ;/*!< 0x0000001F */
RTC_CALIBR_DC                 EQU		RTC_CALIBR_DC_Msk                        

RTC_ALRMAR			          EQU		0x1C
;/********************  Bits definition for RTC_ALRMAR register  ***************/
RTC_ALRMAR_MSK4_Pos           EQU		31                                    
RTC_ALRMAR_MSK4_Msk           EQU		0x1 << RTC_ALRMAR_MSK4_Pos               ;/*!< 0x80000000 */
RTC_ALRMAR_MSK4               EQU		RTC_ALRMAR_MSK4_Msk                      
RTC_ALRMAR_WDSEL_Pos          EQU		30                                    
RTC_ALRMAR_WDSEL_Msk          EQU		0x1 << RTC_ALRMAR_WDSEL_Pos              ;/*!< 0x40000000 */
RTC_ALRMAR_WDSEL              EQU		RTC_ALRMAR_WDSEL_Msk                     
RTC_ALRMAR_DT_Pos             EQU		28                                    
RTC_ALRMAR_DT_Msk             EQU		0x3 << RTC_ALRMAR_DT_Pos                 ;/*!< 0x30000000 */
RTC_ALRMAR_DT                 EQU		RTC_ALRMAR_DT_Msk                        
RTC_ALRMAR_DT_0               EQU		0x1 << RTC_ALRMAR_DT_Pos                 ;/*!< 0x10000000 */
RTC_ALRMAR_DT_1               EQU		0x2 << RTC_ALRMAR_DT_Pos                 ;/*!< 0x20000000 */
RTC_ALRMAR_DU_Pos             EQU		24                                    
RTC_ALRMAR_DU_Msk             EQU		0xF << RTC_ALRMAR_DU_Pos                 ;/*!< 0x0F000000 */
RTC_ALRMAR_DU                 EQU		RTC_ALRMAR_DU_Msk                        
RTC_ALRMAR_DU_0               EQU		0x1 << RTC_ALRMAR_DU_Pos                 ;/*!< 0x01000000 */
RTC_ALRMAR_DU_1               EQU		0x2 << RTC_ALRMAR_DU_Pos                 ;/*!< 0x02000000 */
RTC_ALRMAR_DU_2               EQU		0x4 << RTC_ALRMAR_DU_Pos                 ;/*!< 0x04000000 */
RTC_ALRMAR_DU_3               EQU		0x8 << RTC_ALRMAR_DU_Pos                 ;/*!< 0x08000000 */
RTC_ALRMAR_MSK3_Pos           EQU		23                                    
RTC_ALRMAR_MSK3_Msk           EQU		0x1 << RTC_ALRMAR_MSK3_Pos               ;/*!< 0x00800000 */
RTC_ALRMAR_MSK3               EQU		RTC_ALRMAR_MSK3_Msk                      
RTC_ALRMAR_PM_Pos             EQU		22                                    
RTC_ALRMAR_PM_Msk             EQU		0x1 << RTC_ALRMAR_PM_Pos                 ;/*!< 0x00400000 */
RTC_ALRMAR_PM                 EQU		RTC_ALRMAR_PM_Msk                        
RTC_ALRMAR_HT_Pos             EQU		20                                    
RTC_ALRMAR_HT_Msk             EQU		0x3 << RTC_ALRMAR_HT_Pos                 ;/*!< 0x00300000 */
RTC_ALRMAR_HT                 EQU		RTC_ALRMAR_HT_Msk                        
RTC_ALRMAR_HT_0               EQU		0x1 << RTC_ALRMAR_HT_Pos                 ;/*!< 0x00100000 */
RTC_ALRMAR_HT_1               EQU		0x2 << RTC_ALRMAR_HT_Pos                 ;/*!< 0x00200000 */
RTC_ALRMAR_HU_Pos             EQU		16                                    
RTC_ALRMAR_HU_Msk             EQU		0xF << RTC_ALRMAR_HU_Pos                 ;/*!< 0x000F0000 */
RTC_ALRMAR_HU                 EQU		RTC_ALRMAR_HU_Msk                        
RTC_ALRMAR_HU_0               EQU		0x1 << RTC_ALRMAR_HU_Pos                 ;/*!< 0x00010000 */
RTC_ALRMAR_HU_1               EQU		0x2 << RTC_ALRMAR_HU_Pos                 ;/*!< 0x00020000 */
RTC_ALRMAR_HU_2               EQU		0x4 << RTC_ALRMAR_HU_Pos                 ;/*!< 0x00040000 */
RTC_ALRMAR_HU_3               EQU		0x8 << RTC_ALRMAR_HU_Pos                 ;/*!< 0x00080000 */
RTC_ALRMAR_MSK2_Pos           EQU		15                                    
RTC_ALRMAR_MSK2_Msk           EQU		0x1 << RTC_ALRMAR_MSK2_Pos               ;/*!< 0x00008000 */
RTC_ALRMAR_MSK2               EQU		RTC_ALRMAR_MSK2_Msk                      
RTC_ALRMAR_MNT_Pos            EQU		12                                    
RTC_ALRMAR_MNT_Msk            EQU		0x7 << RTC_ALRMAR_MNT_Pos                ;/*!< 0x00007000 */
RTC_ALRMAR_MNT                EQU		RTC_ALRMAR_MNT_Msk                       
RTC_ALRMAR_MNT_0              EQU		0x1 << RTC_ALRMAR_MNT_Pos                ;/*!< 0x00001000 */
RTC_ALRMAR_MNT_1              EQU		0x2 << RTC_ALRMAR_MNT_Pos                ;/*!< 0x00002000 */
RTC_ALRMAR_MNT_2              EQU		0x4 << RTC_ALRMAR_MNT_Pos                ;/*!< 0x00004000 */
RTC_ALRMAR_MNU_Pos            EQU		8                                     
RTC_ALRMAR_MNU_Msk            EQU		0xF << RTC_ALRMAR_MNU_Pos                ;/*!< 0x00000F00 */
RTC_ALRMAR_MNU                EQU		RTC_ALRMAR_MNU_Msk                       
RTC_ALRMAR_MNU_0              EQU		0x1 << RTC_ALRMAR_MNU_Pos                ;/*!< 0x00000100 */
RTC_ALRMAR_MNU_1              EQU		0x2 << RTC_ALRMAR_MNU_Pos                ;/*!< 0x00000200 */
RTC_ALRMAR_MNU_2              EQU		0x4 << RTC_ALRMAR_MNU_Pos                ;/*!< 0x00000400 */
RTC_ALRMAR_MNU_3              EQU		0x8 << RTC_ALRMAR_MNU_Pos                ;/*!< 0x00000800 */
RTC_ALRMAR_MSK1_Pos           EQU		7                                     
RTC_ALRMAR_MSK1_Msk           EQU		0x1 << RTC_ALRMAR_MSK1_Pos               ;/*!< 0x00000080 */
RTC_ALRMAR_MSK1               EQU		RTC_ALRMAR_MSK1_Msk                      
RTC_ALRMAR_ST_Pos             EQU		4                                     
RTC_ALRMAR_ST_Msk             EQU		0x7 << RTC_ALRMAR_ST_Pos                 ;/*!< 0x00000070 */
RTC_ALRMAR_ST                 EQU		RTC_ALRMAR_ST_Msk                        
RTC_ALRMAR_ST_0               EQU		0x1 << RTC_ALRMAR_ST_Pos                 ;/*!< 0x00000010 */
RTC_ALRMAR_ST_1               EQU		0x2 << RTC_ALRMAR_ST_Pos                 ;/*!< 0x00000020 */
RTC_ALRMAR_ST_2               EQU		0x4 << RTC_ALRMAR_ST_Pos                 ;/*!< 0x00000040 */
RTC_ALRMAR_SU_Pos             EQU		0                                     
RTC_ALRMAR_SU_Msk             EQU		0xF << RTC_ALRMAR_SU_Pos                 ;/*!< 0x0000000F */
RTC_ALRMAR_SU                 EQU		RTC_ALRMAR_SU_Msk                        
RTC_ALRMAR_SU_0               EQU		0x1 << RTC_ALRMAR_SU_Pos                 ;/*!< 0x00000001 */
RTC_ALRMAR_SU_1               EQU		0x2 << RTC_ALRMAR_SU_Pos                 ;/*!< 0x00000002 */
RTC_ALRMAR_SU_2               EQU		0x4 << RTC_ALRMAR_SU_Pos                 ;/*!< 0x00000004 */
RTC_ALRMAR_SU_3               EQU		0x8 << RTC_ALRMAR_SU_Pos                 ;/*!< 0x00000008 */

RTC_ALRMBR			          EQU		0x20
;/********************  Bits definition for RTC_ALRMBR register  ***************/
RTC_ALRMBR_MSK4_Pos           EQU		31                                    
RTC_ALRMBR_MSK4_Msk           EQU		0x1 << RTC_ALRMBR_MSK4_Pos               ;/*!< 0x80000000 */
RTC_ALRMBR_MSK4               EQU		RTC_ALRMBR_MSK4_Msk                      
RTC_ALRMBR_WDSEL_Pos          EQU		30                                    
RTC_ALRMBR_WDSEL_Msk          EQU		0x1 << RTC_ALRMBR_WDSEL_Pos              ;/*!< 0x40000000 */
RTC_ALRMBR_WDSEL              EQU		RTC_ALRMBR_WDSEL_Msk                     
RTC_ALRMBR_DT_Pos             EQU		28                                    
RTC_ALRMBR_DT_Msk             EQU		0x3 << RTC_ALRMBR_DT_Pos                 ;/*!< 0x30000000 */
RTC_ALRMBR_DT                 EQU		RTC_ALRMBR_DT_Msk                        
RTC_ALRMBR_DT_0               EQU		0x1 << RTC_ALRMBR_DT_Pos                 ;/*!< 0x10000000 */
RTC_ALRMBR_DT_1               EQU		0x2 << RTC_ALRMBR_DT_Pos                 ;/*!< 0x20000000 */
RTC_ALRMBR_DU_Pos             EQU		24                                    
RTC_ALRMBR_DU_Msk             EQU		0xF << RTC_ALRMBR_DU_Pos                 ;/*!< 0x0F000000 */
RTC_ALRMBR_DU                 EQU		RTC_ALRMBR_DU_Msk                        
RTC_ALRMBR_DU_0               EQU		0x1 << RTC_ALRMBR_DU_Pos                 ;/*!< 0x01000000 */
RTC_ALRMBR_DU_1               EQU		0x2 << RTC_ALRMBR_DU_Pos                 ;/*!< 0x02000000 */
RTC_ALRMBR_DU_2               EQU		0x4 << RTC_ALRMBR_DU_Pos                 ;/*!< 0x04000000 */
RTC_ALRMBR_DU_3               EQU		0x8 << RTC_ALRMBR_DU_Pos                 ;/*!< 0x08000000 */
RTC_ALRMBR_MSK3_Pos           EQU		23                                    
RTC_ALRMBR_MSK3_Msk           EQU		0x1 << RTC_ALRMBR_MSK3_Pos               ;/*!< 0x00800000 */
RTC_ALRMBR_MSK3               EQU		RTC_ALRMBR_MSK3_Msk                      
RTC_ALRMBR_PM_Pos             EQU		22                                    
RTC_ALRMBR_PM_Msk             EQU		0x1 << RTC_ALRMBR_PM_Pos                 ;/*!< 0x00400000 */
RTC_ALRMBR_PM                 EQU		RTC_ALRMBR_PM_Msk                        
RTC_ALRMBR_HT_Pos             EQU		20                                    
RTC_ALRMBR_HT_Msk             EQU		0x3 << RTC_ALRMBR_HT_Pos                 ;/*!< 0x00300000 */
RTC_ALRMBR_HT                 EQU		RTC_ALRMBR_HT_Msk                        
RTC_ALRMBR_HT_0               EQU		0x1 << RTC_ALRMBR_HT_Pos                 ;/*!< 0x00100000 */
RTC_ALRMBR_HT_1               EQU		0x2 << RTC_ALRMBR_HT_Pos                 ;/*!< 0x00200000 */
RTC_ALRMBR_HU_Pos             EQU		16                                    
RTC_ALRMBR_HU_Msk             EQU		0xF << RTC_ALRMBR_HU_Pos                 ;/*!< 0x000F0000 */
RTC_ALRMBR_HU                 EQU		RTC_ALRMBR_HU_Msk                        
RTC_ALRMBR_HU_0               EQU		0x1 << RTC_ALRMBR_HU_Pos                 ;/*!< 0x00010000 */
RTC_ALRMBR_HU_1               EQU		0x2 << RTC_ALRMBR_HU_Pos                 ;/*!< 0x00020000 */
RTC_ALRMBR_HU_2               EQU		0x4 << RTC_ALRMBR_HU_Pos                 ;/*!< 0x00040000 */
RTC_ALRMBR_HU_3               EQU		0x8 << RTC_ALRMBR_HU_Pos                 ;/*!< 0x00080000 */
RTC_ALRMBR_MSK2_Pos           EQU		15                                    
RTC_ALRMBR_MSK2_Msk           EQU		0x1 << RTC_ALRMBR_MSK2_Pos               ;/*!< 0x00008000 */
RTC_ALRMBR_MSK2               EQU		RTC_ALRMBR_MSK2_Msk                      
RTC_ALRMBR_MNT_Pos            EQU		12                                    
RTC_ALRMBR_MNT_Msk            EQU		0x7 << RTC_ALRMBR_MNT_Pos                ;/*!< 0x00007000 */
RTC_ALRMBR_MNT                EQU		RTC_ALRMBR_MNT_Msk                       
RTC_ALRMBR_MNT_0              EQU		0x1 << RTC_ALRMBR_MNT_Pos                ;/*!< 0x00001000 */
RTC_ALRMBR_MNT_1              EQU		0x2 << RTC_ALRMBR_MNT_Pos                ;/*!< 0x00002000 */
RTC_ALRMBR_MNT_2              EQU		0x4 << RTC_ALRMBR_MNT_Pos                ;/*!< 0x00004000 */
RTC_ALRMBR_MNU_Pos            EQU		8                                     
RTC_ALRMBR_MNU_Msk            EQU		0xF << RTC_ALRMBR_MNU_Pos                ;/*!< 0x00000F00 */
RTC_ALRMBR_MNU                EQU		RTC_ALRMBR_MNU_Msk                       
RTC_ALRMBR_MNU_0              EQU		0x1 << RTC_ALRMBR_MNU_Pos                ;/*!< 0x00000100 */
RTC_ALRMBR_MNU_1              EQU		0x2 << RTC_ALRMBR_MNU_Pos                ;/*!< 0x00000200 */
RTC_ALRMBR_MNU_2              EQU		0x4 << RTC_ALRMBR_MNU_Pos                ;/*!< 0x00000400 */
RTC_ALRMBR_MNU_3              EQU		0x8 << RTC_ALRMBR_MNU_Pos                ;/*!< 0x00000800 */
RTC_ALRMBR_MSK1_Pos           EQU		7                                     
RTC_ALRMBR_MSK1_Msk           EQU		0x1 << RTC_ALRMBR_MSK1_Pos               ;/*!< 0x00000080 */
RTC_ALRMBR_MSK1               EQU		RTC_ALRMBR_MSK1_Msk                      
RTC_ALRMBR_ST_Pos             EQU		4                                     
RTC_ALRMBR_ST_Msk             EQU		0x7 << RTC_ALRMBR_ST_Pos                 ;/*!< 0x00000070 */
RTC_ALRMBR_ST                 EQU		RTC_ALRMBR_ST_Msk                        
RTC_ALRMBR_ST_0               EQU		0x1 << RTC_ALRMBR_ST_Pos                 ;/*!< 0x00000010 */
RTC_ALRMBR_ST_1               EQU		0x2 << RTC_ALRMBR_ST_Pos                 ;/*!< 0x00000020 */
RTC_ALRMBR_ST_2               EQU		0x4 << RTC_ALRMBR_ST_Pos                 ;/*!< 0x00000040 */
RTC_ALRMBR_SU_Pos             EQU		0                                     
RTC_ALRMBR_SU_Msk             EQU		0xF << RTC_ALRMBR_SU_Pos                 ;/*!< 0x0000000F */
RTC_ALRMBR_SU                 EQU		RTC_ALRMBR_SU_Msk                        
RTC_ALRMBR_SU_0               EQU		0x1 << RTC_ALRMBR_SU_Pos                 ;/*!< 0x00000001 */
RTC_ALRMBR_SU_1               EQU		0x2 << RTC_ALRMBR_SU_Pos                 ;/*!< 0x00000002 */
RTC_ALRMBR_SU_2               EQU		0x4 << RTC_ALRMBR_SU_Pos                 ;/*!< 0x00000004 */
RTC_ALRMBR_SU_3               EQU		0x8 << RTC_ALRMBR_SU_Pos                 ;/*!< 0x00000008 */

RTC_WPR			              EQU		0x24
;/********************  Bits definition for RTC_WPR register  ******************/
RTC_WPR_KEY_Pos               EQU		0                                     
RTC_WPR_KEY_Msk               EQU		0xFF << RTC_WPR_KEY_Pos                  ;/*!< 0x000000FF */
RTC_WPR_KEY                   EQU		RTC_WPR_KEY_Msk                          

RTC_SSR			              EQU		0x28
;/********************  Bits definition for RTC_SSR register  ******************/
RTC_SSR_SS_Pos                EQU		0                                     
RTC_SSR_SS_Msk                EQU		0xFFFF << RTC_SSR_SS_Pos                 ;/*!< 0x0000FFFF */
RTC_SSR_SS                    EQU		RTC_SSR_SS_Msk                           

RTC_SHIFTR			          EQU		0x2C
;/********************  Bits definition for RTC_SHIFTR register  ***************/
RTC_SHIFTR_SUBFS_Pos          EQU		0                                     
RTC_SHIFTR_SUBFS_Msk          EQU		0x7FFF << RTC_SHIFTR_SUBFS_Pos           ;/*!< 0x00007FFF */
RTC_SHIFTR_SUBFS              EQU		RTC_SHIFTR_SUBFS_Msk                     
RTC_SHIFTR_ADD1S_Pos          EQU		31                                    
RTC_SHIFTR_ADD1S_Msk          EQU		0x1 << RTC_SHIFTR_ADD1S_Pos              ;/*!< 0x80000000 */
RTC_SHIFTR_ADD1S              EQU		RTC_SHIFTR_ADD1S_Msk                     

RTC_TSTR			          EQU		0x30
;/********************  Bits definition for RTC_TSTR register  *****************/
RTC_TSTR_PM_Pos               EQU		22                                    
RTC_TSTR_PM_Msk               EQU		0x1 << RTC_TSTR_PM_Pos                   ;/*!< 0x00400000 */
RTC_TSTR_PM                   EQU		RTC_TSTR_PM_Msk                          
RTC_TSTR_HT_Pos               EQU		20                                    
RTC_TSTR_HT_Msk               EQU		0x3 << RTC_TSTR_HT_Pos                   ;/*!< 0x00300000 */
RTC_TSTR_HT                   EQU		RTC_TSTR_HT_Msk                          
RTC_TSTR_HT_0                 EQU		0x1 << RTC_TSTR_HT_Pos                   ;/*!< 0x00100000 */
RTC_TSTR_HT_1                 EQU		0x2 << RTC_TSTR_HT_Pos                   ;/*!< 0x00200000 */
RTC_TSTR_HU_Pos               EQU		16                                    
RTC_TSTR_HU_Msk               EQU		0xF << RTC_TSTR_HU_Pos                   ;/*!< 0x000F0000 */
RTC_TSTR_HU                   EQU		RTC_TSTR_HU_Msk                          
RTC_TSTR_HU_0                 EQU		0x1 << RTC_TSTR_HU_Pos                   ;/*!< 0x00010000 */
RTC_TSTR_HU_1                 EQU		0x2 << RTC_TSTR_HU_Pos                   ;/*!< 0x00020000 */
RTC_TSTR_HU_2                 EQU		0x4 << RTC_TSTR_HU_Pos                   ;/*!< 0x00040000 */
RTC_TSTR_HU_3                 EQU		0x8 << RTC_TSTR_HU_Pos                   ;/*!< 0x00080000 */
RTC_TSTR_MNT_Pos              EQU		12                                    
RTC_TSTR_MNT_Msk              EQU		0x7 << RTC_TSTR_MNT_Pos                  ;/*!< 0x00007000 */
RTC_TSTR_MNT                  EQU		RTC_TSTR_MNT_Msk                         
RTC_TSTR_MNT_0                EQU		0x1 << RTC_TSTR_MNT_Pos                  ;/*!< 0x00001000 */
RTC_TSTR_MNT_1                EQU		0x2 << RTC_TSTR_MNT_Pos                  ;/*!< 0x00002000 */
RTC_TSTR_MNT_2                EQU		0x4 << RTC_TSTR_MNT_Pos                  ;/*!< 0x00004000 */
RTC_TSTR_MNU_Pos              EQU		8                                     
RTC_TSTR_MNU_Msk              EQU		0xF << RTC_TSTR_MNU_Pos                  ;/*!< 0x00000F00 */
RTC_TSTR_MNU                  EQU		RTC_TSTR_MNU_Msk                         
RTC_TSTR_MNU_0                EQU		0x1 << RTC_TSTR_MNU_Pos                  ;/*!< 0x00000100 */
RTC_TSTR_MNU_1                EQU		0x2 << RTC_TSTR_MNU_Pos                  ;/*!< 0x00000200 */
RTC_TSTR_MNU_2                EQU		0x4 << RTC_TSTR_MNU_Pos                  ;/*!< 0x00000400 */
RTC_TSTR_MNU_3                EQU		0x8 << RTC_TSTR_MNU_Pos                  ;/*!< 0x00000800 */
RTC_TSTR_ST_Pos               EQU		4                                     
RTC_TSTR_ST_Msk               EQU		0x7 << RTC_TSTR_ST_Pos                   ;/*!< 0x00000070 */
RTC_TSTR_ST                   EQU		RTC_TSTR_ST_Msk                          
RTC_TSTR_ST_0                 EQU		0x1 << RTC_TSTR_ST_Pos                   ;/*!< 0x00000010 */
RTC_TSTR_ST_1                 EQU		0x2 << RTC_TSTR_ST_Pos                   ;/*!< 0x00000020 */
RTC_TSTR_ST_2                 EQU		0x4 << RTC_TSTR_ST_Pos                   ;/*!< 0x00000040 */
RTC_TSTR_SU_Pos               EQU		0                                     
RTC_TSTR_SU_Msk               EQU		0xF << RTC_TSTR_SU_Pos                   ;/*!< 0x0000000F */
RTC_TSTR_SU                   EQU		RTC_TSTR_SU_Msk                          
RTC_TSTR_SU_0                 EQU		0x1 << RTC_TSTR_SU_Pos                   ;/*!< 0x00000001 */
RTC_TSTR_SU_1                 EQU		0x2 << RTC_TSTR_SU_Pos                   ;/*!< 0x00000002 */
RTC_TSTR_SU_2                 EQU		0x4 << RTC_TSTR_SU_Pos                   ;/*!< 0x00000004 */
RTC_TSTR_SU_3                 EQU		0x8 << RTC_TSTR_SU_Pos                   ;/*!< 0x00000008 */

RTC_TSDR			          EQU		0x34
;/********************  Bits definition for RTC_TSDR register  *****************/
RTC_TSDR_WDU_Pos              EQU		13                                    
RTC_TSDR_WDU_Msk              EQU		0x7 << RTC_TSDR_WDU_Pos                  ;/*!< 0x0000E000 */
RTC_TSDR_WDU                  EQU		RTC_TSDR_WDU_Msk                         
RTC_TSDR_WDU_0                EQU		0x1 << RTC_TSDR_WDU_Pos                  ;/*!< 0x00002000 */
RTC_TSDR_WDU_1                EQU		0x2 << RTC_TSDR_WDU_Pos                  ;/*!< 0x00004000 */
RTC_TSDR_WDU_2                EQU		0x4 << RTC_TSDR_WDU_Pos                  ;/*!< 0x00008000 */
RTC_TSDR_MT_Pos               EQU		12                                    
RTC_TSDR_MT_Msk               EQU		0x1 << RTC_TSDR_MT_Pos                   ;/*!< 0x00001000 */
RTC_TSDR_MT                   EQU		RTC_TSDR_MT_Msk                          
RTC_TSDR_MU_Pos               EQU		8                                     
RTC_TSDR_MU_Msk               EQU		0xF << RTC_TSDR_MU_Pos                   ;/*!< 0x00000F00 */
RTC_TSDR_MU                   EQU		RTC_TSDR_MU_Msk                          
RTC_TSDR_MU_0                 EQU		0x1 << RTC_TSDR_MU_Pos                   ;/*!< 0x00000100 */
RTC_TSDR_MU_1                 EQU		0x2 << RTC_TSDR_MU_Pos                   ;/*!< 0x00000200 */
RTC_TSDR_MU_2                 EQU		0x4 << RTC_TSDR_MU_Pos                   ;/*!< 0x00000400 */
RTC_TSDR_MU_3                 EQU		0x8 << RTC_TSDR_MU_Pos                   ;/*!< 0x00000800 */
RTC_TSDR_DT_Pos               EQU		4                                     
RTC_TSDR_DT_Msk               EQU		0x3 << RTC_TSDR_DT_Pos                   ;/*!< 0x00000030 */
RTC_TSDR_DT                   EQU		RTC_TSDR_DT_Msk                          
RTC_TSDR_DT_0                 EQU		0x1 << RTC_TSDR_DT_Pos                   ;/*!< 0x00000010 */
RTC_TSDR_DT_1                 EQU		0x2 << RTC_TSDR_DT_Pos                   ;/*!< 0x00000020 */
RTC_TSDR_DU_Pos               EQU		0                                     
RTC_TSDR_DU_Msk               EQU		0xF << RTC_TSDR_DU_Pos                   ;/*!< 0x0000000F */
RTC_TSDR_DU                   EQU		RTC_TSDR_DU_Msk                          
RTC_TSDR_DU_0                 EQU		0x1 << RTC_TSDR_DU_Pos                   ;/*!< 0x00000001 */
RTC_TSDR_DU_1                 EQU		0x2 << RTC_TSDR_DU_Pos                   ;/*!< 0x00000002 */
RTC_TSDR_DU_2                 EQU		0x4 << RTC_TSDR_DU_Pos                   ;/*!< 0x00000004 */
RTC_TSDR_DU_3                 EQU		0x8 << RTC_TSDR_DU_Pos                   ;/*!< 0x00000008 */

RTC_TSSSR		              EQU		0x38
;/********************  Bits definition for RTC_TSSSR register  ****************/
RTC_TSSSR_SS_Pos              EQU		0                                     
RTC_TSSSR_SS_Msk              EQU		0xFFFF << RTC_TSSSR_SS_Pos               ;/*!< 0x0000FFFF */
RTC_TSSSR_SS                  EQU		RTC_TSSSR_SS_Msk                         

RTC_CALR			          EQU		0x3C
;/********************  Bits definition for RTC_CAL register  *****************/
RTC_CALR_CALP_Pos             EQU		15                                    
RTC_CALR_CALP_Msk             EQU		0x1 << RTC_CALR_CALP_Pos                 ;/*!< 0x00008000 */
RTC_CALR_CALP                 EQU		RTC_CALR_CALP_Msk                        
RTC_CALR_CALW8_Pos            EQU		14                                    
RTC_CALR_CALW8_Msk            EQU		0x1 << RTC_CALR_CALW8_Pos                ;/*!< 0x00004000 */
RTC_CALR_CALW8                EQU		RTC_CALR_CALW8_Msk                       
RTC_CALR_CALW16_Pos           EQU		13                                    
RTC_CALR_CALW16_Msk           EQU		0x1 << RTC_CALR_CALW16_Pos               ;/*!< 0x00002000 */
RTC_CALR_CALW16               EQU		RTC_CALR_CALW16_Msk                      
RTC_CALR_CALM_Pos             EQU		0                                     
RTC_CALR_CALM_Msk             EQU		0x1FF << RTC_CALR_CALM_Pos               ;/*!< 0x000001FF */
RTC_CALR_CALM                 EQU		RTC_CALR_CALM_Msk                        
RTC_CALR_CALM_0               EQU		0x001 << RTC_CALR_CALM_Pos               ;/*!< 0x00000001 */
RTC_CALR_CALM_1               EQU		0x002 << RTC_CALR_CALM_Pos               ;/*!< 0x00000002 */
RTC_CALR_CALM_2               EQU		0x004 << RTC_CALR_CALM_Pos               ;/*!< 0x00000004 */
RTC_CALR_CALM_3               EQU		0x008 << RTC_CALR_CALM_Pos               ;/*!< 0x00000008 */
RTC_CALR_CALM_4               EQU		0x010 << RTC_CALR_CALM_Pos               ;/*!< 0x00000010 */
RTC_CALR_CALM_5               EQU		0x020 << RTC_CALR_CALM_Pos               ;/*!< 0x00000020 */
RTC_CALR_CALM_6               EQU		0x040 << RTC_CALR_CALM_Pos               ;/*!< 0x00000040 */
RTC_CALR_CALM_7               EQU		0x080 << RTC_CALR_CALM_Pos               ;/*!< 0x00000080 */
RTC_CALR_CALM_8               EQU		0x100 << RTC_CALR_CALM_Pos               ;/*!< 0x00000100 */

RTC_TAFCR					  EQU		0x40
;/********************  Bits definition for RTC_TAFCR register  ****************/
RTC_TAFCR_ALARMOUTTYPE_Pos    EQU		18                                    
RTC_TAFCR_ALARMOUTTYPE_Msk    EQU		0x1 << RTC_TAFCR_ALARMOUTTYPE_Pos        ;/*!< 0x00040000 */
RTC_TAFCR_ALARMOUTTYPE        EQU		RTC_TAFCR_ALARMOUTTYPE_Msk               
RTC_TAFCR_TSINSEL_Pos         EQU		17                                    
RTC_TAFCR_TSINSEL_Msk         EQU		0x1 << RTC_TAFCR_TSINSEL_Pos             ;/*!< 0x00020000 */
RTC_TAFCR_TSINSEL             EQU		RTC_TAFCR_TSINSEL_Msk                    
RTC_TAFCR_TAMP1INSEL_Pos      EQU		16                                    
RTC_TAFCR_TAMP1INSEL_Msk      EQU		0x1 << RTC_TAFCR_TAMP1INSEL_Pos           ;/*!< 0x00010000 */
RTC_TAFCR_TAMP1INSEL          EQU		RTC_TAFCR_TAMP1INSEL_Msk                  
RTC_TAFCR_TAMPPUDIS_Pos       EQU		15                                    
RTC_TAFCR_TAMPPUDIS_Msk       EQU		0x1 << RTC_TAFCR_TAMPPUDIS_Pos           ;/*!< 0x00008000 */
RTC_TAFCR_TAMPPUDIS           EQU		RTC_TAFCR_TAMPPUDIS_Msk                  
RTC_TAFCR_TAMPPRCH_Pos        EQU		13                                    
RTC_TAFCR_TAMPPRCH_Msk        EQU		0x3 << RTC_TAFCR_TAMPPRCH_Pos            ;/*!< 0x00006000 */
RTC_TAFCR_TAMPPRCH            EQU		RTC_TAFCR_TAMPPRCH_Msk                   
RTC_TAFCR_TAMPPRCH_0          EQU		0x1 << RTC_TAFCR_TAMPPRCH_Pos            ;/*!< 0x00002000 */
RTC_TAFCR_TAMPPRCH_1          EQU		0x2 << RTC_TAFCR_TAMPPRCH_Pos            ;/*!< 0x00004000 */
RTC_TAFCR_TAMPFLT_Pos         EQU		11                                    
RTC_TAFCR_TAMPFLT_Msk         EQU		0x3 << RTC_TAFCR_TAMPFLT_Pos             ;/*!< 0x00001800 */
RTC_TAFCR_TAMPFLT             EQU		RTC_TAFCR_TAMPFLT_Msk                    
RTC_TAFCR_TAMPFLT_0           EQU		0x1 << RTC_TAFCR_TAMPFLT_Pos             ;/*!< 0x00000800 */
RTC_TAFCR_TAMPFLT_1           EQU		0x2 << RTC_TAFCR_TAMPFLT_Pos             ;/*!< 0x00001000 */
RTC_TAFCR_TAMPFREQ_Pos        EQU		8                                     
RTC_TAFCR_TAMPFREQ_Msk        EQU		0x7 << RTC_TAFCR_TAMPFREQ_Pos            ;/*!< 0x00000700 */
RTC_TAFCR_TAMPFREQ            EQU		RTC_TAFCR_TAMPFREQ_Msk                   
RTC_TAFCR_TAMPFREQ_0          EQU		0x1 << RTC_TAFCR_TAMPFREQ_Pos            ;/*!< 0x00000100 */
RTC_TAFCR_TAMPFREQ_1          EQU		0x2 << RTC_TAFCR_TAMPFREQ_Pos            ;/*!< 0x00000200 */
RTC_TAFCR_TAMPFREQ_2          EQU		0x4 << RTC_TAFCR_TAMPFREQ_Pos            ;/*!< 0x00000400 */
RTC_TAFCR_TAMPTS_Pos          EQU		7                                     
RTC_TAFCR_TAMPTS_Msk          EQU		0x1 << RTC_TAFCR_TAMPTS_Pos              ;/*!< 0x00000080 */
RTC_TAFCR_TAMPTS              EQU		RTC_TAFCR_TAMPTS_Msk                     
RTC_TAFCR_TAMP2TRG_Pos        EQU		4                                     
RTC_TAFCR_TAMP2TRG_Msk        EQU		0x1 << RTC_TAFCR_TAMP2TRG_Pos            ;/*!< 0x00000010 */
RTC_TAFCR_TAMP2TRG            EQU		RTC_TAFCR_TAMP2TRG_Msk                   
RTC_TAFCR_TAMP2E_Pos          EQU		3                                     
RTC_TAFCR_TAMP2E_Msk          EQU		0x1 << RTC_TAFCR_TAMP2E_Pos              ;/*!< 0x00000008 */
RTC_TAFCR_TAMP2E              EQU		RTC_TAFCR_TAMP2E_Msk                     
RTC_TAFCR_TAMPIE_Pos          EQU		2                                     
RTC_TAFCR_TAMPIE_Msk          EQU		0x1 << RTC_TAFCR_TAMPIE_Pos              ;/*!< 0x00000004 */
RTC_TAFCR_TAMPIE              EQU		RTC_TAFCR_TAMPIE_Msk                     
RTC_TAFCR_TAMP1TRG_Pos        EQU		1                                     
RTC_TAFCR_TAMP1TRG_Msk        EQU		0x1 << RTC_TAFCR_TAMP1TRG_Pos            ;/*!< 0x00000002 */
RTC_TAFCR_TAMP1TRG            EQU		RTC_TAFCR_TAMP1TRG_Msk                   
RTC_TAFCR_TAMP1E_Pos          EQU		0                                     
RTC_TAFCR_TAMP1E_Msk          EQU		0x1 << RTC_TAFCR_TAMP1E_Pos              ;/*!< 0x00000001 */
RTC_TAFCR_TAMP1E              EQU		RTC_TAFCR_TAMP1E_Msk                     

;/* Legacy defines */
RTC_TAFCR_TAMPINSEL           EQU		RTC_TAFCR_TAMP1INSEL

RTC_ALRMASSR			      EQU		0x44
;/********************  Bits definition for RTC_ALRMASSR register  *************/
RTC_ALRMASSR_MASKSS_Pos       EQU		24                                    
RTC_ALRMASSR_MASKSS_Msk       EQU		0xF << RTC_ALRMASSR_MASKSS_Pos           ;/*!< 0x0F000000 */
RTC_ALRMASSR_MASKSS           EQU		RTC_ALRMASSR_MASKSS_Msk                  
RTC_ALRMASSR_MASKSS_0         EQU		0x1 << RTC_ALRMASSR_MASKSS_Pos           ;/*!< 0x01000000 */
RTC_ALRMASSR_MASKSS_1         EQU		0x2 << RTC_ALRMASSR_MASKSS_Pos           ;/*!< 0x02000000 */
RTC_ALRMASSR_MASKSS_2         EQU		0x4 << RTC_ALRMASSR_MASKSS_Pos           ;/*!< 0x04000000 */
RTC_ALRMASSR_MASKSS_3         EQU		0x8 << RTC_ALRMASSR_MASKSS_Pos           ;/*!< 0x08000000 */
RTC_ALRMASSR_SS_Pos           EQU		0                                     
RTC_ALRMASSR_SS_Msk           EQU		0x7FFF << RTC_ALRMASSR_SS_Pos            ;/*!< 0x00007FFF */
RTC_ALRMASSR_SS               EQU		RTC_ALRMASSR_SS_Msk                      

RTC_ALRMBSSR			      EQU		0x48
;/********************  Bits definition for RTC_ALRMBSSR register  *************/
RTC_ALRMBSSR_MASKSS_Pos       EQU		24                                    
RTC_ALRMBSSR_MASKSS_Msk       EQU		0xF << RTC_ALRMBSSR_MASKSS_Pos           ;/*!< 0x0F000000 */
RTC_ALRMBSSR_MASKSS           EQU		RTC_ALRMBSSR_MASKSS_Msk                  
RTC_ALRMBSSR_MASKSS_0         EQU		0x1 << RTC_ALRMBSSR_MASKSS_Pos           ;/*!< 0x01000000 */
RTC_ALRMBSSR_MASKSS_1         EQU		0x2 << RTC_ALRMBSSR_MASKSS_Pos           ;/*!< 0x02000000 */
RTC_ALRMBSSR_MASKSS_2         EQU		0x4 << RTC_ALRMBSSR_MASKSS_Pos           ;/*!< 0x04000000 */
RTC_ALRMBSSR_MASKSS_3         EQU		0x8 << RTC_ALRMBSSR_MASKSS_Pos           ;/*!< 0x08000000 */
RTC_ALRMBSSR_SS_Pos           EQU		0                                     
RTC_ALRMBSSR_SS_Msk           EQU		0x7FFF << RTC_ALRMBSSR_SS_Pos            ;/*!< 0x00007FFF */
RTC_ALRMBSSR_SS               EQU		RTC_ALRMBSSR_SS_Msk                      

RTC_BKP0R_Addr	              EQU		0x50
;/********************  Bits definition for RTC_BKP0R register  ****************/
RTC_BKP0R_Pos                 EQU		0                                     
RTC_BKP0R_Msk                 EQU		0xFFFFFFFF << RTC_BKP0R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP0R                     EQU		RTC_BKP0R_Msk                            

RTC_BKP1R_Addr	              EQU		0x54
;/********************  Bits definition for RTC_BKP1R register  ****************/
RTC_BKP1R_Pos                 EQU		0                                     
RTC_BKP1R_Msk                 EQU		0xFFFFFFFF << RTC_BKP1R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP1R                     EQU		RTC_BKP1R_Msk                            

RTC_BKP2R_Addr	              EQU		0x58
;/********************  Bits definition for RTC_BKP2R register  ****************/
RTC_BKP2R_Pos                 EQU		0                                     
RTC_BKP2R_Msk                 EQU		0xFFFFFFFF << RTC_BKP2R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP2R                     EQU		RTC_BKP2R_Msk                            

RTC_BKP3R_Addr	              EQU		0x5C
;/********************  Bits definition for RTC_BKP3R register  ****************/
RTC_BKP3R_Pos                 EQU		0                                     
RTC_BKP3R_Msk                 EQU		0xFFFFFFFF << RTC_BKP3R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP3R                     EQU		RTC_BKP3R_Msk                            

RTC_BKP4R_Addr	              EQU		0x60
;/********************  Bits definition for RTC_BKP4R register  ****************/
RTC_BKP4R_Pos                 EQU		0                                     
RTC_BKP4R_Msk                 EQU		0xFFFFFFFF << RTC_BKP4R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP4R                     EQU		RTC_BKP4R_Msk                            

RTC_BKP5R_Addr	              EQU		0x64
;/********************  Bits definition for RTC_BKP5R register  ****************/
RTC_BKP5R_Pos                 EQU		0                                     
RTC_BKP5R_Msk                 EQU		0xFFFFFFFF << RTC_BKP5R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP5R                     EQU		RTC_BKP5R_Msk                            

RTC_BKP6R_Addr	              EQU		0x68
;/********************  Bits definition for RTC_BKP6R register  ****************/
RTC_BKP6R_Pos                 EQU		0                                     
RTC_BKP6R_Msk                 EQU		0xFFFFFFFF << RTC_BKP6R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP6R                     EQU		RTC_BKP6R_Msk                            

RTC_BKP7R_Addr	              EQU		0x6C
;/********************  Bits definition for RTC_BKP7R register  ****************/
RTC_BKP7R_Pos                 EQU		0                                     
RTC_BKP7R_Msk                 EQU		0xFFFFFFFF << RTC_BKP7R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP7R                     EQU		RTC_BKP7R_Msk                            

RTC_BKP8R_Addr	              EQU		0x70
;/********************  Bits definition for RTC_BKP8R register  ****************/
RTC_BKP8R_Pos                 EQU		0                                     
RTC_BKP8R_Msk                 EQU		0xFFFFFFFF << RTC_BKP8R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP8R                     EQU		RTC_BKP8R_Msk                            

RTC_BKP9R_Addr	              EQU		0x74
;/********************  Bits definition for RTC_BKP9R register  ****************/
RTC_BKP9R_Pos                 EQU		0                                     
RTC_BKP9R_Msk                 EQU		0xFFFFFFFF << RTC_BKP9R_Pos              ;/*!< 0xFFFFFFFF */
RTC_BKP9R                     EQU		RTC_BKP9R_Msk                            

RTC_BKP10R_Addr	              EQU		0x78
;/********************  Bits definition for RTC_BKP10R register  ***************/
RTC_BKP10R_Pos                EQU		0                                     
RTC_BKP10R_Msk                EQU		0xFFFFFFFF << RTC_BKP10R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP10R                    EQU		RTC_BKP10R_Msk                           

RTC_BKP11R_Addr	              EQU		0x7C
;/********************  Bits definition for RTC_BKP11R register  ***************/
RTC_BKP11R_Pos                EQU		0                                     
RTC_BKP11R_Msk                EQU		0xFFFFFFFF << RTC_BKP11R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP11R                    EQU		RTC_BKP11R_Msk                           

RTC_BKP12R_Addr	              EQU		0x80
;/********************  Bits definition for RTC_BKP12R register  ***************/
RTC_BKP12R_Pos                EQU		0                                     
RTC_BKP12R_Msk                EQU		0xFFFFFFFF << RTC_BKP12R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP12R                    EQU		RTC_BKP12R_Msk                           

RTC_BKP13R_Addr	              EQU		0x84
;/********************  Bits definition for RTC_BKP13R register  ***************/
RTC_BKP13R_Pos                EQU		0                                     
RTC_BKP13R_Msk                EQU		0xFFFFFFFF << RTC_BKP13R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP13R                    EQU		RTC_BKP13R_Msk                           

RTC_BKP14R_Addr	              EQU		0x88
;/********************  Bits definition for RTC_BKP14R register  ***************/
RTC_BKP14R_Pos                EQU		0                                     
RTC_BKP14R_Msk                EQU		0xFFFFFFFF << RTC_BKP14R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP14R                    EQU		RTC_BKP14R_Msk                           

RTC_BKP15R_Addr	              EQU		0x8C
;/********************  Bits definition for RTC_BKP15R register  ***************/
RTC_BKP15R_Pos                EQU		0                                     
RTC_BKP15R_Msk                EQU		0xFFFFFFFF << RTC_BKP15R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP15R                    EQU		RTC_BKP15R_Msk                           

RTC_BKP16R_Addr	              EQU		0x90
;/********************  Bits definition for RTC_BKP16R register  ***************/
RTC_BKP16R_Pos                EQU		0                                     
RTC_BKP16R_Msk                EQU		0xFFFFFFFF << RTC_BKP16R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP16R                    EQU		RTC_BKP16R_Msk                           

RTC_BKP17R_Addr	              EQU		0x94
;/********************  Bits definition for RTC_BKP17R register  ***************/
RTC_BKP17R_Pos                EQU		0                                     
RTC_BKP17R_Msk                EQU		0xFFFFFFFF << RTC_BKP17R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP17R                    EQU		RTC_BKP17R_Msk                           

RTC_BKP18R_Addr	              EQU		0x98
;/********************  Bits definition for RTC_BKP18R register  ***************/
RTC_BKP18R_Pos                EQU		0                                     
RTC_BKP18R_Msk                EQU		0xFFFFFFFF << RTC_BKP18R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP18R                    EQU		RTC_BKP18R_Msk                           

RTC_BKP19R_Addr	              EQU		0x9C
;/********************  Bits definition for RTC_BKP19R register  ***************/
RTC_BKP19R_Pos                EQU		0                                     
RTC_BKP19R_Msk                EQU		0xFFFFFFFF << RTC_BKP19R_Pos             ;/*!< 0xFFFFFFFF */
RTC_BKP19R                    EQU		RTC_BKP19R_Msk                           

;/******************** Number of backup registers ******************************/
RTC_BKP_NUMBER                EQU		0x000000014

;/******************************************************************************/
;/*                                                                            */
;/*                          SD host Interface                                 */
;/*                                                                            */
;/******************************************************************************/

SDIO_POWER				       EQU		0x00
;/******************  Bit definition for SDIO_POWER register  ******************/
SDIO_POWER_PWRCTRL_Pos         EQU		0                                    
SDIO_POWER_PWRCTRL_Msk         EQU		0x3 << SDIO_POWER_PWRCTRL_Pos           ;/*!< 0x00000003 */
SDIO_POWER_PWRCTRL             EQU		SDIO_POWER_PWRCTRL_Msk                  ;/*!<PWRCTRL[1:0] bits EQU		Power supply control bits    */
SDIO_POWER_PWRCTRL_0           EQU		0x1 << SDIO_POWER_PWRCTRL_Pos           ;/*!< 0x01 */
SDIO_POWER_PWRCTRL_1           EQU		0x2 << SDIO_POWER_PWRCTRL_Pos           ;/*!< 0x02 */

SDIO_CLKCR			           EQU		0x04
;/******************  Bit definition for SDIO_CLKCR register  ******************/
SDIO_CLKCR_CLKDIV_Pos          EQU		0                                    
SDIO_CLKCR_CLKDIV_Msk          EQU		0xFF << SDIO_CLKCR_CLKDIV_Pos           ;/*!< 0x000000FF */
SDIO_CLKCR_CLKDIV              EQU		SDIO_CLKCR_CLKDIV_Msk                   ;/*!<Clock divide factor             */
SDIO_CLKCR_CLKEN_Pos           EQU		8                                    
SDIO_CLKCR_CLKEN_Msk           EQU		0x1 << SDIO_CLKCR_CLKEN_Pos             ;/*!< 0x00000100 */
SDIO_CLKCR_CLKEN               EQU		SDIO_CLKCR_CLKEN_Msk                    ;/*!<Clock enable bit                */
SDIO_CLKCR_PWRSAV_Pos          EQU		9                                    
SDIO_CLKCR_PWRSAV_Msk          EQU		0x1 << SDIO_CLKCR_PWRSAV_Pos            ;/*!< 0x00000200 */
SDIO_CLKCR_PWRSAV              EQU		SDIO_CLKCR_PWRSAV_Msk                   ;/*!<Power saving configuration bit  */
SDIO_CLKCR_BYPASS_Pos          EQU		10                                   
SDIO_CLKCR_BYPASS_Msk          EQU		0x1 << SDIO_CLKCR_BYPASS_Pos            ;/*!< 0x00000400 */
SDIO_CLKCR_BYPASS              EQU		SDIO_CLKCR_BYPASS_Msk                   ;/*!<Clock divider bypass enable bit */

SDIO_CLKCR_WIDBUS_Pos          EQU		11                                   
SDIO_CLKCR_WIDBUS_Msk          EQU		0x3 << SDIO_CLKCR_WIDBUS_Pos            ;/*!< 0x00001800 */
SDIO_CLKCR_WIDBUS              EQU		SDIO_CLKCR_WIDBUS_Msk                   ;/*!<WIDBUS[1:0] bits EQU		Wide bus mode enable bit    */
SDIO_CLKCR_WIDBUS_0            EQU		0x1 << SDIO_CLKCR_WIDBUS_Pos            ;/*!< 0x0800 */
SDIO_CLKCR_WIDBUS_1            EQU		0x2 << SDIO_CLKCR_WIDBUS_Pos            ;/*!< 0x1000 */

SDIO_CLKCR_NEGEDGE_Pos         EQU		13                                   
SDIO_CLKCR_NEGEDGE_Msk         EQU		0x1 << SDIO_CLKCR_NEGEDGE_Pos           ;/*!< 0x00002000 */
SDIO_CLKCR_NEGEDGE             EQU		SDIO_CLKCR_NEGEDGE_Msk                  ;/*!<SDIO_CK dephasing selection bit */
SDIO_CLKCR_HWFC_EN_Pos         EQU		14                                   
SDIO_CLKCR_HWFC_EN_Msk         EQU		0x1 << SDIO_CLKCR_HWFC_EN_Pos           ;/*!< 0x00004000 */
SDIO_CLKCR_HWFC_EN             EQU		SDIO_CLKCR_HWFC_EN_Msk                  ;/*!<HW Flow Control enable          */

SDIO_ARG			           EQU		0x08
;/*******************  Bit definition for SDIO_ARG register  *******************/
SDIO_ARG_CMDARG_Pos            EQU		0                                    
SDIO_ARG_CMDARG_Msk            EQU		0xFFFFFFFF << SDIO_ARG_CMDARG_Pos       ;/*!< 0xFFFFFFFF */
SDIO_ARG_CMDARG                EQU		SDIO_ARG_CMDARG_Msk                     ;/*!<Command argument */

SDIO_CMD			           EQU		0x0C
;/*******************  Bit definition for SDIO_CMD register  *******************/
SDIO_CMD_CMDINDEX_Pos          EQU		0                                    
SDIO_CMD_CMDINDEX_Msk          EQU		0x3F << SDIO_CMD_CMDINDEX_Pos           ;/*!< 0x0000003F */
SDIO_CMD_CMDINDEX              EQU		SDIO_CMD_CMDINDEX_Msk                   ;/*!<Command Index                               */

SDIO_CMD_WAITRESP_Pos          EQU		6                                    
SDIO_CMD_WAITRESP_Msk          EQU		0x3 << SDIO_CMD_WAITRESP_Pos            ;/*!< 0x000000C0 */
SDIO_CMD_WAITRESP              EQU		SDIO_CMD_WAITRESP_Msk                   ;/*!<WAITRESP[1:0] bits EQU		Wait for response bits    */
SDIO_CMD_WAITRESP_0            EQU		0x1 << SDIO_CMD_WAITRESP_Pos            ;/*!< 0x0040 */
SDIO_CMD_WAITRESP_1            EQU		0x2 << SDIO_CMD_WAITRESP_Pos            ;/*!< 0x0080 */

SDIO_CMD_WAITINT_Pos           EQU		8                                    
SDIO_CMD_WAITINT_Msk           EQU		0x1 << SDIO_CMD_WAITINT_Pos             ;/*!< 0x00000100 */
SDIO_CMD_WAITINT               EQU		SDIO_CMD_WAITINT_Msk                    ;/*!<CPSM Waits for Interrupt Request                               */
SDIO_CMD_WAITPEND_Pos          EQU		9                                    
SDIO_CMD_WAITPEND_Msk          EQU		0x1 << SDIO_CMD_WAITPEND_Pos            ;/*!< 0x00000200 */
SDIO_CMD_WAITPEND              EQU		SDIO_CMD_WAITPEND_Msk                   ;/*!<CPSM Waits for ends of data transfer EQU		CmdPend internal signal    */
SDIO_CMD_CPSMEN_Pos            EQU		10                                   
SDIO_CMD_CPSMEN_Msk            EQU		0x1 << SDIO_CMD_CPSMEN_Pos              ;/*!< 0x00000400 */
SDIO_CMD_CPSMEN                EQU		SDIO_CMD_CPSMEN_Msk                     ;/*!<Command path state machine EQU		CPSM    Enable bit                   */
SDIO_CMD_SDIOSUSPEND_Pos       EQU		11                                   
SDIO_CMD_SDIOSUSPEND_Msk       EQU		0x1 << SDIO_CMD_SDIOSUSPEND_Pos         ;/*!< 0x00000800 */
SDIO_CMD_SDIOSUSPEND           EQU		SDIO_CMD_SDIOSUSPEND_Msk                ;/*!<SD I/O suspend command                                         */
SDIO_CMD_ENCMDCOMPL_Pos        EQU		12                                   
SDIO_CMD_ENCMDCOMPL_Msk        EQU		0x1 << SDIO_CMD_ENCMDCOMPL_Pos          ;/*!< 0x00001000 */
SDIO_CMD_ENCMDCOMPL            EQU		SDIO_CMD_ENCMDCOMPL_Msk                 ;/*!<Enable CMD completion                                          */
SDIO_CMD_NIEN_Pos              EQU		13                                   
SDIO_CMD_NIEN_Msk              EQU		0x1 << SDIO_CMD_NIEN_Pos                ;/*!< 0x00002000 */
SDIO_CMD_NIEN                  EQU		SDIO_CMD_NIEN_Msk                       ;/*!<Not Interrupt Enable                                           */
SDIO_CMD_CEATACMD_Pos          EQU		14                                   
SDIO_CMD_CEATACMD_Msk          EQU		0x1 << SDIO_CMD_CEATACMD_Pos            ;/*!< 0x00004000 */
SDIO_CMD_CEATACMD              EQU		SDIO_CMD_CEATACMD_Msk                   ;/*!<CE-ATA command                                                 */

SDIO_RESPCMD			       EQU		0x10
;/*****************  Bit definition for SDIO_RESPCMD register  *****************/
SDIO_RESPCMD_RESPCMD_Pos       EQU		0                                    
SDIO_RESPCMD_RESPCMD_Msk       EQU		0x3F << SDIO_RESPCMD_RESPCMD_Pos        ;/*!< 0x0000003F */
SDIO_RESPCMD_RESPCMD           EQU		SDIO_RESPCMD_RESPCMD_Msk                ;/*!<Response command index */

SDIO_RESP1				       EQU		0x14
;/******************  Bit definition for SDIO_RESP1 register  ******************/
SDIO_RESP1_CARDSTATUS1_Pos     EQU		0                                    
SDIO_RESP1_CARDSTATUS1_Msk     EQU		0xFFFFFFFF << SDIO_RESP1_CARDSTATUS1_Pos    ;/*!< 0xFFFFFFFF */
SDIO_RESP1_CARDSTATUS1         EQU		SDIO_RESP1_CARDSTATUS1_Msk              	;/*!<Card Status */

SDIO_RESP2				       EQU		0x18
;/******************  Bit definition for SDIO_RESP2 register  ******************/
SDIO_RESP2_CARDSTATUS2_Pos     EQU		0                                    
SDIO_RESP2_CARDSTATUS2_Msk     EQU		0xFFFFFFFF << SDIO_RESP2_CARDSTATUS2_Pos    ;/*!< 0xFFFFFFFF */
SDIO_RESP2_CARDSTATUS2         EQU		SDIO_RESP2_CARDSTATUS2_Msk              	;/*!<Card Status */

SDIO_RESP3				       EQU		0x1C
;/******************  Bit definition for SDIO_RESP3 register  ******************/
SDIO_RESP3_CARDSTATUS3_Pos     EQU		0                                    
SDIO_RESP3_CARDSTATUS3_Msk     EQU		0xFFFFFFFF << SDIO_RESP3_CARDSTATUS3_Pos    ;/*!< 0xFFFFFFFF */
SDIO_RESP3_CARDSTATUS3         EQU		SDIO_RESP3_CARDSTATUS3_Msk              	;/*!<Card Status */

SDIO_RESP4				       EQU		0x20
;/******************  Bit definition for SDIO_RESP4 register  ******************/
SDIO_RESP4_CARDSTATUS4_Pos     EQU		0                                    
SDIO_RESP4_CARDSTATUS4_Msk     EQU		0xFFFFFFFF << SDIO_RESP4_CARDSTATUS4_Pos    ;/*!< 0xFFFFFFFF */
SDIO_RESP4_CARDSTATUS4         EQU		SDIO_RESP4_CARDSTATUS4_Msk              	;/*!<Card Status */

SDIO_DTIMER				       EQU		0x24
;/******************  Bit definition for SDIO_DTIMER register  *****************/
SDIO_DTIMER_DATATIME_Pos       EQU		0                                    
SDIO_DTIMER_DATATIME_Msk       EQU		0xFFFFFFFF << SDIO_DTIMER_DATATIME_Pos    	;/*!< 0xFFFFFFFF */
SDIO_DTIMER_DATATIME           EQU		SDIO_DTIMER_DATATIME_Msk                	;/*!<Data timeout period. */

SDIO_DLEN					   EQU		0x28
;/******************  Bit definition for SDIO_DLEN register  *******************/
SDIO_DLEN_DATALENGTH_Pos       EQU		0                                    
SDIO_DLEN_DATALENGTH_Msk       EQU		0x1FFFFFF << SDIO_DLEN_DATALENGTH_Pos    	;/*!< 0x01FFFFFF */
SDIO_DLEN_DATALENGTH           EQU		SDIO_DLEN_DATALENGTH_Msk                	;/*!<Data length value    */

SDIO_DCTRL			           EQU		0x2C
;/******************  Bit definition for SDIO_DCTRL register  ******************/
SDIO_DCTRL_DTEN_Pos            EQU		0                                    
SDIO_DCTRL_DTEN_Msk            EQU		0x1 << SDIO_DCTRL_DTEN_Pos              ;/*!< 0x00000001 */
SDIO_DCTRL_DTEN                EQU		SDIO_DCTRL_DTEN_Msk                     ;/*!<Data transfer enabled bit         */
SDIO_DCTRL_DTDIR_Pos           EQU		1                                    
SDIO_DCTRL_DTDIR_Msk           EQU		0x1 << SDIO_DCTRL_DTDIR_Pos             ;/*!< 0x00000002 */
SDIO_DCTRL_DTDIR               EQU		SDIO_DCTRL_DTDIR_Msk                    ;/*!<Data transfer direction selection */
SDIO_DCTRL_DTMODE_Pos          EQU		2                                    
SDIO_DCTRL_DTMODE_Msk          EQU		0x1 << SDIO_DCTRL_DTMODE_Pos            ;/*!< 0x00000004 */
SDIO_DCTRL_DTMODE              EQU		SDIO_DCTRL_DTMODE_Msk                   ;/*!<Data transfer mode selection      */
SDIO_DCTRL_DMAEN_Pos           EQU		3                                    
SDIO_DCTRL_DMAEN_Msk           EQU		0x1 << SDIO_DCTRL_DMAEN_Pos             ;/*!< 0x00000008 */
SDIO_DCTRL_DMAEN               EQU		SDIO_DCTRL_DMAEN_Msk                    ;/*!<DMA enabled bit                   */

SDIO_DCTRL_DBLOCKSIZE_Pos      EQU		4                                    
SDIO_DCTRL_DBLOCKSIZE_Msk      EQU		0xF << SDIO_DCTRL_DBLOCKSIZE_Pos        ;/*!< 0x000000F0 */
SDIO_DCTRL_DBLOCKSIZE          EQU		SDIO_DCTRL_DBLOCKSIZE_Msk               ;/*!<DBLOCKSIZE[3:0] bits EQU		Data block size    */
SDIO_DCTRL_DBLOCKSIZE_0        EQU		0x1 << SDIO_DCTRL_DBLOCKSIZE_Pos        ;/*!< 0x0010 */
SDIO_DCTRL_DBLOCKSIZE_1        EQU		0x2 << SDIO_DCTRL_DBLOCKSIZE_Pos        ;/*!< 0x0020 */
SDIO_DCTRL_DBLOCKSIZE_2        EQU		0x4 << SDIO_DCTRL_DBLOCKSIZE_Pos        ;/*!< 0x0040 */
SDIO_DCTRL_DBLOCKSIZE_3        EQU		0x8 << SDIO_DCTRL_DBLOCKSIZE_Pos        ;/*!< 0x0080 */

SDIO_DCTRL_RWSTART_Pos         EQU		8                                    
SDIO_DCTRL_RWSTART_Msk         EQU		0x1 << SDIO_DCTRL_RWSTART_Pos           ;/*!< 0x00000100 */
SDIO_DCTRL_RWSTART             EQU		SDIO_DCTRL_RWSTART_Msk                  ;/*!<Read wait start         */
SDIO_DCTRL_RWSTOP_Pos          EQU		9                                    
SDIO_DCTRL_RWSTOP_Msk          EQU		0x1 << SDIO_DCTRL_RWSTOP_Pos            ;/*!< 0x00000200 */
SDIO_DCTRL_RWSTOP              EQU		SDIO_DCTRL_RWSTOP_Msk                   ;/*!<Read wait stop          */
SDIO_DCTRL_RWMOD_Pos           EQU		10                                   
SDIO_DCTRL_RWMOD_Msk           EQU		0x1 << SDIO_DCTRL_RWMOD_Pos             ;/*!< 0x00000400 */
SDIO_DCTRL_RWMOD               EQU		SDIO_DCTRL_RWMOD_Msk                    ;/*!<Read wait mode          */
SDIO_DCTRL_SDIOEN_Pos          EQU		11                                   
SDIO_DCTRL_SDIOEN_Msk          EQU		0x1 << SDIO_DCTRL_SDIOEN_Pos            ;/*!< 0x00000800 */
SDIO_DCTRL_SDIOEN              EQU		SDIO_DCTRL_SDIOEN_Msk                   ;/*!<SD I/O enable functions */

SDIO_DCOUNT				       EQU		0x30
;/******************  Bit definition for SDIO_DCOUNT register  *****************/
SDIO_DCOUNT_DATACOUNT_Pos      EQU		0                                    
SDIO_DCOUNT_DATACOUNT_Msk      EQU		0x1FFFFFF << SDIO_DCOUNT_DATACOUNT_Pos    	;/*!< 0x01FFFFFF */
SDIO_DCOUNT_DATACOUNT          EQU		SDIO_DCOUNT_DATACOUNT_Msk               	;/*!<Data count value */

SDIO_STA			           EQU		0x34
;/******************  Bit definition for SDIO_STA register  ********************/
SDIO_STA_CCRCFAIL_Pos          EQU		0                                    
SDIO_STA_CCRCFAIL_Msk          EQU		0x1 << SDIO_STA_CCRCFAIL_Pos            ;/*!< 0x00000001 */
SDIO_STA_CCRCFAIL              EQU		SDIO_STA_CCRCFAIL_Msk                   ;/*!<Command response received EQU		CRC check failed     */
SDIO_STA_DCRCFAIL_Pos          EQU		1                                    
SDIO_STA_DCRCFAIL_Msk          EQU		0x1 << SDIO_STA_DCRCFAIL_Pos            ;/*!< 0x00000002 */
SDIO_STA_DCRCFAIL              EQU		SDIO_STA_DCRCFAIL_Msk                   ;/*!<Data block sent/received EQU		CRC check failed      */
SDIO_STA_CTIMEOUT_Pos          EQU		2                                    
SDIO_STA_CTIMEOUT_Msk          EQU		0x1 << SDIO_STA_CTIMEOUT_Pos            ;/*!< 0x00000004 */
SDIO_STA_CTIMEOUT              EQU		SDIO_STA_CTIMEOUT_Msk                   ;/*!<Command response timeout                      */
SDIO_STA_DTIMEOUT_Pos          EQU		3                                    
SDIO_STA_DTIMEOUT_Msk          EQU		0x1 << SDIO_STA_DTIMEOUT_Pos            ;/*!< 0x00000008 */
SDIO_STA_DTIMEOUT              EQU		SDIO_STA_DTIMEOUT_Msk                   ;/*!<Data timeout                                  */
SDIO_STA_TXUNDERR_Pos          EQU		4                                    
SDIO_STA_TXUNDERR_Msk          EQU		0x1 << SDIO_STA_TXUNDERR_Pos            ;/*!< 0x00000010 */
SDIO_STA_TXUNDERR              EQU		SDIO_STA_TXUNDERR_Msk                   ;/*!<Transmit FIFO underrun error                  */
SDIO_STA_RXOVERR_Pos           EQU		5                                    
SDIO_STA_RXOVERR_Msk           EQU		0x1 << SDIO_STA_RXOVERR_Pos             ;/*!< 0x00000020 */
SDIO_STA_RXOVERR               EQU		SDIO_STA_RXOVERR_Msk                    ;/*!<Received FIFO overrun error                   */
SDIO_STA_CMDREND_Pos           EQU		6                                    
SDIO_STA_CMDREND_Msk           EQU		0x1 << SDIO_STA_CMDREND_Pos             ;/*!< 0x00000040 */
SDIO_STA_CMDREND               EQU		SDIO_STA_CMDREND_Msk                    ;/*!<Command response received EQU		CRC check passed     */
SDIO_STA_CMDSENT_Pos           EQU		7                                    
SDIO_STA_CMDSENT_Msk           EQU		0x1 << SDIO_STA_CMDSENT_Pos             ;/*!< 0x00000080 */
SDIO_STA_CMDSENT               EQU		SDIO_STA_CMDSENT_Msk                    ;/*!<Command sent EQU		no response required              */
SDIO_STA_DATAEND_Pos           EQU		8                                    
SDIO_STA_DATAEND_Msk           EQU		0x1 << SDIO_STA_DATAEND_Pos             ;/*!< 0x00000100 */
SDIO_STA_DATAEND               EQU		SDIO_STA_DATAEND_Msk                    ;/*!<Data end EQU		data counter, SDIDCOUNT, is zero      */
SDIO_STA_STBITERR_Pos          EQU		9                                    
SDIO_STA_STBITERR_Msk          EQU		0x1 << SDIO_STA_STBITERR_Pos            ;/*!< 0x00000200 */
SDIO_STA_STBITERR              EQU		SDIO_STA_STBITERR_Msk                   ;/*!<Start bit not detected on all data signals in wide bus mode */
SDIO_STA_DBCKEND_Pos           EQU		10                                   
SDIO_STA_DBCKEND_Msk           EQU		0x1 << SDIO_STA_DBCKEND_Pos             ;/*!< 0x00000400 */
SDIO_STA_DBCKEND               EQU		SDIO_STA_DBCKEND_Msk                    ;/*!<Data block sent/received EQU		CRC check passed      */
SDIO_STA_CMDACT_Pos            EQU		11                                   
SDIO_STA_CMDACT_Msk            EQU		0x1 << SDIO_STA_CMDACT_Pos              ;/*!< 0x00000800 */
SDIO_STA_CMDACT                EQU		SDIO_STA_CMDACT_Msk                     ;/*!<Command transfer in progress                  */
SDIO_STA_TXACT_Pos             EQU		12                                   
SDIO_STA_TXACT_Msk             EQU		0x1 << SDIO_STA_TXACT_Pos               ;/*!< 0x00001000 */
SDIO_STA_TXACT                 EQU		SDIO_STA_TXACT_Msk                      ;/*!<Data transmit in progress                     */
SDIO_STA_RXACT_Pos             EQU		13                                   
SDIO_STA_RXACT_Msk             EQU		0x1 << SDIO_STA_RXACT_Pos               ;/*!< 0x00002000 */
SDIO_STA_RXACT                 EQU		SDIO_STA_RXACT_Msk                      ;/*!<Data receive in progress                      */
SDIO_STA_TXFIFOHE_Pos          EQU		14                                   
SDIO_STA_TXFIFOHE_Msk          EQU		0x1 << SDIO_STA_TXFIFOHE_Pos            ;/*!< 0x00004000 */
SDIO_STA_TXFIFOHE              EQU		SDIO_STA_TXFIFOHE_Msk                   ;/*!<Transmit FIFO Half Empty: at least 8 words can be written into the FIFO */
SDIO_STA_RXFIFOHF_Pos          EQU		15                                   
SDIO_STA_RXFIFOHF_Msk          EQU		0x1 << SDIO_STA_RXFIFOHF_Pos            ;/*!< 0x00008000 */
SDIO_STA_RXFIFOHF              EQU		SDIO_STA_RXFIFOHF_Msk                   ;/*!<Receive FIFO Half Full: there are at least 8 words in the FIFO */
SDIO_STA_TXFIFOF_Pos           EQU		16                                   
SDIO_STA_TXFIFOF_Msk           EQU		0x1 << SDIO_STA_TXFIFOF_Pos             ;/*!< 0x00010000 */
SDIO_STA_TXFIFOF               EQU		SDIO_STA_TXFIFOF_Msk                    ;/*!<Transmit FIFO full                            */
SDIO_STA_RXFIFOF_Pos           EQU		17                                   
SDIO_STA_RXFIFOF_Msk           EQU		0x1 << SDIO_STA_RXFIFOF_Pos             ;/*!< 0x00020000 */
SDIO_STA_RXFIFOF               EQU		SDIO_STA_RXFIFOF_Msk                    ;/*!<Receive FIFO full                             */
SDIO_STA_TXFIFOE_Pos           EQU		18                                   
SDIO_STA_TXFIFOE_Msk           EQU		0x1 << SDIO_STA_TXFIFOE_Pos             ;/*!< 0x00040000 */
SDIO_STA_TXFIFOE               EQU		SDIO_STA_TXFIFOE_Msk                    ;/*!<Transmit FIFO empty                           */
SDIO_STA_RXFIFOE_Pos           EQU		19                                   
SDIO_STA_RXFIFOE_Msk           EQU		0x1 << SDIO_STA_RXFIFOE_Pos             ;/*!< 0x00080000 */
SDIO_STA_RXFIFOE               EQU		SDIO_STA_RXFIFOE_Msk                    ;/*!<Receive FIFO empty                            */
SDIO_STA_TXDAVL_Pos            EQU		20                                   
SDIO_STA_TXDAVL_Msk            EQU		0x1 << SDIO_STA_TXDAVL_Pos              ;/*!< 0x00100000 */
SDIO_STA_TXDAVL                EQU		SDIO_STA_TXDAVL_Msk                     ;/*!<Data available in transmit FIFO               */
SDIO_STA_RXDAVL_Pos            EQU		21                                   
SDIO_STA_RXDAVL_Msk            EQU		0x1 << SDIO_STA_RXDAVL_Pos              ;/*!< 0x00200000 */
SDIO_STA_RXDAVL                EQU		SDIO_STA_RXDAVL_Msk                     ;/*!<Data available in receive FIFO                */
SDIO_STA_SDIOIT_Pos            EQU		22                                   
SDIO_STA_SDIOIT_Msk            EQU		0x1 << SDIO_STA_SDIOIT_Pos              ;/*!< 0x00400000 */
SDIO_STA_SDIOIT                EQU		SDIO_STA_SDIOIT_Msk                     ;/*!<SDIO interrupt received                       */
SDIO_STA_CEATAEND_Pos          EQU		23                                   
SDIO_STA_CEATAEND_Msk          EQU		0x1 << SDIO_STA_CEATAEND_Pos            ;/*!< 0x00800000 */
SDIO_STA_CEATAEND              EQU		SDIO_STA_CEATAEND_Msk                   ;/*!<CE-ATA command completion signal received for CMD61 */

SDIO_ICR			           EQU		0x38
;/*******************  Bit definition for SDIO_ICR register  *******************/
SDIO_ICR_CCRCFAILC_Pos         EQU		0                                    
SDIO_ICR_CCRCFAILC_Msk         EQU		0x1 << SDIO_ICR_CCRCFAILC_Pos           ;/*!< 0x00000001 */
SDIO_ICR_CCRCFAILC             EQU		SDIO_ICR_CCRCFAILC_Msk                  ;/*!<CCRCFAIL flag clear bit */
SDIO_ICR_DCRCFAILC_Pos         EQU		1                                    
SDIO_ICR_DCRCFAILC_Msk         EQU		0x1 << SDIO_ICR_DCRCFAILC_Pos           ;/*!< 0x00000002 */
SDIO_ICR_DCRCFAILC             EQU		SDIO_ICR_DCRCFAILC_Msk                  ;/*!<DCRCFAIL flag clear bit */
SDIO_ICR_CTIMEOUTC_Pos         EQU		2                                    
SDIO_ICR_CTIMEOUTC_Msk         EQU		0x1 << SDIO_ICR_CTIMEOUTC_Pos           ;/*!< 0x00000004 */
SDIO_ICR_CTIMEOUTC             EQU		SDIO_ICR_CTIMEOUTC_Msk                  ;/*!<CTIMEOUT flag clear bit */
SDIO_ICR_DTIMEOUTC_Pos         EQU		3                                    
SDIO_ICR_DTIMEOUTC_Msk         EQU		0x1 << SDIO_ICR_DTIMEOUTC_Pos           ;/*!< 0x00000008 */
SDIO_ICR_DTIMEOUTC             EQU		SDIO_ICR_DTIMEOUTC_Msk                  ;/*!<DTIMEOUT flag clear bit */
SDIO_ICR_TXUNDERRC_Pos         EQU		4                                    
SDIO_ICR_TXUNDERRC_Msk         EQU		0x1 << SDIO_ICR_TXUNDERRC_Pos           ;/*!< 0x00000010 */
SDIO_ICR_TXUNDERRC             EQU		SDIO_ICR_TXUNDERRC_Msk                  ;/*!<TXUNDERR flag clear bit */
SDIO_ICR_RXOVERRC_Pos          EQU		5                                    
SDIO_ICR_RXOVERRC_Msk          EQU		0x1 << SDIO_ICR_RXOVERRC_Pos            ;/*!< 0x00000020 */
SDIO_ICR_RXOVERRC              EQU		SDIO_ICR_RXOVERRC_Msk                   ;/*!<RXOVERR flag clear bit  */
SDIO_ICR_CMDRENDC_Pos          EQU		6                                    
SDIO_ICR_CMDRENDC_Msk          EQU		0x1 << SDIO_ICR_CMDRENDC_Pos            ;/*!< 0x00000040 */
SDIO_ICR_CMDRENDC              EQU		SDIO_ICR_CMDRENDC_Msk                   ;/*!<CMDREND flag clear bit  */
SDIO_ICR_CMDSENTC_Pos          EQU		7                                    
SDIO_ICR_CMDSENTC_Msk          EQU		0x1 << SDIO_ICR_CMDSENTC_Pos            ;/*!< 0x00000080 */
SDIO_ICR_CMDSENTC              EQU		SDIO_ICR_CMDSENTC_Msk                   ;/*!<CMDSENT flag clear bit  */
SDIO_ICR_DATAENDC_Pos          EQU		8                                    
SDIO_ICR_DATAENDC_Msk          EQU		0x1 << SDIO_ICR_DATAENDC_Pos            ;/*!< 0x00000100 */
SDIO_ICR_DATAENDC              EQU		SDIO_ICR_DATAENDC_Msk                   ;/*!<DATAEND flag clear bit  */
SDIO_ICR_STBITERRC_Pos         EQU		9                                    
SDIO_ICR_STBITERRC_Msk         EQU		0x1 << SDIO_ICR_STBITERRC_Pos           ;/*!< 0x00000200 */
SDIO_ICR_STBITERRC             EQU		SDIO_ICR_STBITERRC_Msk                  ;/*!<STBITERR flag clear bit */
SDIO_ICR_DBCKENDC_Pos          EQU		10                                   
SDIO_ICR_DBCKENDC_Msk          EQU		0x1 << SDIO_ICR_DBCKENDC_Pos            ;/*!< 0x00000400 */
SDIO_ICR_DBCKENDC              EQU		SDIO_ICR_DBCKENDC_Msk                   ;/*!<DBCKEND flag clear bit  */
SDIO_ICR_SDIOITC_Pos           EQU		22                                   
SDIO_ICR_SDIOITC_Msk           EQU		0x1 << SDIO_ICR_SDIOITC_Pos             ;/*!< 0x00400000 */
SDIO_ICR_SDIOITC               EQU		SDIO_ICR_SDIOITC_Msk                    ;/*!<SDIOIT flag clear bit   */
SDIO_ICR_CEATAENDC_Pos         EQU		23                                   
SDIO_ICR_CEATAENDC_Msk         EQU		0x1 << SDIO_ICR_CEATAENDC_Pos           ;/*!< 0x00800000 */
SDIO_ICR_CEATAENDC             EQU		SDIO_ICR_CEATAENDC_Msk                  ;/*!<CEATAEND flag clear bit */

SDIO_MASK				       EQU		0x3C
;/******************  Bit definition for SDIO_MASK register  *******************/
SDIO_MASK_CCRCFAILIE_Pos       EQU		0                                    
SDIO_MASK_CCRCFAILIE_Msk       EQU		0x1 << SDIO_MASK_CCRCFAILIE_Pos         ;/*!< 0x00000001 */
SDIO_MASK_CCRCFAILIE           EQU		SDIO_MASK_CCRCFAILIE_Msk                ;/*!<Command CRC Fail Interrupt Enable          */
SDIO_MASK_DCRCFAILIE_Pos       EQU		1                                    
SDIO_MASK_DCRCFAILIE_Msk       EQU		0x1 << SDIO_MASK_DCRCFAILIE_Pos         ;/*!< 0x00000002 */
SDIO_MASK_DCRCFAILIE           EQU		SDIO_MASK_DCRCFAILIE_Msk                ;/*!<Data CRC Fail Interrupt Enable             */
SDIO_MASK_CTIMEOUTIE_Pos       EQU		2                                    
SDIO_MASK_CTIMEOUTIE_Msk       EQU		0x1 << SDIO_MASK_CTIMEOUTIE_Pos         ;/*!< 0x00000004 */
SDIO_MASK_CTIMEOUTIE           EQU		SDIO_MASK_CTIMEOUTIE_Msk                ;/*!<Command TimeOut Interrupt Enable           */
SDIO_MASK_DTIMEOUTIE_Pos       EQU		3                                    
SDIO_MASK_DTIMEOUTIE_Msk       EQU		0x1 << SDIO_MASK_DTIMEOUTIE_Pos         ;/*!< 0x00000008 */
SDIO_MASK_DTIMEOUTIE           EQU		SDIO_MASK_DTIMEOUTIE_Msk                ;/*!<Data TimeOut Interrupt Enable              */
SDIO_MASK_TXUNDERRIE_Pos       EQU		4                                    
SDIO_MASK_TXUNDERRIE_Msk       EQU		0x1 << SDIO_MASK_TXUNDERRIE_Pos         ;/*!< 0x00000010 */
SDIO_MASK_TXUNDERRIE           EQU		SDIO_MASK_TXUNDERRIE_Msk                ;/*!<Tx FIFO UnderRun Error Interrupt Enable    */
SDIO_MASK_RXOVERRIE_Pos        EQU		5                                    
SDIO_MASK_RXOVERRIE_Msk        EQU		0x1 << SDIO_MASK_RXOVERRIE_Pos          ;/*!< 0x00000020 */
SDIO_MASK_RXOVERRIE            EQU		SDIO_MASK_RXOVERRIE_Msk                 ;/*!<Rx FIFO OverRun Error Interrupt Enable     */
SDIO_MASK_CMDRENDIE_Pos        EQU		6                                    
SDIO_MASK_CMDRENDIE_Msk        EQU		0x1 << SDIO_MASK_CMDRENDIE_Pos          ;/*!< 0x00000040 */
SDIO_MASK_CMDRENDIE            EQU		SDIO_MASK_CMDRENDIE_Msk                 ;/*!<Command Response Received Interrupt Enable */
SDIO_MASK_CMDSENTIE_Pos        EQU		7                                    
SDIO_MASK_CMDSENTIE_Msk        EQU		0x1 << SDIO_MASK_CMDSENTIE_Pos          ;/*!< 0x00000080 */
SDIO_MASK_CMDSENTIE            EQU		SDIO_MASK_CMDSENTIE_Msk                 ;/*!<Command Sent Interrupt Enable              */
SDIO_MASK_DATAENDIE_Pos        EQU		8                                    
SDIO_MASK_DATAENDIE_Msk        EQU		0x1 << SDIO_MASK_DATAENDIE_Pos          ;/*!< 0x00000100 */
SDIO_MASK_DATAENDIE            EQU		SDIO_MASK_DATAENDIE_Msk                 ;/*!<Data End Interrupt Enable                  */
SDIO_MASK_STBITERRIE_Pos       EQU		9                                    
SDIO_MASK_STBITERRIE_Msk       EQU		0x1 << SDIO_MASK_STBITERRIE_Pos         ;/*!< 0x00000200 */
SDIO_MASK_STBITERRIE           EQU		SDIO_MASK_STBITERRIE_Msk                ;/*!<Start Bit Error Interrupt Enable           */
SDIO_MASK_DBCKENDIE_Pos        EQU		10                                   
SDIO_MASK_DBCKENDIE_Msk        EQU		0x1 << SDIO_MASK_DBCKENDIE_Pos          ;/*!< 0x00000400 */
SDIO_MASK_DBCKENDIE            EQU		SDIO_MASK_DBCKENDIE_Msk                 ;/*!<Data Block End Interrupt Enable            */
SDIO_MASK_CMDACTIE_Pos         EQU		11                                   
SDIO_MASK_CMDACTIE_Msk         EQU		0x1 << SDIO_MASK_CMDACTIE_Pos           ;/*!< 0x00000800 */
SDIO_MASK_CMDACTIE             EQU		SDIO_MASK_CMDACTIE_Msk                  ;/*!<CCommand Acting Interrupt Enable           */
SDIO_MASK_TXACTIE_Pos          EQU		12                                   
SDIO_MASK_TXACTIE_Msk          EQU		0x1 << SDIO_MASK_TXACTIE_Pos            ;/*!< 0x00001000 */
SDIO_MASK_TXACTIE              EQU		SDIO_MASK_TXACTIE_Msk                   ;/*!<Data Transmit Acting Interrupt Enable      */
SDIO_MASK_RXACTIE_Pos          EQU		13                                   
SDIO_MASK_RXACTIE_Msk          EQU		0x1 << SDIO_MASK_RXACTIE_Pos            ;/*!< 0x00002000 */
SDIO_MASK_RXACTIE              EQU		SDIO_MASK_RXACTIE_Msk                   ;/*!<Data receive acting interrupt enabled      */
SDIO_MASK_TXFIFOHEIE_Pos       EQU		14                                   
SDIO_MASK_TXFIFOHEIE_Msk       EQU		0x1 << SDIO_MASK_TXFIFOHEIE_Pos         ;/*!< 0x00004000 */
SDIO_MASK_TXFIFOHEIE           EQU		SDIO_MASK_TXFIFOHEIE_Msk                ;/*!<Tx FIFO Half Empty interrupt Enable        */
SDIO_MASK_RXFIFOHFIE_Pos       EQU		15                                   
SDIO_MASK_RXFIFOHFIE_Msk       EQU		0x1 << SDIO_MASK_RXFIFOHFIE_Pos         ;/*!< 0x00008000 */
SDIO_MASK_RXFIFOHFIE           EQU		SDIO_MASK_RXFIFOHFIE_Msk                ;/*!<Rx FIFO Half Full interrupt Enable         */
SDIO_MASK_TXFIFOFIE_Pos        EQU		16                                   
SDIO_MASK_TXFIFOFIE_Msk        EQU		0x1 << SDIO_MASK_TXFIFOFIE_Pos          ;/*!< 0x00010000 */
SDIO_MASK_TXFIFOFIE            EQU		SDIO_MASK_TXFIFOFIE_Msk                 ;/*!<Tx FIFO Full interrupt Enable              */
SDIO_MASK_RXFIFOFIE_Pos        EQU		17                                   
SDIO_MASK_RXFIFOFIE_Msk        EQU		0x1 << SDIO_MASK_RXFIFOFIE_Pos          ;/*!< 0x00020000 */
SDIO_MASK_RXFIFOFIE            EQU		SDIO_MASK_RXFIFOFIE_Msk                 ;/*!<Rx FIFO Full interrupt Enable              */
SDIO_MASK_TXFIFOEIE_Pos        EQU		18                                   
SDIO_MASK_TXFIFOEIE_Msk        EQU		0x1 << SDIO_MASK_TXFIFOEIE_Pos          ;/*!< 0x00040000 */
SDIO_MASK_TXFIFOEIE            EQU		SDIO_MASK_TXFIFOEIE_Msk                 ;/*!<Tx FIFO Empty interrupt Enable             */
SDIO_MASK_RXFIFOEIE_Pos        EQU		19                                   
SDIO_MASK_RXFIFOEIE_Msk        EQU		0x1 << SDIO_MASK_RXFIFOEIE_Pos          ;/*!< 0x00080000 */
SDIO_MASK_RXFIFOEIE            EQU		SDIO_MASK_RXFIFOEIE_Msk                 ;/*!<Rx FIFO Empty interrupt Enable             */
SDIO_MASK_TXDAVLIE_Pos         EQU		20                                   
SDIO_MASK_TXDAVLIE_Msk         EQU		0x1 << SDIO_MASK_TXDAVLIE_Pos           ;/*!< 0x00100000 */
SDIO_MASK_TXDAVLIE             EQU		SDIO_MASK_TXDAVLIE_Msk                  ;/*!<Data available in Tx FIFO interrupt Enable */
SDIO_MASK_RXDAVLIE_Pos         EQU		21                                   
SDIO_MASK_RXDAVLIE_Msk         EQU		0x1 << SDIO_MASK_RXDAVLIE_Pos           ;/*!< 0x00200000 */
SDIO_MASK_RXDAVLIE             EQU		SDIO_MASK_RXDAVLIE_Msk                  ;/*!<Data available in Rx FIFO interrupt Enable */
SDIO_MASK_SDIOITIE_Pos         EQU		22                                   
SDIO_MASK_SDIOITIE_Msk         EQU		0x1 << SDIO_MASK_SDIOITIE_Pos           ;/*!< 0x00400000 */
SDIO_MASK_SDIOITIE             EQU		SDIO_MASK_SDIOITIE_Msk                  ;/*!<SDIO Mode Interrupt Received interrupt Enable */
SDIO_MASK_CEATAENDIE_Pos       EQU		23                                   
SDIO_MASK_CEATAENDIE_Msk       EQU		0x1 << SDIO_MASK_CEATAENDIE_Pos         ;/*!< 0x00800000 */
SDIO_MASK_CEATAENDIE           EQU		SDIO_MASK_CEATAENDIE_Msk                ;/*!<CE-ATA command completion signal received Interrupt Enable */

SDIO_FIFOCNT				   EQU		0x48
;/*****************  Bit definition for SDIO_FIFOCNT register  *****************/
SDIO_FIFOCNT_FIFOCOUNT_Pos     EQU		0                                    
SDIO_FIFOCNT_FIFOCOUNT_Msk     EQU		0xFFFFFF << SDIO_FIFOCNT_FIFOCOUNT_Pos    ;/*!< 0x00FFFFFF */
SDIO_FIFOCNT_FIFOCOUNT         EQU		SDIO_FIFOCNT_FIFOCOUNT_Msk              ;/*!<Remaining number of words to be written to or read from the FIFO */

SDIO_FIFO			           EQU		0x80
;/******************  Bit definition for SDIO_FIFO register  *******************/
SDIO_FIFO_FIFODATA_Pos         EQU		0                                    
SDIO_FIFO_FIFODATA_Msk         EQU		0xFFFFFFFF << SDIO_FIFO_FIFODATA_Pos    ;/*!< 0xFFFFFFFF */
SDIO_FIFO_FIFODATA             EQU		SDIO_FIFO_FIFODATA_Msk                  ;/*!<Receive and transmit FIFO data */

;/******************************************************************************/
;/*                                                                            */
;/*                        Serial Peripheral Interface                         */
;/*                                                                            */
;/******************************************************************************/

SPI_CR1			            EQU		0x00
;/*******************  Bit definition for SPI_CR1 register  ********************/
SPI_CR1_CPHA_Pos            EQU		0                                       
SPI_CR1_CPHA_Msk            EQU		0x1 << SPI_CR1_CPHA_Pos                    ;/*!< 0x00000001 */
SPI_CR1_CPHA                EQU		SPI_CR1_CPHA_Msk                           ;/*!<Clock Phase      */
SPI_CR1_CPOL_Pos            EQU		1                                       
SPI_CR1_CPOL_Msk            EQU		0x1 << SPI_CR1_CPOL_Pos                    ;/*!< 0x00000002 */
SPI_CR1_CPOL                EQU		SPI_CR1_CPOL_Msk                           ;/*!<Clock Polarity   */
SPI_CR1_MSTR_Pos            EQU		2                                       
SPI_CR1_MSTR_Msk            EQU		0x1 << SPI_CR1_MSTR_Pos                    ;/*!< 0x00000004 */
SPI_CR1_MSTR                EQU		SPI_CR1_MSTR_Msk                           ;/*!<Master Selection */

SPI_CR1_BR_Pos              EQU		3                                       
SPI_CR1_BR_Msk              EQU		0x7 << SPI_CR1_BR_Pos                      ;/*!< 0x00000038 */
SPI_CR1_BR                  EQU		SPI_CR1_BR_Msk                             ;/*!<BR[2:0] bits EQU		Baud Rate Control    */
SPI_CR1_BR_0                EQU		0x1 << SPI_CR1_BR_Pos                      ;/*!< 0x00000008 */
SPI_CR1_BR_1                EQU		0x2 << SPI_CR1_BR_Pos                      ;/*!< 0x00000010 */
SPI_CR1_BR_2                EQU		0x4 << SPI_CR1_BR_Pos                      ;/*!< 0x00000020 */

SPI_CR1_SPE_Pos             EQU		6                                       
SPI_CR1_SPE_Msk             EQU		0x1 << SPI_CR1_SPE_Pos                     ;/*!< 0x00000040 */
SPI_CR1_SPE                 EQU		SPI_CR1_SPE_Msk                            ;/*!<SPI Enable                          */
SPI_CR1_LSBFIRST_Pos        EQU		7                                       
SPI_CR1_LSBFIRST_Msk        EQU		0x1 << SPI_CR1_LSBFIRST_Pos                ;/*!< 0x00000080 */
SPI_CR1_LSBFIRST            EQU		SPI_CR1_LSBFIRST_Msk                       ;/*!<Frame Format                        */
SPI_CR1_SSI_Pos             EQU		8                                       
SPI_CR1_SSI_Msk             EQU		0x1 << SPI_CR1_SSI_Pos                     ;/*!< 0x00000100 */
SPI_CR1_SSI                 EQU		SPI_CR1_SSI_Msk                            ;/*!<Internal slave select               */
SPI_CR1_SSM_Pos             EQU		9                                       
SPI_CR1_SSM_Msk             EQU		0x1 << SPI_CR1_SSM_Pos                     ;/*!< 0x00000200 */
SPI_CR1_SSM                 EQU		SPI_CR1_SSM_Msk                            ;/*!<Software slave management           */
SPI_CR1_RXONLY_Pos          EQU		10                                      
SPI_CR1_RXONLY_Msk          EQU		0x1 << SPI_CR1_RXONLY_Pos                  ;/*!< 0x00000400 */
SPI_CR1_RXONLY              EQU		SPI_CR1_RXONLY_Msk                         ;/*!<Receive only                        */
SPI_CR1_DFF_Pos             EQU		11                                      
SPI_CR1_DFF_Msk             EQU		0x1 << SPI_CR1_DFF_Pos                     ;/*!< 0x00000800 */
SPI_CR1_DFF                 EQU		SPI_CR1_DFF_Msk                            ;/*!<Data Frame Format                   */
SPI_CR1_CRCNEXT_Pos         EQU		12                                      
SPI_CR1_CRCNEXT_Msk         EQU		0x1 << SPI_CR1_CRCNEXT_Pos                 ;/*!< 0x00001000 */
SPI_CR1_CRCNEXT             EQU		SPI_CR1_CRCNEXT_Msk                        ;/*!<Transmit CRC next                   */
SPI_CR1_CRCEN_Pos           EQU		13                                      
SPI_CR1_CRCEN_Msk           EQU		0x1 << SPI_CR1_CRCEN_Pos                   ;/*!< 0x00002000 */
SPI_CR1_CRCEN               EQU		SPI_CR1_CRCEN_Msk                          ;/*!<Hardware CRC calculation enable     */
SPI_CR1_BIDIOE_Pos          EQU		14                                      
SPI_CR1_BIDIOE_Msk          EQU		0x1 << SPI_CR1_BIDIOE_Pos                  ;/*!< 0x00004000 */
SPI_CR1_BIDIOE              EQU		SPI_CR1_BIDIOE_Msk                         ;/*!<Output enable in bidirectional mode */
SPI_CR1_BIDIMODE_Pos        EQU		15                                      
SPI_CR1_BIDIMODE_Msk        EQU		0x1 << SPI_CR1_BIDIMODE_Pos                ;/*!< 0x00008000 */
SPI_CR1_BIDIMODE            EQU		SPI_CR1_BIDIMODE_Msk                       ;/*!<Bidirectional data mode enable      */

SPI_CR2				        EQU		0x04
;/*******************  Bit definition for SPI_CR2 register  ********************/
SPI_CR2_RXDMAEN_Pos         EQU		0                                       
SPI_CR2_RXDMAEN_Msk         EQU		0x1 << SPI_CR2_RXDMAEN_Pos                 ;/*!< 0x00000001 */
SPI_CR2_RXDMAEN             EQU		SPI_CR2_RXDMAEN_Msk                        ;/*!<Rx Buffer DMA Enable                 */
SPI_CR2_TXDMAEN_Pos         EQU		1                                       
SPI_CR2_TXDMAEN_Msk         EQU		0x1 << SPI_CR2_TXDMAEN_Pos                 ;/*!< 0x00000002 */
SPI_CR2_TXDMAEN             EQU		SPI_CR2_TXDMAEN_Msk                        ;/*!<Tx Buffer DMA Enable                 */
SPI_CR2_SSOE_Pos            EQU		2                                       
SPI_CR2_SSOE_Msk            EQU		0x1 << SPI_CR2_SSOE_Pos                    ;/*!< 0x00000004 */
SPI_CR2_SSOE                EQU		SPI_CR2_SSOE_Msk                           ;/*!<SS Output Enable                     */
SPI_CR2_FRF_Pos             EQU		4                                       
SPI_CR2_FRF_Msk             EQU		0x1 << SPI_CR2_FRF_Pos                     ;/*!< 0x00000010 */
SPI_CR2_FRF                 EQU		SPI_CR2_FRF_Msk                            ;/*!<Frame Format                         */
SPI_CR2_ERRIE_Pos           EQU		5                                       
SPI_CR2_ERRIE_Msk           EQU		0x1 << SPI_CR2_ERRIE_Pos                   ;/*!< 0x00000020 */
SPI_CR2_ERRIE               EQU		SPI_CR2_ERRIE_Msk                          ;/*!<Error Interrupt Enable               */
SPI_CR2_RXNEIE_Pos          EQU		6                                       
SPI_CR2_RXNEIE_Msk          EQU		0x1 << SPI_CR2_RXNEIE_Pos                  ;/*!< 0x00000040 */
SPI_CR2_RXNEIE              EQU		SPI_CR2_RXNEIE_Msk                         ;/*!<RX buffer Not Empty Interrupt Enable */
SPI_CR2_TXEIE_Pos           EQU		7                                       
SPI_CR2_TXEIE_Msk           EQU		0x1 << SPI_CR2_TXEIE_Pos                   ;/*!< 0x00000080 */
SPI_CR2_TXEIE               EQU		SPI_CR2_TXEIE_Msk                          ;/*!<Tx buffer Empty Interrupt Enable     */

SPI_SR			            EQU		0x08
;/********************  Bit definition for SPI_SR register  ********************/
SPI_SR_RXNE_Pos             EQU		0                                       
SPI_SR_RXNE_Msk             EQU		0x1 << SPI_SR_RXNE_Pos                     ;/*!< 0x00000001 */
SPI_SR_RXNE                 EQU		SPI_SR_RXNE_Msk                            ;/*!<Receive buffer Not Empty */
SPI_SR_TXE_Pos              EQU		1                                       
SPI_SR_TXE_Msk              EQU		0x1 << SPI_SR_TXE_Pos                      ;/*!< 0x00000002 */
SPI_SR_TXE                  EQU		SPI_SR_TXE_Msk                             ;/*!<Transmit buffer Empty    */
SPI_SR_CHSIDE_Pos           EQU		2                                       
SPI_SR_CHSIDE_Msk           EQU		0x1 << SPI_SR_CHSIDE_Pos                   ;/*!< 0x00000004 */
SPI_SR_CHSIDE               EQU		SPI_SR_CHSIDE_Msk                          ;/*!<Channel side             */
SPI_SR_UDR_Pos              EQU		3                                       
SPI_SR_UDR_Msk              EQU		0x1 << SPI_SR_UDR_Pos                      ;/*!< 0x00000008 */
SPI_SR_UDR                  EQU		SPI_SR_UDR_Msk                             ;/*!<Underrun flag            */
SPI_SR_CRCERR_Pos           EQU		4                                       
SPI_SR_CRCERR_Msk           EQU		0x1 << SPI_SR_CRCERR_Pos                   ;/*!< 0x00000010 */
SPI_SR_CRCERR               EQU		SPI_SR_CRCERR_Msk                          ;/*!<CRC Error flag           */
SPI_SR_MODF_Pos             EQU		5                                       
SPI_SR_MODF_Msk             EQU		0x1 << SPI_SR_MODF_Pos                     ;/*!< 0x00000020 */
SPI_SR_MODF                 EQU		SPI_SR_MODF_Msk                            ;/*!<Mode fault               */
SPI_SR_OVR_Pos              EQU		6                                       
SPI_SR_OVR_Msk              EQU		0x1 << SPI_SR_OVR_Pos                      ;/*!< 0x00000040 */
SPI_SR_OVR                  EQU		SPI_SR_OVR_Msk                             ;/*!<Overrun flag             */
SPI_SR_BSY_Pos              EQU		7                                       
SPI_SR_BSY_Msk              EQU		0x1 << SPI_SR_BSY_Pos                      ;/*!< 0x00000080 */
SPI_SR_BSY                  EQU		SPI_SR_BSY_Msk                             ;/*!<Busy flag                */
SPI_SR_FRE_Pos              EQU		8                                       
SPI_SR_FRE_Msk              EQU		0x1 << SPI_SR_FRE_Pos                      ;/*!< 0x00000100 */
SPI_SR_FRE                  EQU		SPI_SR_FRE_Msk                             ;/*!<Frame format error flag  */

SPI_DR		                EQU		0x0C
;/********************  Bit definition for SPI_DR register  ********************/
SPI_DR_DR_Pos               EQU		0                                       
SPI_DR_DR_Msk               EQU		0xFFFF << SPI_DR_DR_Pos                    ;/*!< 0x0000FFFF */
SPI_DR_DR                   EQU		SPI_DR_DR_Msk                              ;/*!<Data Register           */

SPI_CRCPR			        EQU		0x10
;/*******************  Bit definition for SPI_CRCPR register  ******************/
SPI_CRCPR_CRCPOLY_Pos       EQU		0                                       
SPI_CRCPR_CRCPOLY_Msk       EQU		0xFFFF << SPI_CRCPR_CRCPOLY_Pos            ;/*!< 0x0000FFFF */
SPI_CRCPR_CRCPOLY           EQU		SPI_CRCPR_CRCPOLY_Msk                      ;/*!<CRC polynomial register */

SPI_RXCRCR			        EQU		0x14
;/******************  Bit definition for SPI_RXCRCR register  ******************/
SPI_RXCRCR_RXCRC_Pos        EQU		0                                       
SPI_RXCRCR_RXCRC_Msk        EQU		0xFFFF << SPI_RXCRCR_RXCRC_Pos             ;/*!< 0x0000FFFF */
SPI_RXCRCR_RXCRC            EQU		SPI_RXCRCR_RXCRC_Msk                       ;/*!<Rx CRC Register         */

SPI_TXCRCR			        EQU		0x18
;/******************  Bit definition for SPI_TXCRCR register  ******************/
SPI_TXCRCR_TXCRC_Pos        EQU		0                                       
SPI_TXCRCR_TXCRC_Msk        EQU		0xFFFF << SPI_TXCRCR_TXCRC_Pos             ;/*!< 0x0000FFFF */
SPI_TXCRCR_TXCRC            EQU		SPI_TXCRCR_TXCRC_Msk                       ;/*!<Tx CRC Register         */

SPI_I2SCFGR			        EQU		0x1C
;/******************  Bit definition for SPI_I2SCFGR register  *****************/
SPI_I2SCFGR_CHLEN_Pos       EQU		0                                       
SPI_I2SCFGR_CHLEN_Msk       EQU		0x1 << SPI_I2SCFGR_CHLEN_Pos               ;/*!< 0x00000001 */
SPI_I2SCFGR_CHLEN           EQU		SPI_I2SCFGR_CHLEN_Msk                      ;/*!<Channel length EQU		number of bits per audio channel    */

SPI_I2SCFGR_DATLEN_Pos      EQU		1                                       
SPI_I2SCFGR_DATLEN_Msk      EQU		0x3 << SPI_I2SCFGR_DATLEN_Pos              ;/*!< 0x00000006 */
SPI_I2SCFGR_DATLEN          EQU		SPI_I2SCFGR_DATLEN_Msk                     ;/*!<DATLEN[1:0] bits EQU		Data length to be transferred     */
SPI_I2SCFGR_DATLEN_0        EQU		0x1 << SPI_I2SCFGR_DATLEN_Pos              ;/*!< 0x00000002 */
SPI_I2SCFGR_DATLEN_1        EQU		0x2 << SPI_I2SCFGR_DATLEN_Pos              ;/*!< 0x00000004 */

SPI_I2SCFGR_CKPOL_Pos       EQU		3                                       
SPI_I2SCFGR_CKPOL_Msk       EQU		0x1 << SPI_I2SCFGR_CKPOL_Pos               ;/*!< 0x00000008 */
SPI_I2SCFGR_CKPOL           EQU		SPI_I2SCFGR_CKPOL_Msk                      ;/*!<steady state clock polarity               */

SPI_I2SCFGR_I2SSTD_Pos      EQU		4                                       
SPI_I2SCFGR_I2SSTD_Msk      EQU		0x3 << SPI_I2SCFGR_I2SSTD_Pos              ;/*!< 0x00000030 */
SPI_I2SCFGR_I2SSTD          EQU		SPI_I2SCFGR_I2SSTD_Msk                     ;/*!<I2SSTD[1:0] bits EQU		I2S standard selection    */
SPI_I2SCFGR_I2SSTD_0        EQU		0x1 << SPI_I2SCFGR_I2SSTD_Pos              ;/*!< 0x00000010 */
SPI_I2SCFGR_I2SSTD_1        EQU		0x2 << SPI_I2SCFGR_I2SSTD_Pos              ;/*!< 0x00000020 */

SPI_I2SCFGR_PCMSYNC_Pos     EQU		7                                       
SPI_I2SCFGR_PCMSYNC_Msk     EQU		0x1 << SPI_I2SCFGR_PCMSYNC_Pos             ;/*!< 0x00000080 */
SPI_I2SCFGR_PCMSYNC         EQU		SPI_I2SCFGR_PCMSYNC_Msk                    ;/*!<PCM frame synchronization                 */

SPI_I2SCFGR_I2SCFG_Pos      EQU		8                                       
SPI_I2SCFGR_I2SCFG_Msk      EQU		0x3 << SPI_I2SCFGR_I2SCFG_Pos              ;/*!< 0x00000300 */
SPI_I2SCFGR_I2SCFG          EQU		SPI_I2SCFGR_I2SCFG_Msk                     ;/*!<I2SCFG[1:0] bits EQU		I2S configuration mode    */
SPI_I2SCFGR_I2SCFG_0        EQU		0x1 << SPI_I2SCFGR_I2SCFG_Pos              ;/*!< 0x00000100 */
SPI_I2SCFGR_I2SCFG_1        EQU		0x2 << SPI_I2SCFGR_I2SCFG_Pos              ;/*!< 0x00000200 */

SPI_I2SCFGR_I2SE_Pos        EQU		10                                      
SPI_I2SCFGR_I2SE_Msk        EQU		0x1 << SPI_I2SCFGR_I2SE_Pos                ;/*!< 0x00000400 */
SPI_I2SCFGR_I2SE            EQU		SPI_I2SCFGR_I2SE_Msk                       ;/*!<I2S Enable         */
SPI_I2SCFGR_I2SMOD_Pos      EQU		11                                      
SPI_I2SCFGR_I2SMOD_Msk      EQU		0x1 << SPI_I2SCFGR_I2SMOD_Pos              ;/*!< 0x00000800 */
SPI_I2SCFGR_I2SMOD          EQU		SPI_I2SCFGR_I2SMOD_Msk                     ;/*!<I2S mode selection */

SPI_I2SPR			        EQU		0x20
;/******************  Bit definition for SPI_I2SPR register  *******************/
SPI_I2SPR_I2SDIV_Pos        EQU		0                                       
SPI_I2SPR_I2SDIV_Msk        EQU		0xFF << SPI_I2SPR_I2SDIV_Pos               ;/*!< 0x000000FF */
SPI_I2SPR_I2SDIV            EQU		SPI_I2SPR_I2SDIV_Msk                       ;/*!<I2S Linear prescaler         */
SPI_I2SPR_ODD_Pos           EQU		8                                       
SPI_I2SPR_ODD_Msk           EQU		0x1 << SPI_I2SPR_ODD_Pos                   ;/*!< 0x00000100 */
SPI_I2SPR_ODD               EQU		SPI_I2SPR_ODD_Msk                          ;/*!<Odd factor for the prescaler */
SPI_I2SPR_MCKOE_Pos         EQU		9                                       
SPI_I2SPR_MCKOE_Msk         EQU		0x1 << SPI_I2SPR_MCKOE_Pos                 ;/*!< 0x00000200 */
SPI_I2SPR_MCKOE             EQU		SPI_I2SPR_MCKOE_Msk                        ;/*!<Master Clock Output Enable   */

;/******************************************************************************/
;/*                                                                            */
;/*                                 SYSCFG                                     */
;/*                                                                            */
;/******************************************************************************/

SYSCFG_MEMRMP			             EQU		0x00
;/******************  Bit definition for SYSCFG_MEMRMP register  ***************/
SYSCFG_MEMRMP_MEM_MODE_Pos           EQU		0                              
SYSCFG_MEMRMP_MEM_MODE_Msk           EQU		0x3 << SYSCFG_MEMRMP_MEM_MODE_Pos    ;/*!< 0x00000003 */
SYSCFG_MEMRMP_MEM_MODE               EQU		SYSCFG_MEMRMP_MEM_MODE_Msk        	 ;/*!< SYSCFG_Memory Remap Config */
SYSCFG_MEMRMP_MEM_MODE_0             EQU		0x1 << SYSCFG_MEMRMP_MEM_MODE_Pos    ;/*!< 0x00000001 */
SYSCFG_MEMRMP_MEM_MODE_1             EQU		0x2 << SYSCFG_MEMRMP_MEM_MODE_Pos    ;/*!< 0x00000002 */

SYSCFG_PMC					         EQU		0x04
;/******************  Bit definition for SYSCFG_PMC register  ******************/
SYSCFG_PMC_MII_RMII_SEL_Pos          EQU		23                             
SYSCFG_PMC_MII_RMII_SEL_Msk          EQU		0x1 << SYSCFG_PMC_MII_RMII_SEL_Pos    ;/*!< 0x00800000 */
SYSCFG_PMC_MII_RMII_SEL              EQU		SYSCFG_PMC_MII_RMII_SEL_Msk       	  ;/*!<Ethernet PHY interface selection */

;/* Old MII_RMII_SEL bit definition, maintained for legacy purpose */
SYSCFG_PMC_MII_RMII       		     EQU		SYSCFG_PMC_MII_RMII_SEL    

SYSCFG_EXTICR1			             EQU		0x08
;/*****************  Bit definition for SYSCFG_EXTICR1 register  ***************/
SYSCFG_EXTICR1_EXTI0_Pos             EQU		0                              
SYSCFG_EXTICR1_EXTI0_Msk             EQU		0xF << SYSCFG_EXTICR1_EXTI0_Pos    ;/*!< 0x0000000F */
SYSCFG_EXTICR1_EXTI0                 EQU		SYSCFG_EXTICR1_EXTI0_Msk           ;/*!<EXTI 0 configuration */
SYSCFG_EXTICR1_EXTI1_Pos             EQU		4                              
SYSCFG_EXTICR1_EXTI1_Msk             EQU		0xF << SYSCFG_EXTICR1_EXTI1_Pos    ;/*!< 0x000000F0 */
SYSCFG_EXTICR1_EXTI1                 EQU		SYSCFG_EXTICR1_EXTI1_Msk           ;/*!<EXTI 1 configuration */
SYSCFG_EXTICR1_EXTI2_Pos             EQU		8                              
SYSCFG_EXTICR1_EXTI2_Msk             EQU		0xF << SYSCFG_EXTICR1_EXTI2_Pos    ;/*!< 0x00000F00 */
SYSCFG_EXTICR1_EXTI2                 EQU		SYSCFG_EXTICR1_EXTI2_Msk           ;/*!<EXTI 2 configuration */
SYSCFG_EXTICR1_EXTI3_Pos             EQU		12                             
SYSCFG_EXTICR1_EXTI3_Msk             EQU		0xF << SYSCFG_EXTICR1_EXTI3_Pos    ;/*!< 0x0000F000 */
SYSCFG_EXTICR1_EXTI3                 EQU		SYSCFG_EXTICR1_EXTI3_Msk           ;/*!<EXTI 3 configuration */

;/**
;  * @brief   EXTI0 configuration  
;  */
SYSCFG_EXTICR1_EXTI0_PA              EQU		0x0000                           ;/*!<PA[0] pin */
SYSCFG_EXTICR1_EXTI0_PB              EQU		0x0001                           ;/*!<PB[0] pin */
SYSCFG_EXTICR1_EXTI0_PC              EQU		0x0002                           ;/*!<PC[0] pin */
SYSCFG_EXTICR1_EXTI0_PD              EQU		0x0003                           ;/*!<PD[0] pin */
SYSCFG_EXTICR1_EXTI0_PE              EQU		0x0004                           ;/*!<PE[0] pin */
SYSCFG_EXTICR1_EXTI0_PF              EQU		0x0005                           ;/*!<PF[0] pin */
SYSCFG_EXTICR1_EXTI0_PG              EQU		0x0006                           ;/*!<PG[0] pin */
SYSCFG_EXTICR1_EXTI0_PH              EQU		0x0007                           ;/*!<PH[0] pin */
SYSCFG_EXTICR1_EXTI0_PI              EQU		0x0008                           ;/*!<PI[0] pin */

;/**
;  * @brief   EXTI1 configuration  
;  */
SYSCFG_EXTICR1_EXTI1_PA              EQU		0x0000                           ;/*!<PA[1] pin */
SYSCFG_EXTICR1_EXTI1_PB              EQU		0x0010                           ;/*!<PB[1] pin */
SYSCFG_EXTICR1_EXTI1_PC              EQU		0x0020                           ;/*!<PC[1] pin */
SYSCFG_EXTICR1_EXTI1_PD              EQU		0x0030                           ;/*!<PD[1] pin */
SYSCFG_EXTICR1_EXTI1_PE              EQU		0x0040                           ;/*!<PE[1] pin */
SYSCFG_EXTICR1_EXTI1_PF              EQU		0x0050                           ;/*!<PF[1] pin */
SYSCFG_EXTICR1_EXTI1_PG              EQU		0x0060                           ;/*!<PG[1] pin */
SYSCFG_EXTICR1_EXTI1_PH              EQU		0x0070                           ;/*!<PH[1] pin */
SYSCFG_EXTICR1_EXTI1_PI              EQU		0x0080                           ;/*!<PI[1] pin */

;/**
;  * @brief   EXTI2 configuration  
;  */
SYSCFG_EXTICR1_EXTI2_PA              EQU		0x0000                           ;/*!<PA[2] pin */
SYSCFG_EXTICR1_EXTI2_PB              EQU		0x0100                           ;/*!<PB[2] pin */
SYSCFG_EXTICR1_EXTI2_PC              EQU		0x0200                           ;/*!<PC[2] pin */
SYSCFG_EXTICR1_EXTI2_PD              EQU		0x0300                           ;/*!<PD[2] pin */
SYSCFG_EXTICR1_EXTI2_PE              EQU		0x0400                           ;/*!<PE[2] pin */
SYSCFG_EXTICR1_EXTI2_PF              EQU		0x0500                           ;/*!<PF[2] pin */
SYSCFG_EXTICR1_EXTI2_PG              EQU		0x0600                           ;/*!<PG[2] pin */
SYSCFG_EXTICR1_EXTI2_PH              EQU		0x0700                           ;/*!<PH[2] pin */
SYSCFG_EXTICR1_EXTI2_PI              EQU		0x0800                           ;/*!<PI[2] pin */

;/**
;  * @brief   EXTI3 configuration  
;  */
SYSCFG_EXTICR1_EXTI3_PA              EQU		0x0000                           ;/*!<PA[3] pin */
SYSCFG_EXTICR1_EXTI3_PB              EQU		0x1000                           ;/*!<PB[3] pin */
SYSCFG_EXTICR1_EXTI3_PC              EQU		0x2000                           ;/*!<PC[3] pin */
SYSCFG_EXTICR1_EXTI3_PD              EQU		0x3000                           ;/*!<PD[3] pin */
SYSCFG_EXTICR1_EXTI3_PE              EQU		0x4000                           ;/*!<PE[3] pin */
SYSCFG_EXTICR1_EXTI3_PF              EQU		0x5000                           ;/*!<PF[3] pin */
SYSCFG_EXTICR1_EXTI3_PG              EQU		0x6000                           ;/*!<PG[3] pin */
SYSCFG_EXTICR1_EXTI3_PH              EQU		0x7000                           ;/*!<PH[3] pin */
SYSCFG_EXTICR1_EXTI3_PI              EQU		0x8000                           ;/*!<PI[3] pin */

SYSCFG_EXTICR2			             EQU		0x0C
;/*****************  Bit definition for SYSCFG_EXTICR2 register  ***************/
SYSCFG_EXTICR2_EXTI4_Pos             EQU		0                              
SYSCFG_EXTICR2_EXTI4_Msk             EQU		0xF << SYSCFG_EXTICR2_EXTI4_Pos    ;/*!< 0x0000000F */
SYSCFG_EXTICR2_EXTI4                 EQU		SYSCFG_EXTICR2_EXTI4_Msk           ;/*!<EXTI 4 configuration */
SYSCFG_EXTICR2_EXTI5_Pos             EQU		4                              
SYSCFG_EXTICR2_EXTI5_Msk             EQU		0xF << SYSCFG_EXTICR2_EXTI5_Pos    ;/*!< 0x000000F0 */
SYSCFG_EXTICR2_EXTI5                 EQU		SYSCFG_EXTICR2_EXTI5_Msk           ;/*!<EXTI 5 configuration */
SYSCFG_EXTICR2_EXTI6_Pos             EQU		8                              
SYSCFG_EXTICR2_EXTI6_Msk             EQU		0xF << SYSCFG_EXTICR2_EXTI6_Pos    ;/*!< 0x00000F00 */
SYSCFG_EXTICR2_EXTI6                 EQU		SYSCFG_EXTICR2_EXTI6_Msk           ;/*!<EXTI 6 configuration */
SYSCFG_EXTICR2_EXTI7_Pos             EQU		12                             
SYSCFG_EXTICR2_EXTI7_Msk             EQU		0xF << SYSCFG_EXTICR2_EXTI7_Pos    ;/*!< 0x0000F000 */
SYSCFG_EXTICR2_EXTI7                 EQU		SYSCFG_EXTICR2_EXTI7_Msk           ;/*!<EXTI 7 configuration */

;/**
;  * @brief   EXTI4 configuration  
;  */
SYSCFG_EXTICR2_EXTI4_PA              EQU		0x0000                           ;/*!<PA[4] pin */
SYSCFG_EXTICR2_EXTI4_PB              EQU		0x0001                           ;/*!<PB[4] pin */
SYSCFG_EXTICR2_EXTI4_PC              EQU		0x0002                           ;/*!<PC[4] pin */
SYSCFG_EXTICR2_EXTI4_PD              EQU		0x0003                           ;/*!<PD[4] pin */
SYSCFG_EXTICR2_EXTI4_PE              EQU		0x0004                           ;/*!<PE[4] pin */
SYSCFG_EXTICR2_EXTI4_PF              EQU		0x0005                           ;/*!<PF[4] pin */
SYSCFG_EXTICR2_EXTI4_PG              EQU		0x0006                           ;/*!<PG[4] pin */
SYSCFG_EXTICR2_EXTI4_PH              EQU		0x0007                           ;/*!<PH[4] pin */
SYSCFG_EXTICR2_EXTI4_PI              EQU		0x0008                           ;/*!<PI[4] pin */

;/**
;  * @brief   EXTI5 configuration  
;  */
SYSCFG_EXTICR2_EXTI5_PA              EQU		0x0000                           ;/*!<PA[5] pin */
SYSCFG_EXTICR2_EXTI5_PB              EQU		0x0010                           ;/*!<PB[5] pin */
SYSCFG_EXTICR2_EXTI5_PC              EQU		0x0020                           ;/*!<PC[5] pin */
SYSCFG_EXTICR2_EXTI5_PD              EQU		0x0030                           ;/*!<PD[5] pin */
SYSCFG_EXTICR2_EXTI5_PE              EQU		0x0040                           ;/*!<PE[5] pin */
SYSCFG_EXTICR2_EXTI5_PF              EQU		0x0050                           ;/*!<PF[5] pin */
SYSCFG_EXTICR2_EXTI5_PG              EQU		0x0060                           ;/*!<PG[5] pin */
SYSCFG_EXTICR2_EXTI5_PH              EQU		0x0070                           ;/*!<PH[5] pin */
SYSCFG_EXTICR2_EXTI5_PI              EQU		0x0080                           ;/*!<PI[5] pin */

;/**
;  * @brief   EXTI6 configuration  
;  */
SYSCFG_EXTICR2_EXTI6_PA              EQU		0x0000                           ;/*!<PA[6] pin */
SYSCFG_EXTICR2_EXTI6_PB              EQU		0x0100                           ;/*!<PB[6] pin */
SYSCFG_EXTICR2_EXTI6_PC              EQU		0x0200                           ;/*!<PC[6] pin */
SYSCFG_EXTICR2_EXTI6_PD              EQU		0x0300                           ;/*!<PD[6] pin */
SYSCFG_EXTICR2_EXTI6_PE              EQU		0x0400                           ;/*!<PE[6] pin */
SYSCFG_EXTICR2_EXTI6_PF              EQU		0x0500                           ;/*!<PF[6] pin */
SYSCFG_EXTICR2_EXTI6_PG              EQU		0x0600                           ;/*!<PG[6] pin */
SYSCFG_EXTICR2_EXTI6_PH              EQU		0x0700                           ;/*!<PH[6] pin */
SYSCFG_EXTICR2_EXTI6_PI              EQU		0x0800                           ;/*!<PI[6] pin */

;/**
;  * @brief   EXTI7 configuration  
;  */
SYSCFG_EXTICR2_EXTI7_PA              EQU		0x0000                           ;/*!<PA[7] pin */
SYSCFG_EXTICR2_EXTI7_PB              EQU		0x1000                           ;/*!<PB[7] pin */
SYSCFG_EXTICR2_EXTI7_PC              EQU		0x2000                           ;/*!<PC[7] pin */
SYSCFG_EXTICR2_EXTI7_PD              EQU		0x3000                           ;/*!<PD[7] pin */
SYSCFG_EXTICR2_EXTI7_PE              EQU		0x4000                           ;/*!<PE[7] pin */
SYSCFG_EXTICR2_EXTI7_PF              EQU		0x5000                           ;/*!<PF[7] pin */
SYSCFG_EXTICR2_EXTI7_PG              EQU		0x6000                           ;/*!<PG[7] pin */
SYSCFG_EXTICR2_EXTI7_PH              EQU		0x7000                           ;/*!<PH[7] pin */
SYSCFG_EXTICR2_EXTI7_PI              EQU		0x8000                           ;/*!<PI[7] pin */

SYSCFG_EXTICR3			             EQU		0x10
;/*****************  Bit definition for SYSCFG_EXTICR3 register  ***************/
SYSCFG_EXTICR3_EXTI8_Pos             EQU		0                              
SYSCFG_EXTICR3_EXTI8_Msk             EQU		0xF << SYSCFG_EXTICR3_EXTI8_Pos    ;/*!< 0x0000000F */
SYSCFG_EXTICR3_EXTI8                 EQU		SYSCFG_EXTICR3_EXTI8_Msk            ;/*!<EXTI 8 configuration */
SYSCFG_EXTICR3_EXTI9_Pos             EQU		4                              
SYSCFG_EXTICR3_EXTI9_Msk             EQU		0xF << SYSCFG_EXTICR3_EXTI9_Pos    ;/*!< 0x000000F0 */
SYSCFG_EXTICR3_EXTI9                 EQU		SYSCFG_EXTICR3_EXTI9_Msk            ;/*!<EXTI 9 configuration */
SYSCFG_EXTICR3_EXTI10_Pos            EQU		8                              
SYSCFG_EXTICR3_EXTI10_Msk            EQU		0xF << SYSCFG_EXTICR3_EXTI10_Pos    ;/*!< 0x00000F00 */
SYSCFG_EXTICR3_EXTI10                EQU		SYSCFG_EXTICR3_EXTI10_Msk           ;/*!<EXTI 10 configuration */
SYSCFG_EXTICR3_EXTI11_Pos            EQU		12                             
SYSCFG_EXTICR3_EXTI11_Msk            EQU		0xF << SYSCFG_EXTICR3_EXTI11_Pos    ;/*!< 0x0000F000 */
SYSCFG_EXTICR3_EXTI11                EQU		SYSCFG_EXTICR3_EXTI11_Msk           ;/*!<EXTI 11 configuration */

;/**
;  * @brief   EXTI8 configuration  
;  */
SYSCFG_EXTICR3_EXTI8_PA              EQU		0x0000                           ;/*!<PA[8] pin */
SYSCFG_EXTICR3_EXTI8_PB              EQU		0x0001                           ;/*!<PB[8] pin */
SYSCFG_EXTICR3_EXTI8_PC              EQU		0x0002                           ;/*!<PC[8] pin */
SYSCFG_EXTICR3_EXTI8_PD              EQU		0x0003                           ;/*!<PD[8] pin */
SYSCFG_EXTICR3_EXTI8_PE              EQU		0x0004                           ;/*!<PE[8] pin */
SYSCFG_EXTICR3_EXTI8_PF              EQU		0x0005                           ;/*!<PF[8] pin */
SYSCFG_EXTICR3_EXTI8_PG              EQU		0x0006                           ;/*!<PG[8] pin */
SYSCFG_EXTICR3_EXTI8_PH              EQU		0x0007                           ;/*!<PH[8] pin */
SYSCFG_EXTICR3_EXTI8_PI              EQU		0x0008                           ;/*!<PI[8] pin */

;/**
;  * @brief   EXTI9 configuration  
;  */
SYSCFG_EXTICR3_EXTI9_PA              EQU		0x0000                           ;/*!<PA[9] pin */
SYSCFG_EXTICR3_EXTI9_PB              EQU		0x0010                           ;/*!<PB[9] pin */
SYSCFG_EXTICR3_EXTI9_PC              EQU		0x0020                           ;/*!<PC[9] pin */
SYSCFG_EXTICR3_EXTI9_PD              EQU		0x0030                           ;/*!<PD[9] pin */
SYSCFG_EXTICR3_EXTI9_PE              EQU		0x0040                           ;/*!<PE[9] pin */
SYSCFG_EXTICR3_EXTI9_PF              EQU		0x0050                           ;/*!<PF[9] pin */
SYSCFG_EXTICR3_EXTI9_PG              EQU		0x0060                           ;/*!<PG[9] pin */
SYSCFG_EXTICR3_EXTI9_PH              EQU		0x0070                           ;/*!<PH[9] pin */
SYSCFG_EXTICR3_EXTI9_PI              EQU		0x0080                           ;/*!<PI[9] pin */

;/**
;  * @brief   EXTI10 configuration  
;  */
SYSCFG_EXTICR3_EXTI10_PA             EQU		0x0000                           ;/*!<PA[10] pin */
SYSCFG_EXTICR3_EXTI10_PB             EQU		0x0100                           ;/*!<PB[10] pin */
SYSCFG_EXTICR3_EXTI10_PC             EQU		0x0200                           ;/*!<PC[10] pin */
SYSCFG_EXTICR3_EXTI10_PD             EQU		0x0300                           ;/*!<PD[10] pin */
SYSCFG_EXTICR3_EXTI10_PE             EQU		0x0400                           ;/*!<PE[10] pin */
SYSCFG_EXTICR3_EXTI10_PF             EQU		0x0500                           ;/*!<PF[10] pin */
SYSCFG_EXTICR3_EXTI10_PG             EQU		0x0600                           ;/*!<PG[10] pin */
SYSCFG_EXTICR3_EXTI10_PH             EQU		0x0700                           ;/*!<PH[10] pin */
SYSCFG_EXTICR3_EXTI10_PI             EQU		0x0800                           ;/*!<PI[10] pin */

;/**
;  * @brief   EXTI11 configuration  
;  */
SYSCFG_EXTICR3_EXTI11_PA             EQU		0x0000                           ;/*!<PA[11] pin */
SYSCFG_EXTICR3_EXTI11_PB             EQU		0x1000                           ;/*!<PB[11] pin */
SYSCFG_EXTICR3_EXTI11_PC             EQU		0x2000                           ;/*!<PC[11] pin */
SYSCFG_EXTICR3_EXTI11_PD             EQU		0x3000                           ;/*!<PD[11] pin */
SYSCFG_EXTICR3_EXTI11_PE             EQU		0x4000                           ;/*!<PE[11] pin */
SYSCFG_EXTICR3_EXTI11_PF             EQU		0x5000                           ;/*!<PF[11] pin */
SYSCFG_EXTICR3_EXTI11_PG             EQU		0x6000                           ;/*!<PG[11] pin */
SYSCFG_EXTICR3_EXTI11_PH             EQU		0x7000                           ;/*!<PH[11] pin */
SYSCFG_EXTICR3_EXTI11_PI             EQU		0x8000                           ;/*!<PI[11] pin */

SYSCFG_EXTICR4				         EQU		0x14
;/*****************  Bit definition for SYSCFG_EXTICR4 register  ***************/
SYSCFG_EXTICR4_EXTI12_Pos            EQU		0                              
SYSCFG_EXTICR4_EXTI12_Msk            EQU		0xF << SYSCFG_EXTICR4_EXTI12_Pos    ;/*!< 0x0000000F */
SYSCFG_EXTICR4_EXTI12                EQU		SYSCFG_EXTICR4_EXTI12_Msk           ;/*!<EXTI 12 configuration */
SYSCFG_EXTICR4_EXTI13_Pos            EQU		4                              
SYSCFG_EXTICR4_EXTI13_Msk            EQU		0xF << SYSCFG_EXTICR4_EXTI13_Pos    ;/*!< 0x000000F0 */
SYSCFG_EXTICR4_EXTI13                EQU		SYSCFG_EXTICR4_EXTI13_Msk           ;/*!<EXTI 13 configuration */
SYSCFG_EXTICR4_EXTI14_Pos            EQU		8                              
SYSCFG_EXTICR4_EXTI14_Msk            EQU		0xF << SYSCFG_EXTICR4_EXTI14_Pos    ;/*!< 0x00000F00 */
SYSCFG_EXTICR4_EXTI14                EQU		SYSCFG_EXTICR4_EXTI14_Msk           ;/*!<EXTI 14 configuration */
SYSCFG_EXTICR4_EXTI15_Pos            EQU		12                             
SYSCFG_EXTICR4_EXTI15_Msk            EQU		0xF << SYSCFG_EXTICR4_EXTI15_Pos    ;/*!< 0x0000F000 */
SYSCFG_EXTICR4_EXTI15                EQU		SYSCFG_EXTICR4_EXTI15_Msk           ;/*!<EXTI 15 configuration */

;/**
;  * @brief   EXTI12 configuration  
;  */
SYSCFG_EXTICR4_EXTI12_PA             EQU		0x0000                           ;/*!<PA[12] pin */
SYSCFG_EXTICR4_EXTI12_PB             EQU		0x0001                           ;/*!<PB[12] pin */
SYSCFG_EXTICR4_EXTI12_PC             EQU		0x0002                           ;/*!<PC[12] pin */
SYSCFG_EXTICR4_EXTI12_PD             EQU		0x0003                           ;/*!<PD[12] pin */
SYSCFG_EXTICR4_EXTI12_PE             EQU		0x0004                           ;/*!<PE[12] pin */
SYSCFG_EXTICR4_EXTI12_PF             EQU		0x0005                           ;/*!<PF[12] pin */
SYSCFG_EXTICR4_EXTI12_PG             EQU		0x0006                           ;/*!<PG[12] pin */
SYSCFG_EXTICR4_EXTI12_PH             EQU		0x0007                           ;/*!<PH[12] pin */

;/**
;  * @brief   EXTI13 configuration  
;  */
SYSCFG_EXTICR4_EXTI13_PA             EQU		0x0000                           ;/*!<PA[13] pin */
SYSCFG_EXTICR4_EXTI13_PB             EQU		0x0010                           ;/*!<PB[13] pin */
SYSCFG_EXTICR4_EXTI13_PC             EQU		0x0020                           ;/*!<PC[13] pin */
SYSCFG_EXTICR4_EXTI13_PD             EQU		0x0030                           ;/*!<PD[13] pin */
SYSCFG_EXTICR4_EXTI13_PE             EQU		0x0040                           ;/*!<PE[13] pin */
SYSCFG_EXTICR4_EXTI13_PF             EQU		0x0050                           ;/*!<PF[13] pin */
SYSCFG_EXTICR4_EXTI13_PG             EQU		0x0060                           ;/*!<PG[13] pin */
SYSCFG_EXTICR4_EXTI13_PH             EQU		0x0070                           ;/*!<PH[13] pin */

;/**
;  * @brief   EXTI14 configuration  
;  */
SYSCFG_EXTICR4_EXTI14_PA             EQU		0x0000                           ;/*!<PA[14] pin */
SYSCFG_EXTICR4_EXTI14_PB             EQU		0x0100                           ;/*!<PB[14] pin */
SYSCFG_EXTICR4_EXTI14_PC             EQU		0x0200                           ;/*!<PC[14] pin */
SYSCFG_EXTICR4_EXTI14_PD             EQU		0x0300                           ;/*!<PD[14] pin */
SYSCFG_EXTICR4_EXTI14_PE             EQU		0x0400                           ;/*!<PE[14] pin */
SYSCFG_EXTICR4_EXTI14_PF             EQU		0x0500                           ;/*!<PF[14] pin */
SYSCFG_EXTICR4_EXTI14_PG             EQU		0x0600                           ;/*!<PG[14] pin */
SYSCFG_EXTICR4_EXTI14_PH             EQU		0x0700                           ;/*!<PH[14] pin */

;/**
;  * @brief   EXTI15 configuration  
;  */
SYSCFG_EXTICR4_EXTI15_PA             EQU		0x0000                           ;/*!<PA[15] pin */
SYSCFG_EXTICR4_EXTI15_PB             EQU		0x1000                           ;/*!<PB[15] pin */
SYSCFG_EXTICR4_EXTI15_PC             EQU		0x2000                           ;/*!<PC[15] pin */
SYSCFG_EXTICR4_EXTI15_PD             EQU		0x3000                           ;/*!<PD[15] pin */
SYSCFG_EXTICR4_EXTI15_PE             EQU		0x4000                           ;/*!<PE[15] pin */
SYSCFG_EXTICR4_EXTI15_PF             EQU		0x5000                           ;/*!<PF[15] pin */
SYSCFG_EXTICR4_EXTI15_PG             EQU		0x6000                           ;/*!<PG[15] pin */
SYSCFG_EXTICR4_EXTI15_PH             EQU		0x7000                           ;/*!<PH[15] pin */

SYSCFG_CMPCR			             EQU		0x20
;/******************  Bit definition for SYSCFG_CMPCR register  ****************/
SYSCFG_CMPCR_CMP_PD_Pos              EQU		0                              
SYSCFG_CMPCR_CMP_PD_Msk              EQU		0x1 << SYSCFG_CMPCR_CMP_PD_Pos    ;/*!< 0x00000001 */
SYSCFG_CMPCR_CMP_PD                  EQU		SYSCFG_CMPCR_CMP_PD_Msk           ;/*!<Compensation cell ready flag */
SYSCFG_CMPCR_READY_Pos               EQU		8                              
SYSCFG_CMPCR_READY_Msk               EQU		0x1 << SYSCFG_CMPCR_READY_Pos     ;/*!< 0x00000100 */
SYSCFG_CMPCR_READY                   EQU		SYSCFG_CMPCR_READY_Msk            ;/*!<Compensation cell power-down */

;/******************************************************************************/
;/*                                                                            */
;/*                                    TIM                                     */
;/*                                                                            */
;/******************************************************************************/

TIM_CR1			          EQU		0x00
;/*******************  Bit definition for TIM_CR1 register  ********************/
TIM_CR1_CEN_Pos           EQU		0                                         
TIM_CR1_CEN_Msk           EQU		0x1 << TIM_CR1_CEN_Pos                       ;/*!< 0x00000001 */
TIM_CR1_CEN               EQU		TIM_CR1_CEN_Msk                              ;/*!<Counter enable        */
TIM_CR1_UDIS_Pos          EQU		1                                         
TIM_CR1_UDIS_Msk          EQU		0x1 << TIM_CR1_UDIS_Pos                      ;/*!< 0x00000002 */
TIM_CR1_UDIS              EQU		TIM_CR1_UDIS_Msk                             ;/*!<Update disable        */
TIM_CR1_URS_Pos           EQU		2                                         
TIM_CR1_URS_Msk           EQU		0x1 << TIM_CR1_URS_Pos                       ;/*!< 0x00000004 */
TIM_CR1_URS               EQU		TIM_CR1_URS_Msk                              ;/*!<Update request source */
TIM_CR1_OPM_Pos           EQU		3                                         
TIM_CR1_OPM_Msk           EQU		0x1 << TIM_CR1_OPM_Pos                       ;/*!< 0x00000008 */
TIM_CR1_OPM               EQU		TIM_CR1_OPM_Msk                              ;/*!<One pulse mode        */
TIM_CR1_DIR_Pos           EQU		4                                         
TIM_CR1_DIR_Msk           EQU		0x1 << TIM_CR1_DIR_Pos                       ;/*!< 0x00000010 */
TIM_CR1_DIR               EQU		TIM_CR1_DIR_Msk                              ;/*!<Direction             */

TIM_CR1_CMS_Pos           EQU		5                                         
TIM_CR1_CMS_Msk           EQU		0x3 << TIM_CR1_CMS_Pos                       ;/*!< 0x00000060 */
TIM_CR1_CMS               EQU		TIM_CR1_CMS_Msk                              ;/*!<CMS[1:0] bits EQU		Center-aligned mode selection    */
TIM_CR1_CMS_0             EQU		0x1 << TIM_CR1_CMS_Pos                       ;/*!< 0x0020 */
TIM_CR1_CMS_1             EQU		0x2 << TIM_CR1_CMS_Pos                       ;/*!< 0x0040 */

TIM_CR1_ARPE_Pos          EQU		7                                         
TIM_CR1_ARPE_Msk          EQU		0x1 << TIM_CR1_ARPE_Pos                      ;/*!< 0x00000080 */
TIM_CR1_ARPE              EQU		TIM_CR1_ARPE_Msk                             ;/*!<Auto-reload preload enable     */

TIM_CR1_CKD_Pos           EQU		8                                         
TIM_CR1_CKD_Msk           EQU		0x3 << TIM_CR1_CKD_Pos                       ;/*!< 0x00000300 */
TIM_CR1_CKD               EQU		TIM_CR1_CKD_Msk                              ;/*!<CKD[1:0] bits EQU		clock division    */
TIM_CR1_CKD_0             EQU		0x1 << TIM_CR1_CKD_Pos                       ;/*!< 0x0100 */
TIM_CR1_CKD_1             EQU		0x2 << TIM_CR1_CKD_Pos                       ;/*!< 0x0200 */

TIM_CR2			          EQU		0x04
;/*******************  Bit definition for TIM_CR2 register  ********************/
TIM_CR2_CCPC_Pos          EQU		0                                         
TIM_CR2_CCPC_Msk          EQU		0x1 << TIM_CR2_CCPC_Pos                      ;/*!< 0x00000001 */
TIM_CR2_CCPC              EQU		TIM_CR2_CCPC_Msk                             ;/*!<Capture/Compare Preloaded Control        */
TIM_CR2_CCUS_Pos          EQU		2                                         
TIM_CR2_CCUS_Msk          EQU		0x1 << TIM_CR2_CCUS_Pos                      ;/*!< 0x00000004 */
TIM_CR2_CCUS              EQU		TIM_CR2_CCUS_Msk                             ;/*!<Capture/Compare Control Update Selection */
TIM_CR2_CCDS_Pos          EQU		3                                         
TIM_CR2_CCDS_Msk          EQU		0x1 << TIM_CR2_CCDS_Pos                      ;/*!< 0x00000008 */
TIM_CR2_CCDS              EQU		TIM_CR2_CCDS_Msk                             ;/*!<Capture/Compare DMA Selection            */

TIM_CR2_MMS_Pos           EQU		4                                         
TIM_CR2_MMS_Msk           EQU		0x7 << TIM_CR2_MMS_Pos                       ;/*!< 0x00000070 */
TIM_CR2_MMS               EQU		TIM_CR2_MMS_Msk                              ;/*!<MMS[2:0] bits EQU		Master Mode Selection    */
TIM_CR2_MMS_0             EQU		0x1 << TIM_CR2_MMS_Pos                       ;/*!< 0x0010 */
TIM_CR2_MMS_1             EQU		0x2 << TIM_CR2_MMS_Pos                       ;/*!< 0x0020 */
TIM_CR2_MMS_2             EQU		0x4 << TIM_CR2_MMS_Pos                       ;/*!< 0x0040 */

TIM_CR2_TI1S_Pos          EQU		7                                         
TIM_CR2_TI1S_Msk          EQU		0x1 << TIM_CR2_TI1S_Pos                      ;/*!< 0x00000080 */
TIM_CR2_TI1S              EQU		TIM_CR2_TI1S_Msk                             ;/*!<TI1 Selection */
TIM_CR2_OIS1_Pos          EQU		8                                         
TIM_CR2_OIS1_Msk          EQU		0x1 << TIM_CR2_OIS1_Pos                      ;/*!< 0x00000100 */
TIM_CR2_OIS1              EQU		TIM_CR2_OIS1_Msk                             ;/*!<Output Idle state 1 EQU		OC1 output     */
TIM_CR2_OIS1N_Pos         EQU		9                                         
TIM_CR2_OIS1N_Msk         EQU		0x1 << TIM_CR2_OIS1N_Pos                     ;/*!< 0x00000200 */
TIM_CR2_OIS1N             EQU		TIM_CR2_OIS1N_Msk                            ;/*!<Output Idle state 1 EQU		OC1N output    */
TIM_CR2_OIS2_Pos          EQU		10                                        
TIM_CR2_OIS2_Msk          EQU		0x1 << TIM_CR2_OIS2_Pos                      ;/*!< 0x00000400 */
TIM_CR2_OIS2              EQU		TIM_CR2_OIS2_Msk                             ;/*!<Output Idle state 2 EQU		OC2 output     */
TIM_CR2_OIS2N_Pos         EQU		11                                        
TIM_CR2_OIS2N_Msk         EQU		0x1 << TIM_CR2_OIS2N_Pos                     ;/*!< 0x00000800 */
TIM_CR2_OIS2N             EQU		TIM_CR2_OIS2N_Msk                            ;/*!<Output Idle state 2 EQU		OC2N output    */
TIM_CR2_OIS3_Pos          EQU		12                                        
TIM_CR2_OIS3_Msk          EQU		0x1 << TIM_CR2_OIS3_Pos                      ;/*!< 0x00001000 */
TIM_CR2_OIS3              EQU		TIM_CR2_OIS3_Msk                             ;/*!<Output Idle state 3 EQU		OC3 output     */
TIM_CR2_OIS3N_Pos         EQU		13                                        
TIM_CR2_OIS3N_Msk         EQU		0x1 << TIM_CR2_OIS3N_Pos                     ;/*!< 0x00002000 */
TIM_CR2_OIS3N             EQU		TIM_CR2_OIS3N_Msk                            ;/*!<Output Idle state 3 EQU		OC3N output    */
TIM_CR2_OIS4_Pos          EQU		14                                        
TIM_CR2_OIS4_Msk          EQU		0x1 << TIM_CR2_OIS4_Pos                      ;/*!< 0x00004000 */
TIM_CR2_OIS4              EQU		TIM_CR2_OIS4_Msk                             ;/*!<Output Idle state 4 EQU		OC4 output     */

TIM_SMCR		          EQU		0x08
;/*******************  Bit definition for TIM_SMCR register  *******************/
TIM_SMCR_SMS_Pos          EQU		0                                         
TIM_SMCR_SMS_Msk          EQU		0x7 << TIM_SMCR_SMS_Pos                      ;/*!< 0x00000007 */
TIM_SMCR_SMS              EQU		TIM_SMCR_SMS_Msk                             ;/*!<SMS[2:0] bits EQU		Slave mode selection       */
TIM_SMCR_SMS_0            EQU		0x1 << TIM_SMCR_SMS_Pos                      ;/*!< 0x0001 */
TIM_SMCR_SMS_1            EQU		0x2 << TIM_SMCR_SMS_Pos                      ;/*!< 0x0002 */
TIM_SMCR_SMS_2            EQU		0x4 << TIM_SMCR_SMS_Pos                      ;/*!< 0x0004 */

TIM_SMCR_TS_Pos           EQU		4                                         
TIM_SMCR_TS_Msk           EQU		0x7 << TIM_SMCR_TS_Pos                       ;/*!< 0x00000070 */
TIM_SMCR_TS               EQU		TIM_SMCR_TS_Msk                              ;/*!<TS[2:0] bits EQU		Trigger selection           */
TIM_SMCR_TS_0             EQU		0x1 << TIM_SMCR_TS_Pos                       ;/*!< 0x0010 */
TIM_SMCR_TS_1             EQU		0x2 << TIM_SMCR_TS_Pos                       ;/*!< 0x0020 */
TIM_SMCR_TS_2             EQU		0x4 << TIM_SMCR_TS_Pos                       ;/*!< 0x0040 */

TIM_SMCR_MSM_Pos          EQU		7                                         
TIM_SMCR_MSM_Msk          EQU		0x1 << TIM_SMCR_MSM_Pos                      ;/*!< 0x00000080 */
TIM_SMCR_MSM              EQU		TIM_SMCR_MSM_Msk                             ;/*!<Master/slave mode                       */

TIM_SMCR_ETF_Pos          EQU		8                                         
TIM_SMCR_ETF_Msk          EQU		0xF << TIM_SMCR_ETF_Pos                      ;/*!< 0x00000F00 */
TIM_SMCR_ETF              EQU		TIM_SMCR_ETF_Msk                             ;/*!<ETF[3:0] bits EQU		External trigger filter    */
TIM_SMCR_ETF_0            EQU		0x1 << TIM_SMCR_ETF_Pos                      ;/*!< 0x0100 */
TIM_SMCR_ETF_1            EQU		0x2 << TIM_SMCR_ETF_Pos                      ;/*!< 0x0200 */
TIM_SMCR_ETF_2            EQU		0x4 << TIM_SMCR_ETF_Pos                      ;/*!< 0x0400 */
TIM_SMCR_ETF_3            EQU		0x8 << TIM_SMCR_ETF_Pos                      ;/*!< 0x0800 */

TIM_SMCR_ETPS_Pos         EQU		12                                        
TIM_SMCR_ETPS_Msk         EQU		0x3 << TIM_SMCR_ETPS_Pos                     ;/*!< 0x00003000 */
TIM_SMCR_ETPS             EQU		TIM_SMCR_ETPS_Msk                            ;/*!<ETPS[1:0] bits EQU		External trigger prescaler    */
TIM_SMCR_ETPS_0           EQU		0x1 << TIM_SMCR_ETPS_Pos                     ;/*!< 0x1000 */
TIM_SMCR_ETPS_1           EQU		0x2 << TIM_SMCR_ETPS_Pos                     ;/*!< 0x2000 */

TIM_SMCR_ECE_Pos          EQU		14                                        
TIM_SMCR_ECE_Msk          EQU		0x1 << TIM_SMCR_ECE_Pos                      ;/*!< 0x00004000 */
TIM_SMCR_ECE              EQU		TIM_SMCR_ECE_Msk                             ;/*!<External clock enable     */
TIM_SMCR_ETP_Pos          EQU		15                                        
TIM_SMCR_ETP_Msk          EQU		0x1 << TIM_SMCR_ETP_Pos                      ;/*!< 0x00008000 */
TIM_SMCR_ETP              EQU		TIM_SMCR_ETP_Msk                             ;/*!<External trigger polarity */

TIM_DIER		          EQU		0x0C
;/*******************  Bit definition for TIM_DIER register  *******************/
TIM_DIER_UIE_Pos          EQU		0                                         
TIM_DIER_UIE_Msk          EQU		0x1 << TIM_DIER_UIE_Pos                      ;/*!< 0x00000001 */
TIM_DIER_UIE              EQU		TIM_DIER_UIE_Msk                             ;/*!<Update interrupt enable */
TIM_DIER_CC1IE_Pos        EQU		1                                         
TIM_DIER_CC1IE_Msk        EQU		0x1 << TIM_DIER_CC1IE_Pos                    ;/*!< 0x00000002 */
TIM_DIER_CC1IE            EQU		TIM_DIER_CC1IE_Msk                           ;/*!<Capture/Compare 1 interrupt enable   */
TIM_DIER_CC2IE_Pos        EQU		2                                         
TIM_DIER_CC2IE_Msk        EQU		0x1 << TIM_DIER_CC2IE_Pos                    ;/*!< 0x00000004 */
TIM_DIER_CC2IE            EQU		TIM_DIER_CC2IE_Msk                           ;/*!<Capture/Compare 2 interrupt enable   */
TIM_DIER_CC3IE_Pos        EQU		3                                         
TIM_DIER_CC3IE_Msk        EQU		0x1 << TIM_DIER_CC3IE_Pos                    ;/*!< 0x00000008 */
TIM_DIER_CC3IE            EQU		TIM_DIER_CC3IE_Msk                           ;/*!<Capture/Compare 3 interrupt enable   */
TIM_DIER_CC4IE_Pos        EQU		4                                         
TIM_DIER_CC4IE_Msk        EQU		0x1 << TIM_DIER_CC4IE_Pos                    ;/*!< 0x00000010 */
TIM_DIER_CC4IE            EQU		TIM_DIER_CC4IE_Msk                           ;/*!<Capture/Compare 4 interrupt enable   */
TIM_DIER_COMIE_Pos        EQU		5                                         
TIM_DIER_COMIE_Msk        EQU		0x1 << TIM_DIER_COMIE_Pos                    ;/*!< 0x00000020 */
TIM_DIER_COMIE            EQU		TIM_DIER_COMIE_Msk                           ;/*!<COM interrupt enable                 */
TIM_DIER_TIE_Pos          EQU		6                                         
TIM_DIER_TIE_Msk          EQU		0x1 << TIM_DIER_TIE_Pos                      ;/*!< 0x00000040 */
TIM_DIER_TIE              EQU		TIM_DIER_TIE_Msk                             ;/*!<Trigger interrupt enable             */
TIM_DIER_BIE_Pos          EQU		7                                         
TIM_DIER_BIE_Msk          EQU		0x1 << TIM_DIER_BIE_Pos                      ;/*!< 0x00000080 */
TIM_DIER_BIE              EQU		TIM_DIER_BIE_Msk                             ;/*!<Break interrupt enable               */
TIM_DIER_UDE_Pos          EQU		8                                         
TIM_DIER_UDE_Msk          EQU		0x1 << TIM_DIER_UDE_Pos                      ;/*!< 0x00000100 */
TIM_DIER_UDE              EQU		TIM_DIER_UDE_Msk                             ;/*!<Update DMA request enable            */
TIM_DIER_CC1DE_Pos        EQU		9                                         
TIM_DIER_CC1DE_Msk        EQU		0x1 << TIM_DIER_CC1DE_Pos                    ;/*!< 0x00000200 */
TIM_DIER_CC1DE            EQU		TIM_DIER_CC1DE_Msk                           ;/*!<Capture/Compare 1 DMA request enable */
TIM_DIER_CC2DE_Pos        EQU		10                                        
TIM_DIER_CC2DE_Msk        EQU		0x1 << TIM_DIER_CC2DE_Pos                    ;/*!< 0x00000400 */
TIM_DIER_CC2DE            EQU		TIM_DIER_CC2DE_Msk                           ;/*!<Capture/Compare 2 DMA request enable */
TIM_DIER_CC3DE_Pos        EQU		11                                        
TIM_DIER_CC3DE_Msk        EQU		0x1 << TIM_DIER_CC3DE_Pos                    ;/*!< 0x00000800 */
TIM_DIER_CC3DE            EQU		TIM_DIER_CC3DE_Msk                           ;/*!<Capture/Compare 3 DMA request enable */
TIM_DIER_CC4DE_Pos        EQU		12                                        
TIM_DIER_CC4DE_Msk        EQU		0x1 << TIM_DIER_CC4DE_Pos                    ;/*!< 0x00001000 */
TIM_DIER_CC4DE            EQU		TIM_DIER_CC4DE_Msk                           ;/*!<Capture/Compare 4 DMA request enable */
TIM_DIER_COMDE_Pos        EQU		13                                        
TIM_DIER_COMDE_Msk        EQU		0x1 << TIM_DIER_COMDE_Pos                    ;/*!< 0x00002000 */
TIM_DIER_COMDE            EQU		TIM_DIER_COMDE_Msk                           ;/*!<COM DMA request enable               */
TIM_DIER_TDE_Pos          EQU		14                                        
TIM_DIER_TDE_Msk          EQU		0x1 << TIM_DIER_TDE_Pos                      ;/*!< 0x00004000 */
TIM_DIER_TDE              EQU		TIM_DIER_TDE_Msk                             ;/*!<Trigger DMA request enable           */

TIM_SR		              EQU		0x10
;/********************  Bit definition for TIM_SR register  ********************/
TIM_SR_UIF_Pos            EQU		0                                         
TIM_SR_UIF_Msk            EQU		0x1 << TIM_SR_UIF_Pos                        ;/*!< 0x00000001 */
TIM_SR_UIF                EQU		TIM_SR_UIF_Msk                               ;/*!<Update interrupt Flag              */
TIM_SR_CC1IF_Pos          EQU		1                                         
TIM_SR_CC1IF_Msk          EQU		0x1 << TIM_SR_CC1IF_Pos                      ;/*!< 0x00000002 */
TIM_SR_CC1IF              EQU		TIM_SR_CC1IF_Msk                             ;/*!<Capture/Compare 1 interrupt Flag   */
TIM_SR_CC2IF_Pos          EQU		2                                         
TIM_SR_CC2IF_Msk          EQU		0x1 << TIM_SR_CC2IF_Pos                      ;/*!< 0x00000004 */
TIM_SR_CC2IF              EQU		TIM_SR_CC2IF_Msk                             ;/*!<Capture/Compare 2 interrupt Flag   */
TIM_SR_CC3IF_Pos          EQU		3                                         
TIM_SR_CC3IF_Msk          EQU		0x1 << TIM_SR_CC3IF_Pos                      ;/*!< 0x00000008 */
TIM_SR_CC3IF              EQU		TIM_SR_CC3IF_Msk                             ;/*!<Capture/Compare 3 interrupt Flag   */
TIM_SR_CC4IF_Pos          EQU		4                                         
TIM_SR_CC4IF_Msk          EQU		0x1 << TIM_SR_CC4IF_Pos                      ;/*!< 0x00000010 */
TIM_SR_CC4IF              EQU		TIM_SR_CC4IF_Msk                             ;/*!<Capture/Compare 4 interrupt Flag   */
TIM_SR_COMIF_Pos          EQU		5                                         
TIM_SR_COMIF_Msk          EQU		0x1 << TIM_SR_COMIF_Pos                      ;/*!< 0x00000020 */
TIM_SR_COMIF              EQU		TIM_SR_COMIF_Msk                             ;/*!<COM interrupt Flag                 */
TIM_SR_TIF_Pos            EQU		6                                         
TIM_SR_TIF_Msk            EQU		0x1 << TIM_SR_TIF_Pos                        ;/*!< 0x00000040 */
TIM_SR_TIF                EQU		TIM_SR_TIF_Msk                               ;/*!<Trigger interrupt Flag             */
TIM_SR_BIF_Pos            EQU		7                                         
TIM_SR_BIF_Msk            EQU		0x1 << TIM_SR_BIF_Pos                        ;/*!< 0x00000080 */
TIM_SR_BIF                EQU		TIM_SR_BIF_Msk                               ;/*!<Break interrupt Flag               */
TIM_SR_CC1OF_Pos          EQU		9                                         
TIM_SR_CC1OF_Msk          EQU		0x1 << TIM_SR_CC1OF_Pos                      ;/*!< 0x00000200 */
TIM_SR_CC1OF              EQU		TIM_SR_CC1OF_Msk                             ;/*!<Capture/Compare 1 Overcapture Flag */
TIM_SR_CC2OF_Pos          EQU		10                                        
TIM_SR_CC2OF_Msk          EQU		0x1 << TIM_SR_CC2OF_Pos                      ;/*!< 0x00000400 */
TIM_SR_CC2OF              EQU		TIM_SR_CC2OF_Msk                             ;/*!<Capture/Compare 2 Overcapture Flag */
TIM_SR_CC3OF_Pos          EQU		11                                        
TIM_SR_CC3OF_Msk          EQU		0x1 << TIM_SR_CC3OF_Pos                      ;/*!< 0x00000800 */
TIM_SR_CC3OF              EQU		TIM_SR_CC3OF_Msk                             ;/*!<Capture/Compare 3 Overcapture Flag */
TIM_SR_CC4OF_Pos          EQU		12                                        
TIM_SR_CC4OF_Msk          EQU		0x1 << TIM_SR_CC4OF_Pos                      ;/*!< 0x00001000 */
TIM_SR_CC4OF              EQU		TIM_SR_CC4OF_Msk                             ;/*!<Capture/Compare 4 Overcapture Flag */

TIM_EGR			          EQU		0x14
;/*******************  Bit definition for TIM_EGR register  ********************/
TIM_EGR_UG_Pos            EQU		0                                         
TIM_EGR_UG_Msk            EQU		0x1 << TIM_EGR_UG_Pos                        ;/*!< 0x00000001 */
TIM_EGR_UG                EQU		TIM_EGR_UG_Msk                               ;/*!<Update Generation                         */
TIM_EGR_CC1G_Pos          EQU		1                                         
TIM_EGR_CC1G_Msk          EQU		0x1 << TIM_EGR_CC1G_Pos                      ;/*!< 0x00000002 */
TIM_EGR_CC1G              EQU		TIM_EGR_CC1G_Msk                             ;/*!<Capture/Compare 1 Generation              */
TIM_EGR_CC2G_Pos          EQU		2                                         
TIM_EGR_CC2G_Msk          EQU		0x1 << TIM_EGR_CC2G_Pos                      ;/*!< 0x00000004 */
TIM_EGR_CC2G              EQU		TIM_EGR_CC2G_Msk                             ;/*!<Capture/Compare 2 Generation              */
TIM_EGR_CC3G_Pos          EQU		3                                         
TIM_EGR_CC3G_Msk          EQU		0x1 << TIM_EGR_CC3G_Pos                      ;/*!< 0x00000008 */
TIM_EGR_CC3G              EQU		TIM_EGR_CC3G_Msk                             ;/*!<Capture/Compare 3 Generation              */
TIM_EGR_CC4G_Pos          EQU		4                                         
TIM_EGR_CC4G_Msk          EQU		0x1 << TIM_EGR_CC4G_Pos                      ;/*!< 0x00000010 */
TIM_EGR_CC4G              EQU		TIM_EGR_CC4G_Msk                             ;/*!<Capture/Compare 4 Generation              */
TIM_EGR_COMG_Pos          EQU		5                                         
TIM_EGR_COMG_Msk          EQU		0x1 << TIM_EGR_COMG_Pos                      ;/*!< 0x00000020 */
TIM_EGR_COMG              EQU		TIM_EGR_COMG_Msk                             ;/*!<Capture/Compare Control Update Generation */
TIM_EGR_TG_Pos            EQU		6                                         
TIM_EGR_TG_Msk            EQU		0x1 << TIM_EGR_TG_Pos                        ;/*!< 0x00000040 */
TIM_EGR_TG                EQU		TIM_EGR_TG_Msk                               ;/*!<Trigger Generation                        */
TIM_EGR_BG_Pos            EQU		7                                         
TIM_EGR_BG_Msk            EQU		0x1 << TIM_EGR_BG_Pos                        ;/*!< 0x00000080 */
TIM_EGR_BG                EQU		TIM_EGR_BG_Msk                               ;/*!<Break Generation                          */

TIM_CCMR1				  EQU		0x18
;/******************  Bit definition for TIM_CCMR1 register  *******************/
TIM_CCMR1_CC1S_Pos        EQU		0                                         
TIM_CCMR1_CC1S_Msk        EQU		0x3 << TIM_CCMR1_CC1S_Pos                    ;/*!< 0x00000003 */
TIM_CCMR1_CC1S            EQU		TIM_CCMR1_CC1S_Msk                           ;/*!<CC1S[1:0] bits EQU		Capture/Compare 1 Selection    */
TIM_CCMR1_CC1S_0          EQU		0x1 << TIM_CCMR1_CC1S_Pos                    ;/*!< 0x0001 */
TIM_CCMR1_CC1S_1          EQU		0x2 << TIM_CCMR1_CC1S_Pos                    ;/*!< 0x0002 */

TIM_CCMR1_OC1FE_Pos       EQU		2                                         
TIM_CCMR1_OC1FE_Msk       EQU		0x1 << TIM_CCMR1_OC1FE_Pos                   ;/*!< 0x00000004 */
TIM_CCMR1_OC1FE           EQU		TIM_CCMR1_OC1FE_Msk                          ;/*!<Output Compare 1 Fast enable                 */
TIM_CCMR1_OC1PE_Pos       EQU		3                                         
TIM_CCMR1_OC1PE_Msk       EQU		0x1 << TIM_CCMR1_OC1PE_Pos                   ;/*!< 0x00000008 */
TIM_CCMR1_OC1PE           EQU		TIM_CCMR1_OC1PE_Msk                          ;/*!<Output Compare 1 Preload enable              */

TIM_CCMR1_OC1M_Pos        EQU		4                                         
TIM_CCMR1_OC1M_Msk        EQU		0x7 << TIM_CCMR1_OC1M_Pos                    ;/*!< 0x00000070 */
TIM_CCMR1_OC1M            EQU		TIM_CCMR1_OC1M_Msk                           ;/*!<OC1M[2:0] bits EQU		Output Compare 1 Mode          */
TIM_CCMR1_OC1M_0          EQU		0x1 << TIM_CCMR1_OC1M_Pos                    ;/*!< 0x0010 */
TIM_CCMR1_OC1M_1          EQU		0x2 << TIM_CCMR1_OC1M_Pos                    ;/*!< 0x0020 */
TIM_CCMR1_OC1M_2          EQU		0x4 << TIM_CCMR1_OC1M_Pos                    ;/*!< 0x0040 */

TIM_CCMR1_OC1CE_Pos       EQU		7                                         
TIM_CCMR1_OC1CE_Msk       EQU		0x1 << TIM_CCMR1_OC1CE_Pos                   ;/*!< 0x00000080 */
TIM_CCMR1_OC1CE           EQU		TIM_CCMR1_OC1CE_Msk                          ;/*!<Output Compare 1Clear Enable                 */

TIM_CCMR1_CC2S_Pos        EQU		8                                         
TIM_CCMR1_CC2S_Msk        EQU		0x3 << TIM_CCMR1_CC2S_Pos                    ;/*!< 0x00000300 */
TIM_CCMR1_CC2S            EQU		TIM_CCMR1_CC2S_Msk                           ;/*!<CC2S[1:0] bits EQU		Capture/Compare 2 Selection    */
TIM_CCMR1_CC2S_0          EQU		0x1 << TIM_CCMR1_CC2S_Pos                    ;/*!< 0x0100 */
TIM_CCMR1_CC2S_1          EQU		0x2 << TIM_CCMR1_CC2S_Pos                    ;/*!< 0x0200 */

TIM_CCMR1_OC2FE_Pos       EQU		10                                        
TIM_CCMR1_OC2FE_Msk       EQU		0x1 << TIM_CCMR1_OC2FE_Pos                   ;/*!< 0x00000400 */
TIM_CCMR1_OC2FE           EQU		TIM_CCMR1_OC2FE_Msk                          ;/*!<Output Compare 2 Fast enable                 */
TIM_CCMR1_OC2PE_Pos       EQU		11                                        
TIM_CCMR1_OC2PE_Msk       EQU		0x1 << TIM_CCMR1_OC2PE_Pos                   ;/*!< 0x00000800 */
TIM_CCMR1_OC2PE           EQU		TIM_CCMR1_OC2PE_Msk                          ;/*!<Output Compare 2 Preload enable              */

TIM_CCMR1_OC2M_Pos        EQU		12                                        
TIM_CCMR1_OC2M_Msk        EQU		0x7 << TIM_CCMR1_OC2M_Pos                    ;/*!< 0x00007000 */
TIM_CCMR1_OC2M            EQU		TIM_CCMR1_OC2M_Msk                           ;/*!<OC2M[2:0] bits EQU		Output Compare 2 Mode          */
TIM_CCMR1_OC2M_0          EQU		0x1 << TIM_CCMR1_OC2M_Pos                    ;/*!< 0x1000 */
TIM_CCMR1_OC2M_1          EQU		0x2 << TIM_CCMR1_OC2M_Pos                    ;/*!< 0x2000 */
TIM_CCMR1_OC2M_2          EQU		0x4 << TIM_CCMR1_OC2M_Pos                    ;/*!< 0x4000 */

TIM_CCMR1_OC2CE_Pos       EQU		15                                        
TIM_CCMR1_OC2CE_Msk       EQU		0x1 << TIM_CCMR1_OC2CE_Pos                   ;/*!< 0x00008000 */
TIM_CCMR1_OC2CE           EQU		TIM_CCMR1_OC2CE_Msk                          ;/*!<Output Compare 2 Clear Enable */

;/*----------------------------------------------------------------------------*/

TIM_CCMR1_IC1PSC_Pos      EQU		2                                         
TIM_CCMR1_IC1PSC_Msk      EQU		0x3 << TIM_CCMR1_IC1PSC_Pos                  ;/*!< 0x0000000C */
TIM_CCMR1_IC1PSC          EQU		TIM_CCMR1_IC1PSC_Msk                         ;/*!<IC1PSC[1:0] bits EQU		Input Capture 1 Prescaler    */
TIM_CCMR1_IC1PSC_0        EQU		0x1 << TIM_CCMR1_IC1PSC_Pos                  ;/*!< 0x0004 */
TIM_CCMR1_IC1PSC_1        EQU		0x2 << TIM_CCMR1_IC1PSC_Pos                  ;/*!< 0x0008 */

TIM_CCMR1_IC1F_Pos        EQU		4                                         
TIM_CCMR1_IC1F_Msk        EQU		0xF << TIM_CCMR1_IC1F_Pos                    ;/*!< 0x000000F0 */
TIM_CCMR1_IC1F            EQU		TIM_CCMR1_IC1F_Msk                           ;/*!<IC1F[3:0] bits EQU		Input Capture 1 Filter         */
TIM_CCMR1_IC1F_0          EQU		0x1 << TIM_CCMR1_IC1F_Pos                    ;/*!< 0x0010 */
TIM_CCMR1_IC1F_1          EQU		0x2 << TIM_CCMR1_IC1F_Pos                    ;/*!< 0x0020 */
TIM_CCMR1_IC1F_2          EQU		0x4 << TIM_CCMR1_IC1F_Pos                    ;/*!< 0x0040 */
TIM_CCMR1_IC1F_3          EQU		0x8 << TIM_CCMR1_IC1F_Pos                    ;/*!< 0x0080 */

TIM_CCMR1_IC2PSC_Pos      EQU		10                                        
TIM_CCMR1_IC2PSC_Msk      EQU		0x3 << TIM_CCMR1_IC2PSC_Pos                  ;/*!< 0x00000C00 */
TIM_CCMR1_IC2PSC          EQU		TIM_CCMR1_IC2PSC_Msk                         ;/*!<IC2PSC[1:0] bits EQU		Input Capture 2 Prescaler     */
TIM_CCMR1_IC2PSC_0        EQU		0x1 << TIM_CCMR1_IC2PSC_Pos                  ;/*!< 0x0400 */
TIM_CCMR1_IC2PSC_1        EQU		0x2 << TIM_CCMR1_IC2PSC_Pos                  ;/*!< 0x0800 */

TIM_CCMR1_IC2F_Pos        EQU		12                                        
TIM_CCMR1_IC2F_Msk        EQU		0xF << TIM_CCMR1_IC2F_Pos                    ;/*!< 0x0000F000 */
TIM_CCMR1_IC2F            EQU		TIM_CCMR1_IC2F_Msk                           ;/*!<IC2F[3:0] bits EQU		Input Capture 2 Filter          */
TIM_CCMR1_IC2F_0          EQU		0x1 << TIM_CCMR1_IC2F_Pos                    ;/*!< 0x1000 */
TIM_CCMR1_IC2F_1          EQU		0x2 << TIM_CCMR1_IC2F_Pos                    ;/*!< 0x2000 */
TIM_CCMR1_IC2F_2          EQU		0x4 << TIM_CCMR1_IC2F_Pos                    ;/*!< 0x4000 */
TIM_CCMR1_IC2F_3          EQU		0x8 << TIM_CCMR1_IC2F_Pos                    ;/*!< 0x8000 */

TIM_CCMR2			      EQU		0x1C
;/******************  Bit definition for TIM_CCMR2 register  *******************/
TIM_CCMR2_CC3S_Pos        EQU		0                                         
TIM_CCMR2_CC3S_Msk        EQU		0x3 << TIM_CCMR2_CC3S_Pos                    ;/*!< 0x00000003 */
TIM_CCMR2_CC3S            EQU		TIM_CCMR2_CC3S_Msk                           ;/*!<CC3S[1:0] bits EQU		Capture/Compare 3 Selection     */
TIM_CCMR2_CC3S_0          EQU		0x1 << TIM_CCMR2_CC3S_Pos                    ;/*!< 0x0001 */
TIM_CCMR2_CC3S_1          EQU		0x2 << TIM_CCMR2_CC3S_Pos                    ;/*!< 0x0002 */

TIM_CCMR2_OC3FE_Pos       EQU		2                                         
TIM_CCMR2_OC3FE_Msk       EQU		0x1 << TIM_CCMR2_OC3FE_Pos                   ;/*!< 0x00000004 */
TIM_CCMR2_OC3FE           EQU		TIM_CCMR2_OC3FE_Msk                          ;/*!<Output Compare 3 Fast enable           */
TIM_CCMR2_OC3PE_Pos       EQU		3                                         
TIM_CCMR2_OC3PE_Msk       EQU		0x1 << TIM_CCMR2_OC3PE_Pos                   ;/*!< 0x00000008 */
TIM_CCMR2_OC3PE           EQU		TIM_CCMR2_OC3PE_Msk                          ;/*!<Output Compare 3 Preload enable        */

TIM_CCMR2_OC3M_Pos        EQU		4                                         
TIM_CCMR2_OC3M_Msk        EQU		0x7 << TIM_CCMR2_OC3M_Pos                    ;/*!< 0x00000070 */
TIM_CCMR2_OC3M            EQU		TIM_CCMR2_OC3M_Msk                           ;/*!<OC3M[2:0] bits EQU		Output Compare 3 Mode    */
TIM_CCMR2_OC3M_0          EQU		0x1 << TIM_CCMR2_OC3M_Pos                    ;/*!< 0x0010 */
TIM_CCMR2_OC3M_1          EQU		0x2 << TIM_CCMR2_OC3M_Pos                    ;/*!< 0x0020 */
TIM_CCMR2_OC3M_2          EQU		0x4 << TIM_CCMR2_OC3M_Pos                    ;/*!< 0x0040 */

TIM_CCMR2_OC3CE_Pos       EQU		7                                         
TIM_CCMR2_OC3CE_Msk       EQU		0x1 << TIM_CCMR2_OC3CE_Pos                   ;/*!< 0x00000080 */
TIM_CCMR2_OC3CE           EQU		TIM_CCMR2_OC3CE_Msk                          ;/*!<Output Compare 3 Clear Enable */

TIM_CCMR2_CC4S_Pos        EQU		8                                         
TIM_CCMR2_CC4S_Msk        EQU		0x3 << TIM_CCMR2_CC4S_Pos                    ;/*!< 0x00000300 */
TIM_CCMR2_CC4S            EQU		TIM_CCMR2_CC4S_Msk                           ;/*!<CC4S[1:0] bits EQU		Capture/Compare 4 Selection    */
TIM_CCMR2_CC4S_0          EQU		0x1 << TIM_CCMR2_CC4S_Pos                    ;/*!< 0x0100 */
TIM_CCMR2_CC4S_1          EQU		0x2 << TIM_CCMR2_CC4S_Pos                    ;/*!< 0x0200 */

TIM_CCMR2_OC4FE_Pos       EQU		10                                        
TIM_CCMR2_OC4FE_Msk       EQU		0x1 << TIM_CCMR2_OC4FE_Pos                   ;/*!< 0x00000400 */
TIM_CCMR2_OC4FE           EQU		TIM_CCMR2_OC4FE_Msk                          ;/*!<Output Compare 4 Fast enable    */
TIM_CCMR2_OC4PE_Pos       EQU		11                                        
TIM_CCMR2_OC4PE_Msk       EQU		0x1 << TIM_CCMR2_OC4PE_Pos                   ;/*!< 0x00000800 */
TIM_CCMR2_OC4PE           EQU		TIM_CCMR2_OC4PE_Msk                          ;/*!<Output Compare 4 Preload enable */

TIM_CCMR2_OC4M_Pos        EQU		12                                        
TIM_CCMR2_OC4M_Msk        EQU		0x7 << TIM_CCMR2_OC4M_Pos                    ;/*!< 0x00007000 */
TIM_CCMR2_OC4M            EQU		TIM_CCMR2_OC4M_Msk                           ;/*!<OC4M[2:0] bits EQU		Output Compare 4 Mode    */
TIM_CCMR2_OC4M_0          EQU		0x1 << TIM_CCMR2_OC4M_Pos                    ;/*!< 0x1000 */
TIM_CCMR2_OC4M_1          EQU		0x2 << TIM_CCMR2_OC4M_Pos                    ;/*!< 0x2000 */
TIM_CCMR2_OC4M_2          EQU		0x4 << TIM_CCMR2_OC4M_Pos                    ;/*!< 0x4000 */

TIM_CCMR2_OC4CE_Pos       EQU		15                                        
TIM_CCMR2_OC4CE_Msk       EQU		0x1 << TIM_CCMR2_OC4CE_Pos                   ;/*!< 0x00008000 */
TIM_CCMR2_OC4CE           EQU		TIM_CCMR2_OC4CE_Msk                          ;/*!<Output Compare 4 Clear Enable */

;/*----------------------------------------------------------------------------*/

TIM_CCMR2_IC3PSC_Pos      EQU		2                                         
TIM_CCMR2_IC3PSC_Msk      EQU		0x3 << TIM_CCMR2_IC3PSC_Pos                  ;/*!< 0x0000000C */
TIM_CCMR2_IC3PSC          EQU		TIM_CCMR2_IC3PSC_Msk                         ;/*!<IC3PSC[1:0] bits EQU		Input Capture 3 Prescaler    */
TIM_CCMR2_IC3PSC_0        EQU		0x1 << TIM_CCMR2_IC3PSC_Pos                  ;/*!< 0x0004 */
TIM_CCMR2_IC3PSC_1        EQU		0x2 << TIM_CCMR2_IC3PSC_Pos                  ;/*!< 0x0008 */

TIM_CCMR2_IC3F_Pos        EQU		4                                         
TIM_CCMR2_IC3F_Msk        EQU		0xF << TIM_CCMR2_IC3F_Pos                    ;/*!< 0x000000F0 */
TIM_CCMR2_IC3F            EQU		TIM_CCMR2_IC3F_Msk                           ;/*!<IC3F[3:0] bits EQU		Input Capture 3 Filter    */
TIM_CCMR2_IC3F_0          EQU		0x1 << TIM_CCMR2_IC3F_Pos                    ;/*!< 0x0010 */
TIM_CCMR2_IC3F_1          EQU		0x2 << TIM_CCMR2_IC3F_Pos                    ;/*!< 0x0020 */
TIM_CCMR2_IC3F_2          EQU		0x4 << TIM_CCMR2_IC3F_Pos                    ;/*!< 0x0040 */
TIM_CCMR2_IC3F_3          EQU		0x8 << TIM_CCMR2_IC3F_Pos                    ;/*!< 0x0080 */

TIM_CCMR2_IC4PSC_Pos      EQU		10                                        
TIM_CCMR2_IC4PSC_Msk      EQU		0x3 << TIM_CCMR2_IC4PSC_Pos                  ;/*!< 0x00000C00 */
TIM_CCMR2_IC4PSC          EQU		TIM_CCMR2_IC4PSC_Msk                         ;/*!<IC4PSC[1:0] bits EQU		Input Capture 4 Prescaler    */
TIM_CCMR2_IC4PSC_0        EQU		0x1 << TIM_CCMR2_IC4PSC_Pos                  ;/*!< 0x0400 */
TIM_CCMR2_IC4PSC_1        EQU		0x2 << TIM_CCMR2_IC4PSC_Pos                  ;/*!< 0x0800 */

TIM_CCMR2_IC4F_Pos        EQU		12                                        
TIM_CCMR2_IC4F_Msk        EQU		0xF << TIM_CCMR2_IC4F_Pos                    ;/*!< 0x0000F000 */
TIM_CCMR2_IC4F            EQU		TIM_CCMR2_IC4F_Msk                           ;/*!<IC4F[3:0] bits EQU		Input Capture 4 Filter    */
TIM_CCMR2_IC4F_0          EQU		0x1 << TIM_CCMR2_IC4F_Pos                    ;/*!< 0x1000 */
TIM_CCMR2_IC4F_1          EQU		0x2 << TIM_CCMR2_IC4F_Pos                    ;/*!< 0x2000 */
TIM_CCMR2_IC4F_2          EQU		0x4 << TIM_CCMR2_IC4F_Pos                    ;/*!< 0x4000 */
TIM_CCMR2_IC4F_3          EQU		0x8 << TIM_CCMR2_IC4F_Pos                    ;/*!< 0x8000 */

TIM_CCER		          EQU		0x20
;/*******************  Bit definition for TIM_CCER register  *******************/
TIM_CCER_CC1E_Pos         EQU		0                                         
TIM_CCER_CC1E_Msk         EQU		0x1 << TIM_CCER_CC1E_Pos                     ;/*!< 0x00000001 */
TIM_CCER_CC1E             EQU		TIM_CCER_CC1E_Msk                            ;/*!<Capture/Compare 1 output enable                 */
TIM_CCER_CC1P_Pos         EQU		1                                         
TIM_CCER_CC1P_Msk         EQU		0x1 << TIM_CCER_CC1P_Pos                     ;/*!< 0x00000002 */
TIM_CCER_CC1P             EQU		TIM_CCER_CC1P_Msk                            ;/*!<Capture/Compare 1 output Polarity               */
TIM_CCER_CC1NE_Pos        EQU		2                                         
TIM_CCER_CC1NE_Msk        EQU		0x1 << TIM_CCER_CC1NE_Pos                    ;/*!< 0x00000004 */
TIM_CCER_CC1NE            EQU		TIM_CCER_CC1NE_Msk                           ;/*!<Capture/Compare 1 Complementary output enable   */
TIM_CCER_CC1NP_Pos        EQU		3                                         
TIM_CCER_CC1NP_Msk        EQU		0x1 << TIM_CCER_CC1NP_Pos                    ;/*!< 0x00000008 */
TIM_CCER_CC1NP            EQU		TIM_CCER_CC1NP_Msk                           ;/*!<Capture/Compare 1 Complementary output Polarity */
TIM_CCER_CC2E_Pos         EQU		4                                         
TIM_CCER_CC2E_Msk         EQU		0x1 << TIM_CCER_CC2E_Pos                     ;/*!< 0x00000010 */
TIM_CCER_CC2E             EQU		TIM_CCER_CC2E_Msk                            ;/*!<Capture/Compare 2 output enable                 */
TIM_CCER_CC2P_Pos         EQU		5                                         
TIM_CCER_CC2P_Msk         EQU		0x1 << TIM_CCER_CC2P_Pos                     ;/*!< 0x00000020 */
TIM_CCER_CC2P             EQU		TIM_CCER_CC2P_Msk                            ;/*!<Capture/Compare 2 output Polarity               */
TIM_CCER_CC2NE_Pos        EQU		6                                         
TIM_CCER_CC2NE_Msk        EQU		0x1 << TIM_CCER_CC2NE_Pos                    ;/*!< 0x00000040 */
TIM_CCER_CC2NE            EQU		TIM_CCER_CC2NE_Msk                           ;/*!<Capture/Compare 2 Complementary output enable   */
TIM_CCER_CC2NP_Pos        EQU		7                                         
TIM_CCER_CC2NP_Msk        EQU		0x1 << TIM_CCER_CC2NP_Pos                    ;/*!< 0x00000080 */
TIM_CCER_CC2NP            EQU		TIM_CCER_CC2NP_Msk                           ;/*!<Capture/Compare 2 Complementary output Polarity */
TIM_CCER_CC3E_Pos         EQU		8                                         
TIM_CCER_CC3E_Msk         EQU		0x1 << TIM_CCER_CC3E_Pos                     ;/*!< 0x00000100 */
TIM_CCER_CC3E             EQU		TIM_CCER_CC3E_Msk                            ;/*!<Capture/Compare 3 output enable                 */
TIM_CCER_CC3P_Pos         EQU		9                                         
TIM_CCER_CC3P_Msk         EQU		0x1 << TIM_CCER_CC3P_Pos                     ;/*!< 0x00000200 */
TIM_CCER_CC3P             EQU		TIM_CCER_CC3P_Msk                            ;/*!<Capture/Compare 3 output Polarity               */
TIM_CCER_CC3NE_Pos        EQU		10                                        
TIM_CCER_CC3NE_Msk        EQU		0x1 << TIM_CCER_CC3NE_Pos                    ;/*!< 0x00000400 */
TIM_CCER_CC3NE            EQU		TIM_CCER_CC3NE_Msk                           ;/*!<Capture/Compare 3 Complementary output enable   */
TIM_CCER_CC3NP_Pos        EQU		11                                        
TIM_CCER_CC3NP_Msk        EQU		0x1 << TIM_CCER_CC3NP_Pos                    ;/*!< 0x00000800 */
TIM_CCER_CC3NP            EQU		TIM_CCER_CC3NP_Msk                           ;/*!<Capture/Compare 3 Complementary output Polarity */
TIM_CCER_CC4E_Pos         EQU		12                                        
TIM_CCER_CC4E_Msk         EQU		0x1 << TIM_CCER_CC4E_Pos                     ;/*!< 0x00001000 */
TIM_CCER_CC4E             EQU		TIM_CCER_CC4E_Msk                            ;/*!<Capture/Compare 4 output enable                 */
TIM_CCER_CC4P_Pos         EQU		13                                        
TIM_CCER_CC4P_Msk         EQU		0x1 << TIM_CCER_CC4P_Pos                     ;/*!< 0x00002000 */
TIM_CCER_CC4P             EQU		TIM_CCER_CC4P_Msk                            ;/*!<Capture/Compare 4 output Polarity               */
TIM_CCER_CC4NP_Pos        EQU		15                                        
TIM_CCER_CC4NP_Msk        EQU		0x1 << TIM_CCER_CC4NP_Pos                    ;/*!< 0x00008000 */
TIM_CCER_CC4NP            EQU		TIM_CCER_CC4NP_Msk                           ;/*!<Capture/Compare 4 Complementary output Polarity */

TIM_CNT		 	          EQU		0x24
;/*******************  Bit definition for TIM_CNT register  ********************/
TIM_CNT_CNT_Pos           EQU		0                                             
TIM_CNT_CNT_Msk           EQU		0xFFFFFFFF << TIM_CNT_CNT_Pos                    ;/*!< 0xFFFFFFFF */
TIM_CNT_CNT               EQU		TIM_CNT_CNT_Msk                                  ;/*!<Counter Value            */

TIM_PSC			          EQU		0x28
;/*******************  Bit definition for TIM_PSC register  ********************/
TIM_PSC_PSC_Pos           EQU		0                                         
TIM_PSC_PSC_Msk           EQU		0xFFFF << TIM_PSC_PSC_Pos                    ;/*!< 0x0000FFFF */
TIM_PSC_PSC               EQU		TIM_PSC_PSC_Msk                              ;/*!<Prescaler Value          */

TIM_ARR			          EQU		0x2C
;/*******************  Bit definition for TIM_ARR register  ********************/
TIM_ARR_ARR_Pos           EQU		0                                         
TIM_ARR_ARR_Msk           EQU		0xFFFFFFFF << TIM_ARR_ARR_Pos                ;/*!< 0xFFFFFFFF */
TIM_ARR_ARR               EQU		TIM_ARR_ARR_Msk                              ;/*!<actual auto-reload Value */

TIM_RCR			          EQU		0x30
;/*******************  Bit definition for TIM_RCR register  ********************/
TIM_RCR_REP_Pos           EQU		0                                         
TIM_RCR_REP_Msk           EQU		0xFF << TIM_RCR_REP_Pos                      ;/*!< 0x000000FF */
TIM_RCR_REP               EQU		TIM_RCR_REP_Msk                              ;/*!<Repetition Counter Value */

TIM_CCR1		          EQU		0x34
;/*******************  Bit definition for TIM_CCR1 register  *******************/
TIM_CCR1_CCR1_Pos         EQU		0                                         
TIM_CCR1_CCR1_Msk         EQU		0xFFFF << TIM_CCR1_CCR1_Pos                  ;/*!< 0x0000FFFF */
TIM_CCR1_CCR1             EQU		TIM_CCR1_CCR1_Msk                            ;/*!<Capture/Compare 1 Value  */

TIM_CCR2		          EQU		0x38
;/*******************  Bit definition for TIM_CCR2 register  *******************/
TIM_CCR2_CCR2_Pos         EQU		0                                         
TIM_CCR2_CCR2_Msk         EQU		0xFFFF << TIM_CCR2_CCR2_Pos                  ;/*!< 0x0000FFFF */
TIM_CCR2_CCR2             EQU		TIM_CCR2_CCR2_Msk                            ;/*!<Capture/Compare 2 Value  */

TIM_CCR3		          EQU		0x3C
;/*******************  Bit definition for TIM_CCR3 register  *******************/
TIM_CCR3_CCR3_Pos         EQU		0                                         
TIM_CCR3_CCR3_Msk         EQU		0xFFFF << TIM_CCR3_CCR3_Pos                  ;/*!< 0x0000FFFF */
TIM_CCR3_CCR3             EQU		TIM_CCR3_CCR3_Msk                            ;/*!<Capture/Compare 3 Value  */

TIM_CCR4		          EQU		0x40
;/*******************  Bit definition for TIM_CCR4 register  *******************/
TIM_CCR4_CCR4_Pos         EQU		0                                         
TIM_CCR4_CCR4_Msk         EQU		0xFFFF << TIM_CCR4_CCR4_Pos                  ;/*!< 0x0000FFFF */
TIM_CCR4_CCR4             EQU		TIM_CCR4_CCR4_Msk                            ;/*!<Capture/Compare 4 Value  */

TIM_BDTR		          EQU		0x44
;/*******************  Bit definition for TIM_BDTR register  *******************/
TIM_BDTR_DTG_Pos          EQU		0                                         
TIM_BDTR_DTG_Msk          EQU		0xFF << TIM_BDTR_DTG_Pos                     ;/*!< 0x000000FF */
TIM_BDTR_DTG              EQU		TIM_BDTR_DTG_Msk                             ;/*!<DTG[0:7] bits EQU		Dead-Time Generator set-up    */
TIM_BDTR_DTG_0            EQU		0x01 << TIM_BDTR_DTG_Pos                     ;/*!< 0x0001 */
TIM_BDTR_DTG_1            EQU		0x02 << TIM_BDTR_DTG_Pos                     ;/*!< 0x0002 */
TIM_BDTR_DTG_2            EQU		0x04 << TIM_BDTR_DTG_Pos                     ;/*!< 0x0004 */
TIM_BDTR_DTG_3            EQU		0x08 << TIM_BDTR_DTG_Pos                     ;/*!< 0x0008 */
TIM_BDTR_DTG_4            EQU		0x10 << TIM_BDTR_DTG_Pos                     ;/*!< 0x0010 */
TIM_BDTR_DTG_5            EQU		0x20 << TIM_BDTR_DTG_Pos                     ;/*!< 0x0020 */
TIM_BDTR_DTG_6            EQU		0x40 << TIM_BDTR_DTG_Pos                     ;/*!< 0x0040 */
TIM_BDTR_DTG_7            EQU		0x80 << TIM_BDTR_DTG_Pos                     ;/*!< 0x0080 */

TIM_BDTR_LOCK_Pos         EQU		8                                         
TIM_BDTR_LOCK_Msk         EQU		0x3 << TIM_BDTR_LOCK_Pos                     ;/*!< 0x00000300 */
TIM_BDTR_LOCK             EQU		TIM_BDTR_LOCK_Msk                            ;/*!<LOCK[1:0] bits EQU		Lock Configuration    */
TIM_BDTR_LOCK_0           EQU		0x1 << TIM_BDTR_LOCK_Pos                     ;/*!< 0x0100 */
TIM_BDTR_LOCK_1           EQU		0x2 << TIM_BDTR_LOCK_Pos                     ;/*!< 0x0200 */

TIM_BDTR_OSSI_Pos         EQU		10                                        
TIM_BDTR_OSSI_Msk         EQU		0x1 << TIM_BDTR_OSSI_Pos                     ;/*!< 0x00000400 */
TIM_BDTR_OSSI             EQU		TIM_BDTR_OSSI_Msk                            ;/*!<Off-State Selection for Idle mode */
TIM_BDTR_OSSR_Pos         EQU		11                                        
TIM_BDTR_OSSR_Msk         EQU		0x1 << TIM_BDTR_OSSR_Pos                     ;/*!< 0x00000800 */
TIM_BDTR_OSSR             EQU		TIM_BDTR_OSSR_Msk                            ;/*!<Off-State Selection for Run mode  */
TIM_BDTR_BKE_Pos          EQU		12                                        
TIM_BDTR_BKE_Msk          EQU		0x1 << TIM_BDTR_BKE_Pos                      ;/*!< 0x00001000 */
TIM_BDTR_BKE              EQU		TIM_BDTR_BKE_Msk                             ;/*!<Break enable                      */
TIM_BDTR_BKP_Pos          EQU		13                                        
TIM_BDTR_BKP_Msk          EQU		0x1 << TIM_BDTR_BKP_Pos                      ;/*!< 0x00002000 */
TIM_BDTR_BKP              EQU		TIM_BDTR_BKP_Msk                             ;/*!<Break Polarity                    */
TIM_BDTR_AOE_Pos          EQU		14                                        
TIM_BDTR_AOE_Msk          EQU		0x1 << TIM_BDTR_AOE_Pos                      ;/*!< 0x00004000 */
TIM_BDTR_AOE              EQU		TIM_BDTR_AOE_Msk                             ;/*!<Automatic Output enable           */
TIM_BDTR_MOE_Pos          EQU		15                                        
TIM_BDTR_MOE_Msk          EQU		0x1 << TIM_BDTR_MOE_Pos                      ;/*!< 0x00008000 */
TIM_BDTR_MOE              EQU		TIM_BDTR_MOE_Msk                             ;/*!<Main Output enable                */

TIM_DCR			          EQU		0x48
;/*******************  Bit definition for TIM_DCR register  ********************/
TIM_DCR_DBA_Pos           EQU		0                                         
TIM_DCR_DBA_Msk           EQU		0x1F << TIM_DCR_DBA_Pos                      ;/*!< 0x0000001F */
TIM_DCR_DBA               EQU		TIM_DCR_DBA_Msk                              ;/*!<DBA[4:0] bits EQU		DMA Base Address    */
TIM_DCR_DBA_0             EQU		0x01 << TIM_DCR_DBA_Pos                      ;/*!< 0x0001 */
TIM_DCR_DBA_1             EQU		0x02 << TIM_DCR_DBA_Pos                      ;/*!< 0x0002 */
TIM_DCR_DBA_2             EQU		0x04 << TIM_DCR_DBA_Pos                      ;/*!< 0x0004 */
TIM_DCR_DBA_3             EQU		0x08 << TIM_DCR_DBA_Pos                      ;/*!< 0x0008 */
TIM_DCR_DBA_4             EQU		0x10 << TIM_DCR_DBA_Pos                      ;/*!< 0x0010 */

TIM_DCR_DBL_Pos           EQU		8                                         
TIM_DCR_DBL_Msk           EQU		0x1F << TIM_DCR_DBL_Pos                      ;/*!< 0x00001F00 */
TIM_DCR_DBL               EQU		TIM_DCR_DBL_Msk                              ;/*!<DBL[4:0] bits EQU		DMA Burst Length    */
TIM_DCR_DBL_0             EQU		0x01 << TIM_DCR_DBL_Pos                      ;/*!< 0x0100 */
TIM_DCR_DBL_1             EQU		0x02 << TIM_DCR_DBL_Pos                      ;/*!< 0x0200 */
TIM_DCR_DBL_2             EQU		0x04 << TIM_DCR_DBL_Pos                      ;/*!< 0x0400 */
TIM_DCR_DBL_3             EQU		0x08 << TIM_DCR_DBL_Pos                      ;/*!< 0x0800 */
TIM_DCR_DBL_4             EQU		0x10 << TIM_DCR_DBL_Pos                      ;/*!< 0x1000 */

TIM_DMAR		          EQU		0x4C
;/*******************  Bit definition for TIM_DMAR register  *******************/
TIM_DMAR_DMAB_Pos         EQU		0                                         
TIM_DMAR_DMAB_Msk         EQU		0xFFFF << TIM_DMAR_DMAB_Pos                  ;/*!< 0x0000FFFF */
TIM_DMAR_DMAB             EQU		TIM_DMAR_DMAB_Msk                            ;/*!<DMA register for burst accesses                    */

TIM_OR			          EQU		0x50
;/*******************  Bit definition for TIM_OR register  *********************/
TIM_OR_TI1_RMP_Pos        EQU		0                                          
TIM_OR_TI1_RMP_Msk        EQU		0x3 << TIM_OR_TI1_RMP_Pos                    ;/*!< 0x00000003 */
TIM_OR_TI1_RMP            EQU		TIM_OR_TI1_RMP_Msk                           ;/*!< TI1_RMP[1:0] bits EQU		TIM11 Input Capture 1 remap    */
TIM_OR_TI1_RMP_0          EQU		0x1 << TIM_OR_TI1_RMP_Pos                    ;/*!< 0x00000001 */
TIM_OR_TI1_RMP_1          EQU		0x2 << TIM_OR_TI1_RMP_Pos                    ;/*!< 0x00000002 */

TIM_OR_TI4_RMP_Pos        EQU		6                                         
TIM_OR_TI4_RMP_Msk        EQU		0x3 << TIM_OR_TI4_RMP_Pos                    ;/*!< 0x000000C0 */
TIM_OR_TI4_RMP            EQU		TIM_OR_TI4_RMP_Msk                           ;/*!<TI4_RMP[1:0] bits EQU		TIM5 Input 4 remap                */
TIM_OR_TI4_RMP_0          EQU		0x1 << TIM_OR_TI4_RMP_Pos                    ;/*!< 0x0040 */
TIM_OR_TI4_RMP_1          EQU		0x2 << TIM_OR_TI4_RMP_Pos                    ;/*!< 0x0080 */
TIM_OR_ITR1_RMP_Pos       EQU		10                                        
TIM_OR_ITR1_RMP_Msk       EQU		0x3 << TIM_OR_ITR1_RMP_Pos                   ;/*!< 0x00000C00 */
TIM_OR_ITR1_RMP           EQU		TIM_OR_ITR1_RMP_Msk                          ;/*!<ITR1_RMP[1:0] bits EQU		TIM2 Internal trigger 1 remap    */
TIM_OR_ITR1_RMP_0         EQU		0x1 << TIM_OR_ITR1_RMP_Pos                   ;/*!< 0x0400 */
TIM_OR_ITR1_RMP_1         EQU		0x2 << TIM_OR_ITR1_RMP_Pos                   ;/*!< 0x0800 */

;/******************************************************************************/
;/*                                                                            */
;/*         Universal Synchronous Asynchronous Receiver Transmitter            */
;/*                                                                            */
;/******************************************************************************/

USART_SR		              EQU		0x00
;/*******************  Bit definition for USART_SR register  *******************/
USART_SR_PE_Pos               EQU		0                                     
USART_SR_PE_Msk               EQU		0x1 << USART_SR_PE_Pos                   ;/*!< 0x00000001 */
USART_SR_PE                   EQU		USART_SR_PE_Msk                          ;/*!<Parity Error                 */
USART_SR_FE_Pos               EQU		1                                     
USART_SR_FE_Msk               EQU		0x1 << USART_SR_FE_Pos                   ;/*!< 0x00000002 */
USART_SR_FE                   EQU		USART_SR_FE_Msk                          ;/*!<Framing Error                */
USART_SR_NE_Pos               EQU		2                                     
USART_SR_NE_Msk               EQU		0x1 << USART_SR_NE_Pos                   ;/*!< 0x00000004 */
USART_SR_NE                   EQU		USART_SR_NE_Msk                          ;/*!<Noise Error Flag             */
USART_SR_ORE_Pos              EQU		3                                     
USART_SR_ORE_Msk              EQU		0x1 << USART_SR_ORE_Pos                  ;/*!< 0x00000008 */
USART_SR_ORE                  EQU		USART_SR_ORE_Msk                         ;/*!<OverRun Error                */
USART_SR_IDLE_Pos             EQU		4                                     
USART_SR_IDLE_Msk             EQU		0x1 << USART_SR_IDLE_Pos                 ;/*!< 0x00000010 */
USART_SR_IDLE                 EQU		USART_SR_IDLE_Msk                        ;/*!<IDLE line detected           */
USART_SR_RXNE_Pos             EQU		5                                     
USART_SR_RXNE_Msk             EQU		0x1 << USART_SR_RXNE_Pos                 ;/*!< 0x00000020 */
USART_SR_RXNE                 EQU		USART_SR_RXNE_Msk                        ;/*!<Read Data Register Not Empty */
USART_SR_TC_Pos               EQU		6                                     
USART_SR_TC_Msk               EQU		0x1 << USART_SR_TC_Pos                   ;/*!< 0x00000040 */
USART_SR_TC                   EQU		USART_SR_TC_Msk                          ;/*!<Transmission Complete        */
USART_SR_TXE_Pos              EQU		7                                     
USART_SR_TXE_Msk              EQU		0x1 << USART_SR_TXE_Pos                  ;/*!< 0x00000080 */
USART_SR_TXE                  EQU		USART_SR_TXE_Msk                         ;/*!<Transmit Data Register Empty */
USART_SR_LBD_Pos              EQU		8                                     
USART_SR_LBD_Msk              EQU		0x1 << USART_SR_LBD_Pos                  ;/*!< 0x00000100 */
USART_SR_LBD                  EQU		USART_SR_LBD_Msk                         ;/*!<LIN Break Detection Flag     */
USART_SR_CTS_Pos              EQU		9                                     
USART_SR_CTS_Msk              EQU		0x1 << USART_SR_CTS_Pos                  ;/*!< 0x00000200 */
USART_SR_CTS                  EQU		USART_SR_CTS_Msk                         ;/*!<CTS Flag                     */

USART_DR		              EQU		0x04
;/*******************  Bit definition for USART_DR register  *******************/
USART_DR_DR_Pos               EQU		0                                     
USART_DR_DR_Msk               EQU		0x1FF << USART_DR_DR_Pos                 ;/*!< 0x000001FF */
USART_DR_DR                   EQU		USART_DR_DR_Msk                          ;/*!<Data value */

USART_BRR					  EQU		0x08
;/******************  Bit definition for USART_BRR register  *******************/
USART_BRR_DIV_Fraction_Pos    EQU		0                                     
USART_BRR_DIV_Fraction_Msk    EQU		0xF << USART_BRR_DIV_Fraction_Pos        ;/*!< 0x0000000F */
USART_BRR_DIV_Fraction        EQU		USART_BRR_DIV_Fraction_Msk               ;/*!<Fraction of USARTDIV */
USART_BRR_DIV_Mantissa_Pos    EQU		4                                     
USART_BRR_DIV_Mantissa_Msk    EQU		0xFFF << USART_BRR_DIV_Mantissa_Pos      ;/*!< 0x0000FFF0 */
USART_BRR_DIV_Mantissa        EQU		USART_BRR_DIV_Mantissa_Msk               ;/*!<Mantissa of USARTDIV */

USART_CR1		              EQU		0x0C
;/******************  Bit definition for USART_CR1 register  *******************/
USART_CR1_SBK_Pos             EQU		0                                     
USART_CR1_SBK_Msk             EQU		0x1 << USART_CR1_SBK_Pos                 ;/*!< 0x00000001 */
USART_CR1_SBK                 EQU		USART_CR1_SBK_Msk                        ;/*!<Send Break                             */
USART_CR1_RWU_Pos             EQU		1                                     
USART_CR1_RWU_Msk             EQU		0x1 << USART_CR1_RWU_Pos                 ;/*!< 0x00000002 */
USART_CR1_RWU                 EQU		USART_CR1_RWU_Msk                        ;/*!<Receiver wakeup                        */
USART_CR1_RE_Pos              EQU		2                                     
USART_CR1_RE_Msk              EQU		0x1 << USART_CR1_RE_Pos                  ;/*!< 0x00000004 */
USART_CR1_RE                  EQU		USART_CR1_RE_Msk                         ;/*!<Receiver Enable                        */
USART_CR1_TE_Pos              EQU		3                                     
USART_CR1_TE_Msk              EQU		0x1 << USART_CR1_TE_Pos                  ;/*!< 0x00000008 */
USART_CR1_TE                  EQU		USART_CR1_TE_Msk                         ;/*!<Transmitter Enable                     */
USART_CR1_IDLEIE_Pos          EQU		4                                     
USART_CR1_IDLEIE_Msk          EQU		0x1 << USART_CR1_IDLEIE_Pos              ;/*!< 0x00000010 */
USART_CR1_IDLEIE              EQU		USART_CR1_IDLEIE_Msk                     ;/*!<IDLE Interrupt Enable                  */
USART_CR1_RXNEIE_Pos          EQU		5                                     
USART_CR1_RXNEIE_Msk          EQU		0x1 << USART_CR1_RXNEIE_Pos              ;/*!< 0x00000020 */
USART_CR1_RXNEIE              EQU		USART_CR1_RXNEIE_Msk                     ;/*!<RXNE Interrupt Enable                  */
USART_CR1_TCIE_Pos            EQU		6                                     
USART_CR1_TCIE_Msk            EQU		0x1 << USART_CR1_TCIE_Pos                ;/*!< 0x00000040 */
USART_CR1_TCIE                EQU		USART_CR1_TCIE_Msk                       ;/*!<Transmission Complete Interrupt Enable */
USART_CR1_TXEIE_Pos           EQU		7                                     
USART_CR1_TXEIE_Msk           EQU		0x1 << USART_CR1_TXEIE_Pos               ;/*!< 0x00000080 */
USART_CR1_TXEIE               EQU		USART_CR1_TXEIE_Msk                      ;/*!<TXE Interrupt Enable                   */
USART_CR1_PEIE_Pos            EQU		8                                     
USART_CR1_PEIE_Msk            EQU		0x1 << USART_CR1_PEIE_Pos                ;/*!< 0x00000100 */
USART_CR1_PEIE                EQU		USART_CR1_PEIE_Msk                       ;/*!<PE Interrupt Enable                    */
USART_CR1_PS_Pos              EQU		9                                     
USART_CR1_PS_Msk              EQU		0x1 << USART_CR1_PS_Pos                  ;/*!< 0x00000200 */
USART_CR1_PS                  EQU		USART_CR1_PS_Msk                         ;/*!<Parity Selection                       */
USART_CR1_PCE_Pos             EQU		10                                    
USART_CR1_PCE_Msk             EQU		0x1 << USART_CR1_PCE_Pos                 ;/*!< 0x00000400 */
USART_CR1_PCE                 EQU		USART_CR1_PCE_Msk                        ;/*!<Parity Control Enable                  */
USART_CR1_WAKE_Pos            EQU		11                                    
USART_CR1_WAKE_Msk            EQU		0x1 << USART_CR1_WAKE_Pos                ;/*!< 0x00000800 */
USART_CR1_WAKE                EQU		USART_CR1_WAKE_Msk                       ;/*!<Wakeup method                          */
USART_CR1_M_Pos               EQU		12                                    
USART_CR1_M_Msk               EQU		0x1 << USART_CR1_M_Pos                   ;/*!< 0x00001000 */
USART_CR1_M                   EQU		USART_CR1_M_Msk                          ;/*!<Word length                            */
USART_CR1_UE_Pos              EQU		13                                    
USART_CR1_UE_Msk              EQU		0x1 << USART_CR1_UE_Pos                  ;/*!< 0x00002000 */
USART_CR1_UE                  EQU		USART_CR1_UE_Msk                         ;/*!<USART Enable                           */
USART_CR1_OVER8_Pos           EQU		15                                    
USART_CR1_OVER8_Msk           EQU		0x1 << USART_CR1_OVER8_Pos               ;/*!< 0x00008000 */
USART_CR1_OVER8               EQU		USART_CR1_OVER8_Msk                      ;/*!<USART Oversampling by 8 enable         */

USART_CR2		              EQU		0x10
;/******************  Bit definition for USART_CR2 register  *******************/
USART_CR2_ADD_Pos             EQU		0                                     
USART_CR2_ADD_Msk             EQU		0xF << USART_CR2_ADD_Pos                 ;/*!< 0x0000000F */
USART_CR2_ADD                 EQU		USART_CR2_ADD_Msk                        ;/*!<Address of the USART node            */
USART_CR2_LBDL_Pos            EQU		5                                     
USART_CR2_LBDL_Msk            EQU		0x1 << USART_CR2_LBDL_Pos                ;/*!< 0x00000020 */
USART_CR2_LBDL                EQU		USART_CR2_LBDL_Msk                       ;/*!<LIN Break Detection Length           */
USART_CR2_LBDIE_Pos           EQU		6                                     
USART_CR2_LBDIE_Msk           EQU		0x1 << USART_CR2_LBDIE_Pos               ;/*!< 0x00000040 */
USART_CR2_LBDIE               EQU		USART_CR2_LBDIE_Msk                      ;/*!<LIN Break Detection Interrupt Enable */
USART_CR2_LBCL_Pos            EQU		8                                     
USART_CR2_LBCL_Msk            EQU		0x1 << USART_CR2_LBCL_Pos                ;/*!< 0x00000100 */
USART_CR2_LBCL                EQU		USART_CR2_LBCL_Msk                       ;/*!<Last Bit Clock pulse                 */
USART_CR2_CPHA_Pos            EQU		9                                     
USART_CR2_CPHA_Msk            EQU		0x1 << USART_CR2_CPHA_Pos                ;/*!< 0x00000200 */
USART_CR2_CPHA                EQU		USART_CR2_CPHA_Msk                       ;/*!<Clock Phase                          */
USART_CR2_CPOL_Pos            EQU		10                                    
USART_CR2_CPOL_Msk            EQU		0x1 << USART_CR2_CPOL_Pos                ;/*!< 0x00000400 */
USART_CR2_CPOL                EQU		USART_CR2_CPOL_Msk                       ;/*!<Clock Polarity                       */
USART_CR2_CLKEN_Pos           EQU		11                                    
USART_CR2_CLKEN_Msk           EQU		0x1 << USART_CR2_CLKEN_Pos               ;/*!< 0x00000800 */
USART_CR2_CLKEN               EQU		USART_CR2_CLKEN_Msk                      ;/*!<Clock Enable                         */

USART_CR2_STOP_Pos            EQU		12                                    
USART_CR2_STOP_Msk            EQU		0x3 << USART_CR2_STOP_Pos                ;/*!< 0x00003000 */
USART_CR2_STOP                EQU		USART_CR2_STOP_Msk                       ;/*!<STOP[1:0] bits EQU		STOP bits    */
USART_CR2_STOP_0              EQU		0x1 << USART_CR2_STOP_Pos                ;/*!< 0x1000 */
USART_CR2_STOP_1              EQU		0x2 << USART_CR2_STOP_Pos                ;/*!< 0x2000 */

USART_CR2_LINEN_Pos           EQU		14                                    
USART_CR2_LINEN_Msk           EQU		0x1 << USART_CR2_LINEN_Pos               ;/*!< 0x00004000 */
USART_CR2_LINEN               EQU		USART_CR2_LINEN_Msk                      ;/*!<LIN mode enable */

USART_CR3		              EQU		0x14
;/******************  Bit definition for USART_CR3 register  *******************/
USART_CR3_EIE_Pos             EQU		0                                     
USART_CR3_EIE_Msk             EQU		0x1 << USART_CR3_EIE_Pos                 ;/*!< 0x00000001 */
USART_CR3_EIE                 EQU		USART_CR3_EIE_Msk                        ;/*!<Error Interrupt Enable      */
USART_CR3_IREN_Pos            EQU		1                                     
USART_CR3_IREN_Msk            EQU		0x1 << USART_CR3_IREN_Pos                ;/*!< 0x00000002 */
USART_CR3_IREN                EQU		USART_CR3_IREN_Msk                       ;/*!<IrDA mode Enable            */
USART_CR3_IRLP_Pos            EQU		2                                     
USART_CR3_IRLP_Msk            EQU		0x1 << USART_CR3_IRLP_Pos                ;/*!< 0x00000004 */
USART_CR3_IRLP                EQU		USART_CR3_IRLP_Msk                       ;/*!<IrDA Low-Power              */
USART_CR3_HDSEL_Pos           EQU		3                                     
USART_CR3_HDSEL_Msk           EQU		0x1 << USART_CR3_HDSEL_Pos               ;/*!< 0x00000008 */
USART_CR3_HDSEL               EQU		USART_CR3_HDSEL_Msk                      ;/*!<Half-Duplex Selection       */
USART_CR3_NACK_Pos            EQU		4                                     
USART_CR3_NACK_Msk            EQU		0x1 << USART_CR3_NACK_Pos                ;/*!< 0x00000010 */
USART_CR3_NACK                EQU		USART_CR3_NACK_Msk                       ;/*!<Smartcard NACK enable       */
USART_CR3_SCEN_Pos            EQU		5                                     
USART_CR3_SCEN_Msk            EQU		0x1 << USART_CR3_SCEN_Pos                ;/*!< 0x00000020 */
USART_CR3_SCEN                EQU		USART_CR3_SCEN_Msk                       ;/*!<Smartcard mode enable       */
USART_CR3_DMAR_Pos            EQU		6                                     
USART_CR3_DMAR_Msk            EQU		0x1 << USART_CR3_DMAR_Pos                ;/*!< 0x00000040 */
USART_CR3_DMAR                EQU		USART_CR3_DMAR_Msk                       ;/*!<DMA Enable Receiver         */
USART_CR3_DMAT_Pos            EQU		7                                     
USART_CR3_DMAT_Msk            EQU		0x1 << USART_CR3_DMAT_Pos                ;/*!< 0x00000080 */
USART_CR3_DMAT                EQU		USART_CR3_DMAT_Msk                       ;/*!<DMA Enable Transmitter      */
USART_CR3_RTSE_Pos            EQU		8                                     
USART_CR3_RTSE_Msk            EQU		0x1 << USART_CR3_RTSE_Pos                ;/*!< 0x00000100 */
USART_CR3_RTSE                EQU		USART_CR3_RTSE_Msk                       ;/*!<RTS Enable                  */
USART_CR3_CTSE_Pos            EQU		9                                     
USART_CR3_CTSE_Msk            EQU		0x1 << USART_CR3_CTSE_Pos                ;/*!< 0x00000200 */
USART_CR3_CTSE                EQU		USART_CR3_CTSE_Msk                       ;/*!<CTS Enable                  */
USART_CR3_CTSIE_Pos           EQU		10                                    
USART_CR3_CTSIE_Msk           EQU		0x1 << USART_CR3_CTSIE_Pos               ;/*!< 0x00000400 */
USART_CR3_CTSIE               EQU		USART_CR3_CTSIE_Msk                      ;/*!<CTS Interrupt Enable        */
USART_CR3_ONEBIT_Pos          EQU		11                                    
USART_CR3_ONEBIT_Msk          EQU		0x1 << USART_CR3_ONEBIT_Pos              ;/*!< 0x00000800 */
USART_CR3_ONEBIT              EQU		USART_CR3_ONEBIT_Msk                     ;/*!<USART One bit method enable */

USART_GTPR			          EQU		0x18
;/******************  Bit definition for USART_GTPR register  ******************/
USART_GTPR_PSC_Pos            EQU		0                                     
USART_GTPR_PSC_Msk            EQU		0xFF << USART_GTPR_PSC_Pos               ;/*!< 0x000000FF */
USART_GTPR_PSC                EQU		USART_GTPR_PSC_Msk                       ;/*!<PSC[7:0] bits EQU		Prescaler value    */
USART_GTPR_PSC_0              EQU		0x01 << USART_GTPR_PSC_Pos               ;/*!< 0x0001 */
USART_GTPR_PSC_1              EQU		0x02 << USART_GTPR_PSC_Pos               ;/*!< 0x0002 */
USART_GTPR_PSC_2              EQU		0x04 << USART_GTPR_PSC_Pos               ;/*!< 0x0004 */
USART_GTPR_PSC_3              EQU		0x08 << USART_GTPR_PSC_Pos               ;/*!< 0x0008 */
USART_GTPR_PSC_4              EQU		0x10 << USART_GTPR_PSC_Pos               ;/*!< 0x0010 */
USART_GTPR_PSC_5              EQU		0x20 << USART_GTPR_PSC_Pos               ;/*!< 0x0020 */
USART_GTPR_PSC_6              EQU		0x40 << USART_GTPR_PSC_Pos               ;/*!< 0x0040 */
USART_GTPR_PSC_7              EQU		0x80 << USART_GTPR_PSC_Pos               ;/*!< 0x0080 */

USART_GTPR_GT_Pos             EQU		8                                     
USART_GTPR_GT_Msk             EQU		0xFF << USART_GTPR_GT_Pos                ;/*!< 0x0000FF00 */
USART_GTPR_GT                 EQU		USART_GTPR_GT_Msk                        ;/*!<Guard time value */

;/******************************************************************************/
;/*                                                                            */
;/*                            Window WATCHDOG                                 */
;/*                                                                            */
;/******************************************************************************/

WWDG_CR		            EQU		0x00
;/*******************  Bit definition for WWDG_CR register  ********************/
WWDG_CR_T_Pos           EQU		0                                           
WWDG_CR_T_Msk           EQU		0x7F << WWDG_CR_T_Pos                          ;/*!< 0x0000007F */
WWDG_CR_T               EQU		WWDG_CR_T_Msk                                  ;/*!<T[6:0] bits EQU		7-Bit counter EQU		MSB to LSB       */
WWDG_CR_T_0             EQU		0x01 << WWDG_CR_T_Pos                          ;/*!< 0x01 */
WWDG_CR_T_1             EQU		0x02 << WWDG_CR_T_Pos                          ;/*!< 0x02 */
WWDG_CR_T_2             EQU		0x04 << WWDG_CR_T_Pos                          ;/*!< 0x04 */
WWDG_CR_T_3             EQU		0x08 << WWDG_CR_T_Pos                          ;/*!< 0x08 */
WWDG_CR_T_4             EQU		0x10 << WWDG_CR_T_Pos                          ;/*!< 0x10 */
WWDG_CR_T_5             EQU		0x20 << WWDG_CR_T_Pos                          ;/*!< 0x20 */
WWDG_CR_T_6             EQU		0x40 << WWDG_CR_T_Pos                          ;/*!< 0x40 */

;/* Legacy defines */
WWDG_CR_T0              EQU		WWDG_CR_T_0
WWDG_CR_T1              EQU		WWDG_CR_T_1
WWDG_CR_T2              EQU		WWDG_CR_T_2
WWDG_CR_T3              EQU		WWDG_CR_T_3
WDG_CR_T4               EQU		WWDG_CR_T_4
WWDG_CR_T5              EQU		WWDG_CR_T_5
WWDG_CR_T6              EQU		WWDG_CR_T_6

WWDG_CR_WDGA_Pos        EQU		7                                           
WWDG_CR_WDGA_Msk        EQU		0x1 << WWDG_CR_WDGA_Pos                        ;/*!< 0x00000080 */
WWDG_CR_WDGA            EQU		WWDG_CR_WDGA_Msk                               ;/*!<Activation bit */

WWDG_CFR		        EQU		0x04
;/*******************  Bit definition for WWDG_CFR register  *******************/
WWDG_CFR_W_Pos          EQU		0                                           
WWDG_CFR_W_Msk          EQU		0x7F << WWDG_CFR_W_Pos                         ;/*!< 0x0000007F */
WWDG_CFR_W              EQU		WWDG_CFR_W_Msk                                 ;/*!<W[6:0] bits EQU		7-bit window value    */
WWDG_CFR_W_0            EQU		0x01 << WWDG_CFR_W_Pos                         ;/*!< 0x0001 */
WWDG_CFR_W_1            EQU		0x02 << WWDG_CFR_W_Pos                         ;/*!< 0x0002 */
WWDG_CFR_W_2            EQU		0x04 << WWDG_CFR_W_Pos                         ;/*!< 0x0004 */
WWDG_CFR_W_3            EQU		0x08 << WWDG_CFR_W_Pos                         ;/*!< 0x0008 */
WWDG_CFR_W_4            EQU		0x10 << WWDG_CFR_W_Pos                         ;/*!< 0x0010 */
WWDG_CFR_W_5            EQU		0x20 << WWDG_CFR_W_Pos                         ;/*!< 0x0020 */
WWDG_CFR_W_6            EQU		0x40 << WWDG_CFR_W_Pos                         ;/*!< 0x0040 */

;/* Legacy defines */
WWDG_CFR_W0             EQU		WWDG_CFR_W_0
WWDG_CFR_W1             EQU		WWDG_CFR_W_1
WWDG_CFR_W2             EQU		WWDG_CFR_W_2
WWDG_CFR_W3             EQU		WWDG_CFR_W_3
WWDG_CFR_W4             EQU		WWDG_CFR_W_4
WWDG_CFR_W5             EQU		WWDG_CFR_W_5
WWDG_CFR_W6             EQU		WWDG_CFR_W_6

WWDG_CFR_WDGTB_Pos      EQU		7                                           
WWDG_CFR_WDGTB_Msk      EQU		0x3 << WWDG_CFR_WDGTB_Pos                      ;/*!< 0x00000180 */
WWDG_CFR_WDGTB          EQU		WWDG_CFR_WDGTB_Msk                             ;/*!<WDGTB[1:0] bits EQU		Timer Base    */
WWDG_CFR_WDGTB_0        EQU		0x1 << WWDG_CFR_WDGTB_Pos                      ;/*!< 0x0080 */
WWDG_CFR_WDGTB_1        EQU		0x2 << WWDG_CFR_WDGTB_Pos                      ;/*!< 0x0100 */

;/* Legacy defines */
WWDG_CFR_WDGTB0         EQU		WWDG_CFR_WDGTB_0
WWDG_CFR_WDGTB1         EQU		WWDG_CFR_WDGTB_1

WWDG_CFR_EWI_Pos        EQU		9                                           
WWDG_CFR_EWI_Msk        EQU		0x1 << WWDG_CFR_EWI_Pos                        ;/*!< 0x00000200 */
WWDG_CFR_EWI            EQU		WWDG_CFR_EWI_Msk                               ;/*!<Early Wakeup Interrupt */

WWDG_SR			        EQU		0x08
;/*******************  Bit definition for WWDG_SR register  ********************/
WWDG_SR_EWIF_Pos        EQU		0                                           
WWDG_SR_EWIF_Msk        EQU		0x1 << WWDG_SR_EWIF_Pos                        ;/*!< 0x00000001 */
WWDG_SR_EWIF            EQU		WWDG_SR_EWIF_Msk                               ;/*!<Early Wakeup Interrupt Flag */

;/******************************************************************************/
;/*                                                                            */
;/*                                DBG                                         */
;/*                                                                            */
;/******************************************************************************/

DBGMCU_IDCODE			                     EQU		0xE0042000
;/********************  Bit definition for DBGMCU_IDCODE register  *************/
DBGMCU_IDCODE_DEV_ID_Pos                     EQU		0                      
DBGMCU_IDCODE_DEV_ID_Msk                     EQU		0xFFF << DBGMCU_IDCODE_DEV_ID_Pos    ;/*!< 0x00000FFF */
DBGMCU_IDCODE_DEV_ID                         EQU		DBGMCU_IDCODE_DEV_ID_Msk  
DBGMCU_IDCODE_REV_ID_Pos                     EQU		16                     
DBGMCU_IDCODE_REV_ID_Msk                     EQU		0xFFFF << DBGMCU_IDCODE_REV_ID_Pos    ;/*!< 0xFFFF0000 */
DBGMCU_IDCODE_REV_ID                         EQU		DBGMCU_IDCODE_REV_ID_Msk  

DBGMCU_CR				                     EQU		0xE0042004
;/********************  Bit definition for DBGMCU_CR register  *****************/
DBGMCU_CR_DBG_SLEEP_Pos                      EQU		0                      
DBGMCU_CR_DBG_SLEEP_Msk                      EQU		0x1 << DBGMCU_CR_DBG_SLEEP_Pos    ;/*!< 0x00000001 */
DBGMCU_CR_DBG_SLEEP                          EQU		DBGMCU_CR_DBG_SLEEP_Msk   
DBGMCU_CR_DBG_STOP_Pos                       EQU		1                      
DBGMCU_CR_DBG_STOP_Msk                       EQU		0x1 << DBGMCU_CR_DBG_STOP_Pos    ;/*!< 0x00000002 */
DBGMCU_CR_DBG_STOP                           EQU		DBGMCU_CR_DBG_STOP_Msk    
DBGMCU_CR_DBG_STANDBY_Pos                    EQU		2                      
DBGMCU_CR_DBG_STANDBY_Msk                    EQU		0x1 << DBGMCU_CR_DBG_STANDBY_Pos    ;/*!< 0x00000004 */
DBGMCU_CR_DBG_STANDBY                        EQU		DBGMCU_CR_DBG_STANDBY_Msk 
DBGMCU_CR_TRACE_IOEN_Pos                     EQU		5                      
DBGMCU_CR_TRACE_IOEN_Msk                     EQU		0x1 << DBGMCU_CR_TRACE_IOEN_Pos    ;/*!< 0x00000020 */
DBGMCU_CR_TRACE_IOEN                         EQU		DBGMCU_CR_TRACE_IOEN_Msk  

DBGMCU_CR_TRACE_MODE_Pos                     EQU		6                      
DBGMCU_CR_TRACE_MODE_Msk                     EQU		0x3 << DBGMCU_CR_TRACE_MODE_Pos    ;/*!< 0x000000C0 */
DBGMCU_CR_TRACE_MODE                         EQU		DBGMCU_CR_TRACE_MODE_Msk  
DBGMCU_CR_TRACE_MODE_0                       EQU		0x1 << DBGMCU_CR_TRACE_MODE_Pos    ;/*!< 0x00000040 */
DBGMCU_CR_TRACE_MODE_1                       EQU		0x2 << DBGMCU_CR_TRACE_MODE_Pos    ;/*!< 0x00000080 */

DBGMCU_APB1_FZ					             EQU		0xE0042008
;/********************  Bit definition for DBGMCU_APB1_FZ register  ************/
DBGMCU_APB1_FZ_DBG_TIM2_STOP_Pos             EQU		0                      
DBGMCU_APB1_FZ_DBG_TIM2_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_TIM2_STOP_Pos    ;/*!< 0x00000001 */
DBGMCU_APB1_FZ_DBG_TIM2_STOP                 EQU		DBGMCU_APB1_FZ_DBG_TIM2_STOP_Msk 
DBGMCU_APB1_FZ_DBG_TIM3_STOP_Pos             EQU		1                      
DBGMCU_APB1_FZ_DBG_TIM3_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_TIM3_STOP_Pos    ;/*!< 0x00000002 */
DBGMCU_APB1_FZ_DBG_TIM3_STOP                 EQU		DBGMCU_APB1_FZ_DBG_TIM3_STOP_Msk 
DBGMCU_APB1_FZ_DBG_TIM4_STOP_Pos             EQU		2                      
DBGMCU_APB1_FZ_DBG_TIM4_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_TIM4_STOP_Pos    ;/*!< 0x00000004 */
DBGMCU_APB1_FZ_DBG_TIM4_STOP                 EQU		DBGMCU_APB1_FZ_DBG_TIM4_STOP_Msk 
DBGMCU_APB1_FZ_DBG_TIM5_STOP_Pos             EQU		3                      
DBGMCU_APB1_FZ_DBG_TIM5_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_TIM5_STOP_Pos    ;/*!< 0x00000008 */
DBGMCU_APB1_FZ_DBG_TIM5_STOP                 EQU		DBGMCU_APB1_FZ_DBG_TIM5_STOP_Msk 
DBGMCU_APB1_FZ_DBG_TIM6_STOP_Pos             EQU		4                      
DBGMCU_APB1_FZ_DBG_TIM6_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_TIM6_STOP_Pos    ;/*!< 0x00000010 */
DBGMCU_APB1_FZ_DBG_TIM6_STOP                 EQU		DBGMCU_APB1_FZ_DBG_TIM6_STOP_Msk 
DBGMCU_APB1_FZ_DBG_TIM7_STOP_Pos             EQU		5                      
DBGMCU_APB1_FZ_DBG_TIM7_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_TIM7_STOP_Pos    ;/*!< 0x00000020 */
DBGMCU_APB1_FZ_DBG_TIM7_STOP                 EQU		DBGMCU_APB1_FZ_DBG_TIM7_STOP_Msk 
DBGMCU_APB1_FZ_DBG_TIM12_STOP_Pos            EQU		6                      
DBGMCU_APB1_FZ_DBG_TIM12_STOP_Msk            EQU		0x1 << DBGMCU_APB1_FZ_DBG_TIM12_STOP_Pos    ;/*!< 0x00000040 */
DBGMCU_APB1_FZ_DBG_TIM12_STOP                EQU		DBGMCU_APB1_FZ_DBG_TIM12_STOP_Msk 
DBGMCU_APB1_FZ_DBG_TIM13_STOP_Pos            EQU		7                      
DBGMCU_APB1_FZ_DBG_TIM13_STOP_Msk            EQU		0x1 << DBGMCU_APB1_FZ_DBG_TIM13_STOP_Pos    ;/*!< 0x00000080 */
DBGMCU_APB1_FZ_DBG_TIM13_STOP                EQU		DBGMCU_APB1_FZ_DBG_TIM13_STOP_Msk 
DBGMCU_APB1_FZ_DBG_TIM14_STOP_Pos            EQU		8                      
DBGMCU_APB1_FZ_DBG_TIM14_STOP_Msk            EQU		0x1 << DBGMCU_APB1_FZ_DBG_TIM14_STOP_Pos    ;/*!< 0x00000100 */
DBGMCU_APB1_FZ_DBG_TIM14_STOP                EQU		DBGMCU_APB1_FZ_DBG_TIM14_STOP_Msk 
DBGMCU_APB1_FZ_DBG_RTC_STOP_Pos              EQU		10                     
DBGMCU_APB1_FZ_DBG_RTC_STOP_Msk              EQU		0x1 << DBGMCU_APB1_FZ_DBG_RTC_STOP_Pos    ;/*!< 0x00000400 */
DBGMCU_APB1_FZ_DBG_RTC_STOP                  EQU		DBGMCU_APB1_FZ_DBG_RTC_STOP_Msk 
DBGMCU_APB1_FZ_DBG_WWDG_STOP_Pos             EQU		11                     
DBGMCU_APB1_FZ_DBG_WWDG_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_WWDG_STOP_Pos    ;/*!< 0x00000800 */
DBGMCU_APB1_FZ_DBG_WWDG_STOP                 EQU		DBGMCU_APB1_FZ_DBG_WWDG_STOP_Msk 
DBGMCU_APB1_FZ_DBG_IWDG_STOP_Pos             EQU		12                     
DBGMCU_APB1_FZ_DBG_IWDG_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_IWDG_STOP_Pos    ;/*!< 0x00001000 */
DBGMCU_APB1_FZ_DBG_IWDG_STOP                 EQU		DBGMCU_APB1_FZ_DBG_IWDG_STOP_Msk 
DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Pos    EQU		21                     
DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Msk    EQU		0x1 << DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Pos    ;/*!< 0x00200000 */
DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT        EQU		DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT_Msk 
DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Pos    EQU		22                     
DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Msk    EQU		0x1 << DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Pos    ;/*!< 0x00400000 */
DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT        EQU		DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT_Msk 
DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT_Pos    EQU		23                     
DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT_Msk    EQU		0x1 << DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT_Pos    ;/*!< 0x00800000 */
DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT        EQU		DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT_Msk 
DBGMCU_APB1_FZ_DBG_CAN1_STOP_Pos             EQU		25                     
DBGMCU_APB1_FZ_DBG_CAN1_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_CAN1_STOP_Pos    ;/*!< 0x02000000 */
DBGMCU_APB1_FZ_DBG_CAN1_STOP                 EQU		DBGMCU_APB1_FZ_DBG_CAN1_STOP_Msk 
DBGMCU_APB1_FZ_DBG_CAN2_STOP_Pos             EQU		26                     
DBGMCU_APB1_FZ_DBG_CAN2_STOP_Msk             EQU		0x1 << DBGMCU_APB1_FZ_DBG_CAN2_STOP_Pos    ;/*!< 0x04000000 */
DBGMCU_APB1_FZ_DBG_CAN2_STOP                 EQU		DBGMCU_APB1_FZ_DBG_CAN2_STOP_Msk 

;/* Old IWDGSTOP bit definition, maintained for legacy purpose */
DBGMCU_APB1_FZ_DBG_IWDEG_STOP           	 EQU		DBGMCU_APB1_FZ_DBG_IWDG_STOP

DBGMCU_APB2_FZ					             EQU		0xE004200C
;/********************  Bit definition for DBGMCU_APB2_FZ register  ************/
DBGMCU_APB2_FZ_DBG_TIM1_STOP_Pos             EQU		0                      
DBGMCU_APB2_FZ_DBG_TIM1_STOP_Msk             EQU		0x1 << DBGMCU_APB2_FZ_DBG_TIM1_STOP_Pos    ;/*!< 0x00000001 */
DBGMCU_APB2_FZ_DBG_TIM1_STOP                 EQU		DBGMCU_APB2_FZ_DBG_TIM1_STOP_Msk 
DBGMCU_APB2_FZ_DBG_TIM8_STOP_Pos             EQU		1                      
DBGMCU_APB2_FZ_DBG_TIM8_STOP_Msk             EQU		0x1 << DBGMCU_APB2_FZ_DBG_TIM8_STOP_Pos    ;/*!< 0x00000002 */
DBGMCU_APB2_FZ_DBG_TIM8_STOP                 EQU		DBGMCU_APB2_FZ_DBG_TIM8_STOP_Msk 
DBGMCU_APB2_FZ_DBG_TIM9_STOP_Pos             EQU		16                     
DBGMCU_APB2_FZ_DBG_TIM9_STOP_Msk             EQU		0x1 << DBGMCU_APB2_FZ_DBG_TIM9_STOP_Pos    ;/*!< 0x00010000 */
DBGMCU_APB2_FZ_DBG_TIM9_STOP                 EQU		DBGMCU_APB2_FZ_DBG_TIM9_STOP_Msk 
DBGMCU_APB2_FZ_DBG_TIM10_STOP_Pos            EQU		17                     
DBGMCU_APB2_FZ_DBG_TIM10_STOP_Msk            EQU		0x1 << DBGMCU_APB2_FZ_DBG_TIM10_STOP_Pos    ;/*!< 0x00020000 */
DBGMCU_APB2_FZ_DBG_TIM10_STOP                EQU		DBGMCU_APB2_FZ_DBG_TIM10_STOP_Msk 
DBGMCU_APB2_FZ_DBG_TIM11_STOP_Pos            EQU		18                     
DBGMCU_APB2_FZ_DBG_TIM11_STOP_Msk            EQU		0x1 << DBGMCU_APB2_FZ_DBG_TIM11_STOP_Pos    ;/*!< 0x00040000 */
DBGMCU_APB2_FZ_DBG_TIM11_STOP                EQU		DBGMCU_APB2_FZ_DBG_TIM11_STOP_Msk 

;/******************************************************************************/
;/*                                                                            */
;/*                Ethernet MAC Registers bits definitions                     */
;/*                                                                            */
;/******************************************************************************/

ETH_MACCR		                              EQU		0x00
;/* Bit definition for Ethernet MAC Control Register register */
ETH_MACCR_WD_Pos                              EQU		23                    
ETH_MACCR_WD_Msk                              EQU		0x1 << ETH_MACCR_WD_Pos    ;/*!< 0x00800000 */
ETH_MACCR_WD                                  EQU		ETH_MACCR_WD_Msk           ;/* Watchdog disable */
ETH_MACCR_JD_Pos                              EQU		22                    
ETH_MACCR_JD_Msk                              EQU		0x1 << ETH_MACCR_JD_Pos    ;/*!< 0x00400000 */
ETH_MACCR_JD                                  EQU		ETH_MACCR_JD_Msk           ;/* Jabber disable */
ETH_MACCR_IFG_Pos                             EQU		17                    
ETH_MACCR_IFG_Msk                             EQU		0x7 << ETH_MACCR_IFG_Pos    ;/*!< 0x000E0000 */
ETH_MACCR_IFG                                 EQU		ETH_MACCR_IFG_Msk       ;/* Inter-frame gap */
ETH_MACCR_IFG_96Bit                           EQU		0x00000000              ;/* Minimum IFG between frames during transmission is 96Bit */
ETH_MACCR_IFG_88Bit                           EQU		0x00020000              ;/* Minimum IFG between frames during transmission is 88Bit */
ETH_MACCR_IFG_80Bit                           EQU		0x00040000              ;/* Minimum IFG between frames during transmission is 80Bit */
ETH_MACCR_IFG_72Bit                           EQU		0x00060000              ;/* Minimum IFG between frames during transmission is 72Bit */
ETH_MACCR_IFG_64Bit                           EQU		0x00080000              ;/* Minimum IFG between frames during transmission is 64Bit */
ETH_MACCR_IFG_56Bit                           EQU		0x000A0000              ;/* Minimum IFG between frames during transmission is 56Bit */
ETH_MACCR_IFG_48Bit                           EQU		0x000C0000              ;/* Minimum IFG between frames during transmission is 48Bit */
ETH_MACCR_IFG_40Bit                           EQU		0x000E0000              ;/* Minimum IFG between frames during transmission is 40Bit */
ETH_MACCR_CSD_Pos                             EQU		16                    
ETH_MACCR_CSD_Msk                             EQU		0x1 << ETH_MACCR_CSD_Pos    ;/*!< 0x00010000 */
ETH_MACCR_CSD                                 EQU		ETH_MACCR_CSD_Msk           ;/* Carrier sense disable EQU		during transmission    */
ETH_MACCR_FES_Pos                             EQU		14                    
ETH_MACCR_FES_Msk                             EQU		0x1 << ETH_MACCR_FES_Pos    ;/*!< 0x00004000 */
ETH_MACCR_FES                                 EQU		ETH_MACCR_FES_Msk        	;/* Fast ethernet speed */
ETH_MACCR_ROD_Pos                             EQU		13                    
ETH_MACCR_ROD_Msk                             EQU		0x1 << ETH_MACCR_ROD_Pos    ;/*!< 0x00002000 */
ETH_MACCR_ROD                                 EQU		ETH_MACCR_ROD_Msk        	;/* Receive own disable */
ETH_MACCR_LM_Pos                              EQU		12                    
ETH_MACCR_LM_Msk                              EQU		0x1 << ETH_MACCR_LM_Pos     ;/*!< 0x00001000 */
ETH_MACCR_LM                                  EQU		ETH_MACCR_LM_Msk         	;/* loopback mode */
ETH_MACCR_DM_Pos                              EQU		11                    
ETH_MACCR_DM_Msk                              EQU		0x1 << ETH_MACCR_DM_Pos     ;/*!< 0x00000800 */
ETH_MACCR_DM                                  EQU		ETH_MACCR_DM_Msk         	;/* Duplex mode */
ETH_MACCR_IPCO_Pos                            EQU		10                    
ETH_MACCR_IPCO_Msk                            EQU		0x1 << ETH_MACCR_IPCO_Pos   ;/*!< 0x00000400 */
ETH_MACCR_IPCO                                EQU		ETH_MACCR_IPCO_Msk       	;/* IP Checksum offload */
ETH_MACCR_RD_Pos                              EQU		9                     
ETH_MACCR_RD_Msk                              EQU		0x1 << ETH_MACCR_RD_Pos     ;/*!< 0x00000200 */
ETH_MACCR_RD                                  EQU		ETH_MACCR_RD_Msk         	;/* Retry disable */
ETH_MACCR_APCS_Pos                            EQU		7                     
ETH_MACCR_APCS_Msk                            EQU		0x1 << ETH_MACCR_APCS_Pos   ;/*!< 0x00000080 */
ETH_MACCR_APCS                                EQU		ETH_MACCR_APCS_Msk       	;/* Automatic Pad/CRC stripping */
ETH_MACCR_BL_Pos                              EQU		5                     
ETH_MACCR_BL_Msk                              EQU		0x3 << ETH_MACCR_BL_Pos     ;/*!< 0x00000060 */
ETH_MACCR_BL                                  EQU		ETH_MACCR_BL_Msk         	;/* Back-off limit: random integer number of slot time delays before rescheduling
																					;a transmission attempt during retries after a collision: 0 =< r <2^k */
ETH_MACCR_BL_10                               EQU		0x00000000                  ;/* k = min EQU		n, 10    */
ETH_MACCR_BL_8                                EQU		0x00000020                  ;/* k = min EQU		n, 8    */
ETH_MACCR_BL_4                                EQU		0x00000040                  ;/* k = min EQU		n, 4    */
ETH_MACCR_BL_1                                EQU		0x00000060                  ;/* k = min EQU		n, 1    */ 
ETH_MACCR_DC_Pos                              EQU		4                     
ETH_MACCR_DC_Msk                              EQU		0x1 << ETH_MACCR_DC_Pos     ;/*!< 0x00000010 */
ETH_MACCR_DC                                  EQU		ETH_MACCR_DC_Msk         	;/* Defferal check */
ETH_MACCR_TE_Pos                              EQU		3                     
ETH_MACCR_TE_Msk                              EQU		0x1 << ETH_MACCR_TE_Pos     ;/*!< 0x00000008 */
ETH_MACCR_TE                                  EQU		ETH_MACCR_TE_Msk         	;/* Transmitter enable */
ETH_MACCR_RE_Pos                              EQU		2                     
ETH_MACCR_RE_Msk                              EQU		0x1 << ETH_MACCR_RE_Pos     ;/*!< 0x00000004 */
ETH_MACCR_RE                                  EQU		ETH_MACCR_RE_Msk         	;/* Receiver enable */

ETH_MACFFR		                              EQU		0x04
;/* Bit definition for Ethernet MAC Frame Filter Register */
ETH_MACFFR_RA_Pos                             EQU		31                    
ETH_MACFFR_RA_Msk                             EQU		0x1 << ETH_MACFFR_RA_Pos    ;/*!< 0x80000000 */
ETH_MACFFR_RA                                 EQU		ETH_MACFFR_RA_Msk        	;/* Receive all */
ETH_MACFFR_HPF_Pos                            EQU		10                    
ETH_MACFFR_HPF_Msk                            EQU		0x1 << ETH_MACFFR_HPF_Pos   ;/*!< 0x00000400 */
ETH_MACFFR_HPF                                EQU		ETH_MACFFR_HPF_Msk       	;/* Hash or perfect filter */
ETH_MACFFR_SAF_Pos                            EQU		9                     
ETH_MACFFR_SAF_Msk                            EQU		0x1 << ETH_MACFFR_SAF_Pos   ;/*!< 0x00000200 */
ETH_MACFFR_SAF                                EQU		ETH_MACFFR_SAF_Msk       	;/* Source address filter enable */
ETH_MACFFR_SAIF_Pos                           EQU		8                     
ETH_MACFFR_SAIF_Msk                           EQU		0x1 << ETH_MACFFR_SAIF_Pos  ;/*!< 0x00000100 */
ETH_MACFFR_SAIF                               EQU		ETH_MACFFR_SAIF_Msk      	;/* SA inverse filtering */ 
ETH_MACFFR_PCF_Pos                            EQU		6                     
ETH_MACFFR_PCF_Msk                            EQU		0x3 << ETH_MACFFR_PCF_Pos   ;/*!< 0x000000C0 */
ETH_MACFFR_PCF                                EQU		ETH_MACFFR_PCF_Msk       	;/* Pass control frames: 3 cases */
ETH_MACFFR_PCF_BlockAll_Pos                   EQU		6                     
ETH_MACFFR_PCF_BlockAll_Msk                   EQU		0x1 << ETH_MACFFR_PCF_BlockAll_Pos      ;/*!< 0x00000040 */
ETH_MACFFR_PCF_BlockAll                       EQU		ETH_MACFFR_PCF_BlockAll_Msk 			;/* MAC filters all control frames from reaching the application */
ETH_MACFFR_PCF_ForwardAll_Pos                 EQU		7                     
ETH_MACFFR_PCF_ForwardAll_Msk                 EQU		0x1 << ETH_MACFFR_PCF_ForwardAll_Pos    ;/*!< 0x00000080 */
ETH_MACFFR_PCF_ForwardAll                     EQU		ETH_MACFFR_PCF_ForwardAll_Msk 			;/* MAC forwards all control frames to application even if they fail the Address Filter */
ETH_MACFFR_PCF_ForwardPassedAddrFilter_Pos    EQU		6                     
ETH_MACFFR_PCF_ForwardPassedAddrFilter_Msk    EQU		0x3 << ETH_MACFFR_PCF_ForwardPassedAddrFilter_Pos    ;/*!< 0x000000C0 */
ETH_MACFFR_PCF_ForwardPassedAddrFilter        EQU		ETH_MACFFR_PCF_ForwardPassedAddrFilter_Msk 			 ;/* MAC forwards control frames that pass the Address Filter. */ 
ETH_MACFFR_BFD_Pos                            EQU		5                     
ETH_MACFFR_BFD_Msk                            EQU		0x1 << ETH_MACFFR_BFD_Pos   ;/*!< 0x00000020 */
ETH_MACFFR_BFD                                EQU		ETH_MACFFR_BFD_Msk       	;/* Broadcast frame disable */ 
ETH_MACFFR_PAM_Pos                            EQU		4                     
ETH_MACFFR_PAM_Msk                            EQU		0x1 << ETH_MACFFR_PAM_Pos   ;/*!< 0x00000010 */
ETH_MACFFR_PAM                                EQU		ETH_MACFFR_PAM_Msk       	;/* Pass all mutlicast */
ETH_MACFFR_DAIF_Pos                           EQU		3                     
ETH_MACFFR_DAIF_Msk                           EQU		0x1 << ETH_MACFFR_DAIF_Pos  ;/*!< 0x00000008 */
ETH_MACFFR_DAIF                               EQU		ETH_MACFFR_DAIF_Msk      	;/* DA Inverse filtering */
ETH_MACFFR_HM_Pos                             EQU		2                     
ETH_MACFFR_HM_Msk                             EQU		0x1 << ETH_MACFFR_HM_Pos    ;/*!< 0x00000004 */
ETH_MACFFR_HM                                 EQU		ETH_MACFFR_HM_Msk        	;/* Hash multicast */ 
ETH_MACFFR_HU_Pos                             EQU		1                     
ETH_MACFFR_HU_Msk                             EQU		0x1 << ETH_MACFFR_HU_Pos    ;/*!< 0x00000002 */
ETH_MACFFR_HU                                 EQU		ETH_MACFFR_HU_Msk        	;/* Hash unicast */
ETH_MACFFR_PM_Pos                             EQU		0                     
ETH_MACFFR_PM_Msk                             EQU		0x1 << ETH_MACFFR_PM_Pos    ;/*!< 0x00000001 */
ETH_MACFFR_PM                                 EQU		ETH_MACFFR_PM_Msk        	;/* Promiscuous mode */

ETH_MACHTHR			                          EQU		0x08
;/* Bit definition for Ethernet MAC Hash Table High Register */
ETH_MACHTHR_HTH_Pos                           EQU		0                     
ETH_MACHTHR_HTH_Msk                           EQU		0xFFFFFFFF << ETH_MACHTHR_HTH_Pos    ;/*!< 0xFFFFFFFF */
ETH_MACHTHR_HTH                               EQU		ETH_MACHTHR_HTH_Msk      			 ;/* Hash table high */

ETH_MACHTLR			                          EQU		0x0C
;/* Bit definition for Ethernet MAC Hash Table Low Register */
ETH_MACHTLR_HTL_Pos                           EQU		0                     
ETH_MACHTLR_HTL_Msk                           EQU		0xFFFFFFFF << ETH_MACHTLR_HTL_Pos    ;/*!< 0xFFFFFFFF */
ETH_MACHTLR_HTL                               EQU		ETH_MACHTLR_HTL_Msk      			 ;/* Hash table low */

ETH_MACMIIAR		                          EQU		0x10
;/* Bit definition for Ethernet MAC MII Address Register */
ETH_MACMIIAR_PA_Pos                           EQU		11                    
ETH_MACMIIAR_PA_Msk                           EQU		0x1F << ETH_MACMIIAR_PA_Pos     ;/*!< 0x0000F800 */
ETH_MACMIIAR_PA                               EQU		ETH_MACMIIAR_PA_Msk      		;/* Physical layer address */
ETH_MACMIIAR_MR_Pos                           EQU		6                     
ETH_MACMIIAR_MR_Msk                           EQU		0x1F << ETH_MACMIIAR_MR_Pos     ;/*!< 0x000007C0 */
ETH_MACMIIAR_MR                               EQU		ETH_MACMIIAR_MR_Msk      		;/* MII register in the selected PHY */
ETH_MACMIIAR_CR_Pos                           EQU		2                     
ETH_MACMIIAR_CR_Msk                           EQU		0x7 << ETH_MACMIIAR_CR_Pos    	;/*!< 0x0000001C */
ETH_MACMIIAR_CR                               EQU		ETH_MACMIIAR_CR_Msk      		;/* CR clock range: 6 cases */
ETH_MACMIIAR_CR_Div42                         EQU		0x00000000               		;/* HCLK:60-100 MHz; MDC clock= HCLK/42   */
ETH_MACMIIAR_CR_Div62_Pos                     EQU		2                     
ETH_MACMIIAR_CR_Div62_Msk                     EQU		0x1 << ETH_MACMIIAR_CR_Div62_Pos    ;/*!< 0x00000004 */
ETH_MACMIIAR_CR_Div62                         EQU		ETH_MACMIIAR_CR_Div62_Msk 			;/* HCLK:100-150 MHz; MDC clock= HCLK/62  */
ETH_MACMIIAR_CR_Div16_Pos                     EQU		3                     
ETH_MACMIIAR_CR_Div16_Msk                     EQU		0x1 << ETH_MACMIIAR_CR_Div16_Pos    ;/*!< 0x00000008 */
ETH_MACMIIAR_CR_Div16                         EQU		ETH_MACMIIAR_CR_Div16_Msk 			;/* HCLK:20-35 MHz; MDC clock= HCLK/16    */
ETH_MACMIIAR_CR_Div26_Pos                     EQU		2                     
ETH_MACMIIAR_CR_Div26_Msk                     EQU		0x3 << ETH_MACMIIAR_CR_Div26_Pos    ;/*!< 0x0000000C */
ETH_MACMIIAR_CR_Div26                         EQU		ETH_MACMIIAR_CR_Div26_Msk 			;/* HCLK:35-60 MHz; MDC clock= HCLK/26    */
ETH_MACMIIAR_CR_Div102_Pos                    EQU		4                     
ETH_MACMIIAR_CR_Div102_Msk                    EQU		0x1 << ETH_MACMIIAR_CR_Div102_Pos   ;/*!< 0x00000010 */
ETH_MACMIIAR_CR_Div102                        EQU		ETH_MACMIIAR_CR_Div102_Msk 			;/* HCLK:150-168 MHz; MDC clock= HCLK/102 */
ETH_MACMIIAR_MW_Pos                           EQU		1                     
ETH_MACMIIAR_MW_Msk                           EQU		0x1 << ETH_MACMIIAR_MW_Pos    		;/*!< 0x00000002 */
ETH_MACMIIAR_MW                               EQU		ETH_MACMIIAR_MW_Msk      			;/* MII write */
ETH_MACMIIAR_MB_Pos                           EQU		0                     
ETH_MACMIIAR_MB_Msk                           EQU		0x1 << ETH_MACMIIAR_MB_Pos    		;/*!< 0x00000001 */
ETH_MACMIIAR_MB                               EQU		ETH_MACMIIAR_MB_Msk      			;/* MII busy  */

ETH_MACMIIDR		                          EQU		0x14
;/* Bit definition for Ethernet MAC MII Data Register */
ETH_MACMIIDR_MD_Pos                           EQU		0                     
ETH_MACMIIDR_MD_Msk                           EQU		0xFFFF << ETH_MACMIIDR_MD_Pos    ;/*!< 0x0000FFFF */
ETH_MACMIIDR_MD                               EQU		ETH_MACMIIDR_MD_Msk      		 ;/* MII data: read/write data from/to PHY */

ETH_MACFCR		                              EQU		0x18
;/* Bit definition for Ethernet MAC Flow Control Register */
ETH_MACFCR_PT_Pos                             EQU		16                    
ETH_MACFCR_PT_Msk                             EQU		0xFFFF << ETH_MACFCR_PT_Pos     ;/*!< 0xFFFF0000 */
ETH_MACFCR_PT                                 EQU		ETH_MACFCR_PT_Msk        		;/* Pause time */
ETH_MACFCR_ZQPD_Pos                           EQU		7                     
ETH_MACFCR_ZQPD_Msk                           EQU		0x1 << ETH_MACFCR_ZQPD_Pos    	;/*!< 0x00000080 */
ETH_MACFCR_ZQPD                               EQU		ETH_MACFCR_ZQPD_Msk      		;/* Zero-quanta pause disable */
ETH_MACFCR_PLT_Pos                            EQU		4                     
ETH_MACFCR_PLT_Msk                            EQU		0x3 << ETH_MACFCR_PLT_Pos    	;/*!< 0x00000030 */
ETH_MACFCR_PLT                                EQU		ETH_MACFCR_PLT_Msk       		;/* Pause low threshold: 4 cases */
ETH_MACFCR_PLT_Minus4                         EQU		0x00000000               		;/* Pause time minus 4 slot times   */
ETH_MACFCR_PLT_Minus28_Pos                    EQU		4                     
ETH_MACFCR_PLT_Minus28_Msk                    EQU		0x1 << ETH_MACFCR_PLT_Minus28_Pos    ;/*!< 0x00000010 */
ETH_MACFCR_PLT_Minus28                        EQU		ETH_MACFCR_PLT_Minus28_Msk 			 ;/* Pause time minus 28 slot times  */
ETH_MACFCR_PLT_Minus144_Pos                   EQU		5                     
ETH_MACFCR_PLT_Minus144_Msk                   EQU		0x1 << ETH_MACFCR_PLT_Minus144_Pos   ;/*!< 0x00000020 */
ETH_MACFCR_PLT_Minus144                       EQU		ETH_MACFCR_PLT_Minus144_Msk 		 ;/* Pause time minus 144 slot times */
ETH_MACFCR_PLT_Minus256_Pos                   EQU		4                     
ETH_MACFCR_PLT_Minus256_Msk                   EQU		0x3 << ETH_MACFCR_PLT_Minus256_Pos   ;/*!< 0x00000030 */
ETH_MACFCR_PLT_Minus256                       EQU		ETH_MACFCR_PLT_Minus256_Msk 		 ;/* Pause time minus 256 slot times */
ETH_MACFCR_UPFD_Pos                           EQU		3                     
ETH_MACFCR_UPFD_Msk                           EQU		0x1 << ETH_MACFCR_UPFD_Pos   		 ;/*!< 0x00000008 */
ETH_MACFCR_UPFD                               EQU		ETH_MACFCR_UPFD_Msk      			 ;/* Unicast pause frame detect */
ETH_MACFCR_RFCE_Pos                           EQU		2                     
ETH_MACFCR_RFCE_Msk                           EQU		0x1 << ETH_MACFCR_RFCE_Pos    		 ;/*!< 0x00000004 */
ETH_MACFCR_RFCE                               EQU		ETH_MACFCR_RFCE_Msk      			 ;/* Receive flow control enable */
ETH_MACFCR_TFCE_Pos                           EQU		1                     
ETH_MACFCR_TFCE_Msk                           EQU		0x1 << ETH_MACFCR_TFCE_Pos    		 ;/*!< 0x00000002 */
ETH_MACFCR_TFCE                               EQU		ETH_MACFCR_TFCE_Msk      			 ;/* Transmit flow control enable */
ETH_MACFCR_FCBBPA_Pos                         EQU		0                     
ETH_MACFCR_FCBBPA_Msk                         EQU		0x1 << ETH_MACFCR_FCBBPA_Pos    	 ;/*!< 0x00000001 */
ETH_MACFCR_FCBBPA                             EQU		ETH_MACFCR_FCBBPA_Msk    			 ;/* Flow control busy/backpressure activate */

ETH_MACVLANTR			                      EQU		0x1C
;/* Bit definition for Ethernet MAC VLAN Tag Register */
ETH_MACVLANTR_VLANTC_Pos                      EQU		16                    
ETH_MACVLANTR_VLANTC_Msk                      EQU		0x1 << ETH_MACVLANTR_VLANTC_Pos     ;/*!< 0x00010000 */
ETH_MACVLANTR_VLANTC                          EQU		ETH_MACVLANTR_VLANTC_Msk 			;/* 12-bit VLAN tag comparison */
ETH_MACVLANTR_VLANTI_Pos                      EQU		0                     
ETH_MACVLANTR_VLANTI_Msk                      EQU		0xFFFF << ETH_MACVLANTR_VLANTI_Pos  ;/*!< 0x0000FFFF */
ETH_MACVLANTR_VLANTI                          EQU		ETH_MACVLANTR_VLANTI_Msk 			;/* VLAN tag identifier EQU		for receive frames    */

ETH_MACRWUFFR		                          EQU		0x28
;/* Bit definition for Ethernet MAC Remote Wake-UpFrame Filter Register */ 
ETH_MACRWUFFR_D_Pos                           EQU		0                     
ETH_MACRWUFFR_D_Msk                           EQU		0xFFFFFFFF << ETH_MACRWUFFR_D_Pos    ;/*!< 0xFFFFFFFF */
ETH_MACRWUFFR_D                               EQU		ETH_MACRWUFFR_D_Msk      			 ;/* Wake-up frame filter register data */

;/* Eight sequential Writes to this address offset 0x28    will write all Wake-UpFrame Filter Registers.
;   Eight sequential Reads from this address offset 0x28   will read all Wake-UpFrame Filter Registers. */
;/* Wake-UpFrame Filter Reg0 : Filter 0 Byte Mask
;   Wake-UpFrame Filter Reg1 : Filter 1 Byte Mask
;   Wake-UpFrame Filter Reg2 : Filter 2 Byte Mask
;   Wake-UpFrame Filter Reg3 : Filter 3 Byte Mask
;   Wake-UpFrame Filter Reg4 : RSVD - Filter3 Command - RSVD - Filter2 Command - 
;                              RSVD - Filter1 Command - RSVD - Filter0 Command
;   Wake-UpFrame Filter Re5 : Filter3 Offset - Filter2 Offset - Filter1 Offset - Filter0 Offset
;   Wake-UpFrame Filter Re6 : Filter1 CRC16 - Filter0 CRC16
;   Wake-UpFrame Filter Re7 : Filter3 CRC16 - Filter2 CRC16 */

ETH_MACPMTCSR			                      EQU		0x2C
;/* Bit definition for Ethernet MAC PMT Control and Status Register */ 
ETH_MACPMTCSR_WFFRPR_Pos                      EQU		31                    
ETH_MACPMTCSR_WFFRPR_Msk                      EQU		0x1 << ETH_MACPMTCSR_WFFRPR_Pos     ;/*!< 0x80000000 */
ETH_MACPMTCSR_WFFRPR                          EQU		ETH_MACPMTCSR_WFFRPR_Msk 			;/* Wake-Up Frame Filter Register Pointer Reset */
ETH_MACPMTCSR_GU_Pos                          EQU		9                     
ETH_MACPMTCSR_GU_Msk                          EQU		0x1 << ETH_MACPMTCSR_GU_Pos    		;/*!< 0x00000200 */
ETH_MACPMTCSR_GU                              EQU		ETH_MACPMTCSR_GU_Msk     			;/* Global Unicast                              */
ETH_MACPMTCSR_WFR_Pos                         EQU		6                     
ETH_MACPMTCSR_WFR_Msk                         EQU		0x1 << ETH_MACPMTCSR_WFR_Pos    	;/*!< 0x00000040 */
ETH_MACPMTCSR_WFR                             EQU		ETH_MACPMTCSR_WFR_Msk    			;/* Wake-Up Frame Received                      */
ETH_MACPMTCSR_MPR_Pos                         EQU		5                     
ETH_MACPMTCSR_MPR_Msk                         EQU		0x1 << ETH_MACPMTCSR_MPR_Pos    	;/*!< 0x00000020 */
ETH_MACPMTCSR_MPR                             EQU		ETH_MACPMTCSR_MPR_Msk    			;/* Magic Packet Received                       */
ETH_MACPMTCSR_WFE_Pos                         EQU		2                     
ETH_MACPMTCSR_WFE_Msk                         EQU		0x1 << ETH_MACPMTCSR_WFE_Pos    	;/*!< 0x00000004 */
ETH_MACPMTCSR_WFE                             EQU		ETH_MACPMTCSR_WFE_Msk    			;/* Wake-Up Frame Enable                        */
ETH_MACPMTCSR_MPE_Pos                         EQU		1                     
ETH_MACPMTCSR_MPE_Msk                         EQU		0x1 << ETH_MACPMTCSR_MPE_Pos    	;/*!< 0x00000002 */
ETH_MACPMTCSR_MPE                             EQU		ETH_MACPMTCSR_MPE_Msk    			;/* Magic Packet Enable                         */
ETH_MACPMTCSR_PD_Pos                          EQU		0                     
ETH_MACPMTCSR_PD_Msk                          EQU		0x1 << ETH_MACPMTCSR_PD_Pos    		;/*!< 0x00000001 */
ETH_MACPMTCSR_PD                              EQU		ETH_MACPMTCSR_PD_Msk     			;/* Power Down                                  */

ETH_MACDBGR			                          EQU		0x34
;/* Bit definition for Ethernet MAC debug Register */
ETH_MACDBGR_TFF_Pos                           EQU		25                    
ETH_MACDBGR_TFF_Msk                           EQU		0x1 << ETH_MACDBGR_TFF_Pos    		;/*!< 0x02000000 */
ETH_MACDBGR_TFF                               EQU		ETH_MACDBGR_TFF_Msk      			;/* Tx FIFO full                                                            */
ETH_MACDBGR_TFNE_Pos                          EQU		24                    
ETH_MACDBGR_TFNE_Msk                          EQU		0x1 << ETH_MACDBGR_TFNE_Pos    		;/*!< 0x01000000 */
ETH_MACDBGR_TFNE                              EQU		ETH_MACDBGR_TFNE_Msk     			;/* Tx FIFO not empty                                                       */
ETH_MACDBGR_TFWA_Pos                          EQU		22                    
ETH_MACDBGR_TFWA_Msk                          EQU		0x1 << ETH_MACDBGR_TFWA_Pos    		;/*!< 0x00400000 */
ETH_MACDBGR_TFWA                              EQU		ETH_MACDBGR_TFWA_Msk     			;/* Tx FIFO write active                                                    */
ETH_MACDBGR_TFRS_Pos                          EQU		20                    
ETH_MACDBGR_TFRS_Msk                          EQU		0x3 << ETH_MACDBGR_TFRS_Pos    		;/*!< 0x00300000 */
ETH_MACDBGR_TFRS                              EQU		ETH_MACDBGR_TFRS_Msk     			;/* Tx FIFO read status mask                                                */
ETH_MACDBGR_TFRS_WRITING_Pos                  EQU		20                    
ETH_MACDBGR_TFRS_WRITING_Msk                  EQU		0x3 << ETH_MACDBGR_TFRS_WRITING_Pos     ;/*!< 0x00300000 */
ETH_MACDBGR_TFRS_WRITING                      EQU		ETH_MACDBGR_TFRS_WRITING_Msk 			;/* Writing the received TxStatus or flushing the TxFIFO                    */
ETH_MACDBGR_TFRS_WAITING_Pos                  EQU		21                    
ETH_MACDBGR_TFRS_WAITING_Msk                  EQU		0x1 << ETH_MACDBGR_TFRS_WAITING_Pos    	;/*!< 0x00200000 */
ETH_MACDBGR_TFRS_WAITING                      EQU		ETH_MACDBGR_TFRS_WAITING_Msk 			;/* Waiting for TxStatus from MAC transmitter                               */
ETH_MACDBGR_TFRS_READ_Pos                     EQU		20                    
ETH_MACDBGR_TFRS_READ_Msk                     EQU		0x1 << ETH_MACDBGR_TFRS_READ_Pos    	;/*!< 0x00100000 */
ETH_MACDBGR_TFRS_READ                         EQU		ETH_MACDBGR_TFRS_READ_Msk				;/* Read state EQU		transferring data to the MAC transmitter                      */
ETH_MACDBGR_TFRS_IDLE                         EQU		0x00000000               				;/* Idle state                                                              */
ETH_MACDBGR_MTP_Pos                           EQU		19                    
ETH_MACDBGR_MTP_Msk                           EQU		0x1 << ETH_MACDBGR_MTP_Pos    	;/*!< 0x00080000 */
ETH_MACDBGR_MTP                               EQU		ETH_MACDBGR_MTP_Msk      		;/* MAC transmitter in pause                                                */
ETH_MACDBGR_MTFCS_Pos                         EQU		17                    
ETH_MACDBGR_MTFCS_Msk                         EQU		0x3 << ETH_MACDBGR_MTFCS_Pos    ;/*!< 0x00060000 */
ETH_MACDBGR_MTFCS                             EQU		ETH_MACDBGR_MTFCS_Msk    		;/* MAC transmit frame controller status mask                               */
ETH_MACDBGR_MTFCS_TRANSFERRING_Pos            EQU		17                    
ETH_MACDBGR_MTFCS_TRANSFERRING_Msk            EQU		0x3 << ETH_MACDBGR_MTFCS_TRANSFERRING_Pos    ;/*!< 0x00060000 */
ETH_MACDBGR_MTFCS_TRANSFERRING                EQU		ETH_MACDBGR_MTFCS_TRANSFERRING_Msk 			 ;/* Transferring input frame for transmission                               */
ETH_MACDBGR_MTFCS_GENERATINGPCF_Pos           EQU		18                    
ETH_MACDBGR_MTFCS_GENERATINGPCF_Msk           EQU		0x1 << ETH_MACDBGR_MTFCS_GENERATINGPCF_Pos    ;/*!< 0x00040000 */
ETH_MACDBGR_MTFCS_GENERATINGPCF               EQU		ETH_MACDBGR_MTFCS_GENERATINGPCF_Msk 		  ;/* Generating and transmitting a Pause control frame EQU		
;																									  in full duplex mode    */
ETH_MACDBGR_MTFCS_WAITING_Pos                 EQU		17                    
ETH_MACDBGR_MTFCS_WAITING_Msk                 EQU		0x1 << ETH_MACDBGR_MTFCS_WAITING_Pos    ;/*!< 0x00020000 */
ETH_MACDBGR_MTFCS_WAITING                     EQU		ETH_MACDBGR_MTFCS_WAITING_Msk 			;/* Waiting for Status of previous frame or IFG/backoff period to be over   */
ETH_MACDBGR_MTFCS_IDLE                        EQU		0x00000000               				;/* Idle                                                                    */
ETH_MACDBGR_MMTEA_Pos                         EQU		16                    
ETH_MACDBGR_MMTEA_Msk                         EQU		0x1 << ETH_MACDBGR_MMTEA_Pos    ;/*!< 0x00010000 */
ETH_MACDBGR_MMTEA                             EQU		ETH_MACDBGR_MMTEA_Msk    		;/* MAC MII transmit engine active                                          */
ETH_MACDBGR_RFFL_Pos                          EQU		8                     
ETH_MACDBGR_RFFL_Msk                          EQU		0x3 << ETH_MACDBGR_RFFL_Pos     ;/*!< 0x00000300 */
ETH_MACDBGR_RFFL                              EQU		ETH_MACDBGR_RFFL_Msk     		;/* Rx FIFO fill level mask                                                 */
ETH_MACDBGR_RFFL_FULL_Pos                     EQU		8                     
ETH_MACDBGR_RFFL_FULL_Msk                     EQU		0x3 << ETH_MACDBGR_RFFL_FULL_Pos    ;/*!< 0x00000300 */
ETH_MACDBGR_RFFL_FULL                         EQU		ETH_MACDBGR_RFFL_FULL_Msk 			;/* RxFIFO full                                                             */
ETH_MACDBGR_RFFL_ABOVEFCT_Pos                 EQU		9                     
ETH_MACDBGR_RFFL_ABOVEFCT_Msk                 EQU		0x1 << ETH_MACDBGR_RFFL_ABOVEFCT_Pos    ;/*!< 0x00000200 */
ETH_MACDBGR_RFFL_ABOVEFCT                     EQU		ETH_MACDBGR_RFFL_ABOVEFCT_Msk 			;/* RxFIFO fill-level above flow-control activate threshold                 */
ETH_MACDBGR_RFFL_BELOWFCT_Pos                 EQU		8                     
ETH_MACDBGR_RFFL_BELOWFCT_Msk                 EQU		0x1 << ETH_MACDBGR_RFFL_BELOWFCT_Pos    ;/*!< 0x00000100 */
ETH_MACDBGR_RFFL_BELOWFCT                     EQU		ETH_MACDBGR_RFFL_BELOWFCT_Msk 			;/* RxFIFO fill-level below flow-control de-activate threshold              */
ETH_MACDBGR_RFFL_EMPTY                        EQU		0x00000000               				;/* RxFIFO empty                                                            */
ETH_MACDBGR_RFRCS_Pos                         EQU		5                     
ETH_MACDBGR_RFRCS_Msk                         EQU		0x3 << ETH_MACDBGR_RFRCS_Pos    ;/*!< 0x00000060 */
ETH_MACDBGR_RFRCS                             EQU		ETH_MACDBGR_RFRCS_Msk    		;/* Rx FIFO read controller status mask                                     */
ETH_MACDBGR_RFRCS_FLUSHING_Pos                EQU		5                     
ETH_MACDBGR_RFRCS_FLUSHING_Msk                EQU		0x3 << ETH_MACDBGR_RFRCS_FLUSHING_Pos    ;/*!< 0x00000060 */
ETH_MACDBGR_RFRCS_FLUSHING                    EQU		ETH_MACDBGR_RFRCS_FLUSHING_Msk 			 ;/* Flushing the frame data and status                                      */
ETH_MACDBGR_RFRCS_STATUSREADING_Pos           EQU		6                     
ETH_MACDBGR_RFRCS_STATUSREADING_Msk           EQU		0x1 << ETH_MACDBGR_RFRCS_STATUSREADING_Pos    ;/*!< 0x00000040 */
ETH_MACDBGR_RFRCS_STATUSREADING               EQU		ETH_MACDBGR_RFRCS_STATUSREADING_Msk 		  ;/* Reading frame status EQU		or time-stamp                                       */
ETH_MACDBGR_RFRCS_DATAREADING_Pos             EQU		5                     
ETH_MACDBGR_RFRCS_DATAREADING_Msk             EQU		0x1 << ETH_MACDBGR_RFRCS_DATAREADING_Pos    ;/*!< 0x00000020 */
ETH_MACDBGR_RFRCS_DATAREADING                 EQU		ETH_MACDBGR_RFRCS_DATAREADING_Msk 			;/* Reading frame data                                                      */
ETH_MACDBGR_RFRCS_IDLE                        EQU		0x00000000               					;/* IDLE state                                                              */
ETH_MACDBGR_RFWRA_Pos                         EQU		4                     
ETH_MACDBGR_RFWRA_Msk                         EQU		0x1 << ETH_MACDBGR_RFWRA_Pos    ;/*!< 0x00000010 */
ETH_MACDBGR_RFWRA                             EQU		ETH_MACDBGR_RFWRA_Msk    		;/* Rx FIFO write controller active                                         */
ETH_MACDBGR_MSFRWCS_Pos                       EQU		1                     
ETH_MACDBGR_MSFRWCS_Msk                       EQU		0x3 << ETH_MACDBGR_MSFRWCS_Pos    ;/*!< 0x00000006 */
ETH_MACDBGR_MSFRWCS                           EQU		ETH_MACDBGR_MSFRWCS_Msk  		  ;/* MAC small FIFO read / write controllers status  mask                    */
ETH_MACDBGR_MSFRWCS_1                         EQU		0x2 << ETH_MACDBGR_MSFRWCS_Pos    ;/*!< 0x00000004 */
ETH_MACDBGR_MSFRWCS_0                         EQU		0x1 << ETH_MACDBGR_MSFRWCS_Pos    ;/*!< 0x00000002 */
ETH_MACDBGR_MMRPEA_Pos                        EQU		0                     
ETH_MACDBGR_MMRPEA_Msk                        EQU		0x1 << ETH_MACDBGR_MMRPEA_Pos    ;/*!< 0x00000001 */
ETH_MACDBGR_MMRPEA                            EQU		ETH_MACDBGR_MMRPEA_Msk   		 ;/* MAC MII receive protocol engine active                                  */

ETH_MACSR			                          EQU		0x38
;/* Bit definition for Ethernet MAC Status Register */
ETH_MACSR_TSTS_Pos                            EQU		9                     
ETH_MACSR_TSTS_Msk                            EQU		0x1 << ETH_MACSR_TSTS_Pos    ;/*!< 0x00000200 */
ETH_MACSR_TSTS                                EQU		ETH_MACSR_TSTS_Msk       	 ;/* Time stamp trigger status */
ETH_MACSR_MMCTS_Pos                           EQU		6                     
ETH_MACSR_MMCTS_Msk                           EQU		0x1 << ETH_MACSR_MMCTS_Pos   ;/*!< 0x00000040 */
ETH_MACSR_MMCTS                               EQU		ETH_MACSR_MMCTS_Msk      	 ;/* MMC transmit status       */
ETH_MACSR_MMMCRS_Pos                          EQU		5                     
ETH_MACSR_MMMCRS_Msk                          EQU		0x1 << ETH_MACSR_MMMCRS_Pos  ;/*!< 0x00000020 */
ETH_MACSR_MMMCRS                              EQU		ETH_MACSR_MMMCRS_Msk     	 ;/* MMC receive status        */
ETH_MACSR_MMCS_Pos                            EQU		4                     
ETH_MACSR_MMCS_Msk                            EQU		0x1 << ETH_MACSR_MMCS_Pos    ;/*!< 0x00000010 */
ETH_MACSR_MMCS                                EQU		ETH_MACSR_MMCS_Msk       	 ;/* MMC status                */
ETH_MACSR_PMTS_Pos                            EQU		3                     
ETH_MACSR_PMTS_Msk                            EQU		0x1 << ETH_MACSR_PMTS_Pos    ;/*!< 0x00000008 */
ETH_MACSR_PMTS                                EQU		ETH_MACSR_PMTS_Msk       	 ;/* PMT status                */

ETH_MACIMR			                          EQU		0x3C
;/* Bit definition for Ethernet MAC Interrupt Mask Register */
ETH_MACIMR_TSTIM_Pos                          EQU		9                     
ETH_MACIMR_TSTIM_Msk                          EQU		0x1 << ETH_MACIMR_TSTIM_Pos     ;/*!< 0x00000200 */
ETH_MACIMR_TSTIM                              EQU		ETH_MACIMR_TSTIM_Msk     		;/* Time stamp trigger interrupt mask */
ETH_MACIMR_PMTIM_Pos                          EQU		3                     
ETH_MACIMR_PMTIM_Msk                          EQU		0x1 << ETH_MACIMR_PMTIM_Pos     ;/*!< 0x00000008 */
ETH_MACIMR_PMTIM                              EQU		ETH_MACIMR_PMTIM_Msk     		;/* PMT interrupt mask                */

ETH_MACA0HR			                          EQU		0x40
;/* Bit definition for Ethernet MAC Address0 High Register */
ETH_MACA0HR_MACA0H_Pos                        EQU		0                     
ETH_MACA0HR_MACA0H_Msk                        EQU		0xFFFF << ETH_MACA0HR_MACA0H_Pos    ;/*!< 0x0000FFFF */
ETH_MACA0HR_MACA0H                            EQU		ETH_MACA0HR_MACA0H_Msk   			;/* MAC address0 high */

ETH_MACA0LR			                          EQU		0x44
;/* Bit definition for Ethernet MAC Address0 Low Register */
ETH_MACA0LR_MACA0L_Pos                        EQU		0                     
ETH_MACA0LR_MACA0L_Msk                        EQU		0xFFFFFFFF << ETH_MACA0LR_MACA0L_Pos    ;/*!< 0xFFFFFFFF */
ETH_MACA0LR_MACA0L                            EQU		ETH_MACA0LR_MACA0L_Msk   				;/* MAC address0 low */

ETH_MACA1HR			                          EQU		0x48
;/* Bit definition for Ethernet MAC Address1 High Register */
ETH_MACA1HR_AE_Pos                            EQU		31                    
ETH_MACA1HR_AE_Msk                            EQU		0x1 << ETH_MACA1HR_AE_Pos    	;/*!< 0x80000000 */
ETH_MACA1HR_AE                                EQU		ETH_MACA1HR_AE_Msk       		;/* Address enable */
ETH_MACA1HR_SA_Pos                            EQU		30                    
ETH_MACA1HR_SA_Msk                            EQU		0x1 << ETH_MACA1HR_SA_Pos    	;/*!< 0x40000000 */
ETH_MACA1HR_SA                                EQU		ETH_MACA1HR_SA_Msk       		;/* Source address */
ETH_MACA1HR_MBC_Pos                           EQU		24                    
ETH_MACA1HR_MBC_Msk                           EQU		0x3F << ETH_MACA1HR_MBC_Pos    	;/*!< 0x3F000000 */
ETH_MACA1HR_MBC                               EQU		ETH_MACA1HR_MBC_Msk      ;/* Mask byte control: bits to mask for comparison of the MAC Address bytes */
ETH_MACA1HR_MBC_HBits15_8                     EQU		0x20000000               ;/* Mask MAC Address high reg bits [15:8] */
ETH_MACA1HR_MBC_HBits7_0                      EQU		0x10000000               ;/* Mask MAC Address high reg bits [7:0]  */
ETH_MACA1HR_MBC_LBits31_24                    EQU		0x08000000               ;/* Mask MAC Address low reg bits [31:24] */
ETH_MACA1HR_MBC_LBits23_16                    EQU		0x04000000               ;/* Mask MAC Address low reg bits [23:16] */
ETH_MACA1HR_MBC_LBits15_8                     EQU		0x02000000               ;/* Mask MAC Address low reg bits [15:8]  */
ETH_MACA1HR_MBC_LBits7_0                      EQU		0x01000000               ;/* Mask MAC Address low reg bits [7:0]   */
ETH_MACA1HR_MACA1H_Pos                        EQU		0                     
ETH_MACA1HR_MACA1H_Msk                        EQU		0xFFFF << ETH_MACA1HR_MACA1H_Pos    ;/*!< 0x0000FFFF */
ETH_MACA1HR_MACA1H                            EQU		ETH_MACA1HR_MACA1H_Msk   ;/* MAC address1 high */

ETH_MACA1LR			                          EQU		0x4C
;/* Bit definition for Ethernet MAC Address1 Low Register */
ETH_MACA1LR_MACA1L_Pos                        EQU		0                     
ETH_MACA1LR_MACA1L_Msk                        EQU		0xFFFFFFFF << ETH_MACA1LR_MACA1L_Pos    ;/*!< 0xFFFFFFFF */
ETH_MACA1LR_MACA1L                            EQU		ETH_MACA1LR_MACA1L_Msk   				;/* MAC address1 low */

ETH_MACA2HR			                          EQU		0x50
;/* Bit definition for Ethernet MAC Address2 High Register */
ETH_MACA2HR_AE_Pos                            EQU		31                    
ETH_MACA2HR_AE_Msk                            EQU		0x1 << ETH_MACA2HR_AE_Pos    	;/*!< 0x80000000 */
ETH_MACA2HR_AE                                EQU		ETH_MACA2HR_AE_Msk       		;/* Address enable */
ETH_MACA2HR_SA_Pos                            EQU		30                    
ETH_MACA2HR_SA_Msk                            EQU		0x1 << ETH_MACA2HR_SA_Pos    	;/*!< 0x40000000 */
ETH_MACA2HR_SA                                EQU		ETH_MACA2HR_SA_Msk       		;/* Source address */
ETH_MACA2HR_MBC_Pos                           EQU		24                    
ETH_MACA2HR_MBC_Msk                           EQU		0x3F << ETH_MACA2HR_MBC_Pos    	;/*!< 0x3F000000 */
ETH_MACA2HR_MBC                               EQU		ETH_MACA2HR_MBC_Msk      ;/* Mask byte control */
ETH_MACA2HR_MBC_HBits15_8                     EQU		0x20000000               ;/* Mask MAC Address high reg bits [15:8] */
ETH_MACA2HR_MBC_HBits7_0                      EQU		0x10000000               ;/* Mask MAC Address high reg bits [7:0]  */
ETH_MACA2HR_MBC_LBits31_24                    EQU		0x08000000               ;/* Mask MAC Address low reg bits [31:24] */
ETH_MACA2HR_MBC_LBits23_16                    EQU		0x04000000               ;/* Mask MAC Address low reg bits [23:16] */
ETH_MACA2HR_MBC_LBits15_8                     EQU		0x02000000               ;/* Mask MAC Address low reg bits [15:8]  */
ETH_MACA2HR_MBC_LBits7_0                      EQU		0x01000000               ;/* Mask MAC Address low reg bits [70]    */
ETH_MACA2HR_MACA2H_Pos                        EQU		0                     
ETH_MACA2HR_MACA2H_Msk                        EQU		0xFFFF << ETH_MACA2HR_MACA2H_Pos    ;/*!< 0x0000FFFF */
ETH_MACA2HR_MACA2H                            EQU		ETH_MACA2HR_MACA2H_Msk   			;/* MAC address1 high */

ETH_MACA2LR			                          EQU		0x54
;/* Bit definition for Ethernet MAC Address2 Low Register */
ETH_MACA2LR_MACA2L_Pos                        EQU		0                     
ETH_MACA2LR_MACA2L_Msk                        EQU		0xFFFFFFFF << ETH_MACA2LR_MACA2L_Pos    ;/*!< 0xFFFFFFFF */
ETH_MACA2LR_MACA2L                            EQU		ETH_MACA2LR_MACA2L_Msk   				;/* MAC address2 low */

ETH_MACA3HR			                          EQU		0x58
;/* Bit definition for Ethernet MAC Address3 High Register */
ETH_MACA3HR_AE_Pos                            EQU		31                    
ETH_MACA3HR_AE_Msk                            EQU		0x1 << ETH_MACA3HR_AE_Pos    	;/*!< 0x80000000 */
ETH_MACA3HR_AE                                EQU		ETH_MACA3HR_AE_Msk       		;/* Address enable */
ETH_MACA3HR_SA_Pos                            EQU		30                    
ETH_MACA3HR_SA_Msk                            EQU		0x1 << ETH_MACA3HR_SA_Pos    	;/*!< 0x40000000 */
ETH_MACA3HR_SA                                EQU		ETH_MACA3HR_SA_Msk       	 	;/* Source address */
ETH_MACA3HR_MBC_Pos                           EQU		24                    
ETH_MACA3HR_MBC_Msk                           EQU		0x3F << ETH_MACA3HR_MBC_Pos    ;/*!< 0x3F000000 */
ETH_MACA3HR_MBC                               EQU		ETH_MACA3HR_MBC_Msk      ;/* Mask byte control */
ETH_MACA3HR_MBC_HBits15_8                     EQU		0x20000000               ;/* Mask MAC Address high reg bits [15:8] */
ETH_MACA3HR_MBC_HBits7_0                      EQU		0x10000000               ;/* Mask MAC Address high reg bits [7:0]  */
ETH_MACA3HR_MBC_LBits31_24                    EQU		0x08000000               ;/* Mask MAC Address low reg bits [31:24] */
ETH_MACA3HR_MBC_LBits23_16                    EQU		0x04000000               ;/* Mask MAC Address low reg bits [23:16] */
ETH_MACA3HR_MBC_LBits15_8                     EQU		0x02000000               ;/* Mask MAC Address low reg bits [15:8]  */
ETH_MACA3HR_MBC_LBits7_0                      EQU		0x01000000               ;/* Mask MAC Address low reg bits [70]    */
ETH_MACA3HR_MACA3H_Pos                        EQU		0                     
ETH_MACA3HR_MACA3H_Msk                        EQU		0xFFFF << ETH_MACA3HR_MACA3H_Pos    ;/*!< 0x0000FFFF */
ETH_MACA3HR_MACA3H                            EQU		ETH_MACA3HR_MACA3H_Msk   			;/* MAC address3 high */

ETH_MACA3LR			                          EQU		0x5C
;/* Bit definition for Ethernet MAC Address3 Low Register */
ETH_MACA3LR_MACA3L_Pos                        EQU		0                     
ETH_MACA3LR_MACA3L_Msk                        EQU		0xFFFFFFFF << ETH_MACA3LR_MACA3L_Pos    ;/*!< 0xFFFFFFFF */
ETH_MACA3LR_MACA3L                            EQU		ETH_MACA3LR_MACA3L_Msk   				;/* MAC address3 low */

;/******************************************************************************/
;/*                Ethernet MMC Registers bits definition                      */
;/******************************************************************************/

ETH_MMCCR			                          EQU		0x100
;/* Bit definition for Ethernet MMC Contol Register */
ETH_MMCCR_MCFHP_Pos                           EQU		5                     
ETH_MMCCR_MCFHP_Msk                           EQU		0x1 << ETH_MMCCR_MCFHP_Pos  ;/*!< 0x00000020 */
ETH_MMCCR_MCFHP                               EQU		ETH_MMCCR_MCFHP_Msk      	;/* MMC counter Full-Half preset */
ETH_MMCCR_MCP_Pos                             EQU		4                     
ETH_MMCCR_MCP_Msk                             EQU		0x1 << ETH_MMCCR_MCP_Pos    ;/*!< 0x00000010 */
ETH_MMCCR_MCP                                 EQU		ETH_MMCCR_MCP_Msk        	;/* MMC counter preset           */
ETH_MMCCR_MCF_Pos                             EQU		3                     
ETH_MMCCR_MCF_Msk                             EQU		0x1 << ETH_MMCCR_MCF_Pos    ;/*!< 0x00000008 */
ETH_MMCCR_MCF                                 EQU		ETH_MMCCR_MCF_Msk        	;/* MMC Counter Freeze           */
ETH_MMCCR_ROR_Pos                             EQU		2                     
ETH_MMCCR_ROR_Msk                             EQU		0x1 << ETH_MMCCR_ROR_Pos    ;/*!< 0x00000004 */
ETH_MMCCR_ROR                                 EQU		ETH_MMCCR_ROR_Msk        	;/* Reset on Read                */
ETH_MMCCR_CSR_Pos                             EQU		1                     
ETH_MMCCR_CSR_Msk                             EQU		0x1 << ETH_MMCCR_CSR_Pos    ;/*!< 0x00000002 */
ETH_MMCCR_CSR                                 EQU		ETH_MMCCR_CSR_Msk        	;/* Counter Stop Rollover        */
ETH_MMCCR_CR_Pos                              EQU		0                     
ETH_MMCCR_CR_Msk                              EQU		0x1 << ETH_MMCCR_CR_Pos    	;/*!< 0x00000001 */
ETH_MMCCR_CR                                  EQU		ETH_MMCCR_CR_Msk           	;/* Counters Reset               */

ETH_MMCRIR			                          EQU		0x104
;/* Bit definition for Ethernet MMC Receive Interrupt Register */
ETH_MMCRIR_RGUFS_Pos                          EQU		17                    
ETH_MMCRIR_RGUFS_Msk                          EQU		0x1 << ETH_MMCRIR_RGUFS_Pos    	;/*!< 0x00020000 */
ETH_MMCRIR_RGUFS                              EQU		ETH_MMCRIR_RGUFS_Msk     		;/* Set when Rx good unicast frames counter reaches half the maximum value */
ETH_MMCRIR_RFAES_Pos                          EQU		6                     
ETH_MMCRIR_RFAES_Msk                          EQU		0x1 << ETH_MMCRIR_RFAES_Pos    	;/*!< 0x00000040 */
ETH_MMCRIR_RFAES                              EQU		ETH_MMCRIR_RFAES_Msk     		;/* Set when Rx alignment error counter reaches half the maximum value */
ETH_MMCRIR_RFCES_Pos                          EQU		5                     
ETH_MMCRIR_RFCES_Msk                          EQU		0x1 << ETH_MMCRIR_RFCES_Pos    	;/*!< 0x00000020 */
ETH_MMCRIR_RFCES                              EQU		ETH_MMCRIR_RFCES_Msk     		;/* Set when Rx crc error counter reaches half the maximum value */

ETH_MMCTIR			                          EQU		0x108
;/* Bit definition for Ethernet MMC Transmit Interrupt Register */
ETH_MMCTIR_TGFS_Pos                           EQU		21                    
ETH_MMCTIR_TGFS_Msk                           EQU		0x1 << ETH_MMCTIR_TGFS_Pos    	;/*!< 0x00200000 */
ETH_MMCTIR_TGFS                               EQU		ETH_MMCTIR_TGFS_Msk      		;/* Set when Tx good frame count counter reaches half the maximum value */
ETH_MMCTIR_TGFMSCS_Pos                        EQU		15                    
ETH_MMCTIR_TGFMSCS_Msk                        EQU		0x1 << ETH_MMCTIR_TGFMSCS_Pos   ;/*!< 0x00008000 */
ETH_MMCTIR_TGFMSCS                            EQU		ETH_MMCTIR_TGFMSCS_Msk   		;/* Set when Tx good multi col counter reaches half the maximum value */
ETH_MMCTIR_TGFSCS_Pos                         EQU		14                    
ETH_MMCTIR_TGFSCS_Msk                         EQU		0x1 << ETH_MMCTIR_TGFSCS_Pos    ;/*!< 0x00004000 */
ETH_MMCTIR_TGFSCS                             EQU		ETH_MMCTIR_TGFSCS_Msk    		;/* Set when Tx good single col counter reaches half the maximum value */

ETH_MMCRIMR			                          EQU		0x10C
;/* Bit definition for Ethernet MMC Receive Interrupt Mask Register */
ETH_MMCRIMR_RGUFM_Pos                         EQU		17                    
ETH_MMCRIMR_RGUFM_Msk                         EQU		0x1 << ETH_MMCRIMR_RGUFM_Pos    ;/*!< 0x00020000 */
ETH_MMCRIMR_RGUFM                             EQU		ETH_MMCRIMR_RGUFM_Msk    		;/* Mask the interrupt when Rx good unicast frames counter reaches half the maximum value */
ETH_MMCRIMR_RFAEM_Pos                         EQU		6                     
ETH_MMCRIMR_RFAEM_Msk                         EQU		0x1 << ETH_MMCRIMR_RFAEM_Pos    ;/*!< 0x00000040 */
ETH_MMCRIMR_RFAEM                             EQU		ETH_MMCRIMR_RFAEM_Msk    		;/* Mask the interrupt when when Rx alignment error counter reaches half the maximum value */
ETH_MMCRIMR_RFCEM_Pos                         EQU		5                     
ETH_MMCRIMR_RFCEM_Msk                         EQU		0x1 << ETH_MMCRIMR_RFCEM_Pos    ;/*!< 0x00000020 */
ETH_MMCRIMR_RFCEM                             EQU		ETH_MMCRIMR_RFCEM_Msk    		;/* Mask the interrupt when Rx crc error counter reaches half the maximum value */

ETH_MMCTIMR			                          EQU		0x110
;/* Bit definition for Ethernet MMC Transmit Interrupt Mask Register */
ETH_MMCTIMR_TGFM_Pos                          EQU		21                    
ETH_MMCTIMR_TGFM_Msk                          EQU		0x1 << ETH_MMCTIMR_TGFM_Pos    	;/*!< 0x00200000 */
ETH_MMCTIMR_TGFM                              EQU		ETH_MMCTIMR_TGFM_Msk     		;/* Mask the interrupt when Tx good frame count counter reaches half the maximum value */
ETH_MMCTIMR_TGFMSCM_Pos                       EQU		15                    
ETH_MMCTIMR_TGFMSCM_Msk                       EQU		0x1 << ETH_MMCTIMR_TGFMSCM_Pos  ;/*!< 0x00008000 */
ETH_MMCTIMR_TGFMSCM                           EQU		ETH_MMCTIMR_TGFMSCM_Msk  		;/* Mask the interrupt when Tx good multi col counter reaches half the maximum value */
ETH_MMCTIMR_TGFSCM_Pos                        EQU		14                    
ETH_MMCTIMR_TGFSCM_Msk                        EQU		0x1 << ETH_MMCTIMR_TGFSCM_Pos   ;/*!< 0x00004000 */
ETH_MMCTIMR_TGFSCM                            EQU		ETH_MMCTIMR_TGFSCM_Msk   		;/* Mask the interrupt when Tx good single col counter reaches half the maximum value */

ETH_MMCTGFSCCR			                      EQU		0x14C
;/* Bit definition for Ethernet MMC Transmitted Good Frames after Single Collision Counter Register */
ETH_MMCTGFSCCR_TGFSCC_Pos                     EQU		0                     
ETH_MMCTGFSCCR_TGFSCC_Msk                     EQU		0xFFFFFFFF << ETH_MMCTGFSCCR_TGFSCC_Pos    ;/*!< 0xFFFFFFFF */
ETH_MMCTGFSCCR_TGFSCC                         EQU		ETH_MMCTGFSCCR_TGFSCC_Msk 				   ;/* Number of successfully transmitted frames after a single collision in Half-duplex mode. */

ETH_MMCTGFMSCCR				                  EQU		0x150
;/* Bit definition for Ethernet MMC Transmitted Good Frames after More than a Single Collision Counter Register */
ETH_MMCTGFMSCCR_TGFMSCC_Pos                   EQU		0                     
ETH_MMCTGFMSCCR_TGFMSCC_Msk                   EQU		0xFFFFFFFF << ETH_MMCTGFMSCCR_TGFMSCC_Pos  ;/*!< 0xFFFFFFFF */
ETH_MMCTGFMSCCR_TGFMSCC                       EQU		ETH_MMCTGFMSCCR_TGFMSCC_Msk 			   ;/* Number of successfully transmitted frames after more than a single collision in Half-duplex mode. */

ETH_MMCTGFCR			                      EQU		0x168
;/* Bit definition for Ethernet MMC Transmitted Good Frames Counter Register */
ETH_MMCTGFCR_TGFC_Pos                         EQU		0                     
ETH_MMCTGFCR_TGFC_Msk                         EQU		0xFFFFFFFF << ETH_MMCTGFCR_TGFC_Pos     ;/*!< 0xFFFFFFFF */
ETH_MMCTGFCR_TGFC                             EQU		ETH_MMCTGFCR_TGFC_Msk    				;/* Number of good frames transmitted. */

ETH_MMCRFCECR			                      EQU		0x194
;/* Bit definition for Ethernet MMC Received Frames with CRC Error Counter Register */
ETH_MMCRFCECR_RFCEC_Pos                       EQU		0                     
ETH_MMCRFCECR_RFCEC_Msk                       EQU		0xFFFFFFFF << ETH_MMCRFCECR_RFCEC_Pos   ;/*!< 0xFFFFFFFF */
ETH_MMCRFCECR_RFCEC                           EQU		ETH_MMCRFCECR_RFCEC_Msk  				;/* Number of frames received with CRC error. */

ETH_MMCRFAECR			                      EQU		0x198
;/* Bit definition for Ethernet MMC Received Frames with Alignement Error Counter Register */
ETH_MMCRFAECR_RFAEC_Pos                       EQU		0                     
ETH_MMCRFAECR_RFAEC_Msk                       EQU		0xFFFFFFFF << ETH_MMCRFAECR_RFAEC_Pos   ;/*!< 0xFFFFFFFF */
ETH_MMCRFAECR_RFAEC                           EQU		ETH_MMCRFAECR_RFAEC_Msk  				;/* Number of frames received with alignment dribble    error */

ETH_MMCRGUFCR			                      EQU		0x1C4
;/* Bit definition for Ethernet MMC Received Good Unicast Frames Counter Register */
ETH_MMCRGUFCR_RGUFC_Pos                       EQU		0                     
ETH_MMCRGUFCR_RGUFC_Msk                       EQU		0xFFFFFFFF << ETH_MMCRGUFCR_RGUFC_Pos   ;/*!< 0xFFFFFFFF */
ETH_MMCRGUFCR_RGUFC                           EQU		ETH_MMCRGUFCR_RGUFC_Msk  				;/* Number of good unicast frames received. */

;/******************************************************************************/
;/*               Ethernet PTP Registers bits definition                       */
;/******************************************************************************/

ETH_PTPTSCR			                          EQU		0x700
;/* Bit definition for Ethernet PTP Time Stamp Contol Register */
ETH_PTPTSCR_TSCNT_Pos                         EQU		16                    
ETH_PTPTSCR_TSCNT_Msk                         EQU		0x3 << ETH_PTPTSCR_TSCNT_Pos    ;/*!< 0x00030000 */
ETH_PTPTSCR_TSCNT                             EQU		ETH_PTPTSCR_TSCNT_Msk    		;/* Time stamp clock node type */
ETH_PTPTSSR_TSSMRME_Pos                       EQU		15                    
ETH_PTPTSSR_TSSMRME_Msk                       EQU		0x1 << ETH_PTPTSSR_TSSMRME_Pos    	;/*!< 0x00008000 */
ETH_PTPTSSR_TSSMRME                           EQU		ETH_PTPTSSR_TSSMRME_Msk  			;/* Time stamp snapshot for message relevant to master enable */
ETH_PTPTSSR_TSSEME_Pos                        EQU		14                    
ETH_PTPTSSR_TSSEME_Msk                        EQU		0x1 << ETH_PTPTSSR_TSSEME_Pos    	;/*!< 0x00004000 */
ETH_PTPTSSR_TSSEME                            EQU		ETH_PTPTSSR_TSSEME_Msk   			;/* Time stamp snapshot for event message enable */
ETH_PTPTSSR_TSSIPV4FE_Pos                     EQU		13                    
ETH_PTPTSSR_TSSIPV4FE_Msk                     EQU		0x1 << ETH_PTPTSSR_TSSIPV4FE_Pos    ;/*!< 0x00002000 */
ETH_PTPTSSR_TSSIPV4FE                         EQU		ETH_PTPTSSR_TSSIPV4FE_Msk 			;/* Time stamp snapshot for IPv4 frames enable */
ETH_PTPTSSR_TSSIPV6FE_Pos                     EQU		12                    
ETH_PTPTSSR_TSSIPV6FE_Msk                     EQU		0x1 << ETH_PTPTSSR_TSSIPV6FE_Pos    ;/*!< 0x00001000 */
ETH_PTPTSSR_TSSIPV6FE                         EQU		ETH_PTPTSSR_TSSIPV6FE_Msk 			;/* Time stamp snapshot for IPv6 frames enable */
ETH_PTPTSSR_TSSPTPOEFE_Pos                    EQU		11                    
ETH_PTPTSSR_TSSPTPOEFE_Msk                    EQU		0x1 << ETH_PTPTSSR_TSSPTPOEFE_Pos   ;/*!< 0x00000800 */
ETH_PTPTSSR_TSSPTPOEFE                        EQU		ETH_PTPTSSR_TSSPTPOEFE_Msk 			;/* Time stamp snapshot for PTP over ethernet frames enable */
ETH_PTPTSSR_TSPTPPSV2E_Pos                    EQU		10                    
ETH_PTPTSSR_TSPTPPSV2E_Msk                    EQU		0x1 << ETH_PTPTSSR_TSPTPPSV2E_Pos   ;/*!< 0x00000400 */
ETH_PTPTSSR_TSPTPPSV2E                        EQU		ETH_PTPTSSR_TSPTPPSV2E_Msk 			;/* Time stamp PTP packet snooping for version2 format enable */
ETH_PTPTSSR_TSSSR_Pos                         EQU		9                     
ETH_PTPTSSR_TSSSR_Msk                         EQU		0x1 << ETH_PTPTSSR_TSSSR_Pos    	;/*!< 0x00000200 */
ETH_PTPTSSR_TSSSR                             EQU		ETH_PTPTSSR_TSSSR_Msk    			;/* Time stamp Sub-seconds rollover */
ETH_PTPTSSR_TSSARFE_Pos                       EQU		8                     
ETH_PTPTSSR_TSSARFE_Msk                       EQU		0x1 << ETH_PTPTSSR_TSSARFE_Pos    	;/*!< 0x00000100 */
ETH_PTPTSSR_TSSARFE                           EQU		ETH_PTPTSSR_TSSARFE_Msk  			;/* Time stamp snapshot for all received frames enable */

ETH_PTPTSCR_TSARU_Pos                         EQU		5                     
ETH_PTPTSCR_TSARU_Msk                         EQU		0x1 << ETH_PTPTSCR_TSARU_Pos    	;/*!< 0x00000020 */
ETH_PTPTSCR_TSARU                             EQU		ETH_PTPTSCR_TSARU_Msk    			;/* Addend register update */
ETH_PTPTSCR_TSITE_Pos                         EQU		4                     
ETH_PTPTSCR_TSITE_Msk                         EQU		0x1 << ETH_PTPTSCR_TSITE_Pos    	;/*!< 0x00000010 */
ETH_PTPTSCR_TSITE                             EQU		ETH_PTPTSCR_TSITE_Msk    			;/* Time stamp interrupt trigger enable */
ETH_PTPTSCR_TSSTU_Pos                         EQU		3                     
ETH_PTPTSCR_TSSTU_Msk                         EQU		0x1 << ETH_PTPTSCR_TSSTU_Pos    	;/*!< 0x00000008 */
ETH_PTPTSCR_TSSTU                             EQU		ETH_PTPTSCR_TSSTU_Msk    			;/* Time stamp update */
ETH_PTPTSCR_TSSTI_Pos                         EQU		2                     
ETH_PTPTSCR_TSSTI_Msk                         EQU		0x1 << ETH_PTPTSCR_TSSTI_Pos    	;/*!< 0x00000004 */
ETH_PTPTSCR_TSSTI                             EQU		ETH_PTPTSCR_TSSTI_Msk    			;/* Time stamp initialize */
ETH_PTPTSCR_TSFCU_Pos                         EQU		1                     
ETH_PTPTSCR_TSFCU_Msk                         EQU		0x1 << ETH_PTPTSCR_TSFCU_Pos    	;/*!< 0x00000002 */
ETH_PTPTSCR_TSFCU                             EQU		ETH_PTPTSCR_TSFCU_Msk    			;/* Time stamp fine or coarse update */
ETH_PTPTSCR_TSE_Pos                           EQU		0                     
ETH_PTPTSCR_TSE_Msk                           EQU		0x1 << ETH_PTPTSCR_TSE_Pos    		;/*!< 0x00000001 */
ETH_PTPTSCR_TSE                               EQU		ETH_PTPTSCR_TSE_Msk      			;/* Time stamp enable */

ETH_PTPSSIR			                          EQU		0x704
;/* Bit definition for Ethernet PTP Sub-Second Increment Register */
ETH_PTPSSIR_STSSI_Pos                         EQU		0                     
ETH_PTPSSIR_STSSI_Msk                         EQU		0xFF << ETH_PTPSSIR_STSSI_Pos    	;/*!< 0x000000FF */
ETH_PTPSSIR_STSSI                             EQU		ETH_PTPSSIR_STSSI_Msk    			;/* System time Sub-second increment value */

ETH_PTPTSHR			                          EQU		0x708
;/* Bit definition for Ethernet PTP Time Stamp High Register */
ETH_PTPTSHR_STS_Pos                           EQU		0                     
ETH_PTPTSHR_STS_Msk                           EQU		0xFFFFFFFF << ETH_PTPTSHR_STS_Pos   ;/*!< 0xFFFFFFFF */
ETH_PTPTSHR_STS                               EQU		ETH_PTPTSHR_STS_Msk      			;/* System Time second */

ETH_PTPTSLR			                          EQU		0x70C
;/* Bit definition for Ethernet PTP Time Stamp Low Register */
ETH_PTPTSLR_STPNS_Pos                         EQU		31                    
ETH_PTPTSLR_STPNS_Msk                         EQU		0x1 << ETH_PTPTSLR_STPNS_Pos    ;/*!< 0x80000000 */
ETH_PTPTSLR_STPNS                             EQU		ETH_PTPTSLR_STPNS_Msk    		;/* System Time Positive or negative time */
ETH_PTPTSLR_STSS_Pos                          EQU		0                     
ETH_PTPTSLR_STSS_Msk                          EQU		0x7FFFFFFF << ETH_PTPTSLR_STSS_Pos    	;/*!< 0x7FFFFFFF */
ETH_PTPTSLR_STSS                              EQU		ETH_PTPTSLR_STSS_Msk     				;/* System Time sub-seconds */

ETH_PTPTSHUR			                      EQU		0x710
;/* Bit definition for Ethernet PTP Time Stamp High Update Register */
ETH_PTPTSHUR_TSUS_Pos                         EQU		0                     
ETH_PTPTSHUR_TSUS_Msk                         EQU		0xFFFFFFFF << ETH_PTPTSHUR_TSUS_Pos    	;/*!< 0xFFFFFFFF */
ETH_PTPTSHUR_TSUS                             EQU		ETH_PTPTSHUR_TSUS_Msk    				;/* Time stamp update seconds */

ETH_PTPTSLUR			                      EQU		0x714
;/* Bit definition for Ethernet PTP Time Stamp Low Update Register */
ETH_PTPTSLUR_TSUPNS_Pos                       EQU		31                    
ETH_PTPTSLUR_TSUPNS_Msk                       EQU		0x1 << ETH_PTPTSLUR_TSUPNS_Pos    ;/*!< 0x80000000 */
ETH_PTPTSLUR_TSUPNS                           EQU		ETH_PTPTSLUR_TSUPNS_Msk  		  ;/* Time stamp update Positive or negative time */
ETH_PTPTSLUR_TSUSS_Pos                        EQU		0                     
ETH_PTPTSLUR_TSUSS_Msk                        EQU		0x7FFFFFFF << ETH_PTPTSLUR_TSUSS_Pos    ;/*!< 0x7FFFFFFF */
ETH_PTPTSLUR_TSUSS                            EQU		ETH_PTPTSLUR_TSUSS_Msk   				;/* Time stamp update sub-seconds */

ETH_PTPTSAR			                          EQU		0x718
;/* Bit definition for Ethernet PTP Time Stamp Addend Register */
ETH_PTPTSAR_TSA_Pos                           EQU		0                     
ETH_PTPTSAR_TSA_Msk                           EQU		0xFFFFFFFF << ETH_PTPTSAR_TSA_Pos    ;/*!< 0xFFFFFFFF */
ETH_PTPTSAR_TSA                               EQU		ETH_PTPTSAR_TSA_Msk      			 ;/* Time stamp addend */

ETH_PTPTTHR			                          EQU		0x71C
;/* Bit definition for Ethernet PTP Target Time High Register */
ETH_PTPTTHR_TTSH_Pos                          EQU		0                     
ETH_PTPTTHR_TTSH_Msk                          EQU		0xFFFFFFFF << ETH_PTPTTHR_TTSH_Pos    ;/*!< 0xFFFFFFFF */
ETH_PTPTTHR_TTSH                              EQU		ETH_PTPTTHR_TTSH_Msk     			  ;/* Target time stamp high */

ETH_PTPTTLR			                          EQU		0x720
;/* Bit definition for Ethernet PTP Target Time Low Register */
ETH_PTPTTLR_TTSL_Pos                          EQU		0                     
ETH_PTPTTLR_TTSL_Msk                          EQU		0xFFFFFFFF << ETH_PTPTTLR_TTSL_Pos    ;/*!< 0xFFFFFFFF */
ETH_PTPTTLR_TTSL                              EQU		ETH_PTPTTLR_TTSL_Msk     			  ;/* Target time stamp low */

ETH_PTPTSSR			                          EQU		0x728
;/* Bit definition for Ethernet PTP Time Stamp Status Register */
ETH_PTPTSSR_TSTTR_Pos                         EQU		5                     
ETH_PTPTSSR_TSTTR_Msk                         EQU		0x1 << ETH_PTPTSSR_TSTTR_Pos    ;/*!< 0x00000020 */
ETH_PTPTSSR_TSTTR                             EQU		ETH_PTPTSSR_TSTTR_Msk    		;/* Time stamp target time reached */
ETH_PTPTSSR_TSSO_Pos                          EQU		4                     
ETH_PTPTSSR_TSSO_Msk                          EQU		0x1 << ETH_PTPTSSR_TSSO_Pos     ;/*!< 0x00000010 */
ETH_PTPTSSR_TSSO                              EQU		ETH_PTPTSSR_TSSO_Msk     		;/* Time stamp seconds overflow */

;/******************************************************************************/
;/*                 Ethernet DMA Registers bits definition                     */
;/******************************************************************************/

ETH_DMABMR			                          EQU		0x1000
;/* Bit definition for Ethernet DMA Bus Mode Register */
ETH_DMABMR_AAB_Pos                            EQU		25                    
ETH_DMABMR_AAB_Msk                            EQU		0x1 << ETH_DMABMR_AAB_Pos    ;/*!< 0x02000000 */
ETH_DMABMR_AAB                                EQU		ETH_DMABMR_AAB_Msk       ;/* Address-Aligned beats */
ETH_DMABMR_FPM_Pos                            EQU		24                    
ETH_DMABMR_FPM_Msk                            EQU		0x1 << ETH_DMABMR_FPM_Pos    ;/*!< 0x01000000 */
ETH_DMABMR_FPM                                EQU		ETH_DMABMR_FPM_Msk       ;/* 4xPBL mode */
ETH_DMABMR_USP_Pos                            EQU		23                    
ETH_DMABMR_USP_Msk                            EQU		0x1 << ETH_DMABMR_USP_Pos    ;/*!< 0x00800000 */
ETH_DMABMR_USP                                EQU		ETH_DMABMR_USP_Msk       ;/* Use separate PBL */
ETH_DMABMR_RDP_Pos                            EQU		17                    
ETH_DMABMR_RDP_Msk                            EQU		0x3F << ETH_DMABMR_RDP_Pos    ;/*!< 0x007E0000 */
ETH_DMABMR_RDP                                EQU		ETH_DMABMR_RDP_Msk       ;/* RxDMA PBL */
ETH_DMABMR_RDP_1Beat                          EQU		0x00020000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 1 */
ETH_DMABMR_RDP_2Beat                          EQU		0x00040000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 2 */
ETH_DMABMR_RDP_4Beat                          EQU		0x00080000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 4 */
ETH_DMABMR_RDP_8Beat                          EQU		0x00100000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 8 */
ETH_DMABMR_RDP_16Beat                         EQU		0x00200000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 16 */
ETH_DMABMR_RDP_32Beat                         EQU		0x00400000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 32 */                
ETH_DMABMR_RDP_4xPBL_4Beat                    EQU		0x01020000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 4 */
ETH_DMABMR_RDP_4xPBL_8Beat                    EQU		0x01040000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 8 */
ETH_DMABMR_RDP_4xPBL_16Beat                   EQU		0x01080000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 16 */
ETH_DMABMR_RDP_4xPBL_32Beat                   EQU		0x01100000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 32 */
ETH_DMABMR_RDP_4xPBL_64Beat                   EQU		0x01200000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 64 */
ETH_DMABMR_RDP_4xPBL_128Beat                  EQU		0x01400000              ;/* maximum number of beats to be transferred in one RxDMA transaction is 128 */  
ETH_DMABMR_FB_Pos                             EQU		16                    
ETH_DMABMR_FB_Msk                             EQU		0x1 << ETH_DMABMR_FB_Pos    ;/*!< 0x00010000 */
ETH_DMABMR_FB                                 EQU		ETH_DMABMR_FB_Msk        	;/* Fixed Burst */
ETH_DMABMR_RTPR_Pos                           EQU		14                    
ETH_DMABMR_RTPR_Msk                           EQU		0x3 << ETH_DMABMR_RTPR_Pos    ;/*!< 0x0000C000 */
ETH_DMABMR_RTPR                               EQU		ETH_DMABMR_RTPR_Msk      ;/* Rx Tx priority ratio */
ETH_DMABMR_RTPR_1_1                           EQU		0x00000000              ;/* Rx Tx priority ratio */
ETH_DMABMR_RTPR_2_1                           EQU		0x00004000              ;/* Rx Tx priority ratio */
ETH_DMABMR_RTPR_3_1                           EQU		0x00008000              ;/* Rx Tx priority ratio */
ETH_DMABMR_RTPR_4_1                           EQU		0x0000C000              ;/* Rx Tx priority ratio */  
ETH_DMABMR_PBL_Pos                            EQU		8                     
ETH_DMABMR_PBL_Msk                            EQU		0x3F << ETH_DMABMR_PBL_Pos    ;/*!< 0x00003F00 */
ETH_DMABMR_PBL                                EQU		ETH_DMABMR_PBL_Msk       ;/* Programmable burst length */
ETH_DMABMR_PBL_1Beat                          EQU		0x00000100              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 1 */
ETH_DMABMR_PBL_2Beat                          EQU		0x00000200              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 2 */
ETH_DMABMR_PBL_4Beat                          EQU		0x00000400              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 4 */
ETH_DMABMR_PBL_8Beat                          EQU		0x00000800              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 8 */
ETH_DMABMR_PBL_16Beat                         EQU		0x00001000              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 16 */
ETH_DMABMR_PBL_32Beat                         EQU		0x00002000              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 32 */                
ETH_DMABMR_PBL_4xPBL_4Beat                    EQU		0x01000100              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 4 */
ETH_DMABMR_PBL_4xPBL_8Beat                    EQU		0x01000200              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 8 */
ETH_DMABMR_PBL_4xPBL_16Beat                   EQU		0x01000400              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 16 */
ETH_DMABMR_PBL_4xPBL_32Beat                   EQU		0x01000800              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 32 */
ETH_DMABMR_PBL_4xPBL_64Beat                   EQU		0x01001000              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 64 */
ETH_DMABMR_PBL_4xPBL_128Beat                  EQU		0x01002000              ;/* maximum number of beats to be transferred in one TxDMA EQU		or both    transaction is 128 */
ETH_DMABMR_EDE_Pos                            EQU		7                     
ETH_DMABMR_EDE_Msk                            EQU		0x1 << ETH_DMABMR_EDE_Pos    ;/*!< 0x00000080 */
ETH_DMABMR_EDE                                EQU		ETH_DMABMR_EDE_Msk       	 ;/* Enhanced Descriptor Enable */
ETH_DMABMR_DSL_Pos                            EQU		2                     
ETH_DMABMR_DSL_Msk                            EQU		0x1F << ETH_DMABMR_DSL_Pos   ;/*!< 0x0000007C */
ETH_DMABMR_DSL                                EQU		ETH_DMABMR_DSL_Msk       	 ;/* Descriptor Skip Length */
ETH_DMABMR_DA_Pos                             EQU		1                     
ETH_DMABMR_DA_Msk                             EQU		0x1 << ETH_DMABMR_DA_Pos     ;/*!< 0x00000002 */
ETH_DMABMR_DA                                 EQU		ETH_DMABMR_DA_Msk        	 ;/* DMA arbitration scheme */
ETH_DMABMR_SR_Pos                             EQU		0                     
ETH_DMABMR_SR_Msk                             EQU		0x1 << ETH_DMABMR_SR_Pos     ;/*!< 0x00000001 */
ETH_DMABMR_SR                                 EQU		ETH_DMABMR_SR_Msk        	 ;/* Software reset */

ETH_DMATPDR			                          EQU		0x1004
;/* Bit definition for Ethernet DMA Transmit Poll Demand Register */
ETH_DMATPDR_TPD_Pos                           EQU		0                     
ETH_DMATPDR_TPD_Msk                           EQU		0xFFFFFFFF << ETH_DMATPDR_TPD_Pos    ;/*!< 0xFFFFFFFF */
ETH_DMATPDR_TPD                               EQU		ETH_DMATPDR_TPD_Msk      			 ;/* Transmit poll demand */

ETH_DMARPDR			                          EQU		0x1008
;/* Bit definition for Ethernet DMA Receive Poll Demand Register */
ETH_DMARPDR_RPD_Pos                           EQU		0                     
ETH_DMARPDR_RPD_Msk                           EQU		0xFFFFFFFF << ETH_DMARPDR_RPD_Pos    ;/*!< 0xFFFFFFFF */
ETH_DMARPDR_RPD                               EQU		ETH_DMARPDR_RPD_Msk     			 ;/* Receive poll demand  */

ETH_DMARDLAR				                  EQU		0x100C
;/* Bit definition for Ethernet DMA Receive Descriptor List Address Register */
ETH_DMARDLAR_SRL_Pos                          EQU		0                     
ETH_DMARDLAR_SRL_Msk                          EQU		0xFFFFFFFF << ETH_DMARDLAR_SRL_Pos    ;/*!< 0xFFFFFFFF */
ETH_DMARDLAR_SRL                              EQU		ETH_DMARDLAR_SRL_Msk     			  ;/* Start of receive list */

ETH_DMATDLAR		                          EQU		0x1010
;/* Bit definition for Ethernet DMA Transmit Descriptor List Address Register */
ETH_DMATDLAR_STL_Pos                          EQU		0                     
ETH_DMATDLAR_STL_Msk                          EQU		0xFFFFFFFF << ETH_DMATDLAR_STL_Pos    ;/*!< 0xFFFFFFFF */
ETH_DMATDLAR_STL                              EQU		ETH_DMATDLAR_STL_Msk     			  ;/* Start of transmit list */

ETH_DMASR			                          EQU		0x1014
;/* Bit definition for Ethernet DMA Status Register */
ETH_DMASR_TSTS_Pos                            EQU		29                    
ETH_DMASR_TSTS_Msk                            EQU		0x1 << ETH_DMASR_TSTS_Pos    ;/*!< 0x20000000 */
ETH_DMASR_TSTS                                EQU		ETH_DMASR_TSTS_Msk       	 ;/* Time-stamp trigger status */
ETH_DMASR_PMTS_Pos                            EQU		28                    
ETH_DMASR_PMTS_Msk                            EQU		0x1 << ETH_DMASR_PMTS_Pos    ;/*!< 0x10000000 */
ETH_DMASR_PMTS                                EQU		ETH_DMASR_PMTS_Msk       	 ;/* PMT status */
ETH_DMASR_MMCS_Pos                            EQU		27                    
ETH_DMASR_MMCS_Msk                            EQU		0x1 << ETH_DMASR_MMCS_Pos    ;/*!< 0x08000000 */
ETH_DMASR_MMCS                                EQU		ETH_DMASR_MMCS_Msk      	 ;/* MMC status */
ETH_DMASR_EBS_Pos                             EQU		23                    
ETH_DMASR_EBS_Msk                             EQU		0x7 << ETH_DMASR_EBS_Pos     ;/*!< 0x03800000 */
ETH_DMASR_EBS                                 EQU		ETH_DMASR_EBS_Msk       	 ;/* Error bits status */
  ;/* combination with EBS[2:0] for GetFlagStatus function */
ETH_DMASR_EBS_DescAccess_Pos                  EQU		25                    
ETH_DMASR_EBS_DescAccess_Msk                  EQU		0x1 << ETH_DMASR_EBS_DescAccess_Pos    ;/*!< 0x02000000 */
ETH_DMASR_EBS_DescAccess                      EQU		ETH_DMASR_EBS_DescAccess_Msk 		   ;/* Error bits 0-data buffer, 1-desc. access */
ETH_DMASR_EBS_ReadTransf_Pos                  EQU		24                    
ETH_DMASR_EBS_ReadTransf_Msk                  EQU		0x1 << ETH_DMASR_EBS_ReadTransf_Pos    ;/*!< 0x01000000 */
ETH_DMASR_EBS_ReadTransf                      EQU		ETH_DMASR_EBS_ReadTransf_Msk 		   ;/* Error bits 0-write trnsf, 1-read transfr */
ETH_DMASR_EBS_DataTransfTx_Pos                EQU		23                    
ETH_DMASR_EBS_DataTransfTx_Msk                EQU		0x1 << ETH_DMASR_EBS_DataTransfTx_Pos  ;/*!< 0x00800000 */
ETH_DMASR_EBS_DataTransfTx                    EQU		ETH_DMASR_EBS_DataTransfTx_Msk 		   ;/* Error bits 0-Rx DMA, 1-Tx DMA */
ETH_DMASR_TPS_Pos                             EQU		20                    
ETH_DMASR_TPS_Msk                             EQU		0x7 << ETH_DMASR_TPS_Pos    ;/*!< 0x00700000 */
ETH_DMASR_TPS                                 EQU		ETH_DMASR_TPS_Msk        	;/* Transmit process state */
ETH_DMASR_TPS_Stopped                         EQU		0x00000000              	;/* Stopped - Reset or Stop Tx Command issued  */
ETH_DMASR_TPS_Fetching_Pos                    EQU		20                    
ETH_DMASR_TPS_Fetching_Msk                    EQU		0x1 << ETH_DMASR_TPS_Fetching_Pos   ;/*!< 0x00100000 */
ETH_DMASR_TPS_Fetching                        EQU		ETH_DMASR_TPS_Fetching_Msk 			;/* Running - fetching the Tx descriptor */
ETH_DMASR_TPS_Waiting_Pos                     EQU		21                    
ETH_DMASR_TPS_Waiting_Msk                     EQU		0x1 << ETH_DMASR_TPS_Waiting_Pos    ;/*!< 0x00200000 */
ETH_DMASR_TPS_Waiting                         EQU		ETH_DMASR_TPS_Waiting_Msk 			;/* Running - waiting for status */
ETH_DMASR_TPS_Reading_Pos                     EQU		20                    
ETH_DMASR_TPS_Reading_Msk                     EQU		0x3 << ETH_DMASR_TPS_Reading_Pos    ;/*!< 0x00300000 */
ETH_DMASR_TPS_Reading                         EQU		ETH_DMASR_TPS_Reading_Msk 			;/* Running - reading the data from host memory */
ETH_DMASR_TPS_Suspended_Pos                   EQU		21                    
ETH_DMASR_TPS_Suspended_Msk                   EQU		0x3 << ETH_DMASR_TPS_Suspended_Pos  ;/*!< 0x00600000 */
ETH_DMASR_TPS_Suspended                       EQU		ETH_DMASR_TPS_Suspended_Msk 		;/* Suspended - Tx Descriptor unavailabe */
ETH_DMASR_TPS_Closing_Pos                     EQU		20                    
ETH_DMASR_TPS_Closing_Msk                     EQU		0x7 << ETH_DMASR_TPS_Closing_Pos    ;/*!< 0x00700000 */
ETH_DMASR_TPS_Closing                         EQU		ETH_DMASR_TPS_Closing_Msk 			;/* Running - closing Rx descriptor */
ETH_DMASR_RPS_Pos                             EQU		17                    
ETH_DMASR_RPS_Msk                             EQU		0x7 << ETH_DMASR_RPS_Pos    ;/*!< 0x000E0000 */
ETH_DMASR_RPS                                 EQU		ETH_DMASR_RPS_Msk        	;/* Receive process state */
ETH_DMASR_RPS_Stopped                         EQU		0x00000000               	;/* Stopped - Reset or Stop Rx Command issued */
ETH_DMASR_RPS_Fetching_Pos                    EQU		17                    
ETH_DMASR_RPS_Fetching_Msk                    EQU		0x1 << ETH_DMASR_RPS_Fetching_Pos   ;/*!< 0x00020000 */
ETH_DMASR_RPS_Fetching                        EQU		ETH_DMASR_RPS_Fetching_Msk 			;/* Running - fetching the Rx descriptor */
ETH_DMASR_RPS_Waiting_Pos                     EQU		17                    
ETH_DMASR_RPS_Waiting_Msk                     EQU		0x3 << ETH_DMASR_RPS_Waiting_Pos    ;/*!< 0x00060000 */
ETH_DMASR_RPS_Waiting                         EQU		ETH_DMASR_RPS_Waiting_Msk 			;/* Running - waiting for packet */
ETH_DMASR_RPS_Suspended_Pos                   EQU		19                    
ETH_DMASR_RPS_Suspended_Msk                   EQU		0x1 << ETH_DMASR_RPS_Suspended_Pos  ;/*!< 0x00080000 */
ETH_DMASR_RPS_Suspended                       EQU		ETH_DMASR_RPS_Suspended_Msk 		;/* Suspended - Rx Descriptor unavailable */
ETH_DMASR_RPS_Closing_Pos                     EQU		17                    
ETH_DMASR_RPS_Closing_Msk                     EQU		0x5 << ETH_DMASR_RPS_Closing_Pos    ;/*!< 0x000A0000 */
ETH_DMASR_RPS_Closing                         EQU		ETH_DMASR_RPS_Closing_Msk 			;/* Running - closing descriptor */
ETH_DMASR_RPS_Queuing_Pos                     EQU		17                    
ETH_DMASR_RPS_Queuing_Msk                     EQU		0x7 << ETH_DMASR_RPS_Queuing_Pos    ;/*!< 0x000E0000 */
ETH_DMASR_RPS_Queuing                         EQU		ETH_DMASR_RPS_Queuing_Msk 			;/* Running - queuing the recieve frame into host memory */
ETH_DMASR_NIS_Pos                             EQU		16                    
ETH_DMASR_NIS_Msk                             EQU		0x1 << ETH_DMASR_NIS_Pos    		;/*!< 0x00010000 */
ETH_DMASR_NIS                                 EQU		ETH_DMASR_NIS_Msk        			;/* Normal interrupt summary */
ETH_DMASR_AIS_Pos                             EQU		15                    
ETH_DMASR_AIS_Msk                             EQU		0x1 << ETH_DMASR_AIS_Pos   			;/*!< 0x00008000 */
ETH_DMASR_AIS                                 EQU		ETH_DMASR_AIS_Msk        			;/* Abnormal interrupt summary */
ETH_DMASR_ERS_Pos                             EQU		14                    
ETH_DMASR_ERS_Msk                             EQU		0x1 << ETH_DMASR_ERS_Pos    		;/*!< 0x00004000 */
ETH_DMASR_ERS                                 EQU		ETH_DMASR_ERS_Msk        			;/* Early receive status */
ETH_DMASR_FBES_Pos                            EQU		13                    
ETH_DMASR_FBES_Msk                            EQU		0x1 << ETH_DMASR_FBES_Pos    		;/*!< 0x00002000 */
ETH_DMASR_FBES                                EQU		ETH_DMASR_FBES_Msk       			;/* Fatal bus error status */
ETH_DMASR_ETS_Pos                             EQU		10                    
ETH_DMASR_ETS_Msk                             EQU		0x1 << ETH_DMASR_ETS_Pos    		;/*!< 0x00000400 */
ETH_DMASR_ETS                                 EQU		ETH_DMASR_ETS_Msk        			;/* Early transmit status */
ETH_DMASR_RWTS_Pos                            EQU		9                     
ETH_DMASR_RWTS_Msk                            EQU		0x1 << ETH_DMASR_RWTS_Pos    		;/*!< 0x00000200 */
ETH_DMASR_RWTS                                EQU		ETH_DMASR_RWTS_Msk       			;/* Receive watchdog timeout status */
ETH_DMASR_RPSS_Pos                            EQU		8                     
ETH_DMASR_RPSS_Msk                            EQU		0x1 << ETH_DMASR_RPSS_Pos    		;/*!< 0x00000100 */
ETH_DMASR_RPSS                                EQU		ETH_DMASR_RPSS_Msk       			;/* Receive process stopped status */
ETH_DMASR_RBUS_Pos                            EQU		7                     
ETH_DMASR_RBUS_Msk                            EQU		0x1 << ETH_DMASR_RBUS_Pos    		;/*!< 0x00000080 */
ETH_DMASR_RBUS                                EQU		ETH_DMASR_RBUS_Msk       			;/* Receive buffer unavailable status */
ETH_DMASR_RS_Pos                              EQU		6                     
ETH_DMASR_RS_Msk                              EQU		0x1 << ETH_DMASR_RS_Pos    			;/*!< 0x00000040 */
ETH_DMASR_RS                                  EQU		ETH_DMASR_RS_Msk         			;/* Receive status */
ETH_DMASR_TUS_Pos                             EQU		5                     
ETH_DMASR_TUS_Msk                             EQU		0x1 << ETH_DMASR_TUS_Pos    		;/*!< 0x00000020 */
ETH_DMASR_TUS                                 EQU		ETH_DMASR_TUS_Msk        			;/* Transmit underflow status */
ETH_DMASR_ROS_Pos                             EQU		4                     
ETH_DMASR_ROS_Msk                             EQU		0x1 << ETH_DMASR_ROS_Pos    		;/*!< 0x00000010 */
ETH_DMASR_ROS                                 EQU		ETH_DMASR_ROS_Msk        			;/* Receive overflow status */
ETH_DMASR_TJTS_Pos                            EQU		3                     
ETH_DMASR_TJTS_Msk                            EQU		0x1 << ETH_DMASR_TJTS_Pos    		;/*!< 0x00000008 */
ETH_DMASR_TJTS                                EQU		ETH_DMASR_TJTS_Msk       			;/* Transmit jabber timeout status */
ETH_DMASR_TBUS_Pos                            EQU		2                     
ETH_DMASR_TBUS_Msk                            EQU		0x1 << ETH_DMASR_TBUS_Pos    		;/*!< 0x00000004 */
ETH_DMASR_TBUS                                EQU		ETH_DMASR_TBUS_Msk       			;/* Transmit buffer unavailable status */
ETH_DMASR_TPSS_Pos                            EQU		1                     
ETH_DMASR_TPSS_Msk                            EQU		0x1 << ETH_DMASR_TPSS_Pos    		;/*!< 0x00000002 */
ETH_DMASR_TPSS                                EQU		ETH_DMASR_TPSS_Msk      			;/* Transmit process stopped status */
ETH_DMASR_TS_Pos                              EQU		0                     
ETH_DMASR_TS_Msk                              EQU		0x1 << ETH_DMASR_TS_Pos    			;/*!< 0x00000001 */
ETH_DMASR_TS                                  EQU		ETH_DMASR_TS_Msk         			;/* Transmit status */

ETH_DMAOMR			                          EQU		0x1018
;/* Bit definition for Ethernet DMA Operation Mode Register */
ETH_DMAOMR_DTCEFD_Pos                         EQU		26                    
ETH_DMAOMR_DTCEFD_Msk                         EQU		0x1 << ETH_DMAOMR_DTCEFD_Pos    ;/*!< 0x04000000 */
ETH_DMAOMR_DTCEFD                             EQU		ETH_DMAOMR_DTCEFD_Msk    ;/* Disable Dropping of TCP/IP checksum error frames */
ETH_DMAOMR_RSF_Pos                            EQU		25                    
ETH_DMAOMR_RSF_Msk                            EQU		0x1 << ETH_DMAOMR_RSF_Pos    ;/*!< 0x02000000 */
ETH_DMAOMR_RSF                                EQU		ETH_DMAOMR_RSF_Msk       ;/* Receive store and forward */
ETH_DMAOMR_DFRF_Pos                           EQU		24                    
ETH_DMAOMR_DFRF_Msk                           EQU		0x1 << ETH_DMAOMR_DFRF_Pos    ;/*!< 0x01000000 */
ETH_DMAOMR_DFRF                               EQU		ETH_DMAOMR_DFRF_Msk      ;/* Disable flushing of received frames */
ETH_DMAOMR_TSF_Pos                            EQU		21                    
ETH_DMAOMR_TSF_Msk                            EQU		0x1 << ETH_DMAOMR_TSF_Pos    ;/*!< 0x00200000 */
ETH_DMAOMR_TSF                                EQU		ETH_DMAOMR_TSF_Msk       ;/* Transmit store and forward */
ETH_DMAOMR_FTF_Pos                            EQU		20                    
ETH_DMAOMR_FTF_Msk                            EQU		0x1 << ETH_DMAOMR_FTF_Pos    ;/*!< 0x00100000 */
ETH_DMAOMR_FTF                                EQU		ETH_DMAOMR_FTF_Msk       ;/* Flush transmit FIFO */
ETH_DMAOMR_TTC_Pos                            EQU		14                    
ETH_DMAOMR_TTC_Msk                            EQU		0x7 << ETH_DMAOMR_TTC_Pos    ;/*!< 0x0001C000 */
ETH_DMAOMR_TTC                                EQU		ETH_DMAOMR_TTC_Msk       ;/* Transmit threshold control */
ETH_DMAOMR_TTC_64Bytes                        EQU		0x00000000              ;/* threshold level of the MTL Transmit FIFO is 64 Bytes */
ETH_DMAOMR_TTC_128Bytes                       EQU		0x00004000              ;/* threshold level of the MTL Transmit FIFO is 128 Bytes */
ETH_DMAOMR_TTC_192Bytes                       EQU		0x00008000              ;/* threshold level of the MTL Transmit FIFO is 192 Bytes */
ETH_DMAOMR_TTC_256Bytes                       EQU		0x0000C000              ;/* threshold level of the MTL Transmit FIFO is 256 Bytes */
ETH_DMAOMR_TTC_40Bytes                        EQU		0x00010000              ;/* threshold level of the MTL Transmit FIFO is 40 Bytes */
ETH_DMAOMR_TTC_32Bytes                        EQU		0x00014000              ;/* threshold level of the MTL Transmit FIFO is 32 Bytes */
ETH_DMAOMR_TTC_24Bytes                        EQU		0x00018000              ;/* threshold level of the MTL Transmit FIFO is 24 Bytes */
ETH_DMAOMR_TTC_16Bytes                        EQU		0x0001C000              ;/* threshold level of the MTL Transmit FIFO is 16 Bytes */
ETH_DMAOMR_ST_Pos                             EQU		13                    
ETH_DMAOMR_ST_Msk                             EQU		0x1 << ETH_DMAOMR_ST_Pos    ;/*!< 0x00002000 */
ETH_DMAOMR_ST                                 EQU		ETH_DMAOMR_ST_Msk        ;/* Start/stop transmission command */
ETH_DMAOMR_FEF_Pos                            EQU		7                     
ETH_DMAOMR_FEF_Msk                            EQU		0x1 << ETH_DMAOMR_FEF_Pos    ;/*!< 0x00000080 */
ETH_DMAOMR_FEF                                EQU		ETH_DMAOMR_FEF_Msk       ;/* Forward error frames */
ETH_DMAOMR_FUGF_Pos                           EQU		6                     
ETH_DMAOMR_FUGF_Msk                           EQU		0x1 << ETH_DMAOMR_FUGF_Pos    ;/*!< 0x00000040 */
ETH_DMAOMR_FUGF                               EQU		ETH_DMAOMR_FUGF_Msk      ;/* Forward undersized good frames */
ETH_DMAOMR_RTC_Pos                            EQU		3                     
ETH_DMAOMR_RTC_Msk                            EQU		0x3 << ETH_DMAOMR_RTC_Pos    ;/*!< 0x00000018 */
ETH_DMAOMR_RTC                                EQU		ETH_DMAOMR_RTC_Msk       ;/* receive threshold control */
ETH_DMAOMR_RTC_64Bytes                        EQU		0x00000000              ;/* threshold level of the MTL Receive FIFO is 64 Bytes */
ETH_DMAOMR_RTC_32Bytes                        EQU		0x00000008              ;/* threshold level of the MTL Receive FIFO is 32 Bytes */
ETH_DMAOMR_RTC_96Bytes                        EQU		0x00000010              ;/* threshold level of the MTL Receive FIFO is 96 Bytes */
ETH_DMAOMR_RTC_128Bytes                       EQU		0x00000018              ;/* threshold level of the MTL Receive FIFO is 128 Bytes */
ETH_DMAOMR_OSF_Pos                            EQU		2                     
ETH_DMAOMR_OSF_Msk                            EQU		0x1 << ETH_DMAOMR_OSF_Pos    ;/*!< 0x00000004 */
ETH_DMAOMR_OSF                                EQU		ETH_DMAOMR_OSF_Msk       ;/* operate on second frame */
ETH_DMAOMR_SR_Pos                             EQU		1                     
ETH_DMAOMR_SR_Msk                             EQU		0x1 << ETH_DMAOMR_SR_Pos    ;/*!< 0x00000002 */
ETH_DMAOMR_SR                                 EQU		ETH_DMAOMR_SR_Msk        ;/* Start/stop receive */

ETH_DMAIER			                          EQU		0x101C
;/* Bit definition for Ethernet DMA Interrupt Enable Register */
ETH_DMAIER_NISE_Pos                           EQU		16                    
ETH_DMAIER_NISE_Msk                           EQU		0x1 << ETH_DMAIER_NISE_Pos    ;/*!< 0x00010000 */
ETH_DMAIER_NISE                               EQU		ETH_DMAIER_NISE_Msk      ;/* Normal interrupt summary enable */
ETH_DMAIER_AISE_Pos                           EQU		15                    
ETH_DMAIER_AISE_Msk                           EQU		0x1 << ETH_DMAIER_AISE_Pos    ;/*!< 0x00008000 */
ETH_DMAIER_AISE                               EQU		ETH_DMAIER_AISE_Msk      ;/* Abnormal interrupt summary enable */
ETH_DMAIER_ERIE_Pos                           EQU		14                    
ETH_DMAIER_ERIE_Msk                           EQU		0x1 << ETH_DMAIER_ERIE_Pos    ;/*!< 0x00004000 */
ETH_DMAIER_ERIE                               EQU		ETH_DMAIER_ERIE_Msk      ;/* Early receive interrupt enable */
ETH_DMAIER_FBEIE_Pos                          EQU		13                    
ETH_DMAIER_FBEIE_Msk                          EQU		0x1 << ETH_DMAIER_FBEIE_Pos    ;/*!< 0x00002000 */
ETH_DMAIER_FBEIE                              EQU		ETH_DMAIER_FBEIE_Msk     ;/* Fatal bus error interrupt enable */
ETH_DMAIER_ETIE_Pos                           EQU		10                    
ETH_DMAIER_ETIE_Msk                           EQU		0x1 << ETH_DMAIER_ETIE_Pos    ;/*!< 0x00000400 */
ETH_DMAIER_ETIE                               EQU		ETH_DMAIER_ETIE_Msk      ;/* Early transmit interrupt enable */
ETH_DMAIER_RWTIE_Pos                          EQU		9                     
ETH_DMAIER_RWTIE_Msk                          EQU		0x1 << ETH_DMAIER_RWTIE_Pos    ;/*!< 0x00000200 */
ETH_DMAIER_RWTIE                              EQU		ETH_DMAIER_RWTIE_Msk     ;/* Receive watchdog timeout interrupt enable */
ETH_DMAIER_RPSIE_Pos                          EQU		8                     
ETH_DMAIER_RPSIE_Msk                          EQU		0x1 << ETH_DMAIER_RPSIE_Pos    ;/*!< 0x00000100 */
ETH_DMAIER_RPSIE                              EQU		ETH_DMAIER_RPSIE_Msk     ;/* Receive process stopped interrupt enable */
ETH_DMAIER_RBUIE_Pos                          EQU		7                     
ETH_DMAIER_RBUIE_Msk                          EQU		0x1 << ETH_DMAIER_RBUIE_Pos    ;/*!< 0x00000080 */
ETH_DMAIER_RBUIE                              EQU		ETH_DMAIER_RBUIE_Msk     ;/* Receive buffer unavailable interrupt enable */
ETH_DMAIER_RIE_Pos                            EQU		6                     
ETH_DMAIER_RIE_Msk                            EQU		0x1 << ETH_DMAIER_RIE_Pos    ;/*!< 0x00000040 */
ETH_DMAIER_RIE                                EQU		ETH_DMAIER_RIE_Msk       ;/* Receive interrupt enable */
ETH_DMAIER_TUIE_Pos                           EQU		5                     
ETH_DMAIER_TUIE_Msk                           EQU		0x1 << ETH_DMAIER_TUIE_Pos    ;/*!< 0x00000020 */
ETH_DMAIER_TUIE                               EQU		ETH_DMAIER_TUIE_Msk      ;/* Transmit Underflow interrupt enable */
ETH_DMAIER_ROIE_Pos                           EQU		4                     
ETH_DMAIER_ROIE_Msk                           EQU		0x1 << ETH_DMAIER_ROIE_Pos    ;/*!< 0x00000010 */
ETH_DMAIER_ROIE                               EQU		ETH_DMAIER_ROIE_Msk      ;/* Receive Overflow interrupt enable */
ETH_DMAIER_TJTIE_Pos                          EQU		3                     
ETH_DMAIER_TJTIE_Msk                          EQU		0x1 << ETH_DMAIER_TJTIE_Pos    ;/*!< 0x00000008 */
ETH_DMAIER_TJTIE                              EQU		ETH_DMAIER_TJTIE_Msk     ;/* Transmit jabber timeout interrupt enable */
ETH_DMAIER_TBUIE_Pos                          EQU		2                     
ETH_DMAIER_TBUIE_Msk                          EQU		0x1 << ETH_DMAIER_TBUIE_Pos    ;/*!< 0x00000004 */
ETH_DMAIER_TBUIE                              EQU		ETH_DMAIER_TBUIE_Msk     ;/* Transmit buffer unavailable interrupt enable */
ETH_DMAIER_TPSIE_Pos                          EQU		1                     
ETH_DMAIER_TPSIE_Msk                          EQU		0x1 << ETH_DMAIER_TPSIE_Pos    ;/*!< 0x00000002 */
ETH_DMAIER_TPSIE                              EQU		ETH_DMAIER_TPSIE_Msk     ;/* Transmit process stopped interrupt enable */
ETH_DMAIER_TIE_Pos                            EQU		0                     
ETH_DMAIER_TIE_Msk                            EQU		0x1 << ETH_DMAIER_TIE_Pos    ;/*!< 0x00000001 */
ETH_DMAIER_TIE                                EQU		ETH_DMAIER_TIE_Msk       ;/* Transmit interrupt enable */

ETH_DMAMFBOCR			                      EQU		0x1020
;/* Bit definition for Ethernet DMA Missed Frame and Buffer Overflow Counter Register */
ETH_DMAMFBOCR_OFOC_Pos                        EQU		28                    
ETH_DMAMFBOCR_OFOC_Msk                        EQU		0x1 << ETH_DMAMFBOCR_OFOC_Pos    ;/*!< 0x10000000 */
ETH_DMAMFBOCR_OFOC                            EQU		ETH_DMAMFBOCR_OFOC_Msk   ;/* Overflow bit for FIFO overflow counter */
ETH_DMAMFBOCR_MFA_Pos                         EQU		17                    
ETH_DMAMFBOCR_MFA_Msk                         EQU		0x7FF << ETH_DMAMFBOCR_MFA_Pos    ;/*!< 0x0FFE0000 */
ETH_DMAMFBOCR_MFA                             EQU		ETH_DMAMFBOCR_MFA_Msk    ;/* Number of frames missed by the application */
ETH_DMAMFBOCR_OMFC_Pos                        EQU		16                    
ETH_DMAMFBOCR_OMFC_Msk                        EQU		0x1 << ETH_DMAMFBOCR_OMFC_Pos    ;/*!< 0x00010000 */
ETH_DMAMFBOCR_OMFC                            EQU		ETH_DMAMFBOCR_OMFC_Msk   ;/* Overflow bit for missed frame counter */
ETH_DMAMFBOCR_MFC_Pos                         EQU		0                     
ETH_DMAMFBOCR_MFC_Msk                         EQU		0xFFFF << ETH_DMAMFBOCR_MFC_Pos    ;/*!< 0x0000FFFF */
ETH_DMAMFBOCR_MFC                             EQU		ETH_DMAMFBOCR_MFC_Msk    ;/* Number of frames missed by the controller */

ETH_DMACHTDR			                      EQU		0x1048
;/* Bit definition for Ethernet DMA Current Host Transmit Descriptor Register */
ETH_DMACHTDR_HTDAP_Pos                        EQU		0                     
ETH_DMACHTDR_HTDAP_Msk                        EQU		0xFFFFFFFF << ETH_DMACHTDR_HTDAP_Pos    ;/*!< 0xFFFFFFFF */
ETH_DMACHTDR_HTDAP                            EQU		ETH_DMACHTDR_HTDAP_Msk   ;/* Host transmit descriptor address pointer */

ETH_DMACHRDR		                          EQU		0x104C
;/* Bit definition for Ethernet DMA Current Host Receive Descriptor Register */
ETH_DMACHRDR_HRDAP_Pos                        EQU		0                     
ETH_DMACHRDR_HRDAP_Msk                        EQU		0xFFFFFFFF << ETH_DMACHRDR_HRDAP_Pos    ;/*!< 0xFFFFFFFF */
ETH_DMACHRDR_HRDAP                            EQU		ETH_DMACHRDR_HRDAP_Msk   ;/* Host receive descriptor address pointer */

ETH_DMACHTBAR			                      EQU		0x1050
;/* Bit definition for Ethernet DMA Current Host Transmit Buffer Address Register */
ETH_DMACHTBAR_HTBAP_Pos                       EQU		0                     
ETH_DMACHTBAR_HTBAP_Msk                       EQU		0xFFFFFFFF << ETH_DMACHTBAR_HTBAP_Pos    ;/*!< 0xFFFFFFFF */
ETH_DMACHTBAR_HTBAP                           EQU		ETH_DMACHTBAR_HTBAP_Msk  ;/* Host transmit buffer address pointer */

ETH_DMACHRBAR			                      EQU		0x1054
;/* Bit definition for Ethernet DMA Current Host Receive Buffer Address Register */
ETH_DMACHRBAR_HRBAP_Pos                       EQU		0                     
ETH_DMACHRBAR_HRBAP_Msk                       EQU		0xFFFFFFFF << ETH_DMACHRBAR_HRBAP_Pos    ;/*!< 0xFFFFFFFF */
ETH_DMACHRBAR_HRBAP                           EQU		ETH_DMACHRBAR_HRBAP_Msk  ;/* Host receive buffer address pointer */

;/******************************************************************************/
;/*                                                                            */
;/*                                       USB_OTG                              */
;/*                                                                            */
;/******************************************************************************/

USB_OTG_GOTGCTL				             EQU		0x00
;/********************  Bit definition for USB_OTG_GOTGCTL register  ***********/
USB_OTG_GOTGCTL_SRQSCS_Pos               EQU		0                          
USB_OTG_GOTGCTL_SRQSCS_Msk               EQU		0x1 << USB_OTG_GOTGCTL_SRQSCS_Pos    ;/*!< 0x00000001 */
USB_OTG_GOTGCTL_SRQSCS                   EQU		USB_OTG_GOTGCTL_SRQSCS_Msk    ;/*!< Session request success */
USB_OTG_GOTGCTL_SRQ_Pos                  EQU		1                          
USB_OTG_GOTGCTL_SRQ_Msk                  EQU		0x1 << USB_OTG_GOTGCTL_SRQ_Pos    ;/*!< 0x00000002 */
USB_OTG_GOTGCTL_SRQ                      EQU		USB_OTG_GOTGCTL_SRQ_Msk       ;/*!< Session request */
USB_OTG_GOTGCTL_HNGSCS_Pos               EQU		8                          
USB_OTG_GOTGCTL_HNGSCS_Msk               EQU		0x1 << USB_OTG_GOTGCTL_HNGSCS_Pos    ;/*!< 0x00000100 */
USB_OTG_GOTGCTL_HNGSCS                   EQU		USB_OTG_GOTGCTL_HNGSCS_Msk    ;/*!< Host set HNP enable */
USB_OTG_GOTGCTL_HNPRQ_Pos                EQU		9                          
USB_OTG_GOTGCTL_HNPRQ_Msk                EQU		0x1 << USB_OTG_GOTGCTL_HNPRQ_Pos    ;/*!< 0x00000200 */
USB_OTG_GOTGCTL_HNPRQ                    EQU		USB_OTG_GOTGCTL_HNPRQ_Msk     ;/*!< HNP request */
USB_OTG_GOTGCTL_HSHNPEN_Pos              EQU		10                         
USB_OTG_GOTGCTL_HSHNPEN_Msk              EQU		0x1 << USB_OTG_GOTGCTL_HSHNPEN_Pos    ;/*!< 0x00000400 */
USB_OTG_GOTGCTL_HSHNPEN                  EQU		USB_OTG_GOTGCTL_HSHNPEN_Msk   ;/*!< Host set HNP enable */
USB_OTG_GOTGCTL_DHNPEN_Pos               EQU		11                         
USB_OTG_GOTGCTL_DHNPEN_Msk               EQU		0x1 << USB_OTG_GOTGCTL_DHNPEN_Pos    ;/*!< 0x00000800 */
USB_OTG_GOTGCTL_DHNPEN                   EQU		USB_OTG_GOTGCTL_DHNPEN_Msk    ;/*!< Device HNP enabled */
USB_OTG_GOTGCTL_CIDSTS_Pos               EQU		16                         
USB_OTG_GOTGCTL_CIDSTS_Msk               EQU		0x1 << USB_OTG_GOTGCTL_CIDSTS_Pos    ;/*!< 0x00010000 */
USB_OTG_GOTGCTL_CIDSTS                   EQU		USB_OTG_GOTGCTL_CIDSTS_Msk    ;/*!< Connector ID status */
USB_OTG_GOTGCTL_DBCT_Pos                 EQU		17                         
USB_OTG_GOTGCTL_DBCT_Msk                 EQU		0x1 << USB_OTG_GOTGCTL_DBCT_Pos    ;/*!< 0x00020000 */
USB_OTG_GOTGCTL_DBCT                     EQU		USB_OTG_GOTGCTL_DBCT_Msk      ;/*!< Long/short debounce time */
USB_OTG_GOTGCTL_ASVLD_Pos                EQU		18                         
USB_OTG_GOTGCTL_ASVLD_Msk                EQU		0x1 << USB_OTG_GOTGCTL_ASVLD_Pos    ;/*!< 0x00040000 */
USB_OTG_GOTGCTL_ASVLD                    EQU		USB_OTG_GOTGCTL_ASVLD_Msk     ;/*!< A-session valid  */
USB_OTG_GOTGCTL_BSVLD_Pos                EQU		19                         
USB_OTG_GOTGCTL_BSVLD_Msk                EQU		0x1 << USB_OTG_GOTGCTL_BSVLD_Pos    ;/*!< 0x00080000 */
USB_OTG_GOTGCTL_BSVLD                    EQU		USB_OTG_GOTGCTL_BSVLD_Msk     ;/*!< B-session valid */

USB_OTG_HCFG			                 EQU		0x400
;/********************  Bit definition forUSB_OTG_HCFG register  ********************/
USB_OTG_HCFG_FSLSPCS_Pos                 EQU		0                          
USB_OTG_HCFG_FSLSPCS_Msk                 EQU		0x3 << USB_OTG_HCFG_FSLSPCS_Pos    ;/*!< 0x00000003 */
USB_OTG_HCFG_FSLSPCS                     EQU		USB_OTG_HCFG_FSLSPCS_Msk      ;/*!< FS/LS PHY clock select  */
USB_OTG_HCFG_FSLSPCS_0                   EQU		0x1 << USB_OTG_HCFG_FSLSPCS_Pos    ;/*!< 0x00000001 */
USB_OTG_HCFG_FSLSPCS_1                   EQU		0x2 << USB_OTG_HCFG_FSLSPCS_Pos    ;/*!< 0x00000002 */
USB_OTG_HCFG_FSLSS_Pos                   EQU		2                          
USB_OTG_HCFG_FSLSS_Msk                   EQU		0x1 << USB_OTG_HCFG_FSLSS_Pos    ;/*!< 0x00000004 */
USB_OTG_HCFG_FSLSS                       EQU		USB_OTG_HCFG_FSLSS_Msk        ;/*!< FS- and LS-only support */

USB_OTG_DCFG			                 EQU		0x800
;/********************  Bit definition for USB_OTG_DCFG register  ********************/
USB_OTG_DCFG_DSPD_Pos                    EQU		0                          
USB_OTG_DCFG_DSPD_Msk                    EQU		0x3 << USB_OTG_DCFG_DSPD_Pos    ;/*!< 0x00000003 */
USB_OTG_DCFG_DSPD                        EQU		USB_OTG_DCFG_DSPD_Msk         ;/*!< Device speed */
USB_OTG_DCFG_DSPD_0                      EQU		0x1 << USB_OTG_DCFG_DSPD_Pos    ;/*!< 0x00000001 */
USB_OTG_DCFG_DSPD_1                      EQU		0x2 << USB_OTG_DCFG_DSPD_Pos    ;/*!< 0x00000002 */
USB_OTG_DCFG_NZLSOHSK_Pos                EQU		2                          
USB_OTG_DCFG_NZLSOHSK_Msk                EQU		0x1 << USB_OTG_DCFG_NZLSOHSK_Pos    ;/*!< 0x00000004 */
USB_OTG_DCFG_NZLSOHSK                    EQU		USB_OTG_DCFG_NZLSOHSK_Msk     ;/*!< Nonzero-length status OUT handshake */

USB_OTG_DCFG_DAD_Pos                     EQU		4                          
USB_OTG_DCFG_DAD_Msk                     EQU		0x7F << USB_OTG_DCFG_DAD_Pos    ;/*!< 0x000007F0 */
USB_OTG_DCFG_DAD                         EQU		USB_OTG_DCFG_DAD_Msk          ;/*!< Device address */
USB_OTG_DCFG_DAD_0                       EQU		0x01 << USB_OTG_DCFG_DAD_Pos    ;/*!< 0x00000010 */
USB_OTG_DCFG_DAD_1                       EQU		0x02 << USB_OTG_DCFG_DAD_Pos    ;/*!< 0x00000020 */
USB_OTG_DCFG_DAD_2                       EQU		0x04 << USB_OTG_DCFG_DAD_Pos    ;/*!< 0x00000040 */
USB_OTG_DCFG_DAD_3                       EQU		0x08 << USB_OTG_DCFG_DAD_Pos    ;/*!< 0x00000080 */
USB_OTG_DCFG_DAD_4                       EQU		0x10 << USB_OTG_DCFG_DAD_Pos    ;/*!< 0x00000100 */
USB_OTG_DCFG_DAD_5                       EQU		0x20 << USB_OTG_DCFG_DAD_Pos    ;/*!< 0x00000200 */
USB_OTG_DCFG_DAD_6                       EQU		0x40 << USB_OTG_DCFG_DAD_Pos    ;/*!< 0x00000400 */

USB_OTG_DCFG_PFIVL_Pos                   EQU		11                         
USB_OTG_DCFG_PFIVL_Msk                   EQU		0x3 << USB_OTG_DCFG_PFIVL_Pos    ;/*!< 0x00001800 */
USB_OTG_DCFG_PFIVL                       EQU		USB_OTG_DCFG_PFIVL_Msk        ;/*!< Periodic EQU		micro   frame interval */
USB_OTG_DCFG_PFIVL_0                     EQU		0x1 << USB_OTG_DCFG_PFIVL_Pos    ;/*!< 0x00000800 */
USB_OTG_DCFG_PFIVL_1                     EQU		0x2 << USB_OTG_DCFG_PFIVL_Pos    ;/*!< 0x00001000 */

USB_OTG_DCFG_PERSCHIVL_Pos               EQU		24                         
USB_OTG_DCFG_PERSCHIVL_Msk               EQU		0x3 << USB_OTG_DCFG_PERSCHIVL_Pos    ;/*!< 0x03000000 */
USB_OTG_DCFG_PERSCHIVL                   EQU		USB_OTG_DCFG_PERSCHIVL_Msk    ;/*!< Periodic scheduling interval */
USB_OTG_DCFG_PERSCHIVL_0                 EQU		0x1 << USB_OTG_DCFG_PERSCHIVL_Pos    ;/*!< 0x01000000 */
USB_OTG_DCFG_PERSCHIVL_1                 EQU		0x2 << USB_OTG_DCFG_PERSCHIVL_Pos    ;/*!< 0x02000000 */

USB_OTG_GOTGINT			                 EQU		0x04
;/********************  Bit definition for USB_OTG_GOTGINT register  ********************/
USB_OTG_GOTGINT_SEDET_Pos                EQU		2                          
USB_OTG_GOTGINT_SEDET_Msk                EQU		0x1 << USB_OTG_GOTGINT_SEDET_Pos    ;/*!< 0x00000004 */
USB_OTG_GOTGINT_SEDET                    EQU		USB_OTG_GOTGINT_SEDET_Msk     ;/*!< Session end detected                   */
USB_OTG_GOTGINT_SRSSCHG_Pos              EQU		8                          
USB_OTG_GOTGINT_SRSSCHG_Msk              EQU		0x1 << USB_OTG_GOTGINT_SRSSCHG_Pos    ;/*!< 0x00000100 */
USB_OTG_GOTGINT_SRSSCHG                  EQU		USB_OTG_GOTGINT_SRSSCHG_Msk   ;/*!< Session request success status change  */
USB_OTG_GOTGINT_HNSSCHG_Pos              EQU		9                          
USB_OTG_GOTGINT_HNSSCHG_Msk              EQU		0x1 << USB_OTG_GOTGINT_HNSSCHG_Pos    ;/*!< 0x00000200 */
USB_OTG_GOTGINT_HNSSCHG                  EQU		USB_OTG_GOTGINT_HNSSCHG_Msk   ;/*!< Host negotiation success status change */
USB_OTG_GOTGINT_HNGDET_Pos               EQU		17                         
USB_OTG_GOTGINT_HNGDET_Msk               EQU		0x1 << USB_OTG_GOTGINT_HNGDET_Pos    ;/*!< 0x00020000 */
USB_OTG_GOTGINT_HNGDET                   EQU		USB_OTG_GOTGINT_HNGDET_Msk    ;/*!< Host negotiation detected              */
USB_OTG_GOTGINT_ADTOCHG_Pos              EQU		18                         
USB_OTG_GOTGINT_ADTOCHG_Msk              EQU		0x1 << USB_OTG_GOTGINT_ADTOCHG_Pos    ;/*!< 0x00040000 */
USB_OTG_GOTGINT_ADTOCHG                  EQU		USB_OTG_GOTGINT_ADTOCHG_Msk   ;/*!< A-device timeout change                */
USB_OTG_GOTGINT_DBCDNE_Pos               EQU		19                         
USB_OTG_GOTGINT_DBCDNE_Msk               EQU		0x1 << USB_OTG_GOTGINT_DBCDNE_Pos    ;/*!< 0x00080000 */
USB_OTG_GOTGINT_DBCDNE                   EQU		USB_OTG_GOTGINT_DBCDNE_Msk    ;/*!< Debounce done                          */

USB_OTG_DCTL		                     EQU		0x804
;/********************  Bit definition for USB_OTG_DCTL register  ********************/
USB_OTG_DCTL_RWUSIG_Pos                  EQU		0                          
USB_OTG_DCTL_RWUSIG_Msk                  EQU		0x1 << USB_OTG_DCTL_RWUSIG_Pos    ;/*!< 0x00000001 */
USB_OTG_DCTL_RWUSIG                      EQU		USB_OTG_DCTL_RWUSIG_Msk       ;/*!< Remote wakeup signaling */
USB_OTG_DCTL_SDIS_Pos                    EQU		1                          
USB_OTG_DCTL_SDIS_Msk                    EQU		0x1 << USB_OTG_DCTL_SDIS_Pos    ;/*!< 0x00000002 */
USB_OTG_DCTL_SDIS                        EQU		USB_OTG_DCTL_SDIS_Msk         ;/*!< Soft disconnect         */
USB_OTG_DCTL_GINSTS_Pos                  EQU		2                          
USB_OTG_DCTL_GINSTS_Msk                  EQU		0x1 << USB_OTG_DCTL_GINSTS_Pos    ;/*!< 0x00000004 */
USB_OTG_DCTL_GINSTS                      EQU		USB_OTG_DCTL_GINSTS_Msk       ;/*!< Global IN NAK status    */
USB_OTG_DCTL_GONSTS_Pos                  EQU		3                          
USB_OTG_DCTL_GONSTS_Msk                  EQU		0x1 << USB_OTG_DCTL_GONSTS_Pos    ;/*!< 0x00000008 */
USB_OTG_DCTL_GONSTS                      EQU		USB_OTG_DCTL_GONSTS_Msk       ;/*!< Global OUT NAK status   */

USB_OTG_DCTL_TCTL_Pos                    EQU		4                          
USB_OTG_DCTL_TCTL_Msk                    EQU		0x7 << USB_OTG_DCTL_TCTL_Pos    ;/*!< 0x00000070 */
USB_OTG_DCTL_TCTL                        EQU		USB_OTG_DCTL_TCTL_Msk         ;/*!< Test control */
USB_OTG_DCTL_TCTL_0                      EQU		0x1 << USB_OTG_DCTL_TCTL_Pos    ;/*!< 0x00000010 */
USB_OTG_DCTL_TCTL_1                      EQU		0x2 << USB_OTG_DCTL_TCTL_Pos    ;/*!< 0x00000020 */
USB_OTG_DCTL_TCTL_2                      EQU		0x4 << USB_OTG_DCTL_TCTL_Pos    ;/*!< 0x00000040 */
USB_OTG_DCTL_SGINAK_Pos                  EQU		7                          
USB_OTG_DCTL_SGINAK_Msk                  EQU		0x1 << USB_OTG_DCTL_SGINAK_Pos    ;/*!< 0x00000080 */
USB_OTG_DCTL_SGINAK                      EQU		USB_OTG_DCTL_SGINAK_Msk       ;/*!< Set global IN NAK         */
USB_OTG_DCTL_CGINAK_Pos                  EQU		8                          
USB_OTG_DCTL_CGINAK_Msk                  EQU		0x1 << USB_OTG_DCTL_CGINAK_Pos    ;/*!< 0x00000100 */
USB_OTG_DCTL_CGINAK                      EQU		USB_OTG_DCTL_CGINAK_Msk       ;/*!< Clear global IN NAK       */
USB_OTG_DCTL_SGONAK_Pos                  EQU		9                          
USB_OTG_DCTL_SGONAK_Msk                  EQU		0x1 << USB_OTG_DCTL_SGONAK_Pos    ;/*!< 0x00000200 */
USB_OTG_DCTL_SGONAK                      EQU		USB_OTG_DCTL_SGONAK_Msk       ;/*!< Set global OUT NAK        */
USB_OTG_DCTL_CGONAK_Pos                  EQU		10                         
USB_OTG_DCTL_CGONAK_Msk                  EQU		0x1 << USB_OTG_DCTL_CGONAK_Pos    ;/*!< 0x00000400 */
USB_OTG_DCTL_CGONAK                      EQU		USB_OTG_DCTL_CGONAK_Msk       ;/*!< Clear global OUT NAK      */
USB_OTG_DCTL_POPRGDNE_Pos                EQU		11                         
USB_OTG_DCTL_POPRGDNE_Msk                EQU		0x1 << USB_OTG_DCTL_POPRGDNE_Pos    ;/*!< 0x00000800 */
USB_OTG_DCTL_POPRGDNE                    EQU		USB_OTG_DCTL_POPRGDNE_Msk     ;/*!< Power-on programming done */

USB_OTG_HFIR			                 EQU		0x404
;/********************  Bit definition for USB_OTG_HFIR register  ********************/
USB_OTG_HFIR_FRIVL_Pos                   EQU		0                          
USB_OTG_HFIR_FRIVL_Msk                   EQU		0xFFFF << USB_OTG_HFIR_FRIVL_Pos    ;/*!< 0x0000FFFF */
USB_OTG_HFIR_FRIVL                       EQU		USB_OTG_HFIR_FRIVL_Msk        ;/*!< Frame interval */

USB_OTG_HFNUM			                 EQU		0x408
;/********************  Bit definition for USB_OTG_HFNUM register  ********************/
USB_OTG_HFNUM_FRNUM_Pos                  EQU		0                          
USB_OTG_HFNUM_FRNUM_Msk                  EQU		0xFFFF << USB_OTG_HFNUM_FRNUM_Pos    ;/*!< 0x0000FFFF */
USB_OTG_HFNUM_FRNUM                      EQU		USB_OTG_HFNUM_FRNUM_Msk       ;/*!< Frame number         */
USB_OTG_HFNUM_FTREM_Pos                  EQU		16                         
USB_OTG_HFNUM_FTREM_Msk                  EQU		0xFFFF << USB_OTG_HFNUM_FTREM_Pos    ;/*!< 0xFFFF0000 */
USB_OTG_HFNUM_FTREM                      EQU		USB_OTG_HFNUM_FTREM_Msk       ;/*!< Frame time remaining */

USB_OTG_DSTS			                 EQU		0x808
;/********************  Bit definition for USB_OTG_DSTS register  ********************/
USB_OTG_DSTS_SUSPSTS_Pos                 EQU		0                          
USB_OTG_DSTS_SUSPSTS_Msk                 EQU		0x1 << USB_OTG_DSTS_SUSPSTS_Pos    ;/*!< 0x00000001 */
USB_OTG_DSTS_SUSPSTS                     EQU		USB_OTG_DSTS_SUSPSTS_Msk      ;/*!< Suspend status   */

USB_OTG_DSTS_ENUMSPD_Pos                 EQU		1                          
USB_OTG_DSTS_ENUMSPD_Msk                 EQU		0x3 << USB_OTG_DSTS_ENUMSPD_Pos    ;/*!< 0x00000006 */
USB_OTG_DSTS_ENUMSPD                     EQU		USB_OTG_DSTS_ENUMSPD_Msk      ;/*!< Enumerated speed */
USB_OTG_DSTS_ENUMSPD_0                   EQU		0x1 << USB_OTG_DSTS_ENUMSPD_Pos    ;/*!< 0x00000002 */
USB_OTG_DSTS_ENUMSPD_1                   EQU		0x2 << USB_OTG_DSTS_ENUMSPD_Pos    ;/*!< 0x00000004 */
USB_OTG_DSTS_EERR_Pos                    EQU		3                          
USB_OTG_DSTS_EERR_Msk                    EQU		0x1 << USB_OTG_DSTS_EERR_Pos    ;/*!< 0x00000008 */
USB_OTG_DSTS_EERR                        EQU		USB_OTG_DSTS_EERR_Msk         ;/*!< Erratic error     */
USB_OTG_DSTS_FNSOF_Pos                   EQU		8                          
USB_OTG_DSTS_FNSOF_Msk                   EQU		0x3FFF << USB_OTG_DSTS_FNSOF_Pos    ;/*!< 0x003FFF00 */
USB_OTG_DSTS_FNSOF                       EQU		USB_OTG_DSTS_FNSOF_Msk        ;/*!< Frame number of the received SOF */

USB_OTG_GAHBCFG			                 EQU		0x08
;/********************  Bit definition for USB_OTG_GAHBCFG register  ********************/
USB_OTG_GAHBCFG_GINT_Pos                 EQU		0                          
USB_OTG_GAHBCFG_GINT_Msk                 EQU		0x1 << USB_OTG_GAHBCFG_GINT_Pos    ;/*!< 0x00000001 */
USB_OTG_GAHBCFG_GINT                     EQU		USB_OTG_GAHBCFG_GINT_Msk      ;/*!< Global interrupt mask */
USB_OTG_GAHBCFG_HBSTLEN_Pos              EQU		1                          
USB_OTG_GAHBCFG_HBSTLEN_Msk              EQU		0xF << USB_OTG_GAHBCFG_HBSTLEN_Pos    ;/*!< 0x0000001E */
USB_OTG_GAHBCFG_HBSTLEN                  EQU		USB_OTG_GAHBCFG_HBSTLEN_Msk   ;/*!< Burst length/type */
USB_OTG_GAHBCFG_HBSTLEN_0                EQU		0x0 << USB_OTG_GAHBCFG_HBSTLEN_Pos    ;/*!< Single */
USB_OTG_GAHBCFG_HBSTLEN_1                EQU		0x1 << USB_OTG_GAHBCFG_HBSTLEN_Pos    ;/*!< INCR */
USB_OTG_GAHBCFG_HBSTLEN_2                EQU		0x3 << USB_OTG_GAHBCFG_HBSTLEN_Pos    ;/*!< INCR4 */
USB_OTG_GAHBCFG_HBSTLEN_3                EQU		0x5 << USB_OTG_GAHBCFG_HBSTLEN_Pos    ;/*!< INCR8 */
USB_OTG_GAHBCFG_HBSTLEN_4                EQU		0x7 << USB_OTG_GAHBCFG_HBSTLEN_Pos    ;/*!< INCR16 */
USB_OTG_GAHBCFG_DMAEN_Pos                EQU		5                          
USB_OTG_GAHBCFG_DMAEN_Msk                EQU		0x1 << USB_OTG_GAHBCFG_DMAEN_Pos    ;/*!< 0x00000020 */
USB_OTG_GAHBCFG_DMAEN                    EQU		USB_OTG_GAHBCFG_DMAEN_Msk     ;/*!< DMA enable */
USB_OTG_GAHBCFG_TXFELVL_Pos              EQU		7                          
USB_OTG_GAHBCFG_TXFELVL_Msk              EQU		0x1 << USB_OTG_GAHBCFG_TXFELVL_Pos    ;/*!< 0x00000080 */
USB_OTG_GAHBCFG_TXFELVL                  EQU		USB_OTG_GAHBCFG_TXFELVL_Msk   ;/*!< TxFIFO empty level */
USB_OTG_GAHBCFG_PTXFELVL_Pos             EQU		8                          
USB_OTG_GAHBCFG_PTXFELVL_Msk             EQU		0x1 << USB_OTG_GAHBCFG_PTXFELVL_Pos    ;/*!< 0x00000100 */
USB_OTG_GAHBCFG_PTXFELVL                 EQU		USB_OTG_GAHBCFG_PTXFELVL_Msk  ;/*!< Periodic TxFIFO empty level */

USB_OTG_GUSBCFG			                 EQU		0x0C
;/********************  Bit definition for USB_OTG_GUSBCFG register  ********************/
USB_OTG_GUSBCFG_TOCAL_Pos                EQU		0                          
USB_OTG_GUSBCFG_TOCAL_Msk                EQU		0x7 << USB_OTG_GUSBCFG_TOCAL_Pos    ;/*!< 0x00000007 */
USB_OTG_GUSBCFG_TOCAL                    EQU		USB_OTG_GUSBCFG_TOCAL_Msk     ;/*!< FS timeout calibration */
USB_OTG_GUSBCFG_TOCAL_0                  EQU		0x1 << USB_OTG_GUSBCFG_TOCAL_Pos    ;/*!< 0x00000001 */
USB_OTG_GUSBCFG_TOCAL_1                  EQU		0x2 << USB_OTG_GUSBCFG_TOCAL_Pos    ;/*!< 0x00000002 */
USB_OTG_GUSBCFG_TOCAL_2                  EQU		0x4 << USB_OTG_GUSBCFG_TOCAL_Pos    ;/*!< 0x00000004 */
USB_OTG_GUSBCFG_PHYSEL_Pos               EQU		6                          
USB_OTG_GUSBCFG_PHYSEL_Msk               EQU		0x1 << USB_OTG_GUSBCFG_PHYSEL_Pos    ;/*!< 0x00000040 */
USB_OTG_GUSBCFG_PHYSEL                   EQU		USB_OTG_GUSBCFG_PHYSEL_Msk    ;/*!< USB 2.0 high-speed ULPI PHY or USB 1.1 full-speed serial transceiver select */
USB_OTG_GUSBCFG_SRPCAP_Pos               EQU		8                          
USB_OTG_GUSBCFG_SRPCAP_Msk               EQU		0x1 << USB_OTG_GUSBCFG_SRPCAP_Pos    ;/*!< 0x00000100 */
USB_OTG_GUSBCFG_SRPCAP                   EQU		USB_OTG_GUSBCFG_SRPCAP_Msk    ;/*!< SRP-capable */
USB_OTG_GUSBCFG_HNPCAP_Pos               EQU		9                          
USB_OTG_GUSBCFG_HNPCAP_Msk               EQU		0x1 << USB_OTG_GUSBCFG_HNPCAP_Pos    ;/*!< 0x00000200 */
USB_OTG_GUSBCFG_HNPCAP                   EQU		USB_OTG_GUSBCFG_HNPCAP_Msk    ;/*!< HNP-capable */
USB_OTG_GUSBCFG_TRDT_Pos                 EQU		10                         
USB_OTG_GUSBCFG_TRDT_Msk                 EQU		0xF << USB_OTG_GUSBCFG_TRDT_Pos    ;/*!< 0x00003C00 */
USB_OTG_GUSBCFG_TRDT                     EQU		USB_OTG_GUSBCFG_TRDT_Msk      ;/*!< USB turnaround time */
USB_OTG_GUSBCFG_TRDT_0                   EQU		0x1 << USB_OTG_GUSBCFG_TRDT_Pos    ;/*!< 0x00000400 */
USB_OTG_GUSBCFG_TRDT_1                   EQU		0x2 << USB_OTG_GUSBCFG_TRDT_Pos    ;/*!< 0x00000800 */
USB_OTG_GUSBCFG_TRDT_2                   EQU		0x4 << USB_OTG_GUSBCFG_TRDT_Pos    ;/*!< 0x00001000 */
USB_OTG_GUSBCFG_TRDT_3                   EQU		0x8 << USB_OTG_GUSBCFG_TRDT_Pos    ;/*!< 0x00002000 */
USB_OTG_GUSBCFG_PHYLPCS_Pos              EQU		15                         
USB_OTG_GUSBCFG_PHYLPCS_Msk              EQU		0x1 << USB_OTG_GUSBCFG_PHYLPCS_Pos    ;/*!< 0x00008000 */
USB_OTG_GUSBCFG_PHYLPCS                  EQU		USB_OTG_GUSBCFG_PHYLPCS_Msk   ;/*!< PHY Low-power clock select */
USB_OTG_GUSBCFG_ULPIFSLS_Pos             EQU		17                         
USB_OTG_GUSBCFG_ULPIFSLS_Msk             EQU		0x1 << USB_OTG_GUSBCFG_ULPIFSLS_Pos    ;/*!< 0x00020000 */
USB_OTG_GUSBCFG_ULPIFSLS                 EQU		USB_OTG_GUSBCFG_ULPIFSLS_Msk  ;/*!< ULPI FS/LS select               */
USB_OTG_GUSBCFG_ULPIAR_Pos               EQU		18                         
USB_OTG_GUSBCFG_ULPIAR_Msk               EQU		0x1 << USB_OTG_GUSBCFG_ULPIAR_Pos    ;/*!< 0x00040000 */
USB_OTG_GUSBCFG_ULPIAR                   EQU		USB_OTG_GUSBCFG_ULPIAR_Msk    ;/*!< ULPI Auto-resume                */
USB_OTG_GUSBCFG_ULPICSM_Pos              EQU		19                         
USB_OTG_GUSBCFG_ULPICSM_Msk              EQU		0x1 << USB_OTG_GUSBCFG_ULPICSM_Pos    ;/*!< 0x00080000 */
USB_OTG_GUSBCFG_ULPICSM                  EQU		USB_OTG_GUSBCFG_ULPICSM_Msk   ;/*!< ULPI Clock SuspendM             */
USB_OTG_GUSBCFG_ULPIEVBUSD_Pos           EQU		20                         
USB_OTG_GUSBCFG_ULPIEVBUSD_Msk           EQU		0x1 << USB_OTG_GUSBCFG_ULPIEVBUSD_Pos    ;/*!< 0x00100000 */
USB_OTG_GUSBCFG_ULPIEVBUSD               EQU		USB_OTG_GUSBCFG_ULPIEVBUSD_Msk ;/*!< ULPI External VBUS Drive        */
USB_OTG_GUSBCFG_ULPIEVBUSI_Pos           EQU		21                         
USB_OTG_GUSBCFG_ULPIEVBUSI_Msk           EQU		0x1 << USB_OTG_GUSBCFG_ULPIEVBUSI_Pos    ;/*!< 0x00200000 */
USB_OTG_GUSBCFG_ULPIEVBUSI               EQU		USB_OTG_GUSBCFG_ULPIEVBUSI_Msk ;/*!< ULPI external VBUS indicator    */
USB_OTG_GUSBCFG_TSDPS_Pos                EQU		22                         
USB_OTG_GUSBCFG_TSDPS_Msk                EQU		0x1 << USB_OTG_GUSBCFG_TSDPS_Pos    ;/*!< 0x00400000 */
USB_OTG_GUSBCFG_TSDPS                    EQU		USB_OTG_GUSBCFG_TSDPS_Msk     ;/*!< TermSel DLine pulsing selection */
USB_OTG_GUSBCFG_PCCI_Pos                 EQU		23                         
USB_OTG_GUSBCFG_PCCI_Msk                 EQU		0x1 << USB_OTG_GUSBCFG_PCCI_Pos    ;/*!< 0x00800000 */
USB_OTG_GUSBCFG_PCCI                     EQU		USB_OTG_GUSBCFG_PCCI_Msk      ;/*!< Indicator complement            */
USB_OTG_GUSBCFG_PTCI_Pos                 EQU		24                         
USB_OTG_GUSBCFG_PTCI_Msk                 EQU		0x1 << USB_OTG_GUSBCFG_PTCI_Pos    ;/*!< 0x01000000 */
USB_OTG_GUSBCFG_PTCI                     EQU		USB_OTG_GUSBCFG_PTCI_Msk      ;/*!< Indicator pass through          */
USB_OTG_GUSBCFG_ULPIIPD_Pos              EQU		25                         
USB_OTG_GUSBCFG_ULPIIPD_Msk              EQU		0x1 << USB_OTG_GUSBCFG_ULPIIPD_Pos    ;/*!< 0x02000000 */
USB_OTG_GUSBCFG_ULPIIPD                  EQU		USB_OTG_GUSBCFG_ULPIIPD_Msk   ;/*!< ULPI interface protect disable  */
USB_OTG_GUSBCFG_FHMOD_Pos                EQU		29                         
USB_OTG_GUSBCFG_FHMOD_Msk                EQU		0x1 << USB_OTG_GUSBCFG_FHMOD_Pos    ;/*!< 0x20000000 */
USB_OTG_GUSBCFG_FHMOD                    EQU		USB_OTG_GUSBCFG_FHMOD_Msk     ;/*!< Forced host mode                */
USB_OTG_GUSBCFG_FDMOD_Pos                EQU		30                         
USB_OTG_GUSBCFG_FDMOD_Msk                EQU		0x1 << USB_OTG_GUSBCFG_FDMOD_Pos    ;/*!< 0x40000000 */
USB_OTG_GUSBCFG_FDMOD                    EQU		USB_OTG_GUSBCFG_FDMOD_Msk     ;/*!< Forced peripheral mode          */
USB_OTG_GUSBCFG_CTXPKT_Pos               EQU		31                         
USB_OTG_GUSBCFG_CTXPKT_Msk               EQU		0x1 << USB_OTG_GUSBCFG_CTXPKT_Pos    ;/*!< 0x80000000 */
USB_OTG_GUSBCFG_CTXPKT                   EQU		USB_OTG_GUSBCFG_CTXPKT_Msk    ;/*!< Corrupt Tx packet               */

USB_OTG_GRSTCTL			                 EQU		0x10
;/********************  Bit definition for USB_OTG_GRSTCTL register  ********************/
USB_OTG_GRSTCTL_CSRST_Pos                EQU		0                          
USB_OTG_GRSTCTL_CSRST_Msk                EQU		0x1 << USB_OTG_GRSTCTL_CSRST_Pos    ;/*!< 0x00000001 */
USB_OTG_GRSTCTL_CSRST                    EQU		USB_OTG_GRSTCTL_CSRST_Msk     ;/*!< Core soft reset          */
USB_OTG_GRSTCTL_HSRST_Pos                EQU		1                          
USB_OTG_GRSTCTL_HSRST_Msk                EQU		0x1 << USB_OTG_GRSTCTL_HSRST_Pos    ;/*!< 0x00000002 */
USB_OTG_GRSTCTL_HSRST                    EQU		USB_OTG_GRSTCTL_HSRST_Msk     ;/*!< HCLK soft reset          */
USB_OTG_GRSTCTL_FCRST_Pos                EQU		2                          
USB_OTG_GRSTCTL_FCRST_Msk                EQU		0x1 << USB_OTG_GRSTCTL_FCRST_Pos    ;/*!< 0x00000004 */
USB_OTG_GRSTCTL_FCRST                    EQU		USB_OTG_GRSTCTL_FCRST_Msk     ;/*!< Host frame counter reset */
USB_OTG_GRSTCTL_RXFFLSH_Pos              EQU		4                          
USB_OTG_GRSTCTL_RXFFLSH_Msk              EQU		0x1 << USB_OTG_GRSTCTL_RXFFLSH_Pos    ;/*!< 0x00000010 */
USB_OTG_GRSTCTL_RXFFLSH                  EQU		USB_OTG_GRSTCTL_RXFFLSH_Msk   ;/*!< RxFIFO flush             */
USB_OTG_GRSTCTL_TXFFLSH_Pos              EQU		5                          
USB_OTG_GRSTCTL_TXFFLSH_Msk              EQU		0x1 << USB_OTG_GRSTCTL_TXFFLSH_Pos    ;/*!< 0x00000020 */
USB_OTG_GRSTCTL_TXFFLSH                  EQU		USB_OTG_GRSTCTL_TXFFLSH_Msk   ;/*!< TxFIFO flush             */

USB_OTG_GRSTCTL_TXFNUM_Pos               EQU		6                          
USB_OTG_GRSTCTL_TXFNUM_Msk               EQU		0x1F << USB_OTG_GRSTCTL_TXFNUM_Pos    ;/*!< 0x000007C0 */
USB_OTG_GRSTCTL_TXFNUM                   EQU		USB_OTG_GRSTCTL_TXFNUM_Msk    ;/*!< TxFIFO number */
USB_OTG_GRSTCTL_TXFNUM_0                 EQU		0x01 << USB_OTG_GRSTCTL_TXFNUM_Pos    ;/*!< 0x00000040 */
USB_OTG_GRSTCTL_TXFNUM_1                 EQU		0x02 << USB_OTG_GRSTCTL_TXFNUM_Pos    ;/*!< 0x00000080 */
USB_OTG_GRSTCTL_TXFNUM_2                 EQU		0x04 << USB_OTG_GRSTCTL_TXFNUM_Pos    ;/*!< 0x00000100 */
USB_OTG_GRSTCTL_TXFNUM_3                 EQU		0x08 << USB_OTG_GRSTCTL_TXFNUM_Pos    ;/*!< 0x00000200 */
USB_OTG_GRSTCTL_TXFNUM_4                 EQU		0x10 << USB_OTG_GRSTCTL_TXFNUM_Pos    ;/*!< 0x00000400 */
USB_OTG_GRSTCTL_DMAREQ_Pos               EQU		30                         
USB_OTG_GRSTCTL_DMAREQ_Msk               EQU		0x1 << USB_OTG_GRSTCTL_DMAREQ_Pos    ;/*!< 0x40000000 */
USB_OTG_GRSTCTL_DMAREQ                   EQU		USB_OTG_GRSTCTL_DMAREQ_Msk    ;/*!< DMA request signal */
USB_OTG_GRSTCTL_AHBIDL_Pos               EQU		31                         
USB_OTG_GRSTCTL_AHBIDL_Msk               EQU		0x1 << USB_OTG_GRSTCTL_AHBIDL_Pos    ;/*!< 0x80000000 */
USB_OTG_GRSTCTL_AHBIDL                   EQU		USB_OTG_GRSTCTL_AHBIDL_Msk    ;/*!< AHB master idle */

USB_OTG_DIEPMSK			                 EQU		0x810
;/********************  Bit definition for USB_OTG_DIEPMSK register  ********************/
USB_OTG_DIEPMSK_XFRCM_Pos                EQU		0                          
USB_OTG_DIEPMSK_XFRCM_Msk                EQU		0x1 << USB_OTG_DIEPMSK_XFRCM_Pos    ;/*!< 0x00000001 */
USB_OTG_DIEPMSK_XFRCM                    EQU		USB_OTG_DIEPMSK_XFRCM_Msk     ;/*!< Transfer completed interrupt mask                 */
USB_OTG_DIEPMSK_EPDM_Pos                 EQU		1                          
USB_OTG_DIEPMSK_EPDM_Msk                 EQU		0x1 << USB_OTG_DIEPMSK_EPDM_Pos    ;/*!< 0x00000002 */
USB_OTG_DIEPMSK_EPDM                     EQU		USB_OTG_DIEPMSK_EPDM_Msk      ;/*!< Endpoint disabled interrupt mask                  */
USB_OTG_DIEPMSK_TOM_Pos                  EQU		3                          
USB_OTG_DIEPMSK_TOM_Msk                  EQU		0x1 << USB_OTG_DIEPMSK_TOM_Pos    ;/*!< 0x00000008 */
USB_OTG_DIEPMSK_TOM                      EQU		USB_OTG_DIEPMSK_TOM_Msk       ;/*!< Timeout condition mask EQU		nonisochronous endpoints    */
USB_OTG_DIEPMSK_ITTXFEMSK_Pos            EQU		4                          
USB_OTG_DIEPMSK_ITTXFEMSK_Msk            EQU		0x1 << USB_OTG_DIEPMSK_ITTXFEMSK_Pos    ;/*!< 0x00000010 */
USB_OTG_DIEPMSK_ITTXFEMSK                EQU		USB_OTG_DIEPMSK_ITTXFEMSK_Msk ;/*!< IN token received when TxFIFO empty mask          */
USB_OTG_DIEPMSK_INEPNMM_Pos              EQU		5                          
USB_OTG_DIEPMSK_INEPNMM_Msk              EQU		0x1 << USB_OTG_DIEPMSK_INEPNMM_Pos    ;/*!< 0x00000020 */
USB_OTG_DIEPMSK_INEPNMM                  EQU		USB_OTG_DIEPMSK_INEPNMM_Msk   ;/*!< IN token received with EP mismatch mask           */
USB_OTG_DIEPMSK_INEPNEM_Pos              EQU		6                          
USB_OTG_DIEPMSK_INEPNEM_Msk              EQU		0x1 << USB_OTG_DIEPMSK_INEPNEM_Pos    ;/*!< 0x00000040 */
USB_OTG_DIEPMSK_INEPNEM                  EQU		USB_OTG_DIEPMSK_INEPNEM_Msk   ;/*!< IN endpoint NAK effective mask                    */
USB_OTG_DIEPMSK_TXFURM_Pos               EQU		8                          
USB_OTG_DIEPMSK_TXFURM_Msk               EQU		0x1 << USB_OTG_DIEPMSK_TXFURM_Pos    ;/*!< 0x00000100 */
USB_OTG_DIEPMSK_TXFURM                   EQU		USB_OTG_DIEPMSK_TXFURM_Msk    ;/*!< FIFO underrun mask                                */
USB_OTG_DIEPMSK_BIM_Pos                  EQU		9                          
USB_OTG_DIEPMSK_BIM_Msk                  EQU		0x1 << USB_OTG_DIEPMSK_BIM_Pos    ;/*!< 0x00000200 */
USB_OTG_DIEPMSK_BIM                      EQU		USB_OTG_DIEPMSK_BIM_Msk       ;/*!< BNA interrupt mask                                */

USB_OTG_HPTXSTS				             EQU		0x410
;/********************  Bit definition for USB_OTG_HPTXSTS register  ********************/
USB_OTG_HPTXSTS_PTXFSAVL_Pos             EQU		0                          
USB_OTG_HPTXSTS_PTXFSAVL_Msk             EQU		0xFFFF << USB_OTG_HPTXSTS_PTXFSAVL_Pos    ;/*!< 0x0000FFFF */
USB_OTG_HPTXSTS_PTXFSAVL                 EQU		USB_OTG_HPTXSTS_PTXFSAVL_Msk  ;/*!< Periodic transmit data FIFO space available     */
USB_OTG_HPTXSTS_PTXQSAV_Pos              EQU		16                         
USB_OTG_HPTXSTS_PTXQSAV_Msk              EQU		0xFF << USB_OTG_HPTXSTS_PTXQSAV_Pos    ;/*!< 0x00FF0000 */
USB_OTG_HPTXSTS_PTXQSAV                  EQU		USB_OTG_HPTXSTS_PTXQSAV_Msk   ;/*!< Periodic transmit request queue space available */
USB_OTG_HPTXSTS_PTXQSAV_0                EQU		0x01 << USB_OTG_HPTXSTS_PTXQSAV_Pos    ;/*!< 0x00010000 */
USB_OTG_HPTXSTS_PTXQSAV_1                EQU		0x02 << USB_OTG_HPTXSTS_PTXQSAV_Pos    ;/*!< 0x00020000 */
USB_OTG_HPTXSTS_PTXQSAV_2                EQU		0x04 << USB_OTG_HPTXSTS_PTXQSAV_Pos    ;/*!< 0x00040000 */
USB_OTG_HPTXSTS_PTXQSAV_3                EQU		0x08 << USB_OTG_HPTXSTS_PTXQSAV_Pos    ;/*!< 0x00080000 */
USB_OTG_HPTXSTS_PTXQSAV_4                EQU		0x10 << USB_OTG_HPTXSTS_PTXQSAV_Pos    ;/*!< 0x00100000 */
USB_OTG_HPTXSTS_PTXQSAV_5                EQU		0x20 << USB_OTG_HPTXSTS_PTXQSAV_Pos    ;/*!< 0x00200000 */
USB_OTG_HPTXSTS_PTXQSAV_6                EQU		0x40 << USB_OTG_HPTXSTS_PTXQSAV_Pos    ;/*!< 0x00400000 */
USB_OTG_HPTXSTS_PTXQSAV_7                EQU		0x80 << USB_OTG_HPTXSTS_PTXQSAV_Pos    ;/*!< 0x00800000 */

USB_OTG_HPTXSTS_PTXQTOP_Pos              EQU		24                         
USB_OTG_HPTXSTS_PTXQTOP_Msk              EQU		0xFF << USB_OTG_HPTXSTS_PTXQTOP_Pos    ;/*!< 0xFF000000 */
USB_OTG_HPTXSTS_PTXQTOP                  EQU		USB_OTG_HPTXSTS_PTXQTOP_Msk   ;/*!< Top of the periodic transmit request queue */
USB_OTG_HPTXSTS_PTXQTOP_0                EQU		0x01 << USB_OTG_HPTXSTS_PTXQTOP_Pos    ;/*!< 0x01000000 */
USB_OTG_HPTXSTS_PTXQTOP_1                EQU		0x02 << USB_OTG_HPTXSTS_PTXQTOP_Pos    ;/*!< 0x02000000 */
USB_OTG_HPTXSTS_PTXQTOP_2                EQU		0x04 << USB_OTG_HPTXSTS_PTXQTOP_Pos    ;/*!< 0x04000000 */
USB_OTG_HPTXSTS_PTXQTOP_3                EQU		0x08 << USB_OTG_HPTXSTS_PTXQTOP_Pos    ;/*!< 0x08000000 */
USB_OTG_HPTXSTS_PTXQTOP_4                EQU		0x10 << USB_OTG_HPTXSTS_PTXQTOP_Pos    ;/*!< 0x10000000 */
USB_OTG_HPTXSTS_PTXQTOP_5                EQU		0x20 << USB_OTG_HPTXSTS_PTXQTOP_Pos    ;/*!< 0x20000000 */
USB_OTG_HPTXSTS_PTXQTOP_6                EQU		0x40 << USB_OTG_HPTXSTS_PTXQTOP_Pos    ;/*!< 0x40000000 */
USB_OTG_HPTXSTS_PTXQTOP_7                EQU		0x80 << USB_OTG_HPTXSTS_PTXQTOP_Pos    ;/*!< 0x80000000 */

USB_OTG_HAINT			                 EQU		0x414
;/********************  Bit definition for USB_OTG_HAINT register  ********************/
USB_OTG_HAINT_HAINT_Pos                  EQU		0                          
USB_OTG_HAINT_HAINT_Msk                  EQU		0xFFFF << USB_OTG_HAINT_HAINT_Pos    ;/*!< 0x0000FFFF */
USB_OTG_HAINT_HAINT                      EQU		USB_OTG_HAINT_HAINT_Msk       ;/*!< Channel interrupts */

USB_OTG_DOEPMSK			                 EQU		0x814
;/********************  Bit definition for USB_OTG_DOEPMSK register  ********************/
USB_OTG_DOEPMSK_XFRCM_Pos                EQU		0                          
USB_OTG_DOEPMSK_XFRCM_Msk                EQU		0x1 << USB_OTG_DOEPMSK_XFRCM_Pos    ;/*!< 0x00000001 */
USB_OTG_DOEPMSK_XFRCM                    EQU		USB_OTG_DOEPMSK_XFRCM_Msk     ;/*!< Transfer completed interrupt mask */
USB_OTG_DOEPMSK_EPDM_Pos                 EQU		1                          
USB_OTG_DOEPMSK_EPDM_Msk                 EQU		0x1 << USB_OTG_DOEPMSK_EPDM_Pos    ;/*!< 0x00000002 */
USB_OTG_DOEPMSK_EPDM                     EQU		USB_OTG_DOEPMSK_EPDM_Msk      ;/*!< Endpoint disabled interrupt mask               */
USB_OTG_DOEPMSK_STUPM_Pos                EQU		3                          
USB_OTG_DOEPMSK_STUPM_Msk                EQU		0x1 << USB_OTG_DOEPMSK_STUPM_Pos    ;/*!< 0x00000008 */
USB_OTG_DOEPMSK_STUPM                    EQU		USB_OTG_DOEPMSK_STUPM_Msk     ;/*!< SETUP phase done mask                          */
USB_OTG_DOEPMSK_OTEPDM_Pos               EQU		4                          
USB_OTG_DOEPMSK_OTEPDM_Msk               EQU		0x1 << USB_OTG_DOEPMSK_OTEPDM_Pos    ;/*!< 0x00000010 */
USB_OTG_DOEPMSK_OTEPDM                   EQU		USB_OTG_DOEPMSK_OTEPDM_Msk    ;/*!< OUT token received when endpoint disabled mask */
USB_OTG_DOEPMSK_B2BSTUP_Pos              EQU		6                          
USB_OTG_DOEPMSK_B2BSTUP_Msk              EQU		0x1 << USB_OTG_DOEPMSK_B2BSTUP_Pos    ;/*!< 0x00000040 */
USB_OTG_DOEPMSK_B2BSTUP                  EQU		USB_OTG_DOEPMSK_B2BSTUP_Msk   ;/*!< Back-to-back SETUP packets received mask */
USB_OTG_DOEPMSK_OPEM_Pos                 EQU		8                          
USB_OTG_DOEPMSK_OPEM_Msk                 EQU		0x1 << USB_OTG_DOEPMSK_OPEM_Pos    ;/*!< 0x00000100 */
USB_OTG_DOEPMSK_OPEM                     EQU		USB_OTG_DOEPMSK_OPEM_Msk      ;/*!< OUT packet error mask                          */
USB_OTG_DOEPMSK_BOIM_Pos                 EQU		9                          
USB_OTG_DOEPMSK_BOIM_Msk                 EQU		0x1 << USB_OTG_DOEPMSK_BOIM_Pos    ;/*!< 0x00000200 */
USB_OTG_DOEPMSK_BOIM                     EQU		USB_OTG_DOEPMSK_BOIM_Msk      ;/*!< BNA interrupt mask                             */

USB_OTG_GINTSTS			                 EQU		0x14
;/********************  Bit definition for USB_OTG_GINTSTS register  ********************/
USB_OTG_GINTSTS_CMOD_Pos                 EQU		0                          
USB_OTG_GINTSTS_CMOD_Msk                 EQU		0x1 << USB_OTG_GINTSTS_CMOD_Pos    ;/*!< 0x00000001 */
USB_OTG_GINTSTS_CMOD                     EQU		USB_OTG_GINTSTS_CMOD_Msk      ;/*!< Current mode of operation                      */
USB_OTG_GINTSTS_MMIS_Pos                 EQU		1                          
USB_OTG_GINTSTS_MMIS_Msk                 EQU		0x1 << USB_OTG_GINTSTS_MMIS_Pos    ;/*!< 0x00000002 */
USB_OTG_GINTSTS_MMIS                     EQU		USB_OTG_GINTSTS_MMIS_Msk      ;/*!< Mode mismatch interrupt                        */
USB_OTG_GINTSTS_OTGINT_Pos               EQU		2                          
USB_OTG_GINTSTS_OTGINT_Msk               EQU		0x1 << USB_OTG_GINTSTS_OTGINT_Pos    ;/*!< 0x00000004 */
USB_OTG_GINTSTS_OTGINT                   EQU		USB_OTG_GINTSTS_OTGINT_Msk    ;/*!< OTG interrupt                                  */
USB_OTG_GINTSTS_SOF_Pos                  EQU		3                          
USB_OTG_GINTSTS_SOF_Msk                  EQU		0x1 << USB_OTG_GINTSTS_SOF_Pos    ;/*!< 0x00000008 */
USB_OTG_GINTSTS_SOF                      EQU		USB_OTG_GINTSTS_SOF_Msk       ;/*!< Start of frame                                 */
USB_OTG_GINTSTS_RXFLVL_Pos               EQU		4                          
USB_OTG_GINTSTS_RXFLVL_Msk               EQU		0x1 << USB_OTG_GINTSTS_RXFLVL_Pos    ;/*!< 0x00000010 */
USB_OTG_GINTSTS_RXFLVL                   EQU		USB_OTG_GINTSTS_RXFLVL_Msk    ;/*!< RxFIFO nonempty                                */
USB_OTG_GINTSTS_NPTXFE_Pos               EQU		5                          
USB_OTG_GINTSTS_NPTXFE_Msk               EQU		0x1 << USB_OTG_GINTSTS_NPTXFE_Pos    ;/*!< 0x00000020 */
USB_OTG_GINTSTS_NPTXFE                   EQU		USB_OTG_GINTSTS_NPTXFE_Msk    ;/*!< Nonperiodic TxFIFO empty                       */
USB_OTG_GINTSTS_GINAKEFF_Pos             EQU		6                          
USB_OTG_GINTSTS_GINAKEFF_Msk             EQU		0x1 << USB_OTG_GINTSTS_GINAKEFF_Pos    ;/*!< 0x00000040 */
USB_OTG_GINTSTS_GINAKEFF                 EQU		USB_OTG_GINTSTS_GINAKEFF_Msk  ;/*!< Global IN nonperiodic NAK effective            */
USB_OTG_GINTSTS_BOUTNAKEFF_Pos           EQU		7                          
USB_OTG_GINTSTS_BOUTNAKEFF_Msk           EQU		0x1 << USB_OTG_GINTSTS_BOUTNAKEFF_Pos    ;/*!< 0x00000080 */
USB_OTG_GINTSTS_BOUTNAKEFF               EQU		USB_OTG_GINTSTS_BOUTNAKEFF_Msk ;/*!< Global OUT NAK effective                       */
USB_OTG_GINTSTS_ESUSP_Pos                EQU		10                         
USB_OTG_GINTSTS_ESUSP_Msk                EQU		0x1 << USB_OTG_GINTSTS_ESUSP_Pos    ;/*!< 0x00000400 */
USB_OTG_GINTSTS_ESUSP                    EQU		USB_OTG_GINTSTS_ESUSP_Msk     ;/*!< Early suspend                                  */
USB_OTG_GINTSTS_USBSUSP_Pos              EQU		11                         
USB_OTG_GINTSTS_USBSUSP_Msk              EQU		0x1 << USB_OTG_GINTSTS_USBSUSP_Pos    ;/*!< 0x00000800 */
USB_OTG_GINTSTS_USBSUSP                  EQU		USB_OTG_GINTSTS_USBSUSP_Msk   ;/*!< USB suspend                                    */
USB_OTG_GINTSTS_USBRST_Pos               EQU		12                         
USB_OTG_GINTSTS_USBRST_Msk               EQU		0x1 << USB_OTG_GINTSTS_USBRST_Pos    ;/*!< 0x00001000 */
USB_OTG_GINTSTS_USBRST                   EQU		USB_OTG_GINTSTS_USBRST_Msk    ;/*!< USB reset                                      */
USB_OTG_GINTSTS_ENUMDNE_Pos              EQU		13                         
USB_OTG_GINTSTS_ENUMDNE_Msk              EQU		0x1 << USB_OTG_GINTSTS_ENUMDNE_Pos    ;/*!< 0x00002000 */
USB_OTG_GINTSTS_ENUMDNE                  EQU		USB_OTG_GINTSTS_ENUMDNE_Msk   ;/*!< Enumeration done                               */
USB_OTG_GINTSTS_ISOODRP_Pos              EQU		14                         
USB_OTG_GINTSTS_ISOODRP_Msk              EQU		0x1 << USB_OTG_GINTSTS_ISOODRP_Pos    ;/*!< 0x00004000 */
USB_OTG_GINTSTS_ISOODRP                  EQU		USB_OTG_GINTSTS_ISOODRP_Msk   ;/*!< Isochronous OUT packet dropped interrupt       */
USB_OTG_GINTSTS_EOPF_Pos                 EQU		15                         
USB_OTG_GINTSTS_EOPF_Msk                 EQU		0x1 << USB_OTG_GINTSTS_EOPF_Pos    ;/*!< 0x00008000 */
USB_OTG_GINTSTS_EOPF                     EQU		USB_OTG_GINTSTS_EOPF_Msk      ;/*!< End of periodic frame interrupt                */
USB_OTG_GINTSTS_IEPINT_Pos               EQU		18                         
USB_OTG_GINTSTS_IEPINT_Msk               EQU		0x1 << USB_OTG_GINTSTS_IEPINT_Pos    ;/*!< 0x00040000 */
USB_OTG_GINTSTS_IEPINT                   EQU		USB_OTG_GINTSTS_IEPINT_Msk    ;/*!< IN endpoint interrupt                          */
USB_OTG_GINTSTS_OEPINT_Pos               EQU		19                         
USB_OTG_GINTSTS_OEPINT_Msk               EQU		0x1 << USB_OTG_GINTSTS_OEPINT_Pos    ;/*!< 0x00080000 */
USB_OTG_GINTSTS_OEPINT                   EQU		USB_OTG_GINTSTS_OEPINT_Msk    ;/*!< OUT endpoint interrupt                         */
USB_OTG_GINTSTS_IISOIXFR_Pos             EQU		20                         
USB_OTG_GINTSTS_IISOIXFR_Msk             EQU		0x1 << USB_OTG_GINTSTS_IISOIXFR_Pos    ;/*!< 0x00100000 */
USB_OTG_GINTSTS_IISOIXFR                 EQU		USB_OTG_GINTSTS_IISOIXFR_Msk  ;/*!< Incomplete isochronous IN transfer             */
USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Pos    EQU		21                         
USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Msk    EQU		0x1 << USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Pos    ;/*!< 0x00200000 */
USB_OTG_GINTSTS_PXFR_INCOMPISOOUT        EQU		USB_OTG_GINTSTS_PXFR_INCOMPISOOUT_Msk ;/*!< Incomplete periodic transfer                   */
USB_OTG_GINTSTS_DATAFSUSP_Pos            EQU		22                         
USB_OTG_GINTSTS_DATAFSUSP_Msk            EQU		0x1 << USB_OTG_GINTSTS_DATAFSUSP_Pos    ;/*!< 0x00400000 */
USB_OTG_GINTSTS_DATAFSUSP                EQU		USB_OTG_GINTSTS_DATAFSUSP_Msk ;/*!< Data fetch suspended                           */
USB_OTG_GINTSTS_HPRTINT_Pos              EQU		24                         
USB_OTG_GINTSTS_HPRTINT_Msk              EQU		0x1 << USB_OTG_GINTSTS_HPRTINT_Pos    ;/*!< 0x01000000 */
USB_OTG_GINTSTS_HPRTINT                  EQU		USB_OTG_GINTSTS_HPRTINT_Msk   ;/*!< Host port interrupt                            */
USB_OTG_GINTSTS_HCINT_Pos                EQU		25                         
USB_OTG_GINTSTS_HCINT_Msk                EQU		0x1 << USB_OTG_GINTSTS_HCINT_Pos    ;/*!< 0x02000000 */
USB_OTG_GINTSTS_HCINT                    EQU		USB_OTG_GINTSTS_HCINT_Msk     ;/*!< Host channels interrupt                        */
USB_OTG_GINTSTS_PTXFE_Pos                EQU		26                         
USB_OTG_GINTSTS_PTXFE_Msk                EQU		0x1 << USB_OTG_GINTSTS_PTXFE_Pos    ;/*!< 0x04000000 */
USB_OTG_GINTSTS_PTXFE                    EQU		USB_OTG_GINTSTS_PTXFE_Msk     ;/*!< Periodic TxFIFO empty                          */
USB_OTG_GINTSTS_CIDSCHG_Pos              EQU		28                         
USB_OTG_GINTSTS_CIDSCHG_Msk              EQU		0x1 << USB_OTG_GINTSTS_CIDSCHG_Pos    ;/*!< 0x10000000 */
USB_OTG_GINTSTS_CIDSCHG                  EQU		USB_OTG_GINTSTS_CIDSCHG_Msk   ;/*!< Connector ID status change                     */
USB_OTG_GINTSTS_DISCINT_Pos              EQU		29                         
USB_OTG_GINTSTS_DISCINT_Msk              EQU		0x1 << USB_OTG_GINTSTS_DISCINT_Pos    ;/*!< 0x20000000 */
USB_OTG_GINTSTS_DISCINT                  EQU		USB_OTG_GINTSTS_DISCINT_Msk   ;/*!< Disconnect detected interrupt                  */
USB_OTG_GINTSTS_SRQINT_Pos               EQU		30                         
USB_OTG_GINTSTS_SRQINT_Msk               EQU		0x1 << USB_OTG_GINTSTS_SRQINT_Pos    ;/*!< 0x40000000 */
USB_OTG_GINTSTS_SRQINT                   EQU		USB_OTG_GINTSTS_SRQINT_Msk    ;/*!< Session request/new session detected interrupt */
USB_OTG_GINTSTS_WKUINT_Pos               EQU		31                         
USB_OTG_GINTSTS_WKUINT_Msk               EQU		0x1 << USB_OTG_GINTSTS_WKUINT_Pos    ;/*!< 0x80000000 */
USB_OTG_GINTSTS_WKUINT                   EQU		USB_OTG_GINTSTS_WKUINT_Msk    ;/*!< Resume/remote wakeup detected interrupt        */

USB_OTG_GINTMSK			                 EQU		0x18
;/********************  Bit definition for USB_OTG_GINTMSK register  ********************/
USB_OTG_GINTMSK_MMISM_Pos                EQU		1                          
USB_OTG_GINTMSK_MMISM_Msk                EQU		0x1 << USB_OTG_GINTMSK_MMISM_Pos    ;/*!< 0x00000002 */
USB_OTG_GINTMSK_MMISM                    EQU		USB_OTG_GINTMSK_MMISM_Msk     ;/*!< Mode mismatch interrupt mask                        */
USB_OTG_GINTMSK_OTGINT_Pos               EQU		2                          
USB_OTG_GINTMSK_OTGINT_Msk               EQU		0x1 << USB_OTG_GINTMSK_OTGINT_Pos    ;/*!< 0x00000004 */
USB_OTG_GINTMSK_OTGINT                   EQU		USB_OTG_GINTMSK_OTGINT_Msk    ;/*!< OTG interrupt mask                                  */
USB_OTG_GINTMSK_SOFM_Pos                 EQU		3                          
USB_OTG_GINTMSK_SOFM_Msk                 EQU		0x1 << USB_OTG_GINTMSK_SOFM_Pos    ;/*!< 0x00000008 */
USB_OTG_GINTMSK_SOFM                     EQU		USB_OTG_GINTMSK_SOFM_Msk      ;/*!< Start of frame mask                                 */
USB_OTG_GINTMSK_RXFLVLM_Pos              EQU		4                          
USB_OTG_GINTMSK_RXFLVLM_Msk              EQU		0x1 << USB_OTG_GINTMSK_RXFLVLM_Pos    ;/*!< 0x00000010 */
USB_OTG_GINTMSK_RXFLVLM                  EQU		USB_OTG_GINTMSK_RXFLVLM_Msk   ;/*!< Receive FIFO nonempty mask                          */
USB_OTG_GINTMSK_NPTXFEM_Pos              EQU		5                          
USB_OTG_GINTMSK_NPTXFEM_Msk              EQU		0x1 << USB_OTG_GINTMSK_NPTXFEM_Pos    ;/*!< 0x00000020 */
USB_OTG_GINTMSK_NPTXFEM                  EQU		USB_OTG_GINTMSK_NPTXFEM_Msk   ;/*!< Nonperiodic TxFIFO empty mask                       */
USB_OTG_GINTMSK_GINAKEFFM_Pos            EQU		6                          
USB_OTG_GINTMSK_GINAKEFFM_Msk            EQU		0x1 << USB_OTG_GINTMSK_GINAKEFFM_Pos    ;/*!< 0x00000040 */
USB_OTG_GINTMSK_GINAKEFFM                EQU		USB_OTG_GINTMSK_GINAKEFFM_Msk ;/*!< Global nonperiodic IN NAK effective mask            */
USB_OTG_GINTMSK_GONAKEFFM_Pos            EQU		7                          
USB_OTG_GINTMSK_GONAKEFFM_Msk            EQU		0x1 << USB_OTG_GINTMSK_GONAKEFFM_Pos    ;/*!< 0x00000080 */
USB_OTG_GINTMSK_GONAKEFFM                EQU		USB_OTG_GINTMSK_GONAKEFFM_Msk ;/*!< Global OUT NAK effective mask                       */
USB_OTG_GINTMSK_ESUSPM_Pos               EQU		10                         
USB_OTG_GINTMSK_ESUSPM_Msk               EQU		0x1 << USB_OTG_GINTMSK_ESUSPM_Pos    ;/*!< 0x00000400 */
USB_OTG_GINTMSK_ESUSPM                   EQU		USB_OTG_GINTMSK_ESUSPM_Msk    ;/*!< Early suspend mask                                  */
USB_OTG_GINTMSK_USBSUSPM_Pos             EQU		11                         
USB_OTG_GINTMSK_USBSUSPM_Msk             EQU		0x1 << USB_OTG_GINTMSK_USBSUSPM_Pos    ;/*!< 0x00000800 */
USB_OTG_GINTMSK_USBSUSPM                 EQU		USB_OTG_GINTMSK_USBSUSPM_Msk  ;/*!< USB suspend mask                                    */
USB_OTG_GINTMSK_USBRST_Pos               EQU		12                         
USB_OTG_GINTMSK_USBRST_Msk               EQU		0x1 << USB_OTG_GINTMSK_USBRST_Pos    ;/*!< 0x00001000 */
USB_OTG_GINTMSK_USBRST                   EQU		USB_OTG_GINTMSK_USBRST_Msk    ;/*!< USB reset mask                                      */
USB_OTG_GINTMSK_ENUMDNEM_Pos             EQU		13                         
USB_OTG_GINTMSK_ENUMDNEM_Msk             EQU		0x1 << USB_OTG_GINTMSK_ENUMDNEM_Pos    ;/*!< 0x00002000 */
USB_OTG_GINTMSK_ENUMDNEM                 EQU		USB_OTG_GINTMSK_ENUMDNEM_Msk  ;/*!< Enumeration done mask                               */
USB_OTG_GINTMSK_ISOODRPM_Pos             EQU		14                         
USB_OTG_GINTMSK_ISOODRPM_Msk             EQU		0x1 << USB_OTG_GINTMSK_ISOODRPM_Pos    ;/*!< 0x00004000 */
USB_OTG_GINTMSK_ISOODRPM                 EQU		USB_OTG_GINTMSK_ISOODRPM_Msk  ;/*!< Isochronous OUT packet dropped interrupt mask       */
USB_OTG_GINTMSK_EOPFM_Pos                EQU		15                         
USB_OTG_GINTMSK_EOPFM_Msk                EQU		0x1 << USB_OTG_GINTMSK_EOPFM_Pos    ;/*!< 0x00008000 */
USB_OTG_GINTMSK_EOPFM                    EQU		USB_OTG_GINTMSK_EOPFM_Msk     ;/*!< End of periodic frame interrupt mask                */
USB_OTG_GINTMSK_EPMISM_Pos               EQU		17                         
USB_OTG_GINTMSK_EPMISM_Msk               EQU		0x1 << USB_OTG_GINTMSK_EPMISM_Pos    ;/*!< 0x00020000 */
USB_OTG_GINTMSK_EPMISM                   EQU		USB_OTG_GINTMSK_EPMISM_Msk    ;/*!< Endpoint mismatch interrupt mask                    */
USB_OTG_GINTMSK_IEPINT_Pos               EQU		18                         
USB_OTG_GINTMSK_IEPINT_Msk               EQU		0x1 << USB_OTG_GINTMSK_IEPINT_Pos    ;/*!< 0x00040000 */
USB_OTG_GINTMSK_IEPINT                   EQU		USB_OTG_GINTMSK_IEPINT_Msk    ;/*!< IN endpoints interrupt mask                         */
USB_OTG_GINTMSK_OEPINT_Pos               EQU		19                         
USB_OTG_GINTMSK_OEPINT_Msk               EQU		0x1 << USB_OTG_GINTMSK_OEPINT_Pos    ;/*!< 0x00080000 */
USB_OTG_GINTMSK_OEPINT                   EQU		USB_OTG_GINTMSK_OEPINT_Msk    ;/*!< OUT endpoints interrupt mask                        */
USB_OTG_GINTMSK_IISOIXFRM_Pos            EQU		20                         
USB_OTG_GINTMSK_IISOIXFRM_Msk            EQU		0x1 << USB_OTG_GINTMSK_IISOIXFRM_Pos    ;/*!< 0x00100000 */
USB_OTG_GINTMSK_IISOIXFRM                EQU		USB_OTG_GINTMSK_IISOIXFRM_Msk ;/*!< Incomplete isochronous IN transfer mask             */
USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Pos      EQU		21                         
USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Msk      EQU		0x1 << USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Pos    ;/*!< 0x00200000 */
USB_OTG_GINTMSK_PXFRM_IISOOXFRM          EQU		USB_OTG_GINTMSK_PXFRM_IISOOXFRM_Msk ;/*!< Incomplete periodic transfer mask                   */
USB_OTG_GINTMSK_FSUSPM_Pos               EQU		22                         
USB_OTG_GINTMSK_FSUSPM_Msk               EQU		0x1 << USB_OTG_GINTMSK_FSUSPM_Pos    ;/*!< 0x00400000 */
USB_OTG_GINTMSK_FSUSPM                   EQU		USB_OTG_GINTMSK_FSUSPM_Msk    ;/*!< Data fetch suspended mask                           */
USB_OTG_GINTMSK_PRTIM_Pos                EQU		24                         
USB_OTG_GINTMSK_PRTIM_Msk                EQU		0x1 << USB_OTG_GINTMSK_PRTIM_Pos    ;/*!< 0x01000000 */
USB_OTG_GINTMSK_PRTIM                    EQU		USB_OTG_GINTMSK_PRTIM_Msk     ;/*!< Host port interrupt mask                            */
USB_OTG_GINTMSK_HCIM_Pos                 EQU		25                         
USB_OTG_GINTMSK_HCIM_Msk                 EQU		0x1 << USB_OTG_GINTMSK_HCIM_Pos    ;/*!< 0x02000000 */
USB_OTG_GINTMSK_HCIM                     EQU		USB_OTG_GINTMSK_HCIM_Msk      ;/*!< Host channels interrupt mask                        */
USB_OTG_GINTMSK_PTXFEM_Pos               EQU		26                         
USB_OTG_GINTMSK_PTXFEM_Msk               EQU		0x1 << USB_OTG_GINTMSK_PTXFEM_Pos    ;/*!< 0x04000000 */
USB_OTG_GINTMSK_PTXFEM                   EQU		USB_OTG_GINTMSK_PTXFEM_Msk    ;/*!< Periodic TxFIFO empty mask                          */
USB_OTG_GINTMSK_CIDSCHGM_Pos             EQU		28                         
USB_OTG_GINTMSK_CIDSCHGM_Msk             EQU		0x1 << USB_OTG_GINTMSK_CIDSCHGM_Pos    ;/*!< 0x10000000 */
USB_OTG_GINTMSK_CIDSCHGM                 EQU		USB_OTG_GINTMSK_CIDSCHGM_Msk  ;/*!< Connector ID status change mask                     */
USB_OTG_GINTMSK_DISCINT_Pos              EQU		29                         
USB_OTG_GINTMSK_DISCINT_Msk              EQU		0x1 << USB_OTG_GINTMSK_DISCINT_Pos    ;/*!< 0x20000000 */
USB_OTG_GINTMSK_DISCINT                  EQU		USB_OTG_GINTMSK_DISCINT_Msk   ;/*!< Disconnect detected interrupt mask                  */
USB_OTG_GINTMSK_SRQIM_Pos                EQU		30                         
USB_OTG_GINTMSK_SRQIM_Msk                EQU		0x1 << USB_OTG_GINTMSK_SRQIM_Pos    ;/*!< 0x40000000 */
USB_OTG_GINTMSK_SRQIM                    EQU		USB_OTG_GINTMSK_SRQIM_Msk     ;/*!< Session request/new session detected interrupt mask */
USB_OTG_GINTMSK_WUIM_Pos                 EQU		31                         
USB_OTG_GINTMSK_WUIM_Msk                 EQU		0x1 << USB_OTG_GINTMSK_WUIM_Pos    ;/*!< 0x80000000 */
USB_OTG_GINTMSK_WUIM                     EQU		USB_OTG_GINTMSK_WUIM_Msk      ;/*!< Resume/remote wakeup detected interrupt mask        */

USB_OTG_DAINT			                 EQU		0x818
;/********************  Bit definition for USB_OTG_DAINT register  ********************/
USB_OTG_DAINT_IEPINT_Pos                 EQU		0                          
USB_OTG_DAINT_IEPINT_Msk                 EQU		0xFFFF << USB_OTG_DAINT_IEPINT_Pos    ;/*!< 0x0000FFFF */
USB_OTG_DAINT_IEPINT                     EQU		USB_OTG_DAINT_IEPINT_Msk      ;/*!< IN endpoint interrupt bits  */
USB_OTG_DAINT_OEPINT_Pos                 EQU		16                         
USB_OTG_DAINT_OEPINT_Msk                 EQU		0xFFFF << USB_OTG_DAINT_OEPINT_Pos    ;/*!< 0xFFFF0000 */
USB_OTG_DAINT_OEPINT                     EQU		USB_OTG_DAINT_OEPINT_Msk      ;/*!< OUT endpoint interrupt bits */

USB_OTG_HAINTMSK			             EQU		0x418
;/********************  Bit definition for USB_OTG_HAINTMSK register  ********************/
USB_OTG_HAINTMSK_HAINTM_Pos              EQU		0                          
USB_OTG_HAINTMSK_HAINTM_Msk              EQU		0xFFFF << USB_OTG_HAINTMSK_HAINTM_Pos    ;/*!< 0x0000FFFF */
USB_OTG_HAINTMSK_HAINTM                  EQU		USB_OTG_HAINTMSK_HAINTM_Msk   ;/*!< Channel interrupt mask */

USB_OTG_GRXSTSP			                 EQU		0x20
;/********************  Bit definition for USB_OTG_GRXSTSP register  ********************/
USB_OTG_GRXSTSP_EPNUM_Pos                EQU		0                          
USB_OTG_GRXSTSP_EPNUM_Msk                EQU		0xF << USB_OTG_GRXSTSP_EPNUM_Pos    ;/*!< 0x0000000F */
USB_OTG_GRXSTSP_EPNUM                    EQU		USB_OTG_GRXSTSP_EPNUM_Msk     ;/*!< IN EP interrupt mask bits  */
USB_OTG_GRXSTSP_BCNT_Pos                 EQU		4                          
USB_OTG_GRXSTSP_BCNT_Msk                 EQU		0x7FF << USB_OTG_GRXSTSP_BCNT_Pos    ;/*!< 0x00007FF0 */
USB_OTG_GRXSTSP_BCNT                     EQU		USB_OTG_GRXSTSP_BCNT_Msk      ;/*!< OUT EP interrupt mask bits */
USB_OTG_GRXSTSP_DPID_Pos                 EQU		15                         
USB_OTG_GRXSTSP_DPID_Msk                 EQU		0x3 << USB_OTG_GRXSTSP_DPID_Pos    ;/*!< 0x00018000 */
USB_OTG_GRXSTSP_DPID                     EQU		USB_OTG_GRXSTSP_DPID_Msk      ;/*!< OUT EP interrupt mask bits */
USB_OTG_GRXSTSP_PKTSTS_Pos               EQU		17                         
USB_OTG_GRXSTSP_PKTSTS_Msk               EQU		0xF << USB_OTG_GRXSTSP_PKTSTS_Pos    ;/*!< 0x001E0000 */
USB_OTG_GRXSTSP_PKTSTS                   EQU		USB_OTG_GRXSTSP_PKTSTS_Msk    ;/*!< OUT EP interrupt mask bits */

USB_OTG_DAINTMSK			             EQU		0x81C
;/********************  Bit definition for USB_OTG_DAINTMSK register  ********************/
USB_OTG_DAINTMSK_IEPM_Pos                EQU		0                          
USB_OTG_DAINTMSK_IEPM_Msk                EQU		0xFFFF << USB_OTG_DAINTMSK_IEPM_Pos    ;/*!< 0x0000FFFF */
USB_OTG_DAINTMSK_IEPM                    EQU		USB_OTG_DAINTMSK_IEPM_Msk     ;/*!< IN EP interrupt mask bits */
USB_OTG_DAINTMSK_OEPM_Pos                EQU		16                         
USB_OTG_DAINTMSK_OEPM_Msk                EQU		0xFFFF << USB_OTG_DAINTMSK_OEPM_Pos    ;/*!< 0xFFFF0000 */
USB_OTG_DAINTMSK_OEPM                    EQU		USB_OTG_DAINTMSK_OEPM_Msk     ;/*!< OUT EP interrupt mask bits */

USB_OTG_GRXFSIZ			                 EQU		0x24
;/********************  Bit definition for USB_OTG_GRXFSIZ register  ********************/
USB_OTG_GRXFSIZ_RXFD_Pos                 EQU		0                          
USB_OTG_GRXFSIZ_RXFD_Msk                 EQU		0xFFFF << USB_OTG_GRXFSIZ_RXFD_Pos    ;/*!< 0x0000FFFF */
USB_OTG_GRXFSIZ_RXFD                     EQU		USB_OTG_GRXFSIZ_RXFD_Msk      ;/*!< RxFIFO depth */

USB_OTG_DVBUSDIS			             EQU		0x828
;/********************  Bit definition for USB_OTG_DVBUSDIS register  ********************/
USB_OTG_DVBUSDIS_VBUSDT_Pos              EQU		0                          
USB_OTG_DVBUSDIS_VBUSDT_Msk              EQU		0xFFFF << USB_OTG_DVBUSDIS_VBUSDT_Pos    ;/*!< 0x0000FFFF */
USB_OTG_DVBUSDIS_VBUSDT                  EQU		USB_OTG_DVBUSDIS_VBUSDT_Msk   ;/*!< Device VBUS discharge time */

USB_OTG_DVBUSPULSE			             EQU		0x82C
;/********************  Bit definition forUSB_OTG_DVBUSPULSE register  ********************/
USB_OTG_DVBUSPULSE_DVBUSP_Pos            EQU		0                          
USB_OTG_DVBUSPULSE_DVBUSP_Msk            EQU		0xFFF << USB_OTG_DVBUSPULSE_DVBUSP_Pos    ;/*!< 0x00000FFF */
USB_OTG_DVBUSPULSE_DVBUSP                EQU		USB_OTG_DVBUSPULSE_DVBUSP_Msk ;/*!< Device VBUS pulsing time */

USB_OTG_GNPTXSTS			             EQU		0x2C
;/********************  Bit definition for USB_OTG_GNPTXSTS register  ********************/
USB_OTG_GNPTXSTS_NPTXFSAV_Pos            EQU		0                          
USB_OTG_GNPTXSTS_NPTXFSAV_Msk            EQU		0xFFFF << USB_OTG_GNPTXSTS_NPTXFSAV_Pos    ;/*!< 0x0000FFFF */
USB_OTG_GNPTXSTS_NPTXFSAV                EQU		USB_OTG_GNPTXSTS_NPTXFSAV_Msk ;/*!< Nonperiodic TxFIFO space available */

USB_OTG_GNPTXSTS_NPTQXSAV_Pos            EQU		16                         
USB_OTG_GNPTXSTS_NPTQXSAV_Msk            EQU		0xFF << USB_OTG_GNPTXSTS_NPTQXSAV_Pos    ;/*!< 0x00FF0000 */
USB_OTG_GNPTXSTS_NPTQXSAV                EQU		USB_OTG_GNPTXSTS_NPTQXSAV_Msk ;/*!< Nonperiodic transmit request queue space available */
USB_OTG_GNPTXSTS_NPTQXSAV_0              EQU		0x01 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos    ;/*!< 0x00010000 */
USB_OTG_GNPTXSTS_NPTQXSAV_1              EQU		0x02 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos    ;/*!< 0x00020000 */
USB_OTG_GNPTXSTS_NPTQXSAV_2              EQU		0x04 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos    ;/*!< 0x00040000 */
USB_OTG_GNPTXSTS_NPTQXSAV_3              EQU		0x08 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos    ;/*!< 0x00080000 */
USB_OTG_GNPTXSTS_NPTQXSAV_4              EQU		0x10 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos    ;/*!< 0x00100000 */
USB_OTG_GNPTXSTS_NPTQXSAV_5              EQU		0x20 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos    ;/*!< 0x00200000 */
USB_OTG_GNPTXSTS_NPTQXSAV_6              EQU		0x40 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos    ;/*!< 0x00400000 */
USB_OTG_GNPTXSTS_NPTQXSAV_7              EQU		0x80 << USB_OTG_GNPTXSTS_NPTQXSAV_Pos    ;/*!< 0x00800000 */

USB_OTG_GNPTXSTS_NPTXQTOP_Pos            EQU		24                         
USB_OTG_GNPTXSTS_NPTXQTOP_Msk            EQU		0x7F << USB_OTG_GNPTXSTS_NPTXQTOP_Pos    ;/*!< 0x7F000000 */
USB_OTG_GNPTXSTS_NPTXQTOP                EQU		USB_OTG_GNPTXSTS_NPTXQTOP_Msk ;/*!< Top of the nonperiodic transmit request queue */
USB_OTG_GNPTXSTS_NPTXQTOP_0              EQU		0x01 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos    ;/*!< 0x01000000 */
USB_OTG_GNPTXSTS_NPTXQTOP_1              EQU		0x02 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos    ;/*!< 0x02000000 */
USB_OTG_GNPTXSTS_NPTXQTOP_2              EQU		0x04 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos    ;/*!< 0x04000000 */
USB_OTG_GNPTXSTS_NPTXQTOP_3              EQU		0x08 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos    ;/*!< 0x08000000 */
USB_OTG_GNPTXSTS_NPTXQTOP_4              EQU		0x10 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos    ;/*!< 0x10000000 */
USB_OTG_GNPTXSTS_NPTXQTOP_5              EQU		0x20 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos    ;/*!< 0x20000000 */
USB_OTG_GNPTXSTS_NPTXQTOP_6              EQU		0x40 << USB_OTG_GNPTXSTS_NPTXQTOP_Pos    ;/*!< 0x40000000 */

USB_OTG_DTHRCTL					         EQU		0x830
;/********************  Bit definition for USB_OTG_DTHRCTL register  ********************/
USB_OTG_DTHRCTL_NONISOTHREN_Pos          EQU		0                          
USB_OTG_DTHRCTL_NONISOTHREN_Msk          EQU		0x1 << USB_OTG_DTHRCTL_NONISOTHREN_Pos    ;/*!< 0x00000001 */
USB_OTG_DTHRCTL_NONISOTHREN              EQU		USB_OTG_DTHRCTL_NONISOTHREN_Msk ;/*!< Nonisochronous IN endpoints threshold enable */
USB_OTG_DTHRCTL_ISOTHREN_Pos             EQU		1                          
USB_OTG_DTHRCTL_ISOTHREN_Msk             EQU		0x1 << USB_OTG_DTHRCTL_ISOTHREN_Pos    ;/*!< 0x00000002 */
USB_OTG_DTHRCTL_ISOTHREN                 EQU		USB_OTG_DTHRCTL_ISOTHREN_Msk  ;/*!< ISO IN endpoint threshold enable */

USB_OTG_DTHRCTL_TXTHRLEN_Pos             EQU		2                          
USB_OTG_DTHRCTL_TXTHRLEN_Msk             EQU		0x1FF << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x000007FC */
USB_OTG_DTHRCTL_TXTHRLEN                 EQU		USB_OTG_DTHRCTL_TXTHRLEN_Msk  ;/*!< Transmit threshold length */
USB_OTG_DTHRCTL_TXTHRLEN_0               EQU		0x001 << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x00000004 */
USB_OTG_DTHRCTL_TXTHRLEN_1               EQU		0x002 << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x00000008 */
USB_OTG_DTHRCTL_TXTHRLEN_2               EQU		0x004 << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x00000010 */
USB_OTG_DTHRCTL_TXTHRLEN_3               EQU		0x008 << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x00000020 */
USB_OTG_DTHRCTL_TXTHRLEN_4               EQU		0x010 << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x00000040 */
USB_OTG_DTHRCTL_TXTHRLEN_5               EQU		0x020 << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x00000080 */
USB_OTG_DTHRCTL_TXTHRLEN_6               EQU		0x040 << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x00000100 */
USB_OTG_DTHRCTL_TXTHRLEN_7               EQU		0x080 << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x00000200 */
USB_OTG_DTHRCTL_TXTHRLEN_8               EQU		0x100 << USB_OTG_DTHRCTL_TXTHRLEN_Pos    ;/*!< 0x00000400 */
USB_OTG_DTHRCTL_RXTHREN_Pos              EQU		16                         
USB_OTG_DTHRCTL_RXTHREN_Msk              EQU		0x1 << USB_OTG_DTHRCTL_RXTHREN_Pos    ;/*!< 0x00010000 */
USB_OTG_DTHRCTL_RXTHREN                  EQU		USB_OTG_DTHRCTL_RXTHREN_Msk   ;/*!< Receive threshold enable */

USB_OTG_DTHRCTL_RXTHRLEN_Pos             EQU		17                         
USB_OTG_DTHRCTL_RXTHRLEN_Msk             EQU		0x1FF << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x03FE0000 */
USB_OTG_DTHRCTL_RXTHRLEN                 EQU		USB_OTG_DTHRCTL_RXTHRLEN_Msk  ;/*!< Receive threshold length */
USB_OTG_DTHRCTL_RXTHRLEN_0               EQU		0x001 << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x00020000 */
USB_OTG_DTHRCTL_RXTHRLEN_1               EQU		0x002 << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x00040000 */
USB_OTG_DTHRCTL_RXTHRLEN_2               EQU		0x004 << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x00080000 */
USB_OTG_DTHRCTL_RXTHRLEN_3               EQU		0x008 << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x00100000 */
USB_OTG_DTHRCTL_RXTHRLEN_4               EQU		0x010 << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x00200000 */
USB_OTG_DTHRCTL_RXTHRLEN_5               EQU		0x020 << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x00400000 */
USB_OTG_DTHRCTL_RXTHRLEN_6               EQU		0x040 << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x00800000 */
USB_OTG_DTHRCTL_RXTHRLEN_7               EQU		0x080 << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x01000000 */
USB_OTG_DTHRCTL_RXTHRLEN_8               EQU		0x100 << USB_OTG_DTHRCTL_RXTHRLEN_Pos    ;/*!< 0x02000000 */
USB_OTG_DTHRCTL_ARPEN_Pos                EQU		27                         
USB_OTG_DTHRCTL_ARPEN_Msk                EQU		0x1 << USB_OTG_DTHRCTL_ARPEN_Pos    ;/*!< 0x08000000 */
USB_OTG_DTHRCTL_ARPEN                    EQU		USB_OTG_DTHRCTL_ARPEN_Msk     ;/*!< Arbiter parking enable */

USB_OTG_DIEPEMPMSK				         EQU		0x834
;/********************  Bit definition for USB_OTG_DIEPEMPMSK register  ********************/
USB_OTG_DIEPEMPMSK_INEPTXFEM_Pos         EQU		0                          
USB_OTG_DIEPEMPMSK_INEPTXFEM_Msk         EQU		0xFFFF << USB_OTG_DIEPEMPMSK_INEPTXFEM_Pos    ;/*!< 0x0000FFFF */
USB_OTG_DIEPEMPMSK_INEPTXFEM             EQU		USB_OTG_DIEPEMPMSK_INEPTXFEM_Msk ;/*!< IN EP Tx FIFO empty interrupt mask bits */

USB_OTG_DEACHINT			             EQU		0x838
;/********************  Bit definition for USB_OTG_DEACHINT register  ********************/
USB_OTG_DEACHINT_IEP1INT_Pos             EQU		1                          
USB_OTG_DEACHINT_IEP1INT_Msk             EQU		0x1 << USB_OTG_DEACHINT_IEP1INT_Pos    ;/*!< 0x00000002 */
USB_OTG_DEACHINT_IEP1INT                 EQU		USB_OTG_DEACHINT_IEP1INT_Msk  ;/*!< IN endpoint 1interrupt bit   */
USB_OTG_DEACHINT_OEP1INT_Pos             EQU		17                         
USB_OTG_DEACHINT_OEP1INT_Msk             EQU		0x1 << USB_OTG_DEACHINT_OEP1INT_Pos    ;/*!< 0x00020000 */
USB_OTG_DEACHINT_OEP1INT                 EQU		USB_OTG_DEACHINT_OEP1INT_Msk  ;/*!< OUT endpoint 1 interrupt bit */

USB_OTG_GCCFG			                 EQU		0x38
;/********************  Bit definition for USB_OTG_GCCFG register  ********************/
USB_OTG_GCCFG_PWRDWN_Pos                 EQU		16                         
USB_OTG_GCCFG_PWRDWN_Msk                 EQU		0x1 << USB_OTG_GCCFG_PWRDWN_Pos    ;/*!< 0x00010000 */
USB_OTG_GCCFG_PWRDWN                     EQU		USB_OTG_GCCFG_PWRDWN_Msk      ;/*!< Power down */
USB_OTG_GCCFG_I2CPADEN_Pos               EQU		17                         
USB_OTG_GCCFG_I2CPADEN_Msk               EQU		0x1 << USB_OTG_GCCFG_I2CPADEN_Pos    ;/*!< 0x00020000 */
USB_OTG_GCCFG_I2CPADEN                   EQU		USB_OTG_GCCFG_I2CPADEN_Msk    ;/*!< Enable I2C bus connection for the external I2C PHY interface*/ 
USB_OTG_GCCFG_VBUSASEN_Pos               EQU		18                         
USB_OTG_GCCFG_VBUSASEN_Msk               EQU		0x1 << USB_OTG_GCCFG_VBUSASEN_Pos    ;/*!< 0x00040000 */
USB_OTG_GCCFG_VBUSASEN                   EQU		USB_OTG_GCCFG_VBUSASEN_Msk    ;/*!< Enable the VBUS sensing device */
USB_OTG_GCCFG_VBUSBSEN_Pos               EQU		19                         
USB_OTG_GCCFG_VBUSBSEN_Msk               EQU		0x1 << USB_OTG_GCCFG_VBUSBSEN_Pos    ;/*!< 0x00080000 */
USB_OTG_GCCFG_VBUSBSEN                   EQU		USB_OTG_GCCFG_VBUSBSEN_Msk    ;/*!< Enable the VBUS sensing device */
USB_OTG_GCCFG_SOFOUTEN_Pos               EQU		20                         
USB_OTG_GCCFG_SOFOUTEN_Msk               EQU		0x1 << USB_OTG_GCCFG_SOFOUTEN_Pos    ;/*!< 0x00100000 */
USB_OTG_GCCFG_SOFOUTEN                   EQU		USB_OTG_GCCFG_SOFOUTEN_Msk    ;/*!< SOF output enable */
USB_OTG_GCCFG_NOVBUSSENS_Pos             EQU		21                         
USB_OTG_GCCFG_NOVBUSSENS_Msk             EQU		0x1 << USB_OTG_GCCFG_NOVBUSSENS_Pos    ;/*!< 0x00200000 */
USB_OTG_GCCFG_NOVBUSSENS                 EQU		USB_OTG_GCCFG_NOVBUSSENS_Msk  ;/*!< VBUS sensing disable option*/ 

USB_OTG_DEACHINTMSK				         EQU		0x83C
;/********************  Bit definition forUSB_OTG_DEACHINTMSK register  ********************/
USB_OTG_DEACHINTMSK_IEP1INTM_Pos         EQU		1                          
USB_OTG_DEACHINTMSK_IEP1INTM_Msk         EQU		0x1 << USB_OTG_DEACHINTMSK_IEP1INTM_Pos    ;/*!< 0x00000002 */
USB_OTG_DEACHINTMSK_IEP1INTM             EQU		USB_OTG_DEACHINTMSK_IEP1INTM_Msk ;/*!< IN Endpoint 1 interrupt mask bit  */
USB_OTG_DEACHINTMSK_OEP1INTM_Pos         EQU		17                         
USB_OTG_DEACHINTMSK_OEP1INTM_Msk         EQU		0x1 << USB_OTG_DEACHINTMSK_OEP1INTM_Pos    ;/*!< 0x00020000 */
USB_OTG_DEACHINTMSK_OEP1INTM             EQU		USB_OTG_DEACHINTMSK_OEP1INTM_Msk ;/*!< OUT Endpoint 1 interrupt mask bit */

USB_OTG_CID					             EQU		0x3C
;/********************  Bit definition for USB_OTG_CID register  ********************/
USB_OTG_CID_PRODUCT_ID_Pos               EQU		0                          
USB_OTG_CID_PRODUCT_ID_Msk               EQU		0xFFFFFFFF << USB_OTG_CID_PRODUCT_ID_Pos    ;/*!< 0xFFFFFFFF */
USB_OTG_CID_PRODUCT_ID                   EQU		USB_OTG_CID_PRODUCT_ID_Msk    ;/*!< Product ID field */

USB_OTG_DIEPEACHMSK1			         EQU		0x844
;/********************  Bit definition for USB_OTG_DIEPEACHMSK1 register  ********************/
USB_OTG_DIEPEACHMSK1_XFRCM_Pos           EQU		0                          
USB_OTG_DIEPEACHMSK1_XFRCM_Msk           EQU		0x1 << USB_OTG_DIEPEACHMSK1_XFRCM_Pos    ;/*!< 0x00000001 */
USB_OTG_DIEPEACHMSK1_XFRCM               EQU		USB_OTG_DIEPEACHMSK1_XFRCM_Msk ;/*!< Transfer completed interrupt mask                 */
USB_OTG_DIEPEACHMSK1_EPDM_Pos            EQU		1                          
USB_OTG_DIEPEACHMSK1_EPDM_Msk            EQU		0x1 << USB_OTG_DIEPEACHMSK1_EPDM_Pos    ;/*!< 0x00000002 */
USB_OTG_DIEPEACHMSK1_EPDM                EQU		USB_OTG_DIEPEACHMSK1_EPDM_Msk ;/*!< Endpoint disabled interrupt mask                  */
USB_OTG_DIEPEACHMSK1_TOM_Pos             EQU		3                          
USB_OTG_DIEPEACHMSK1_TOM_Msk             EQU		0x1 << USB_OTG_DIEPEACHMSK1_TOM_Pos    ;/*!< 0x00000008 */
USB_OTG_DIEPEACHMSK1_TOM                 EQU		USB_OTG_DIEPEACHMSK1_TOM_Msk  ;/*!< Timeout condition mask EQU		nonisochronous endpoints    */
USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Pos       EQU		4                          
USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Msk       EQU		0x1 << USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Pos    ;/*!< 0x00000010 */
USB_OTG_DIEPEACHMSK1_ITTXFEMSK           EQU		USB_OTG_DIEPEACHMSK1_ITTXFEMSK_Msk ;/*!< IN token received when TxFIFO empty mask          */
USB_OTG_DIEPEACHMSK1_INEPNMM_Pos         EQU		5                          
USB_OTG_DIEPEACHMSK1_INEPNMM_Msk         EQU		0x1 << USB_OTG_DIEPEACHMSK1_INEPNMM_Pos    ;/*!< 0x00000020 */
USB_OTG_DIEPEACHMSK1_INEPNMM             EQU		USB_OTG_DIEPEACHMSK1_INEPNMM_Msk ;/*!< IN token received with EP mismatch mask           */
USB_OTG_DIEPEACHMSK1_INEPNEM_Pos         EQU		6                          
USB_OTG_DIEPEACHMSK1_INEPNEM_Msk         EQU		0x1 << USB_OTG_DIEPEACHMSK1_INEPNEM_Pos    ;/*!< 0x00000040 */
USB_OTG_DIEPEACHMSK1_INEPNEM             EQU		USB_OTG_DIEPEACHMSK1_INEPNEM_Msk ;/*!< IN endpoint NAK effective mask                    */
USB_OTG_DIEPEACHMSK1_TXFURM_Pos          EQU		8                          
USB_OTG_DIEPEACHMSK1_TXFURM_Msk          EQU		0x1 << USB_OTG_DIEPEACHMSK1_TXFURM_Pos    ;/*!< 0x00000100 */
USB_OTG_DIEPEACHMSK1_TXFURM              EQU		USB_OTG_DIEPEACHMSK1_TXFURM_Msk ;/*!< FIFO underrun mask                                */
USB_OTG_DIEPEACHMSK1_BIM_Pos             EQU		9                          
USB_OTG_DIEPEACHMSK1_BIM_Msk             EQU		0x1 << USB_OTG_DIEPEACHMSK1_BIM_Pos    ;/*!< 0x00000200 */
USB_OTG_DIEPEACHMSK1_BIM                 EQU		USB_OTG_DIEPEACHMSK1_BIM_Msk  ;/*!< BNA interrupt mask                                */
USB_OTG_DIEPEACHMSK1_NAKM_Pos            EQU		13                         
USB_OTG_DIEPEACHMSK1_NAKM_Msk            EQU		0x1 << USB_OTG_DIEPEACHMSK1_NAKM_Pos    ;/*!< 0x00002000 */
USB_OTG_DIEPEACHMSK1_NAKM                EQU		USB_OTG_DIEPEACHMSK1_NAKM_Msk ;/*!< NAK interrupt mask                                */

USB_OTG_HPRT			                 EQU		0x440
;/********************  Bit definition for USB_OTG_HPRT register  ********************/
USB_OTG_HPRT_PCSTS_Pos                   EQU		0                          
USB_OTG_HPRT_PCSTS_Msk                   EQU		0x1 << USB_OTG_HPRT_PCSTS_Pos    ;/*!< 0x00000001 */
USB_OTG_HPRT_PCSTS                       EQU		USB_OTG_HPRT_PCSTS_Msk        ;/*!< Port connect status        */
USB_OTG_HPRT_PCDET_Pos                   EQU		1                          
USB_OTG_HPRT_PCDET_Msk                   EQU		0x1 << USB_OTG_HPRT_PCDET_Pos    ;/*!< 0x00000002 */
USB_OTG_HPRT_PCDET                       EQU		USB_OTG_HPRT_PCDET_Msk        ;/*!< Port connect detected      */
USB_OTG_HPRT_PENA_Pos                    EQU		2                          
USB_OTG_HPRT_PENA_Msk                    EQU		0x1 << USB_OTG_HPRT_PENA_Pos    ;/*!< 0x00000004 */
USB_OTG_HPRT_PENA                        EQU		USB_OTG_HPRT_PENA_Msk         ;/*!< Port enable                */
USB_OTG_HPRT_PENCHNG_Pos                 EQU		3                          
USB_OTG_HPRT_PENCHNG_Msk                 EQU		0x1 << USB_OTG_HPRT_PENCHNG_Pos    ;/*!< 0x00000008 */
USB_OTG_HPRT_PENCHNG                     EQU		USB_OTG_HPRT_PENCHNG_Msk      ;/*!< Port enable/disable change */
USB_OTG_HPRT_POCA_Pos                    EQU		4                          
USB_OTG_HPRT_POCA_Msk                    EQU		0x1 << USB_OTG_HPRT_POCA_Pos    ;/*!< 0x00000010 */
USB_OTG_HPRT_POCA                        EQU		USB_OTG_HPRT_POCA_Msk         ;/*!< Port overcurrent active    */
USB_OTG_HPRT_POCCHNG_Pos                 EQU		5                          
USB_OTG_HPRT_POCCHNG_Msk                 EQU		0x1 << USB_OTG_HPRT_POCCHNG_Pos    ;/*!< 0x00000020 */
USB_OTG_HPRT_POCCHNG                     EQU		USB_OTG_HPRT_POCCHNG_Msk      ;/*!< Port overcurrent change    */
USB_OTG_HPRT_PRES_Pos                    EQU		6                          
USB_OTG_HPRT_PRES_Msk                    EQU		0x1 << USB_OTG_HPRT_PRES_Pos    ;/*!< 0x00000040 */
USB_OTG_HPRT_PRES                        EQU		USB_OTG_HPRT_PRES_Msk         ;/*!< Port resume                */
USB_OTG_HPRT_PSUSP_Pos                   EQU		7                          
USB_OTG_HPRT_PSUSP_Msk                   EQU		0x1 << USB_OTG_HPRT_PSUSP_Pos    ;/*!< 0x00000080 */
USB_OTG_HPRT_PSUSP                       EQU		USB_OTG_HPRT_PSUSP_Msk        ;/*!< Port suspend               */
USB_OTG_HPRT_PRST_Pos                    EQU		8                          
USB_OTG_HPRT_PRST_Msk                    EQU		0x1 << USB_OTG_HPRT_PRST_Pos    ;/*!< 0x00000100 */
USB_OTG_HPRT_PRST                        EQU		USB_OTG_HPRT_PRST_Msk         ;/*!< Port reset                 */

USB_OTG_HPRT_PLSTS_Pos                   EQU		10                         
USB_OTG_HPRT_PLSTS_Msk                   EQU		0x3 << USB_OTG_HPRT_PLSTS_Pos    ;/*!< 0x00000C00 */
USB_OTG_HPRT_PLSTS                       EQU		USB_OTG_HPRT_PLSTS_Msk        ;/*!< Port line status           */
USB_OTG_HPRT_PLSTS_0                     EQU		0x1 << USB_OTG_HPRT_PLSTS_Pos    ;/*!< 0x00000400 */
USB_OTG_HPRT_PLSTS_1                     EQU		0x2 << USB_OTG_HPRT_PLSTS_Pos    ;/*!< 0x00000800 */
USB_OTG_HPRT_PPWR_Pos                    EQU		12                         
USB_OTG_HPRT_PPWR_Msk                    EQU		0x1 << USB_OTG_HPRT_PPWR_Pos    ;/*!< 0x00001000 */
USB_OTG_HPRT_PPWR                        EQU		USB_OTG_HPRT_PPWR_Msk         ;/*!< Port power                 */

USB_OTG_HPRT_PTCTL_Pos                   EQU		13                         
USB_OTG_HPRT_PTCTL_Msk                   EQU		0xF << USB_OTG_HPRT_PTCTL_Pos    ;/*!< 0x0001E000 */
USB_OTG_HPRT_PTCTL                       EQU		USB_OTG_HPRT_PTCTL_Msk        ;/*!< Port test control          */
USB_OTG_HPRT_PTCTL_0                     EQU		0x1 << USB_OTG_HPRT_PTCTL_Pos    ;/*!< 0x00002000 */
USB_OTG_HPRT_PTCTL_1                     EQU		0x2 << USB_OTG_HPRT_PTCTL_Pos    ;/*!< 0x00004000 */
USB_OTG_HPRT_PTCTL_2                     EQU		0x4 << USB_OTG_HPRT_PTCTL_Pos    ;/*!< 0x00008000 */
USB_OTG_HPRT_PTCTL_3                     EQU		0x8 << USB_OTG_HPRT_PTCTL_Pos    ;/*!< 0x00010000 */

USB_OTG_HPRT_PSPD_Pos                    EQU		17                         
USB_OTG_HPRT_PSPD_Msk                    EQU		0x3 << USB_OTG_HPRT_PSPD_Pos    ;/*!< 0x00060000 */
USB_OTG_HPRT_PSPD                        EQU		USB_OTG_HPRT_PSPD_Msk         ;/*!< Port speed                 */
USB_OTG_HPRT_PSPD_0                      EQU		0x1 << USB_OTG_HPRT_PSPD_Pos    ;/*!< 0x00020000 */
USB_OTG_HPRT_PSPD_1                      EQU		0x2 << USB_OTG_HPRT_PSPD_Pos    ;/*!< 0x00040000 */

USB_OTG_DOEPEACHMSK1			         EQU		0x884
;/********************  Bit definition for USB_OTG_DOEPEACHMSK1 register  ********************/
USB_OTG_DOEPEACHMSK1_XFRCM_Pos           EQU		0                          
USB_OTG_DOEPEACHMSK1_XFRCM_Msk           EQU		0x1 << USB_OTG_DOEPEACHMSK1_XFRCM_Pos    ;/*!< 0x00000001 */
USB_OTG_DOEPEACHMSK1_XFRCM               EQU		USB_OTG_DOEPEACHMSK1_XFRCM_Msk ;/*!< Transfer completed interrupt mask         */
USB_OTG_DOEPEACHMSK1_EPDM_Pos            EQU		1                          
USB_OTG_DOEPEACHMSK1_EPDM_Msk            EQU		0x1 << USB_OTG_DOEPEACHMSK1_EPDM_Pos    ;/*!< 0x00000002 */
USB_OTG_DOEPEACHMSK1_EPDM                EQU		USB_OTG_DOEPEACHMSK1_EPDM_Msk ;/*!< Endpoint disabled interrupt mask          */
USB_OTG_DOEPEACHMSK1_TOM_Pos             EQU		3                          
USB_OTG_DOEPEACHMSK1_TOM_Msk             EQU		0x1 << USB_OTG_DOEPEACHMSK1_TOM_Pos    ;/*!< 0x00000008 */
USB_OTG_DOEPEACHMSK1_TOM                 EQU		USB_OTG_DOEPEACHMSK1_TOM_Msk  ;/*!< Timeout condition mask                    */
USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Pos       EQU		4                          
USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Msk       EQU		0x1 << USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Pos    ;/*!< 0x00000010 */
USB_OTG_DOEPEACHMSK1_ITTXFEMSK           EQU		USB_OTG_DOEPEACHMSK1_ITTXFEMSK_Msk ;/*!< IN token received when TxFIFO empty mask  */
USB_OTG_DOEPEACHMSK1_INEPNMM_Pos         EQU		5                          
USB_OTG_DOEPEACHMSK1_INEPNMM_Msk         EQU		0x1 << USB_OTG_DOEPEACHMSK1_INEPNMM_Pos    ;/*!< 0x00000020 */
USB_OTG_DOEPEACHMSK1_INEPNMM             EQU		USB_OTG_DOEPEACHMSK1_INEPNMM_Msk ;/*!< IN token received with EP mismatch mask   */
USB_OTG_DOEPEACHMSK1_INEPNEM_Pos         EQU		6                          
USB_OTG_DOEPEACHMSK1_INEPNEM_Msk         EQU		0x1 << USB_OTG_DOEPEACHMSK1_INEPNEM_Pos    ;/*!< 0x00000040 */
USB_OTG_DOEPEACHMSK1_INEPNEM             EQU		USB_OTG_DOEPEACHMSK1_INEPNEM_Msk ;/*!< IN endpoint NAK effective mask            */
USB_OTG_DOEPEACHMSK1_TXFURM_Pos          EQU		8                          
USB_OTG_DOEPEACHMSK1_TXFURM_Msk          EQU		0x1 << USB_OTG_DOEPEACHMSK1_TXFURM_Pos    ;/*!< 0x00000100 */
USB_OTG_DOEPEACHMSK1_TXFURM              EQU		USB_OTG_DOEPEACHMSK1_TXFURM_Msk ;/*!< OUT packet error mask                     */
USB_OTG_DOEPEACHMSK1_BIM_Pos             EQU		9                          
USB_OTG_DOEPEACHMSK1_BIM_Msk             EQU		0x1 << USB_OTG_DOEPEACHMSK1_BIM_Pos    ;/*!< 0x00000200 */
USB_OTG_DOEPEACHMSK1_BIM                 EQU		USB_OTG_DOEPEACHMSK1_BIM_Msk  ;/*!< BNA interrupt mask                        */
USB_OTG_DOEPEACHMSK1_BERRM_Pos           EQU		12                         
USB_OTG_DOEPEACHMSK1_BERRM_Msk           EQU		0x1 << USB_OTG_DOEPEACHMSK1_BERRM_Pos    ;/*!< 0x00001000 */
USB_OTG_DOEPEACHMSK1_BERRM               EQU		USB_OTG_DOEPEACHMSK1_BERRM_Msk ;/*!< Bubble error interrupt mask               */
USB_OTG_DOEPEACHMSK1_NAKM_Pos            EQU		13                         
USB_OTG_DOEPEACHMSK1_NAKM_Msk            EQU		0x1 << USB_OTG_DOEPEACHMSK1_NAKM_Pos    ;/*!< 0x00002000 */
USB_OTG_DOEPEACHMSK1_NAKM                EQU		USB_OTG_DOEPEACHMSK1_NAKM_Msk ;/*!< NAK interrupt mask                        */
USB_OTG_DOEPEACHMSK1_NYETM_Pos           EQU		14                         
USB_OTG_DOEPEACHMSK1_NYETM_Msk           EQU		0x1 << USB_OTG_DOEPEACHMSK1_NYETM_Pos    ;/*!< 0x00004000 */
USB_OTG_DOEPEACHMSK1_NYETM               EQU		USB_OTG_DOEPEACHMSK1_NYETM_Msk ;/*!< NYET interrupt mask                       */

USB_OTG_HPTXFSIZ			             EQU		0x100
;/********************  Bit definition for USB_OTG_HPTXFSIZ register  ********************/
USB_OTG_HPTXFSIZ_PTXSA_Pos               EQU		0                          
USB_OTG_HPTXFSIZ_PTXSA_Msk               EQU		0xFFFF << USB_OTG_HPTXFSIZ_PTXSA_Pos    ;/*!< 0x0000FFFF */
USB_OTG_HPTXFSIZ_PTXSA                   EQU		USB_OTG_HPTXFSIZ_PTXSA_Msk    ;/*!< Host periodic TxFIFO start address            */
USB_OTG_HPTXFSIZ_PTXFD_Pos               EQU		16                         
USB_OTG_HPTXFSIZ_PTXFD_Msk               EQU		0xFFFF << USB_OTG_HPTXFSIZ_PTXFD_Pos    ;/*!< 0xFFFF0000 */
USB_OTG_HPTXFSIZ_PTXFD                   EQU		USB_OTG_HPTXFSIZ_PTXFD_Msk    ;/*!< Host periodic TxFIFO depth                    */

USB_OTG_DIEPCTL0		                 EQU		0x900
USB_OTG_DIEPCTL1		                 EQU		0x920
USB_OTG_DIEPCTL2		                 EQU		0x940
USB_OTG_DIEPCTL3		                 EQU		0x960
USB_OTG_DIEPCTL4		                 EQU		0x980
USB_OTG_DIEPCTL5		                 EQU		0x9A0
USB_OTG_DIEPCTL6		                 EQU		0x9C0
USB_OTG_DIEPCTL7		                 EQU		0x9E0
;/********************  Bit definition for USB_OTG_DIEPCTL register  ********************/
USB_OTG_DIEPCTL_MPSIZ_Pos                EQU		0                          
USB_OTG_DIEPCTL_MPSIZ_Msk                EQU		0x7FF << USB_OTG_DIEPCTL_MPSIZ_Pos    ;/*!< 0x000007FF */
USB_OTG_DIEPCTL_MPSIZ                    EQU		USB_OTG_DIEPCTL_MPSIZ_Msk     ;/*!< Maximum packet size              */
USB_OTG_DIEPCTL_USBAEP_Pos               EQU		15                         
USB_OTG_DIEPCTL_USBAEP_Msk               EQU		0x1 << USB_OTG_DIEPCTL_USBAEP_Pos    ;/*!< 0x00008000 */
USB_OTG_DIEPCTL_USBAEP                   EQU		USB_OTG_DIEPCTL_USBAEP_Msk    ;/*!< USB active endpoint              */
USB_OTG_DIEPCTL_EONUM_DPID_Pos           EQU		16                         
USB_OTG_DIEPCTL_EONUM_DPID_Msk           EQU		0x1 << USB_OTG_DIEPCTL_EONUM_DPID_Pos    ;/*!< 0x00010000 */
USB_OTG_DIEPCTL_EONUM_DPID               EQU		USB_OTG_DIEPCTL_EONUM_DPID_Msk ;/*!< Even/odd frame                   */
USB_OTG_DIEPCTL_NAKSTS_Pos               EQU		17                         
USB_OTG_DIEPCTL_NAKSTS_Msk               EQU		0x1 << USB_OTG_DIEPCTL_NAKSTS_Pos    ;/*!< 0x00020000 */
USB_OTG_DIEPCTL_NAKSTS                   EQU		USB_OTG_DIEPCTL_NAKSTS_Msk    ;/*!< NAK status                       */

USB_OTG_DIEPCTL_EPTYP_Pos                EQU		18                         
USB_OTG_DIEPCTL_EPTYP_Msk                EQU		0x3 << USB_OTG_DIEPCTL_EPTYP_Pos    ;/*!< 0x000C0000 */
USB_OTG_DIEPCTL_EPTYP                    EQU		USB_OTG_DIEPCTL_EPTYP_Msk     ;/*!< Endpoint type                    */
USB_OTG_DIEPCTL_EPTYP_0                  EQU		0x1 << USB_OTG_DIEPCTL_EPTYP_Pos    ;/*!< 0x00040000 */
USB_OTG_DIEPCTL_EPTYP_1                  EQU		0x2 << USB_OTG_DIEPCTL_EPTYP_Pos    ;/*!< 0x00080000 */
USB_OTG_DIEPCTL_STALL_Pos                EQU		21                         
USB_OTG_DIEPCTL_STALL_Msk                EQU		0x1 << USB_OTG_DIEPCTL_STALL_Pos    ;/*!< 0x00200000 */
USB_OTG_DIEPCTL_STALL                    EQU		USB_OTG_DIEPCTL_STALL_Msk     ;/*!< STALL handshake                  */

USB_OTG_DIEPCTL_TXFNUM_Pos               EQU		22                         
USB_OTG_DIEPCTL_TXFNUM_Msk               EQU		0xF << USB_OTG_DIEPCTL_TXFNUM_Pos    ;/*!< 0x03C00000 */
USB_OTG_DIEPCTL_TXFNUM                   EQU		USB_OTG_DIEPCTL_TXFNUM_Msk    ;/*!< TxFIFO number                    */
USB_OTG_DIEPCTL_TXFNUM_0                 EQU		0x1 << USB_OTG_DIEPCTL_TXFNUM_Pos    ;/*!< 0x00400000 */
USB_OTG_DIEPCTL_TXFNUM_1                 EQU		0x2 << USB_OTG_DIEPCTL_TXFNUM_Pos    ;/*!< 0x00800000 */
USB_OTG_DIEPCTL_TXFNUM_2                 EQU		0x4 << USB_OTG_DIEPCTL_TXFNUM_Pos    ;/*!< 0x01000000 */
USB_OTG_DIEPCTL_TXFNUM_3                 EQU		0x8 << USB_OTG_DIEPCTL_TXFNUM_Pos    ;/*!< 0x02000000 */
USB_OTG_DIEPCTL_CNAK_Pos                 EQU		26                         
USB_OTG_DIEPCTL_CNAK_Msk                 EQU		0x1 << USB_OTG_DIEPCTL_CNAK_Pos    ;/*!< 0x04000000 */
USB_OTG_DIEPCTL_CNAK                     EQU		USB_OTG_DIEPCTL_CNAK_Msk      ;/*!< Clear NAK                        */
USB_OTG_DIEPCTL_SNAK_Pos                 EQU		27                         
USB_OTG_DIEPCTL_SNAK_Msk                 EQU		0x1 << USB_OTG_DIEPCTL_SNAK_Pos    ;/*!< 0x08000000 */
USB_OTG_DIEPCTL_SNAK                     EQU		USB_OTG_DIEPCTL_SNAK_Msk      ;/*!< Set NAK */
USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Pos       EQU		28                         
USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Msk       EQU		0x1 << USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Pos    ;/*!< 0x10000000 */
USB_OTG_DIEPCTL_SD0PID_SEVNFRM           EQU		USB_OTG_DIEPCTL_SD0PID_SEVNFRM_Msk ;/*!< Set DATA0 PID                    */
USB_OTG_DIEPCTL_SODDFRM_Pos              EQU		29                         
USB_OTG_DIEPCTL_SODDFRM_Msk              EQU		0x1 << USB_OTG_DIEPCTL_SODDFRM_Pos    ;/*!< 0x20000000 */
USB_OTG_DIEPCTL_SODDFRM                  EQU		USB_OTG_DIEPCTL_SODDFRM_Msk   ;/*!< Set odd frame                    */
USB_OTG_DIEPCTL_EPDIS_Pos                EQU		30                         
USB_OTG_DIEPCTL_EPDIS_Msk                EQU		0x1 << USB_OTG_DIEPCTL_EPDIS_Pos    ;/*!< 0x40000000 */
USB_OTG_DIEPCTL_EPDIS                    EQU		USB_OTG_DIEPCTL_EPDIS_Msk     ;/*!< Endpoint disable                 */
USB_OTG_DIEPCTL_EPENA_Pos                EQU		31                         
USB_OTG_DIEPCTL_EPENA_Msk                EQU		0x1 << USB_OTG_DIEPCTL_EPENA_Pos    ;/*!< 0x80000000 */
USB_OTG_DIEPCTL_EPENA                    EQU		USB_OTG_DIEPCTL_EPENA_Msk     ;/*!< Endpoint enable                  */

USB_OTG_HCCHAR0			                 EQU		0x500
USB_OTG_HCCHAR1			                 EQU		0x520
USB_OTG_HCCHAR2			                 EQU		0x540
USB_OTG_HCCHAR3			                 EQU		0x560
USB_OTG_HCCHAR4			                 EQU		0x580
USB_OTG_HCCHAR5			                 EQU		0x5A0
USB_OTG_HCCHAR6			                 EQU		0x5C0
USB_OTG_HCCHAR7			                 EQU		0x5E0
USB_OTG_HCCHAR8			                 EQU		0x600
USB_OTG_HCCHAR9			                 EQU		0x620
USB_OTG_HCCHAR10		                 EQU		0x640
USB_OTG_HCCHAR11		                 EQU		0x660
;/********************  Bit definition for USB_OTG_HCCHAR register  ********************/
USB_OTG_HCCHAR_MPSIZ_Pos                 EQU		0                          
USB_OTG_HCCHAR_MPSIZ_Msk                 EQU		0x7FF << USB_OTG_HCCHAR_MPSIZ_Pos    ;/*!< 0x000007FF */
USB_OTG_HCCHAR_MPSIZ                     EQU		USB_OTG_HCCHAR_MPSIZ_Msk      ;/*!< Maximum packet size */

USB_OTG_HCCHAR_EPNUM_Pos                 EQU		11                         
USB_OTG_HCCHAR_EPNUM_Msk                 EQU		0xF << USB_OTG_HCCHAR_EPNUM_Pos    ;/*!< 0x00007800 */
USB_OTG_HCCHAR_EPNUM                     EQU		USB_OTG_HCCHAR_EPNUM_Msk      ;/*!< Endpoint number */
USB_OTG_HCCHAR_EPNUM_0                   EQU		0x1 << USB_OTG_HCCHAR_EPNUM_Pos    ;/*!< 0x00000800 */
USB_OTG_HCCHAR_EPNUM_1                   EQU		0x2 << USB_OTG_HCCHAR_EPNUM_Pos    ;/*!< 0x00001000 */
USB_OTG_HCCHAR_EPNUM_2                   EQU		0x4 << USB_OTG_HCCHAR_EPNUM_Pos    ;/*!< 0x00002000 */
USB_OTG_HCCHAR_EPNUM_3                   EQU		0x8 << USB_OTG_HCCHAR_EPNUM_Pos    ;/*!< 0x00004000 */
USB_OTG_HCCHAR_EPDIR_Pos                 EQU		15                         
USB_OTG_HCCHAR_EPDIR_Msk                 EQU		0x1 << USB_OTG_HCCHAR_EPDIR_Pos    ;/*!< 0x00008000 */
USB_OTG_HCCHAR_EPDIR                     EQU		USB_OTG_HCCHAR_EPDIR_Msk      ;/*!< Endpoint direction */
USB_OTG_HCCHAR_LSDEV_Pos                 EQU		17                         
USB_OTG_HCCHAR_LSDEV_Msk                 EQU		0x1 << USB_OTG_HCCHAR_LSDEV_Pos    ;/*!< 0x00020000 */
USB_OTG_HCCHAR_LSDEV                     EQU		USB_OTG_HCCHAR_LSDEV_Msk      ;/*!< Low-speed device */

USB_OTG_HCCHAR_EPTYP_Pos                 EQU		18                         
USB_OTG_HCCHAR_EPTYP_Msk                 EQU		0x3 << USB_OTG_HCCHAR_EPTYP_Pos    ;/*!< 0x000C0000 */
USB_OTG_HCCHAR_EPTYP                     EQU		USB_OTG_HCCHAR_EPTYP_Msk      ;/*!< Endpoint type */
USB_OTG_HCCHAR_EPTYP_0                   EQU		0x1 << USB_OTG_HCCHAR_EPTYP_Pos    ;/*!< 0x00040000 */
USB_OTG_HCCHAR_EPTYP_1                   EQU		0x2 << USB_OTG_HCCHAR_EPTYP_Pos    ;/*!< 0x00080000 */

USB_OTG_HCCHAR_MC_Pos                    EQU		20                         
USB_OTG_HCCHAR_MC_Msk                    EQU		0x3 << USB_OTG_HCCHAR_MC_Pos    ;/*!< 0x00300000 */
USB_OTG_HCCHAR_MC                        EQU		USB_OTG_HCCHAR_MC_Msk         ;/*!< Multi Count EQU		MC    / Error Count EQU		EC    */
USB_OTG_HCCHAR_MC_0                      EQU		0x1 << USB_OTG_HCCHAR_MC_Pos    ;/*!< 0x00100000 */
USB_OTG_HCCHAR_MC_1                      EQU		0x2 << USB_OTG_HCCHAR_MC_Pos    ;/*!< 0x00200000 */

USB_OTG_HCCHAR_DAD_Pos                   EQU		22                         
USB_OTG_HCCHAR_DAD_Msk                   EQU		0x7F << USB_OTG_HCCHAR_DAD_Pos    ;/*!< 0x1FC00000 */
USB_OTG_HCCHAR_DAD                       EQU		USB_OTG_HCCHAR_DAD_Msk        ;/*!< Device address */
USB_OTG_HCCHAR_DAD_0                     EQU		0x01 << USB_OTG_HCCHAR_DAD_Pos    ;/*!< 0x00400000 */
USB_OTG_HCCHAR_DAD_1                     EQU		0x02 << USB_OTG_HCCHAR_DAD_Pos    ;/*!< 0x00800000 */
USB_OTG_HCCHAR_DAD_2                     EQU		0x04 << USB_OTG_HCCHAR_DAD_Pos    ;/*!< 0x01000000 */
USB_OTG_HCCHAR_DAD_3                     EQU		0x08 << USB_OTG_HCCHAR_DAD_Pos    ;/*!< 0x02000000 */
USB_OTG_HCCHAR_DAD_4                     EQU		0x10 << USB_OTG_HCCHAR_DAD_Pos    ;/*!< 0x04000000 */
USB_OTG_HCCHAR_DAD_5                     EQU		0x20 << USB_OTG_HCCHAR_DAD_Pos    ;/*!< 0x08000000 */
USB_OTG_HCCHAR_DAD_6                     EQU		0x40 << USB_OTG_HCCHAR_DAD_Pos    ;/*!< 0x10000000 */
USB_OTG_HCCHAR_ODDFRM_Pos                EQU		29                         
USB_OTG_HCCHAR_ODDFRM_Msk                EQU		0x1 << USB_OTG_HCCHAR_ODDFRM_Pos    ;/*!< 0x20000000 */
USB_OTG_HCCHAR_ODDFRM                    EQU		USB_OTG_HCCHAR_ODDFRM_Msk     ;/*!< Odd frame */
USB_OTG_HCCHAR_CHDIS_Pos                 EQU		30                         
USB_OTG_HCCHAR_CHDIS_Msk                 EQU		0x1 << USB_OTG_HCCHAR_CHDIS_Pos    ;/*!< 0x40000000 */
USB_OTG_HCCHAR_CHDIS                     EQU		USB_OTG_HCCHAR_CHDIS_Msk      ;/*!< Channel disable */
USB_OTG_HCCHAR_CHENA_Pos                 EQU		31                         
USB_OTG_HCCHAR_CHENA_Msk                 EQU		0x1 << USB_OTG_HCCHAR_CHENA_Pos    ;/*!< 0x80000000 */
USB_OTG_HCCHAR_CHENA                     EQU		USB_OTG_HCCHAR_CHENA_Msk      ;/*!< Channel enable */

USB_OTG_HCSPLT0			                 EQU		0x504
USB_OTG_HCSPLT1			                 EQU		0x524
USB_OTG_HCSPLT2			                 EQU		0x544
USB_OTG_HCSPLT3			                 EQU		0x564
USB_OTG_HCSPLT4			                 EQU		0x584
USB_OTG_HCSPLT5			                 EQU		0x5A4
USB_OTG_HCSPLT6			                 EQU		0x5C4
USB_OTG_HCSPLT7			                 EQU		0x5E4
USB_OTG_HCSPLT8			                 EQU		0x604
USB_OTG_HCSPLT9			                 EQU		0x624
USB_OTG_HCSPLT10		                 EQU		0x644
USB_OTG_HCSPLT11		                 EQU		0x664
;/********************  Bit definition for USB_OTG_HCSPLT register  ********************/
USB_OTG_HCSPLT_PRTADDR_Pos               EQU		0                          
USB_OTG_HCSPLT_PRTADDR_Msk               EQU		0x7F << USB_OTG_HCSPLT_PRTADDR_Pos    ;/*!< 0x0000007F */
USB_OTG_HCSPLT_PRTADDR                   EQU		USB_OTG_HCSPLT_PRTADDR_Msk    ;/*!< Port address */
USB_OTG_HCSPLT_PRTADDR_0                 EQU		0x01 << USB_OTG_HCSPLT_PRTADDR_Pos    ;/*!< 0x00000001 */
USB_OTG_HCSPLT_PRTADDR_1                 EQU		0x02 << USB_OTG_HCSPLT_PRTADDR_Pos    ;/*!< 0x00000002 */
USB_OTG_HCSPLT_PRTADDR_2                 EQU		0x04 << USB_OTG_HCSPLT_PRTADDR_Pos    ;/*!< 0x00000004 */
USB_OTG_HCSPLT_PRTADDR_3                 EQU		0x08 << USB_OTG_HCSPLT_PRTADDR_Pos    ;/*!< 0x00000008 */
USB_OTG_HCSPLT_PRTADDR_4                 EQU		0x10 << USB_OTG_HCSPLT_PRTADDR_Pos    ;/*!< 0x00000010 */
USB_OTG_HCSPLT_PRTADDR_5                 EQU		0x20 << USB_OTG_HCSPLT_PRTADDR_Pos    ;/*!< 0x00000020 */
USB_OTG_HCSPLT_PRTADDR_6                 EQU		0x40 << USB_OTG_HCSPLT_PRTADDR_Pos    ;/*!< 0x00000040 */

USB_OTG_HCSPLT_HUBADDR_Pos               EQU		7                          
USB_OTG_HCSPLT_HUBADDR_Msk               EQU		0x7F << USB_OTG_HCSPLT_HUBADDR_Pos    ;/*!< 0x00003F80 */
USB_OTG_HCSPLT_HUBADDR                   EQU		USB_OTG_HCSPLT_HUBADDR_Msk    ;/*!< Hub address */
USB_OTG_HCSPLT_HUBADDR_0                 EQU		0x01 << USB_OTG_HCSPLT_HUBADDR_Pos    ;/*!< 0x00000080 */
USB_OTG_HCSPLT_HUBADDR_1                 EQU		0x02 << USB_OTG_HCSPLT_HUBADDR_Pos    ;/*!< 0x00000100 */
USB_OTG_HCSPLT_HUBADDR_2                 EQU		0x04 << USB_OTG_HCSPLT_HUBADDR_Pos    ;/*!< 0x00000200 */
USB_OTG_HCSPLT_HUBADDR_3                 EQU		0x08 << USB_OTG_HCSPLT_HUBADDR_Pos    ;/*!< 0x00000400 */
USB_OTG_HCSPLT_HUBADDR_4                 EQU		0x10 << USB_OTG_HCSPLT_HUBADDR_Pos    ;/*!< 0x00000800 */
USB_OTG_HCSPLT_HUBADDR_5                 EQU		0x20 << USB_OTG_HCSPLT_HUBADDR_Pos    ;/*!< 0x00001000 */
USB_OTG_HCSPLT_HUBADDR_6                 EQU		0x40 << USB_OTG_HCSPLT_HUBADDR_Pos    ;/*!< 0x00002000 */

USB_OTG_HCSPLT_XACTPOS_Pos               EQU		14                         
USB_OTG_HCSPLT_XACTPOS_Msk               EQU		0x3 << USB_OTG_HCSPLT_XACTPOS_Pos    ;/*!< 0x0000C000 */
USB_OTG_HCSPLT_XACTPOS                   EQU		USB_OTG_HCSPLT_XACTPOS_Msk    ;/*!< XACTPOS */
USB_OTG_HCSPLT_XACTPOS_0                 EQU		0x1 << USB_OTG_HCSPLT_XACTPOS_Pos    ;/*!< 0x00004000 */
USB_OTG_HCSPLT_XACTPOS_1                 EQU		0x2 << USB_OTG_HCSPLT_XACTPOS_Pos    ;/*!< 0x00008000 */
USB_OTG_HCSPLT_COMPLSPLT_Pos             EQU		16                         
USB_OTG_HCSPLT_COMPLSPLT_Msk             EQU		0x1 << USB_OTG_HCSPLT_COMPLSPLT_Pos    ;/*!< 0x00010000 */
USB_OTG_HCSPLT_COMPLSPLT                 EQU		USB_OTG_HCSPLT_COMPLSPLT_Msk  ;/*!< Do complete split */
USB_OTG_HCSPLT_SPLITEN_Pos               EQU		31                         
USB_OTG_HCSPLT_SPLITEN_Msk               EQU		0x1 << USB_OTG_HCSPLT_SPLITEN_Pos    ;/*!< 0x80000000 */
USB_OTG_HCSPLT_SPLITEN                   EQU		USB_OTG_HCSPLT_SPLITEN_Msk    ;/*!< Split enable */

USB_OTG_HCINT0			                 EQU		0x508
USB_OTG_HCINT1			                 EQU		0x528
USB_OTG_HCINT2			                 EQU		0x548
USB_OTG_HCINT3			                 EQU		0x568
USB_OTG_HCINT4			                 EQU		0x588
USB_OTG_HCINT5			                 EQU		0x5A8
USB_OTG_HCINT6			                 EQU		0x5C8
USB_OTG_HCINT7			                 EQU		0x5E8
USB_OTG_HCINT8			                 EQU		0x608
USB_OTG_HCINT9			                 EQU		0x628
USB_OTG_HCINT10			                 EQU		0x648
USB_OTG_HCINT11			                 EQU		0x668
;/********************  Bit definition for USB_OTG_HCINT register  ********************/
USB_OTG_HCINT_XFRC_Pos                   EQU		0                          
USB_OTG_HCINT_XFRC_Msk                   EQU		0x1 << USB_OTG_HCINT_XFRC_Pos    ;/*!< 0x00000001 */
USB_OTG_HCINT_XFRC                       EQU		USB_OTG_HCINT_XFRC_Msk        ;/*!< Transfer completed */
USB_OTG_HCINT_CHH_Pos                    EQU		1                          
USB_OTG_HCINT_CHH_Msk                    EQU		0x1 << USB_OTG_HCINT_CHH_Pos    ;/*!< 0x00000002 */
USB_OTG_HCINT_CHH                        EQU		USB_OTG_HCINT_CHH_Msk         ;/*!< Channel halted */
USB_OTG_HCINT_AHBERR_Pos                 EQU		2                          
USB_OTG_HCINT_AHBERR_Msk                 EQU		0x1 << USB_OTG_HCINT_AHBERR_Pos    ;/*!< 0x00000004 */
USB_OTG_HCINT_AHBERR                     EQU		USB_OTG_HCINT_AHBERR_Msk      ;/*!< AHB error */
USB_OTG_HCINT_STALL_Pos                  EQU		3                          
USB_OTG_HCINT_STALL_Msk                  EQU		0x1 << USB_OTG_HCINT_STALL_Pos    ;/*!< 0x00000008 */
USB_OTG_HCINT_STALL                      EQU		USB_OTG_HCINT_STALL_Msk       ;/*!< STALL response received interrupt */
USB_OTG_HCINT_NAK_Pos                    EQU		4                          
USB_OTG_HCINT_NAK_Msk                    EQU		0x1 << USB_OTG_HCINT_NAK_Pos    ;/*!< 0x00000010 */
USB_OTG_HCINT_NAK                        EQU		USB_OTG_HCINT_NAK_Msk         ;/*!< NAK response received interrupt */
USB_OTG_HCINT_ACK_Pos                    EQU		5                          
USB_OTG_HCINT_ACK_Msk                    EQU		0x1 << USB_OTG_HCINT_ACK_Pos    ;/*!< 0x00000020 */
USB_OTG_HCINT_ACK                        EQU		USB_OTG_HCINT_ACK_Msk         ;/*!< ACK response received/transmitted interrupt */
USB_OTG_HCINT_NYET_Pos                   EQU		6                          
USB_OTG_HCINT_NYET_Msk                   EQU		0x1 << USB_OTG_HCINT_NYET_Pos    ;/*!< 0x00000040 */
USB_OTG_HCINT_NYET                       EQU		USB_OTG_HCINT_NYET_Msk        ;/*!< Response received interrupt */
USB_OTG_HCINT_TXERR_Pos                  EQU		7                          
USB_OTG_HCINT_TXERR_Msk                  EQU		0x1 << USB_OTG_HCINT_TXERR_Pos    ;/*!< 0x00000080 */
USB_OTG_HCINT_TXERR                      EQU		USB_OTG_HCINT_TXERR_Msk       ;/*!< Transaction error */
USB_OTG_HCINT_BBERR_Pos                  EQU		8                          
USB_OTG_HCINT_BBERR_Msk                  EQU		0x1 << USB_OTG_HCINT_BBERR_Pos    ;/*!< 0x00000100 */
USB_OTG_HCINT_BBERR                      EQU		USB_OTG_HCINT_BBERR_Msk       ;/*!< Babble error */
USB_OTG_HCINT_FRMOR_Pos                  EQU		9                          
USB_OTG_HCINT_FRMOR_Msk                  EQU		0x1 << USB_OTG_HCINT_FRMOR_Pos    ;/*!< 0x00000200 */
USB_OTG_HCINT_FRMOR                      EQU		USB_OTG_HCINT_FRMOR_Msk       ;/*!< Frame overrun */
USB_OTG_HCINT_DTERR_Pos                  EQU		10                         
USB_OTG_HCINT_DTERR_Msk                  EQU		0x1 << USB_OTG_HCINT_DTERR_Pos    ;/*!< 0x00000400 */
USB_OTG_HCINT_DTERR                      EQU		USB_OTG_HCINT_DTERR_Msk       ;/*!< Data toggle error */

USB_OTG_DIEPINT0		                 EQU		0x908
USB_OTG_DIEPINT1		                 EQU		0x928
USB_OTG_DIEPINT2		                 EQU		0x948
USB_OTG_DIEPINT3		                 EQU		0x968
USB_OTG_DIEPINT4		                 EQU		0x988
USB_OTG_DIEPINT5		                 EQU		0x9A8
USB_OTG_DIEPINT6		                 EQU		0x9C8
USB_OTG_DIEPINT7		                 EQU		0x9E8
;/********************  Bit definition for USB_OTG_DIEPINT register  ********************/
USB_OTG_DIEPINT_XFRC_Pos                 EQU		0                          
USB_OTG_DIEPINT_XFRC_Msk                 EQU		0x1 << USB_OTG_DIEPINT_XFRC_Pos    ;/*!< 0x00000001 */
USB_OTG_DIEPINT_XFRC                     EQU		USB_OTG_DIEPINT_XFRC_Msk      ;/*!< Transfer completed interrupt */
USB_OTG_DIEPINT_EPDISD_Pos               EQU		1                          
USB_OTG_DIEPINT_EPDISD_Msk               EQU		0x1 << USB_OTG_DIEPINT_EPDISD_Pos    ;/*!< 0x00000002 */
USB_OTG_DIEPINT_EPDISD                   EQU		USB_OTG_DIEPINT_EPDISD_Msk    ;/*!< Endpoint disabled interrupt */
USB_OTG_DIEPINT_TOC_Pos                  EQU		3                          
USB_OTG_DIEPINT_TOC_Msk                  EQU		0x1 << USB_OTG_DIEPINT_TOC_Pos    ;/*!< 0x00000008 */
USB_OTG_DIEPINT_TOC                      EQU		USB_OTG_DIEPINT_TOC_Msk       ;/*!< Timeout condition */
USB_OTG_DIEPINT_ITTXFE_Pos               EQU		4                          
USB_OTG_DIEPINT_ITTXFE_Msk               EQU		0x1 << USB_OTG_DIEPINT_ITTXFE_Pos    ;/*!< 0x00000010 */
USB_OTG_DIEPINT_ITTXFE                   EQU		USB_OTG_DIEPINT_ITTXFE_Msk    ;/*!< IN token received when TxFIFO is empty */
USB_OTG_DIEPINT_INEPNE_Pos               EQU		6                          
USB_OTG_DIEPINT_INEPNE_Msk               EQU		0x1 << USB_OTG_DIEPINT_INEPNE_Pos    ;/*!< 0x00000040 */
USB_OTG_DIEPINT_INEPNE                   EQU		USB_OTG_DIEPINT_INEPNE_Msk    ;/*!< IN endpoint NAK effective */
USB_OTG_DIEPINT_TXFE_Pos                 EQU		7                          
USB_OTG_DIEPINT_TXFE_Msk                 EQU		0x1 << USB_OTG_DIEPINT_TXFE_Pos    ;/*!< 0x00000080 */
USB_OTG_DIEPINT_TXFE                     EQU		USB_OTG_DIEPINT_TXFE_Msk      ;/*!< Transmit FIFO empty */
USB_OTG_DIEPINT_TXFIFOUDRN_Pos           EQU		8                          
USB_OTG_DIEPINT_TXFIFOUDRN_Msk           EQU		0x1 << USB_OTG_DIEPINT_TXFIFOUDRN_Pos    ;/*!< 0x00000100 */
USB_OTG_DIEPINT_TXFIFOUDRN               EQU		USB_OTG_DIEPINT_TXFIFOUDRN_Msk ;/*!< Transmit Fifo Underrun */
USB_OTG_DIEPINT_BNA_Pos                  EQU		9                          
USB_OTG_DIEPINT_BNA_Msk                  EQU		0x1 << USB_OTG_DIEPINT_BNA_Pos    ;/*!< 0x00000200 */
USB_OTG_DIEPINT_BNA                      EQU		USB_OTG_DIEPINT_BNA_Msk       ;/*!< Buffer not available interrupt */
USB_OTG_DIEPINT_PKTDRPSTS_Pos            EQU		11                         
USB_OTG_DIEPINT_PKTDRPSTS_Msk            EQU		0x1 << USB_OTG_DIEPINT_PKTDRPSTS_Pos    ;/*!< 0x00000800 */
USB_OTG_DIEPINT_PKTDRPSTS                EQU		USB_OTG_DIEPINT_PKTDRPSTS_Msk ;/*!< Packet dropped status */
USB_OTG_DIEPINT_BERR_Pos                 EQU		12                         
USB_OTG_DIEPINT_BERR_Msk                 EQU		0x1 << USB_OTG_DIEPINT_BERR_Pos    ;/*!< 0x00001000 */
USB_OTG_DIEPINT_BERR                     EQU		USB_OTG_DIEPINT_BERR_Msk      ;/*!< Babble error interrupt */
USB_OTG_DIEPINT_NAK_Pos                  EQU		13                         
USB_OTG_DIEPINT_NAK_Msk                  EQU		0x1 << USB_OTG_DIEPINT_NAK_Pos    ;/*!< 0x00002000 */
USB_OTG_DIEPINT_NAK                      EQU		USB_OTG_DIEPINT_NAK_Msk       ;/*!< NAK interrupt */

USB_OTG_HCINTMSK0		                 EQU		0x50C
USB_OTG_HCINTMSK1		                 EQU		0x52C
USB_OTG_HCINTMSK2		                 EQU		0x54C
USB_OTG_HCINTMSK3		                 EQU		0x56C
USB_OTG_HCINTMSK4		                 EQU		0x58C
USB_OTG_HCINTMSK5		                 EQU		0x5AC
USB_OTG_HCINTMSK6		                 EQU		0x5CC
USB_OTG_HCINTMSK7		                 EQU		0x5EC
USB_OTG_HCINTMSK8		                 EQU		0x60C
USB_OTG_HCINTMSK9		                 EQU		0x62C
USB_OTG_HCINTMSK10		                 EQU		0x64C
USB_OTG_HCINTMSK11		                 EQU		0x66C
;/********************  Bit definition forUSB_OTG_HCINTMSK register  ********************/
USB_OTG_HCINTMSK_XFRCM_Pos               EQU		0                          
USB_OTG_HCINTMSK_XFRCM_Msk               EQU		0x1 << USB_OTG_HCINTMSK_XFRCM_Pos    ;/*!< 0x00000001 */
USB_OTG_HCINTMSK_XFRCM                   EQU		USB_OTG_HCINTMSK_XFRCM_Msk    ;/*!< Transfer completed mask */
USB_OTG_HCINTMSK_CHHM_Pos                EQU		1                          
USB_OTG_HCINTMSK_CHHM_Msk                EQU		0x1 << USB_OTG_HCINTMSK_CHHM_Pos    ;/*!< 0x00000002 */
USB_OTG_HCINTMSK_CHHM                    EQU		USB_OTG_HCINTMSK_CHHM_Msk     ;/*!< Channel halted mask */
USB_OTG_HCINTMSK_AHBERR_Pos              EQU		2                          
USB_OTG_HCINTMSK_AHBERR_Msk              EQU		0x1 << USB_OTG_HCINTMSK_AHBERR_Pos    ;/*!< 0x00000004 */
USB_OTG_HCINTMSK_AHBERR                  EQU		USB_OTG_HCINTMSK_AHBERR_Msk   ;/*!< AHB error */
USB_OTG_HCINTMSK_STALLM_Pos              EQU		3                          
USB_OTG_HCINTMSK_STALLM_Msk              EQU		0x1 << USB_OTG_HCINTMSK_STALLM_Pos    ;/*!< 0x00000008 */
USB_OTG_HCINTMSK_STALLM                  EQU		USB_OTG_HCINTMSK_STALLM_Msk   ;/*!< STALL response received interrupt mask */
USB_OTG_HCINTMSK_NAKM_Pos                EQU		4                          
USB_OTG_HCINTMSK_NAKM_Msk                EQU		0x1 << USB_OTG_HCINTMSK_NAKM_Pos    ;/*!< 0x00000010 */
USB_OTG_HCINTMSK_NAKM                    EQU		USB_OTG_HCINTMSK_NAKM_Msk     ;/*!< NAK response received interrupt mask */
USB_OTG_HCINTMSK_ACKM_Pos                EQU		5                          
USB_OTG_HCINTMSK_ACKM_Msk                EQU		0x1 << USB_OTG_HCINTMSK_ACKM_Pos    ;/*!< 0x00000020 */
USB_OTG_HCINTMSK_ACKM                    EQU		USB_OTG_HCINTMSK_ACKM_Msk     ;/*!< ACK response received/transmitted interrupt mask */
USB_OTG_HCINTMSK_NYET_Pos                EQU		6                          
USB_OTG_HCINTMSK_NYET_Msk                EQU		0x1 << USB_OTG_HCINTMSK_NYET_Pos    ;/*!< 0x00000040 */
USB_OTG_HCINTMSK_NYET                    EQU		USB_OTG_HCINTMSK_NYET_Msk     ;/*!< response received interrupt mask */
USB_OTG_HCINTMSK_TXERRM_Pos              EQU		7                          
USB_OTG_HCINTMSK_TXERRM_Msk              EQU		0x1 << USB_OTG_HCINTMSK_TXERRM_Pos    ;/*!< 0x00000080 */
USB_OTG_HCINTMSK_TXERRM                  EQU		USB_OTG_HCINTMSK_TXERRM_Msk   ;/*!< Transaction error mask */
USB_OTG_HCINTMSK_BBERRM_Pos              EQU		8                          
USB_OTG_HCINTMSK_BBERRM_Msk              EQU		0x1 << USB_OTG_HCINTMSK_BBERRM_Pos    ;/*!< 0x00000100 */
USB_OTG_HCINTMSK_BBERRM                  EQU		USB_OTG_HCINTMSK_BBERRM_Msk   ;/*!< Babble error mask */
USB_OTG_HCINTMSK_FRMORM_Pos              EQU		9                          
USB_OTG_HCINTMSK_FRMORM_Msk              EQU		0x1 << USB_OTG_HCINTMSK_FRMORM_Pos    ;/*!< 0x00000200 */
USB_OTG_HCINTMSK_FRMORM                  EQU		USB_OTG_HCINTMSK_FRMORM_Msk   ;/*!< Frame overrun mask */
USB_OTG_HCINTMSK_DTERRM_Pos              EQU		10                         
USB_OTG_HCINTMSK_DTERRM_Msk              EQU		0x1 << USB_OTG_HCINTMSK_DTERRM_Pos    ;/*!< 0x00000400 */
USB_OTG_HCINTMSK_DTERRM                  EQU		USB_OTG_HCINTMSK_DTERRM_Msk   ;/*!< Data toggle error mask */

USB_OTG_DIEPTSIZ0			             EQU		0x910
USB_OTG_DIEPTSIZ1			             EQU		0x930
USB_OTG_DIEPTSIZ2			             EQU		0x950
USB_OTG_DIEPTSIZ3			             EQU		0x970
;/********************  Bit definition for USB_OTG_DIEPTSIZ register  ********************/
USB_OTG_DIEPTSIZ_XFRSIZ_Pos              EQU		0                          
USB_OTG_DIEPTSIZ_XFRSIZ_Msk              EQU		0x7FFFF << USB_OTG_DIEPTSIZ_XFRSIZ_Pos    ;/*!< 0x0007FFFF */
USB_OTG_DIEPTSIZ_XFRSIZ                  EQU		USB_OTG_DIEPTSIZ_XFRSIZ_Msk   ;/*!< Transfer size */
USB_OTG_DIEPTSIZ_PKTCNT_Pos              EQU		19                         
USB_OTG_DIEPTSIZ_PKTCNT_Msk              EQU		0x3FF << USB_OTG_DIEPTSIZ_PKTCNT_Pos    ;/*!< 0x1FF80000 */
USB_OTG_DIEPTSIZ_PKTCNT                  EQU		USB_OTG_DIEPTSIZ_PKTCNT_Msk   ;/*!< Packet count */
USB_OTG_DIEPTSIZ_MULCNT_Pos              EQU		29                         
USB_OTG_DIEPTSIZ_MULCNT_Msk              EQU		0x3 << USB_OTG_DIEPTSIZ_MULCNT_Pos    ;/*!< 0x60000000 */
USB_OTG_DIEPTSIZ_MULCNT                  EQU		USB_OTG_DIEPTSIZ_MULCNT_Msk   ;/*!< Packet count */

USB_OTG_HCTSIZ0			                 EQU		0x510
USB_OTG_HCTSIZ1			                 EQU		0x530
USB_OTG_HCTSIZ2			                 EQU		0x550
USB_OTG_HCTSIZ3			                 EQU		0x570
USB_OTG_HCTSIZ4			                 EQU		0x590
USB_OTG_HCTSIZ5			                 EQU		0x5B0
USB_OTG_HCTSIZ6			                 EQU		0x5D0
USB_OTG_HCTSIZ7			                 EQU		0x5F0
USB_OTG_HCTSIZ8			                 EQU		0x610
USB_OTG_HCTSIZ9			                 EQU		0x630
USB_OTG_HCTSIZ10		                 EQU		0x650
USB_OTG_HCTSIZ11		                 EQU		0x670
;/********************  Bit definition for USB_OTG_HCTSIZ register  ********************/
USB_OTG_HCTSIZ_XFRSIZ_Pos                EQU		0                          
USB_OTG_HCTSIZ_XFRSIZ_Msk                EQU		0x7FFFF << USB_OTG_HCTSIZ_XFRSIZ_Pos    ;/*!< 0x0007FFFF */
USB_OTG_HCTSIZ_XFRSIZ                    EQU		USB_OTG_HCTSIZ_XFRSIZ_Msk     ;/*!< Transfer size */
USB_OTG_HCTSIZ_PKTCNT_Pos                EQU		19                         
USB_OTG_HCTSIZ_PKTCNT_Msk                EQU		0x3FF << USB_OTG_HCTSIZ_PKTCNT_Pos    ;/*!< 0x1FF80000 */
USB_OTG_HCTSIZ_PKTCNT                    EQU		USB_OTG_HCTSIZ_PKTCNT_Msk     ;/*!< Packet count */
USB_OTG_HCTSIZ_DOPING_Pos                EQU		31                         
USB_OTG_HCTSIZ_DOPING_Msk                EQU		0x1 << USB_OTG_HCTSIZ_DOPING_Pos    ;/*!< 0x80000000 */
USB_OTG_HCTSIZ_DOPING                    EQU		USB_OTG_HCTSIZ_DOPING_Msk     ;/*!< Do PING */
USB_OTG_HCTSIZ_DPID_Pos                  EQU		29                         
USB_OTG_HCTSIZ_DPID_Msk                  EQU		0x3 << USB_OTG_HCTSIZ_DPID_Pos    ;/*!< 0x60000000 */
USB_OTG_HCTSIZ_DPID                      EQU		USB_OTG_HCTSIZ_DPID_Msk       ;/*!< Data PID */
USB_OTG_HCTSIZ_DPID_0                    EQU		0x1 << USB_OTG_HCTSIZ_DPID_Pos    ;/*!< 0x20000000 */
USB_OTG_HCTSIZ_DPID_1                    EQU		0x2 << USB_OTG_HCTSIZ_DPID_Pos    ;/*!< 0x40000000 */

USB_OTG_DIEPDMA1			             EQU		0x934
USB_OTG_DIEPDMA2			             EQU		0x954
USB_OTG_DIEPDMA3			             EQU		0x974
USB_OTG_DIEPDMA4			             EQU		0x994
USB_OTG_DIEPDMA5			             EQU		0x9B4
;/********************  Bit definition for USB_OTG_DIEPDMA register  ********************/
USB_OTG_DIEPDMA_DMAADDR_Pos              EQU		0                          
USB_OTG_DIEPDMA_DMAADDR_Msk              EQU		0xFFFFFFFF << USB_OTG_DIEPDMA_DMAADDR_Pos    ;/*!< 0xFFFFFFFF */
USB_OTG_DIEPDMA_DMAADDR                  EQU		USB_OTG_DIEPDMA_DMAADDR_Msk   ;/*!< DMA address */

USB_OTG_HCDMA0			                 EQU		0x514
USB_OTG_HCDMA1			                 EQU		0x534
USB_OTG_HCDMA2			                 EQU		0x554
USB_OTG_HCDMA3			                 EQU		0x574
USB_OTG_HCDMA4			                 EQU		0x594
USB_OTG_HCDMA5			                 EQU		0x5B4
USB_OTG_HCDMA6			                 EQU		0x5D4
USB_OTG_HCDMA7			                 EQU		0x5F4
USB_OTG_HCDMA8			                 EQU		0x614
USB_OTG_HCDMA9			                 EQU		0x634
USB_OTG_HCDMA10			                 EQU		0x654
USB_OTG_HCDMA11			                 EQU		0x674
;/********************  Bit definition for USB_OTG_HCDMA register  ********************/
USB_OTG_HCDMA_DMAADDR_Pos                EQU		0                          
USB_OTG_HCDMA_DMAADDR_Msk                EQU		0xFFFFFFFF << USB_OTG_HCDMA_DMAADDR_Pos    ;/*!< 0xFFFFFFFF */
USB_OTG_HCDMA_DMAADDR                    EQU		USB_OTG_HCDMA_DMAADDR_Msk     ;/*!< DMA address */

USB_OTG_DTXFSTS0			             EQU		0x918
USB_OTG_DTXFSTS1			             EQU		0x938
USB_OTG_DTXFSTS2			             EQU		0x958
USB_OTG_DTXFSTS3			             EQU		0x978
USB_OTG_DTXFSTS4			             EQU		0x998
USB_OTG_DTXFSTS5			             EQU		0x9B8
;/********************  Bit definition for USB_OTG_DTXFSTS register  ********************/
USB_OTG_DTXFSTS_INEPTFSAV_Pos            EQU		0                          
USB_OTG_DTXFSTS_INEPTFSAV_Msk            EQU		0xFFFF << USB_OTG_DTXFSTS_INEPTFSAV_Pos    ;/*!< 0x0000FFFF */
USB_OTG_DTXFSTS_INEPTFSAV                EQU		USB_OTG_DTXFSTS_INEPTFSAV_Msk ;/*!< IN endpoint TxFIFO space available */

USB_OTG_DIEPTXF1			             EQU		0x104
USB_OTG_DIEPTXF2			             EQU		0x108
USB_OTG_DIEPTXF3			             EQU		0x10C
USB_OTG_DIEPTXF4			             EQU		0x110
USB_OTG_DIEPTXF5			             EQU		0x114
USB_OTG_DIEPTXF6			             EQU		0x118
USB_OTG_DIEPTXF7			             EQU		0x11C
;/********************  Bit definition for USB_OTG_DIEPTXF register  ********************/
USB_OTG_DIEPTXF_INEPTXSA_Pos             EQU		0                          
USB_OTG_DIEPTXF_INEPTXSA_Msk             EQU		0xFFFF << USB_OTG_DIEPTXF_INEPTXSA_Pos    ;/*!< 0x0000FFFF */
USB_OTG_DIEPTXF_INEPTXSA                 EQU		USB_OTG_DIEPTXF_INEPTXSA_Msk  ;/*!< IN endpoint FIFOx transmit RAM start address */
USB_OTG_DIEPTXF_INEPTXFD_Pos             EQU		16                         
USB_OTG_DIEPTXF_INEPTXFD_Msk             EQU		0xFFFF << USB_OTG_DIEPTXF_INEPTXFD_Pos    ;/*!< 0xFFFF0000 */
USB_OTG_DIEPTXF_INEPTXFD                 EQU		USB_OTG_DIEPTXF_INEPTXFD_Msk  ;/*!< IN endpoint TxFIFO depth */

USB_OTG_DOEPCTL0			             EQU		0xB00
USB_OTG_DOEPCTL1			             EQU		0xB20
USB_OTG_DOEPCTL2			             EQU		0xB40
USB_OTG_DOEPCTL3			             EQU		0xB60
;/********************  Bit definition for USB_OTG_DOEPCTL register  ********************/
USB_OTG_DOEPCTL_MPSIZ_Pos                EQU		0                          
USB_OTG_DOEPCTL_MPSIZ_Msk                EQU		0x7FF << USB_OTG_DOEPCTL_MPSIZ_Pos    ;/*!< 0x000007FF */
USB_OTG_DOEPCTL_MPSIZ                    EQU		USB_OTG_DOEPCTL_MPSIZ_Msk     ;/*!< Maximum packet size */          ;/*!<Bit 1 */
USB_OTG_DOEPCTL_USBAEP_Pos               EQU		15                         
USB_OTG_DOEPCTL_USBAEP_Msk               EQU		0x1 << USB_OTG_DOEPCTL_USBAEP_Pos    ;/*!< 0x00008000 */
USB_OTG_DOEPCTL_USBAEP                   EQU		USB_OTG_DOEPCTL_USBAEP_Msk    ;/*!< USB active endpoint */
USB_OTG_DOEPCTL_NAKSTS_Pos               EQU		17                         
USB_OTG_DOEPCTL_NAKSTS_Msk               EQU		0x1 << USB_OTG_DOEPCTL_NAKSTS_Pos    ;/*!< 0x00020000 */
USB_OTG_DOEPCTL_NAKSTS                   EQU		USB_OTG_DOEPCTL_NAKSTS_Msk    ;/*!< NAK status */
USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Pos       EQU		28                         
USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Msk       EQU		0x1 << USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Pos    ;/*!< 0x10000000 */
USB_OTG_DOEPCTL_SD0PID_SEVNFRM           EQU		USB_OTG_DOEPCTL_SD0PID_SEVNFRM_Msk ;/*!< Set DATA0 PID */
USB_OTG_DOEPCTL_SODDFRM_Pos              EQU		29                         
USB_OTG_DOEPCTL_SODDFRM_Msk              EQU		0x1 << USB_OTG_DOEPCTL_SODDFRM_Pos    ;/*!< 0x20000000 */
USB_OTG_DOEPCTL_SODDFRM                  EQU		USB_OTG_DOEPCTL_SODDFRM_Msk   ;/*!< Set odd frame */
USB_OTG_DOEPCTL_EPTYP_Pos                EQU		18                         
USB_OTG_DOEPCTL_EPTYP_Msk                EQU		0x3 << USB_OTG_DOEPCTL_EPTYP_Pos    ;/*!< 0x000C0000 */
USB_OTG_DOEPCTL_EPTYP                    EQU		USB_OTG_DOEPCTL_EPTYP_Msk     ;/*!< Endpoint type */
USB_OTG_DOEPCTL_EPTYP_0                  EQU		0x1 << USB_OTG_DOEPCTL_EPTYP_Pos    ;/*!< 0x00040000 */
USB_OTG_DOEPCTL_EPTYP_1                  EQU		0x2 << USB_OTG_DOEPCTL_EPTYP_Pos    ;/*!< 0x00080000 */
USB_OTG_DOEPCTL_SNPM_Pos                 EQU		20                         
USB_OTG_DOEPCTL_SNPM_Msk                 EQU		0x1 << USB_OTG_DOEPCTL_SNPM_Pos    ;/*!< 0x00100000 */
USB_OTG_DOEPCTL_SNPM                     EQU		USB_OTG_DOEPCTL_SNPM_Msk      ;/*!< Snoop mode */
USB_OTG_DOEPCTL_STALL_Pos                EQU		21                         
USB_OTG_DOEPCTL_STALL_Msk                EQU		0x1 << USB_OTG_DOEPCTL_STALL_Pos    ;/*!< 0x00200000 */
USB_OTG_DOEPCTL_STALL                    EQU		USB_OTG_DOEPCTL_STALL_Msk     ;/*!< STALL handshake */
USB_OTG_DOEPCTL_CNAK_Pos                 EQU		26                         
USB_OTG_DOEPCTL_CNAK_Msk                 EQU		0x1 << USB_OTG_DOEPCTL_CNAK_Pos    ;/*!< 0x04000000 */
USB_OTG_DOEPCTL_CNAK                     EQU		USB_OTG_DOEPCTL_CNAK_Msk      ;/*!< Clear NAK */
USB_OTG_DOEPCTL_SNAK_Pos                 EQU		27                         
USB_OTG_DOEPCTL_SNAK_Msk                 EQU		0x1 << USB_OTG_DOEPCTL_SNAK_Pos    ;/*!< 0x08000000 */
USB_OTG_DOEPCTL_SNAK                     EQU		USB_OTG_DOEPCTL_SNAK_Msk      ;/*!< Set NAK */
USB_OTG_DOEPCTL_EPDIS_Pos                EQU		30                         
USB_OTG_DOEPCTL_EPDIS_Msk                EQU		0x1 << USB_OTG_DOEPCTL_EPDIS_Pos    ;/*!< 0x40000000 */
USB_OTG_DOEPCTL_EPDIS                    EQU		USB_OTG_DOEPCTL_EPDIS_Msk     ;/*!< Endpoint disable */
USB_OTG_DOEPCTL_EPENA_Pos                EQU		31                         
USB_OTG_DOEPCTL_EPENA_Msk                EQU		0x1 << USB_OTG_DOEPCTL_EPENA_Pos    ;/*!< 0x80000000 */
USB_OTG_DOEPCTL_EPENA                    EQU		USB_OTG_DOEPCTL_EPENA_Msk     ;/*!< Endpoint enable */

USB_OTG_DOEPINT0		                 EQU		0x908
USB_OTG_DOEPINT1		                 EQU		0x928
USB_OTG_DOEPINT2		                 EQU		0x948
USB_OTG_DOEPINT3		                 EQU		0x968
USB_OTG_DOEPINT4		                 EQU		0x988
USB_OTG_DOEPINT5		                 EQU		0x9A8
USB_OTG_DOEPINT6		                 EQU		0x9C8
USB_OTG_DOEPINT7		                 EQU		0x9E8
;/********************  Bit definition for USB_OTG_DOEPINT register  ********************/
USB_OTG_DOEPINT_XFRC_Pos                 EQU		0                          
USB_OTG_DOEPINT_XFRC_Msk                 EQU		0x1 << USB_OTG_DOEPINT_XFRC_Pos    ;/*!< 0x00000001 */
USB_OTG_DOEPINT_XFRC                     EQU		USB_OTG_DOEPINT_XFRC_Msk      ;/*!< Transfer completed interrupt */
USB_OTG_DOEPINT_EPDISD_Pos               EQU		1                          
USB_OTG_DOEPINT_EPDISD_Msk               EQU		0x1 << USB_OTG_DOEPINT_EPDISD_Pos    ;/*!< 0x00000002 */
USB_OTG_DOEPINT_EPDISD                   EQU		USB_OTG_DOEPINT_EPDISD_Msk    ;/*!< Endpoint disabled interrupt */
USB_OTG_DOEPINT_STUP_Pos                 EQU		3                          
USB_OTG_DOEPINT_STUP_Msk                 EQU		0x1 << USB_OTG_DOEPINT_STUP_Pos    ;/*!< 0x00000008 */
USB_OTG_DOEPINT_STUP                     EQU		USB_OTG_DOEPINT_STUP_Msk      ;/*!< SETUP phase done */
USB_OTG_DOEPINT_OTEPDIS_Pos              EQU		4                          
USB_OTG_DOEPINT_OTEPDIS_Msk              EQU		0x1 << USB_OTG_DOEPINT_OTEPDIS_Pos    ;/*!< 0x00000010 */
USB_OTG_DOEPINT_OTEPDIS                  EQU		USB_OTG_DOEPINT_OTEPDIS_Msk   ;/*!< OUT token received when endpoint disabled */
USB_OTG_DOEPINT_B2BSTUP_Pos              EQU		6                          
USB_OTG_DOEPINT_B2BSTUP_Msk              EQU		0x1 << USB_OTG_DOEPINT_B2BSTUP_Pos    ;/*!< 0x00000040 */
USB_OTG_DOEPINT_B2BSTUP                  EQU		USB_OTG_DOEPINT_B2BSTUP_Msk   ;/*!< Back-to-back SETUP packets received */
USB_OTG_DOEPINT_NYET_Pos                 EQU		14                         
USB_OTG_DOEPINT_NYET_Msk                 EQU		0x1 << USB_OTG_DOEPINT_NYET_Pos    ;/*!< 0x00004000 */
USB_OTG_DOEPINT_NYET                     EQU		USB_OTG_DOEPINT_NYET_Msk      ;/*!< NYET interrupt */

USB_OTG_DOEPTSIZ0			             EQU		0xB10
USB_OTG_DOEPTSIZ1			             EQU		0xB30
USB_OTG_DOEPTSIZ2			             EQU		0xB50
USB_OTG_DOEPTSIZ3			             EQU		0xB70
USB_OTG_DOEPTSIZ4			             EQU		0xB90
USB_OTG_DOEPTSIZ5			             EQU		0xBB0
;/********************  Bit definition for USB_OTG_DOEPTSIZ register  ********************/
USB_OTG_DOEPTSIZ_XFRSIZ_Pos              EQU		0                          
USB_OTG_DOEPTSIZ_XFRSIZ_Msk              EQU		0x7FFFF << USB_OTG_DOEPTSIZ_XFRSIZ_Pos    ;/*!< 0x0007FFFF */
USB_OTG_DOEPTSIZ_XFRSIZ                  EQU		USB_OTG_DOEPTSIZ_XFRSIZ_Msk   ;/*!< Transfer size */
USB_OTG_DOEPTSIZ_PKTCNT_Pos              EQU		19                         
USB_OTG_DOEPTSIZ_PKTCNT_Msk              EQU		0x3FF << USB_OTG_DOEPTSIZ_PKTCNT_Pos    ;/*!< 0x1FF80000 */
USB_OTG_DOEPTSIZ_PKTCNT                  EQU		USB_OTG_DOEPTSIZ_PKTCNT_Msk   ;/*!< Packet count */

USB_OTG_DOEPTSIZ_STUPCNT_Pos             EQU		29                         
USB_OTG_DOEPTSIZ_STUPCNT_Msk             EQU		0x3 << USB_OTG_DOEPTSIZ_STUPCNT_Pos    ;/*!< 0x60000000 */
USB_OTG_DOEPTSIZ_STUPCNT                 EQU		USB_OTG_DOEPTSIZ_STUPCNT_Msk  ;/*!< SETUP packet count */
USB_OTG_DOEPTSIZ_STUPCNT_0               EQU		0x1 << USB_OTG_DOEPTSIZ_STUPCNT_Pos    ;/*!< 0x20000000 */
USB_OTG_DOEPTSIZ_STUPCNT_1               EQU		0x2 << USB_OTG_DOEPTSIZ_STUPCNT_Pos    ;/*!< 0x40000000 */

USB_OTG_PCGCCTL				             EQU		0xE00
;/********************  Bit definition for PCGCCTL register  ********************/
USB_OTG_PCGCCTL_STOPCLK_Pos              EQU		0                          
USB_OTG_PCGCCTL_STOPCLK_Msk              EQU		0x1 << USB_OTG_PCGCCTL_STOPCLK_Pos    ;/*!< 0x00000001 */
USB_OTG_PCGCCTL_STOPCLK                  EQU		USB_OTG_PCGCCTL_STOPCLK_Msk   ;/*!< SETUP packet count */
USB_OTG_PCGCCTL_GATECLK_Pos              EQU		1                          
USB_OTG_PCGCCTL_GATECLK_Msk              EQU		0x1 << USB_OTG_PCGCCTL_GATECLK_Pos    ;/*!< 0x00000002 */
USB_OTG_PCGCCTL_GATECLK                  EQU		USB_OTG_PCGCCTL_GATECLK_Msk   ;/*!<Bit 0 */
USB_OTG_PCGCCTL_PHYSUSP_Pos              EQU		4                          
USB_OTG_PCGCCTL_PHYSUSP_Msk              EQU		0x1 << USB_OTG_PCGCCTL_PHYSUSP_Pos    ;/*!< 0x00000010 */
USB_OTG_PCGCCTL_PHYSUSP                  EQU		USB_OTG_PCGCCTL_PHYSUSP_Msk   ;/*!<Bit 1 */

;/* Legacy define */
;/********************  Bit definition for OTG register  ********************/
USB_OTG_CHNUM_Pos                        EQU		0                          
USB_OTG_CHNUM_Msk                        EQU		0xF << USB_OTG_CHNUM_Pos      ;/*!< 0x0000000F */
USB_OTG_CHNUM                            EQU		USB_OTG_CHNUM_Msk             ;/*!< Channel number */
USB_OTG_CHNUM_0                          EQU		0x1 << USB_OTG_CHNUM_Pos      ;/*!< 0x00000001 */
USB_OTG_CHNUM_1                          EQU		0x2 << USB_OTG_CHNUM_Pos      ;/*!< 0x00000002 */
USB_OTG_CHNUM_2                          EQU		0x4 << USB_OTG_CHNUM_Pos      ;/*!< 0x00000004 */
USB_OTG_CHNUM_3                          EQU		0x8 << USB_OTG_CHNUM_Pos      ;/*!< 0x00000008 */
USB_OTG_BCNT_Pos                         EQU		4                          
USB_OTG_BCNT_Msk                         EQU		0x7FF << USB_OTG_BCNT_Pos     ;/*!< 0x00007FF0 */
USB_OTG_BCNT                             EQU		USB_OTG_BCNT_Msk              ;/*!< Byte count */

USB_OTG_DPID_Pos                         EQU		15                         
USB_OTG_DPID_Msk                         EQU		0x3 << USB_OTG_DPID_Pos       ;/*!< 0x00018000 */
USB_OTG_DPID                             EQU		USB_OTG_DPID_Msk              ;/*!< Data PID */
USB_OTG_DPID_0                           EQU		0x1 << USB_OTG_DPID_Pos       ;/*!< 0x00008000 */
USB_OTG_DPID_1                           EQU		0x2 << USB_OTG_DPID_Pos       ;/*!< 0x00010000 */

USB_OTG_PKTSTS_Pos                       EQU		17                         
USB_OTG_PKTSTS_Msk                       EQU		0xF << USB_OTG_PKTSTS_Pos     ;/*!< 0x001E0000 */
USB_OTG_PKTSTS                           EQU		USB_OTG_PKTSTS_Msk            ;/*!< Packet status */
USB_OTG_PKTSTS_0                         EQU		0x1 << USB_OTG_PKTSTS_Pos     ;/*!< 0x00020000 */
USB_OTG_PKTSTS_1                         EQU		0x2 << USB_OTG_PKTSTS_Pos     ;/*!< 0x00040000 */
USB_OTG_PKTSTS_2                         EQU		0x4 << USB_OTG_PKTSTS_Pos     ;/*!< 0x00080000 */
USB_OTG_PKTSTS_3                         EQU		0x8 << USB_OTG_PKTSTS_Pos     ;/*!< 0x00100000 */

USB_OTG_EPNUM_Pos                        EQU		0                          
USB_OTG_EPNUM_Msk                        EQU		0xF << USB_OTG_EPNUM_Pos      ;/*!< 0x0000000F */
USB_OTG_EPNUM                            EQU		USB_OTG_EPNUM_Msk             ;/*!< Endpoint number */
USB_OTG_EPNUM_0                          EQU		0x1 << USB_OTG_EPNUM_Pos      ;/*!< 0x00000001 */
USB_OTG_EPNUM_1                          EQU		0x2 << USB_OTG_EPNUM_Pos      ;/*!< 0x00000002 */
USB_OTG_EPNUM_2                          EQU		0x4 << USB_OTG_EPNUM_Pos      ;/*!< 0x00000004 */
USB_OTG_EPNUM_3                          EQU		0x8 << USB_OTG_EPNUM_Pos      ;/*!< 0x00000008 */

USB_OTG_FRMNUM_Pos                       EQU		21                         
USB_OTG_FRMNUM_Msk                       EQU		0xF << USB_OTG_FRMNUM_Pos     ;/*!< 0x01E00000 */
USB_OTG_FRMNUM                           EQU		USB_OTG_FRMNUM_Msk            ;/*!< Frame number */
USB_OTG_FRMNUM_0                         EQU		0x1 << USB_OTG_FRMNUM_Pos     ;/*!< 0x00200000 */
USB_OTG_FRMNUM_1                         EQU		0x2 << USB_OTG_FRMNUM_Pos     ;/*!< 0x00400000 */
USB_OTG_FRMNUM_2                         EQU		0x4 << USB_OTG_FRMNUM_Pos     ;/*!< 0x00800000 */
USB_OTG_FRMNUM_3                         EQU		0x8 << USB_OTG_FRMNUM_Pos     ;/*!< 0x01000000 */

;/****************************** USB Exported Constants ************************/
USB_OTG_FS_HOST_MAX_CHANNEL_NBR          EQU		8
USB_OTG_FS_MAX_IN_ENDPOINTS              EQU		4	    	;/* Including EP0 */
USB_OTG_FS_MAX_OUT_ENDPOINTS             EQU		4   		;/* Including EP0 */
USB_OTG_FS_TOTAL_FIFO_SIZE               EQU		1280		;/* in Bytes */

;/*
; * @brief Specific devices reset values definitions
; */
RCC_PLLCFGR_RST_VALUE              EQU		0x24003010
RCC_PLLI2SCFGR_RST_VALUE           EQU		0x20003000

RCC_MAX_FREQUENCY           EQU		168000000         	;/*!< Max frequency of family in Hz*/
RCC_MAX_FREQUENCY_SCALE1    EQU		RCC_MAX_FREQUENCY  	;/*!< Maximum frequency for system clock at power scale1, in Hz */
RCC_MAX_FREQUENCY_SCALE2    EQU		144000000         	;/*!< Maximum frequency for system clock at power scale2, in Hz */
RCC_PLLVCO_OUTPUT_MIN       EQU		100000000       	;/*!< Frequency min for PLLVCO output, in Hz */
RCC_PLLVCO_INPUT_MIN        EQU		950000      		;/*!< Frequency min for PLLVCO input, in Hz  */
RCC_PLLVCO_INPUT_MAX        EQU		2100000       		;/*!< Frequency max for PLLVCO input, in Hz  */
RCC_PLLVCO_OUTPUT_MAX       EQU		432000000       	;/*!< Frequency max for PLLVCO output, in Hz */

RCC_PLLN_MIN_VALUE          EQU		50
RCC_PLLN_MAX_VALUE          EQU		432

FLASH_SCALE1_LATENCY1_FREQ   EQU		30000000      ;/*!< HCLK frequency to set FLASH latency 1 in power scale 1  */
FLASH_SCALE1_LATENCY2_FREQ   EQU		60000000      ;/*!< HCLK frequency to set FLASH latency 2 in power scale 1  */
FLASH_SCALE1_LATENCY3_FREQ   EQU		90000000      ;/*!< HCLK frequency to set FLASH latency 3 in power scale 1  */
FLASH_SCALE1_LATENCY4_FREQ   EQU		120000000     ;/*!< HCLK frequency to set FLASH latency 4 in power scale 1  */
FLASH_SCALE1_LATENCY5_FREQ   EQU		150000000     ;/*!< HCLK frequency to set FLASH latency 5 in power scale 1  */

FLASH_SCALE2_LATENCY1_FREQ   EQU		30000000      ;/*!< HCLK frequency to set FLASH latency 1 in power scale 2  */
FLASH_SCALE2_LATENCY2_FREQ   EQU		60000000      ;/*!< HCLK frequency to set FLASH latency 2 in power scale 2  */
FLASH_SCALE2_LATENCY3_FREQ   EQU		90000000      ;/*!< HCLK frequency to set FLASH latency 3 in power scale 2  */
FLASH_SCALE2_LATENCY4_FREQ   EQU		12000000      ;/*!< HCLK frequency to set FLASH latency 4 in power scale 2  */

USB_OTG_HS_HOST_MAX_CHANNEL_NBR         EQU		12
USB_OTG_HS_MAX_IN_ENDPOINTS             EQU		6		    ;/* Including EP0 */
USB_OTG_HS_MAX_OUT_ENDPOINTS            EQU		6		    ;/* Including EP0 */
USB_OTG_HS_TOTAL_FIFO_SIZE              EQU		4096		;/* in Bytes */

;/************************ EQU		C    COPYRIGHT STMicroelectronics *****END OF FILE****/
	END
